var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name2 in all)
    __defProp(target, name2, { get: all[name2], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};

// node_modules/@sveltejs/kit/dist/chunks/multipart-parser.js
var multipart_parser_exports = {};
__export(multipart_parser_exports, {
  toFormData: () => toFormData
});
function _fileName(headerValue) {
  const m2 = headerValue.match(/\bfilename=("(.*?)"|([^()<>@,;:\\"/[\]?={}\s\t]+))($|;\s)/i);
  if (!m2) {
    return;
  }
  const match = m2[2] || m2[3] || "";
  let filename = match.slice(match.lastIndexOf("\\") + 1);
  filename = filename.replace(/%22/g, '"');
  filename = filename.replace(/&#(\d{4});/g, (m3, code) => {
    return String.fromCharCode(code);
  });
  return filename;
}
async function toFormData(Body2, ct) {
  if (!/multipart/i.test(ct)) {
    throw new TypeError("Failed to fetch");
  }
  const m2 = ct.match(/boundary=(?:"([^"]+)"|([^;]+))/i);
  if (!m2) {
    throw new TypeError("no or bad content-type header, no multipart boundary");
  }
  const parser = new MultipartParser(m2[1] || m2[2]);
  let headerField;
  let headerValue;
  let entryValue;
  let entryName;
  let contentType;
  let filename;
  const entryChunks = [];
  const formData = new FormData();
  const onPartData = (ui8a) => {
    entryValue += decoder.decode(ui8a, { stream: true });
  };
  const appendToFile = (ui8a) => {
    entryChunks.push(ui8a);
  };
  const appendFileToFormData = () => {
    const file = new File(entryChunks, filename, { type: contentType });
    formData.append(entryName, file);
  };
  const appendEntryToFormData = () => {
    formData.append(entryName, entryValue);
  };
  const decoder = new TextDecoder("utf-8");
  decoder.decode();
  parser.onPartBegin = function() {
    parser.onPartData = onPartData;
    parser.onPartEnd = appendEntryToFormData;
    headerField = "";
    headerValue = "";
    entryValue = "";
    entryName = "";
    contentType = "";
    filename = null;
    entryChunks.length = 0;
  };
  parser.onHeaderField = function(ui8a) {
    headerField += decoder.decode(ui8a, { stream: true });
  };
  parser.onHeaderValue = function(ui8a) {
    headerValue += decoder.decode(ui8a, { stream: true });
  };
  parser.onHeaderEnd = function() {
    headerValue += decoder.decode();
    headerField = headerField.toLowerCase();
    if (headerField === "content-disposition") {
      const m3 = headerValue.match(/\bname=("([^"]*)"|([^()<>@,;:\\"/[\]?={}\s\t]+))/i);
      if (m3) {
        entryName = m3[2] || m3[3] || "";
      }
      filename = _fileName(headerValue);
      if (filename) {
        parser.onPartData = appendToFile;
        parser.onPartEnd = appendFileToFormData;
      }
    } else if (headerField === "content-type") {
      contentType = headerValue;
    }
    headerValue = "";
    headerField = "";
  };
  for await (const chunk of Body2) {
    parser.write(chunk);
  }
  parser.end();
  return formData;
}
var import_node_fs, import_node_path, import_node_worker_threads, import_node_http, import_node_https, import_node_zlib, import_node_stream, import_node_util, import_node_url, import_net, s2, S, f, F, LF, CR, SPACE, HYPHEN, COLON, A, Z, lower, noop, MultipartParser;
var init_multipart_parser = __esm({
  "node_modules/@sveltejs/kit/dist/chunks/multipart-parser.js"() {
    import_node_fs = __toModule(require("fs"));
    import_node_path = __toModule(require("path"));
    import_node_worker_threads = __toModule(require("worker_threads"));
    init_install_fetch();
    import_node_http = __toModule(require("http"));
    import_node_https = __toModule(require("https"));
    import_node_zlib = __toModule(require("zlib"));
    import_node_stream = __toModule(require("stream"));
    import_node_util = __toModule(require("util"));
    import_node_url = __toModule(require("url"));
    import_net = __toModule(require("net"));
    globalThis.DOMException || (() => {
      const port = new import_node_worker_threads.MessageChannel().port1;
      const ab = new ArrayBuffer(0);
      try {
        port.postMessage(ab, [ab, ab]);
      } catch (err) {
        return err.constructor;
      }
    })();
    s2 = 0;
    S = {
      START_BOUNDARY: s2++,
      HEADER_FIELD_START: s2++,
      HEADER_FIELD: s2++,
      HEADER_VALUE_START: s2++,
      HEADER_VALUE: s2++,
      HEADER_VALUE_ALMOST_DONE: s2++,
      HEADERS_ALMOST_DONE: s2++,
      PART_DATA_START: s2++,
      PART_DATA: s2++,
      END: s2++
    };
    f = 1;
    F = {
      PART_BOUNDARY: f,
      LAST_BOUNDARY: f *= 2
    };
    LF = 10;
    CR = 13;
    SPACE = 32;
    HYPHEN = 45;
    COLON = 58;
    A = 97;
    Z = 122;
    lower = (c) => c | 32;
    noop = () => {
    };
    MultipartParser = class {
      constructor(boundary) {
        this.index = 0;
        this.flags = 0;
        this.onHeaderEnd = noop;
        this.onHeaderField = noop;
        this.onHeadersEnd = noop;
        this.onHeaderValue = noop;
        this.onPartBegin = noop;
        this.onPartData = noop;
        this.onPartEnd = noop;
        this.boundaryChars = {};
        boundary = "\r\n--" + boundary;
        const ui8a = new Uint8Array(boundary.length);
        for (let i2 = 0; i2 < boundary.length; i2++) {
          ui8a[i2] = boundary.charCodeAt(i2);
          this.boundaryChars[ui8a[i2]] = true;
        }
        this.boundary = ui8a;
        this.lookbehind = new Uint8Array(this.boundary.length + 8);
        this.state = S.START_BOUNDARY;
      }
      write(data2) {
        let i2 = 0;
        const length_ = data2.length;
        let previousIndex = this.index;
        let { lookbehind, boundary, boundaryChars, index, state, flags } = this;
        const boundaryLength = this.boundary.length;
        const boundaryEnd = boundaryLength - 1;
        const bufferLength = data2.length;
        let c;
        let cl;
        const mark = (name2) => {
          this[name2 + "Mark"] = i2;
        };
        const clear2 = (name2) => {
          delete this[name2 + "Mark"];
        };
        const callback = (callbackSymbol, start, end, ui8a) => {
          if (start === void 0 || start !== end) {
            this[callbackSymbol](ui8a && ui8a.subarray(start, end));
          }
        };
        const dataCallback = (name2, clear3) => {
          const markSymbol = name2 + "Mark";
          if (!(markSymbol in this)) {
            return;
          }
          if (clear3) {
            callback(name2, this[markSymbol], i2, data2);
            delete this[markSymbol];
          } else {
            callback(name2, this[markSymbol], data2.length, data2);
            this[markSymbol] = 0;
          }
        };
        for (i2 = 0; i2 < length_; i2++) {
          c = data2[i2];
          switch (state) {
            case S.START_BOUNDARY:
              if (index === boundary.length - 2) {
                if (c === HYPHEN) {
                  flags |= F.LAST_BOUNDARY;
                } else if (c !== CR) {
                  return;
                }
                index++;
                break;
              } else if (index - 1 === boundary.length - 2) {
                if (flags & F.LAST_BOUNDARY && c === HYPHEN) {
                  state = S.END;
                  flags = 0;
                } else if (!(flags & F.LAST_BOUNDARY) && c === LF) {
                  index = 0;
                  callback("onPartBegin");
                  state = S.HEADER_FIELD_START;
                } else {
                  return;
                }
                break;
              }
              if (c !== boundary[index + 2]) {
                index = -2;
              }
              if (c === boundary[index + 2]) {
                index++;
              }
              break;
            case S.HEADER_FIELD_START:
              state = S.HEADER_FIELD;
              mark("onHeaderField");
              index = 0;
            case S.HEADER_FIELD:
              if (c === CR) {
                clear2("onHeaderField");
                state = S.HEADERS_ALMOST_DONE;
                break;
              }
              index++;
              if (c === HYPHEN) {
                break;
              }
              if (c === COLON) {
                if (index === 1) {
                  return;
                }
                dataCallback("onHeaderField", true);
                state = S.HEADER_VALUE_START;
                break;
              }
              cl = lower(c);
              if (cl < A || cl > Z) {
                return;
              }
              break;
            case S.HEADER_VALUE_START:
              if (c === SPACE) {
                break;
              }
              mark("onHeaderValue");
              state = S.HEADER_VALUE;
            case S.HEADER_VALUE:
              if (c === CR) {
                dataCallback("onHeaderValue", true);
                callback("onHeaderEnd");
                state = S.HEADER_VALUE_ALMOST_DONE;
              }
              break;
            case S.HEADER_VALUE_ALMOST_DONE:
              if (c !== LF) {
                return;
              }
              state = S.HEADER_FIELD_START;
              break;
            case S.HEADERS_ALMOST_DONE:
              if (c !== LF) {
                return;
              }
              callback("onHeadersEnd");
              state = S.PART_DATA_START;
              break;
            case S.PART_DATA_START:
              state = S.PART_DATA;
              mark("onPartData");
            case S.PART_DATA:
              previousIndex = index;
              if (index === 0) {
                i2 += boundaryEnd;
                while (i2 < bufferLength && !(data2[i2] in boundaryChars)) {
                  i2 += boundaryLength;
                }
                i2 -= boundaryEnd;
                c = data2[i2];
              }
              if (index < boundary.length) {
                if (boundary[index] === c) {
                  if (index === 0) {
                    dataCallback("onPartData", true);
                  }
                  index++;
                } else {
                  index = 0;
                }
              } else if (index === boundary.length) {
                index++;
                if (c === CR) {
                  flags |= F.PART_BOUNDARY;
                } else if (c === HYPHEN) {
                  flags |= F.LAST_BOUNDARY;
                } else {
                  index = 0;
                }
              } else if (index - 1 === boundary.length) {
                if (flags & F.PART_BOUNDARY) {
                  index = 0;
                  if (c === LF) {
                    flags &= ~F.PART_BOUNDARY;
                    callback("onPartEnd");
                    callback("onPartBegin");
                    state = S.HEADER_FIELD_START;
                    break;
                  }
                } else if (flags & F.LAST_BOUNDARY) {
                  if (c === HYPHEN) {
                    callback("onPartEnd");
                    state = S.END;
                    flags = 0;
                  } else {
                    index = 0;
                  }
                } else {
                  index = 0;
                }
              }
              if (index > 0) {
                lookbehind[index - 1] = c;
              } else if (previousIndex > 0) {
                const _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);
                callback("onPartData", 0, previousIndex, _lookbehind);
                previousIndex = 0;
                mark("onPartData");
                i2--;
              }
              break;
            case S.END:
              break;
            default:
              throw new Error(`Unexpected state entered: ${state}`);
          }
        }
        dataCallback("onHeaderField");
        dataCallback("onHeaderValue");
        dataCallback("onPartData");
        this.index = index;
        this.state = state;
        this.flags = flags;
      }
      end() {
        if (this.state === S.HEADER_FIELD_START && this.index === 0 || this.state === S.PART_DATA && this.index === this.boundary.length) {
          this.onPartEnd();
        } else if (this.state !== S.END) {
          throw new Error("MultipartParser.end(): stream ended unexpectedly");
        }
      }
    };
  }
});

// node_modules/@sveltejs/kit/dist/install-fetch.js
function dataUriToBuffer(uri) {
  if (!/^data:/i.test(uri)) {
    throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
  }
  uri = uri.replace(/\r?\n/g, "");
  const firstComma = uri.indexOf(",");
  if (firstComma === -1 || firstComma <= 4) {
    throw new TypeError("malformed data: URI");
  }
  const meta = uri.substring(5, firstComma).split(";");
  let charset = "";
  let base64 = false;
  const type = meta[0] || "text/plain";
  let typeFull = type;
  for (let i2 = 1; i2 < meta.length; i2++) {
    if (meta[i2] === "base64") {
      base64 = true;
    } else {
      typeFull += `;${meta[i2]}`;
      if (meta[i2].indexOf("charset=") === 0) {
        charset = meta[i2].substring(8);
      }
    }
  }
  if (!meta[0] && !charset.length) {
    typeFull += ";charset=US-ASCII";
    charset = "US-ASCII";
  }
  const encoding = base64 ? "base64" : "ascii";
  const data2 = unescape(uri.substring(firstComma + 1));
  const buffer = Buffer.from(data2, encoding);
  buffer.type = type;
  buffer.typeFull = typeFull;
  buffer.charset = charset;
  return buffer;
}
async function* toIterator(parts, clone2 = true) {
  for (const part of parts) {
    if ("stream" in part) {
      yield* part.stream();
    } else if (ArrayBuffer.isView(part)) {
      if (clone2) {
        let position = part.byteOffset;
        const end = part.byteOffset + part.byteLength;
        while (position !== end) {
          const size = Math.min(end - position, POOL_SIZE);
          const chunk = part.buffer.slice(position, position + size);
          position += chunk.byteLength;
          yield new Uint8Array(chunk);
        }
      } else {
        yield part;
      }
    } else {
      let position = 0;
      while (position !== part.size) {
        const chunk = part.slice(position, Math.min(part.size, position + POOL_SIZE));
        const buffer = await chunk.arrayBuffer();
        position += buffer.byteLength;
        yield new Uint8Array(buffer);
      }
    }
  }
}
function formDataToBlob(F2, B = Blob$1) {
  var b = `${r()}${r()}`.replace(/\./g, "").slice(-28).padStart(32, "-"), c = [], p = `--${b}\r
Content-Disposition: form-data; name="`;
  F2.forEach((v, n) => typeof v == "string" ? c.push(p + e(n) + `"\r
\r
${v.replace(/\r(?!\n)|(?<!\r)\n/g, "\r\n")}\r
`) : c.push(p + e(n) + `"; filename="${e(v.name, 1)}"\r
Content-Type: ${v.type || "application/octet-stream"}\r
\r
`, v, "\r\n"));
  c.push(`--${b}--`);
  return new B(c, { type: "multipart/form-data; boundary=" + b });
}
async function consumeBody(data2) {
  if (data2[INTERNALS$2].disturbed) {
    throw new TypeError(`body used already for: ${data2.url}`);
  }
  data2[INTERNALS$2].disturbed = true;
  if (data2[INTERNALS$2].error) {
    throw data2[INTERNALS$2].error;
  }
  const { body } = data2;
  if (body === null) {
    return Buffer.alloc(0);
  }
  if (!(body instanceof import_node_stream2.default)) {
    return Buffer.alloc(0);
  }
  const accum = [];
  let accumBytes = 0;
  try {
    for await (const chunk of body) {
      if (data2.size > 0 && accumBytes + chunk.length > data2.size) {
        const error2 = new FetchError(`content size at ${data2.url} over limit: ${data2.size}`, "max-size");
        body.destroy(error2);
        throw error2;
      }
      accumBytes += chunk.length;
      accum.push(chunk);
    }
  } catch (error2) {
    const error_ = error2 instanceof FetchBaseError ? error2 : new FetchError(`Invalid response body while trying to fetch ${data2.url}: ${error2.message}`, "system", error2);
    throw error_;
  }
  if (body.readableEnded === true || body._readableState.ended === true) {
    try {
      if (accum.every((c) => typeof c === "string")) {
        return Buffer.from(accum.join(""));
      }
      return Buffer.concat(accum, accumBytes);
    } catch (error2) {
      throw new FetchError(`Could not create Buffer from response body for ${data2.url}: ${error2.message}`, "system", error2);
    }
  } else {
    throw new FetchError(`Premature close of server response while trying to fetch ${data2.url}`);
  }
}
function fromRawHeaders(headers = []) {
  return new Headers2(headers.reduce((result, value, index, array) => {
    if (index % 2 === 0) {
      result.push(array.slice(index, index + 2));
    }
    return result;
  }, []).filter(([name2, value]) => {
    try {
      validateHeaderName(name2);
      validateHeaderValue(name2, String(value));
      return true;
    } catch {
      return false;
    }
  }));
}
function stripURLForUseAsAReferrer(url, originOnly = false) {
  if (url == null) {
    return "no-referrer";
  }
  url = new URL(url);
  if (/^(about|blob|data):$/.test(url.protocol)) {
    return "no-referrer";
  }
  url.username = "";
  url.password = "";
  url.hash = "";
  if (originOnly) {
    url.pathname = "";
    url.search = "";
  }
  return url;
}
function validateReferrerPolicy(referrerPolicy) {
  if (!ReferrerPolicy.has(referrerPolicy)) {
    throw new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);
  }
  return referrerPolicy;
}
function isOriginPotentiallyTrustworthy(url) {
  if (/^(http|ws)s:$/.test(url.protocol)) {
    return true;
  }
  const hostIp = url.host.replace(/(^\[)|(]$)/g, "");
  const hostIPVersion = (0, import_net2.isIP)(hostIp);
  if (hostIPVersion === 4 && /^127\./.test(hostIp)) {
    return true;
  }
  if (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {
    return true;
  }
  if (/^(.+\.)*localhost$/.test(url.host)) {
    return false;
  }
  if (url.protocol === "file:") {
    return true;
  }
  return false;
}
function isUrlPotentiallyTrustworthy(url) {
  if (/^about:(blank|srcdoc)$/.test(url)) {
    return true;
  }
  if (url.protocol === "data:") {
    return true;
  }
  if (/^(blob|filesystem):$/.test(url.protocol)) {
    return true;
  }
  return isOriginPotentiallyTrustworthy(url);
}
function determineRequestsReferrer(request, { referrerURLCallback, referrerOriginCallback } = {}) {
  if (request.referrer === "no-referrer" || request.referrerPolicy === "") {
    return null;
  }
  const policy = request.referrerPolicy;
  if (request.referrer === "about:client") {
    return "no-referrer";
  }
  const referrerSource = request.referrer;
  let referrerURL = stripURLForUseAsAReferrer(referrerSource);
  let referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);
  if (referrerURL.toString().length > 4096) {
    referrerURL = referrerOrigin;
  }
  if (referrerURLCallback) {
    referrerURL = referrerURLCallback(referrerURL);
  }
  if (referrerOriginCallback) {
    referrerOrigin = referrerOriginCallback(referrerOrigin);
  }
  const currentURL = new URL(request.url);
  switch (policy) {
    case "no-referrer":
      return "no-referrer";
    case "origin":
      return referrerOrigin;
    case "unsafe-url":
      return referrerURL;
    case "strict-origin":
      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
        return "no-referrer";
      }
      return referrerOrigin.toString();
    case "strict-origin-when-cross-origin":
      if (referrerURL.origin === currentURL.origin) {
        return referrerURL;
      }
      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
        return "no-referrer";
      }
      return referrerOrigin;
    case "same-origin":
      if (referrerURL.origin === currentURL.origin) {
        return referrerURL;
      }
      return "no-referrer";
    case "origin-when-cross-origin":
      if (referrerURL.origin === currentURL.origin) {
        return referrerURL;
      }
      return referrerOrigin;
    case "no-referrer-when-downgrade":
      if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {
        return "no-referrer";
      }
      return referrerURL;
    default:
      throw new TypeError(`Invalid referrerPolicy: ${policy}`);
  }
}
function parseReferrerPolicyFromHeader(headers) {
  const policyTokens = (headers.get("referrer-policy") || "").split(/[,\s]+/);
  let policy = "";
  for (const token of policyTokens) {
    if (token && ReferrerPolicy.has(token)) {
      policy = token;
    }
  }
  return policy;
}
async function fetch2(url, options_) {
  return new Promise((resolve2, reject) => {
    const request = new Request2(url, options_);
    const { parsedURL, options } = getNodeRequestOptions(request);
    if (!supportedSchemas.has(parsedURL.protocol)) {
      throw new TypeError(`node-fetch cannot load ${url}. URL scheme "${parsedURL.protocol.replace(/:$/, "")}" is not supported.`);
    }
    if (parsedURL.protocol === "data:") {
      const data2 = dataUriToBuffer(request.url);
      const response2 = new Response2(data2, { headers: { "Content-Type": data2.typeFull } });
      resolve2(response2);
      return;
    }
    const send2 = (parsedURL.protocol === "https:" ? import_node_https2.default : import_node_http2.default).request;
    const { signal } = request;
    let response = null;
    const abort = () => {
      const error2 = new AbortError("The operation was aborted.");
      reject(error2);
      if (request.body && request.body instanceof import_node_stream2.default.Readable) {
        request.body.destroy(error2);
      }
      if (!response || !response.body) {
        return;
      }
      response.body.emit("error", error2);
    };
    if (signal && signal.aborted) {
      abort();
      return;
    }
    const abortAndFinalize = () => {
      abort();
      finalize();
    };
    const request_ = send2(parsedURL, options);
    if (signal) {
      signal.addEventListener("abort", abortAndFinalize);
    }
    const finalize = () => {
      request_.abort();
      if (signal) {
        signal.removeEventListener("abort", abortAndFinalize);
      }
    };
    request_.on("error", (error2) => {
      reject(new FetchError(`request to ${request.url} failed, reason: ${error2.message}`, "system", error2));
      finalize();
    });
    fixResponseChunkedTransferBadEnding(request_, (error2) => {
      response.body.destroy(error2);
    });
    if (process.version < "v14") {
      request_.on("socket", (s4) => {
        let endedWithEventsCount;
        s4.prependListener("end", () => {
          endedWithEventsCount = s4._eventsCount;
        });
        s4.prependListener("close", (hadError) => {
          if (response && endedWithEventsCount < s4._eventsCount && !hadError) {
            const error2 = new Error("Premature close");
            error2.code = "ERR_STREAM_PREMATURE_CLOSE";
            response.body.emit("error", error2);
          }
        });
      });
    }
    request_.on("response", (response_) => {
      request_.setTimeout(0);
      const headers = fromRawHeaders(response_.rawHeaders);
      if (isRedirect(response_.statusCode)) {
        const location2 = headers.get("Location");
        const locationURL = location2 === null ? null : new URL(location2, request.url);
        switch (request.redirect) {
          case "error":
            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect"));
            finalize();
            return;
          case "manual":
            if (locationURL !== null) {
              headers.set("Location", locationURL);
            }
            break;
          case "follow": {
            if (locationURL === null) {
              break;
            }
            if (request.counter >= request.follow) {
              reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect"));
              finalize();
              return;
            }
            const requestOptions = {
              headers: new Headers2(request.headers),
              follow: request.follow,
              counter: request.counter + 1,
              agent: request.agent,
              compress: request.compress,
              method: request.method,
              body: clone(request),
              signal: request.signal,
              size: request.size,
              referrer: request.referrer,
              referrerPolicy: request.referrerPolicy
            };
            if (response_.statusCode !== 303 && request.body && options_.body instanceof import_node_stream2.default.Readable) {
              reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect"));
              finalize();
              return;
            }
            if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === "POST") {
              requestOptions.method = "GET";
              requestOptions.body = void 0;
              requestOptions.headers.delete("content-length");
            }
            const responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);
            if (responseReferrerPolicy) {
              requestOptions.referrerPolicy = responseReferrerPolicy;
            }
            resolve2(fetch2(new Request2(locationURL, requestOptions)));
            finalize();
            return;
          }
          default:
            return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));
        }
      }
      if (signal) {
        response_.once("end", () => {
          signal.removeEventListener("abort", abortAndFinalize);
        });
      }
      let body = (0, import_node_stream2.pipeline)(response_, new import_node_stream2.PassThrough(), reject);
      if (process.version < "v12.10") {
        response_.on("aborted", abortAndFinalize);
      }
      const responseOptions = {
        url: request.url,
        status: response_.statusCode,
        statusText: response_.statusMessage,
        headers,
        size: request.size,
        counter: request.counter,
        highWaterMark: request.highWaterMark
      };
      const codings = headers.get("Content-Encoding");
      if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
        response = new Response2(body, responseOptions);
        resolve2(response);
        return;
      }
      const zlibOptions = {
        flush: import_node_zlib2.default.Z_SYNC_FLUSH,
        finishFlush: import_node_zlib2.default.Z_SYNC_FLUSH
      };
      if (codings === "gzip" || codings === "x-gzip") {
        body = (0, import_node_stream2.pipeline)(body, import_node_zlib2.default.createGunzip(zlibOptions), reject);
        response = new Response2(body, responseOptions);
        resolve2(response);
        return;
      }
      if (codings === "deflate" || codings === "x-deflate") {
        const raw = (0, import_node_stream2.pipeline)(response_, new import_node_stream2.PassThrough(), reject);
        raw.once("data", (chunk) => {
          body = (chunk[0] & 15) === 8 ? (0, import_node_stream2.pipeline)(body, import_node_zlib2.default.createInflate(), reject) : (0, import_node_stream2.pipeline)(body, import_node_zlib2.default.createInflateRaw(), reject);
          response = new Response2(body, responseOptions);
          resolve2(response);
        });
        return;
      }
      if (codings === "br") {
        body = (0, import_node_stream2.pipeline)(body, import_node_zlib2.default.createBrotliDecompress(), reject);
        response = new Response2(body, responseOptions);
        resolve2(response);
        return;
      }
      response = new Response2(body, responseOptions);
      resolve2(response);
    });
    writeToStream(request_, request);
  });
}
function fixResponseChunkedTransferBadEnding(request, errorCallback) {
  const LAST_CHUNK = Buffer.from("0\r\n\r\n");
  let isChunkedTransfer = false;
  let properLastChunkReceived = false;
  let previousChunk;
  request.on("response", (response) => {
    const { headers } = response;
    isChunkedTransfer = headers["transfer-encoding"] === "chunked" && !headers["content-length"];
  });
  request.on("socket", (socket) => {
    const onSocketClose = () => {
      if (isChunkedTransfer && !properLastChunkReceived) {
        const error2 = new Error("Premature close");
        error2.code = "ERR_STREAM_PREMATURE_CLOSE";
        errorCallback(error2);
      }
    };
    socket.prependListener("close", onSocketClose);
    request.on("abort", () => {
      socket.removeListener("close", onSocketClose);
    });
    socket.on("data", (buf) => {
      properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;
      if (!properLastChunkReceived && previousChunk) {
        properLastChunkReceived = Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0;
      }
      previousChunk = buf;
    });
  });
}
function __fetch_polyfill() {
  Object.defineProperties(globalThis, {
    fetch: {
      enumerable: true,
      configurable: true,
      value: fetch2
    },
    Response: {
      enumerable: true,
      configurable: true,
      value: Response2
    },
    Request: {
      enumerable: true,
      configurable: true,
      value: Request2
    },
    Headers: {
      enumerable: true,
      configurable: true,
      value: Headers2
    }
  });
}
var import_node_http2, import_node_https2, import_node_zlib2, import_node_stream2, import_node_util2, import_node_url2, import_net2, commonjsGlobal, ponyfill_es2018, POOL_SIZE$1, POOL_SIZE, _parts, _type, _size, _a, _Blob, Blob2, Blob$1, _lastModified, _name, _a2, _File, File, t, i, h, r, m, f2, e, x, _d, _a3, FormData, FetchBaseError, FetchError, NAME, isURLSearchParameters, isBlob, isAbortSignal, INTERNALS$2, Body, clone, getNonSpecFormDataBoundary, extractContentType, getTotalBytes, writeToStream, validateHeaderName, validateHeaderValue, Headers2, redirectStatus, isRedirect, INTERNALS$1, Response2, getSearch, ReferrerPolicy, DEFAULT_REFERRER_POLICY, INTERNALS, isRequest, Request2, getNodeRequestOptions, AbortError, supportedSchemas;
var init_install_fetch = __esm({
  "node_modules/@sveltejs/kit/dist/install-fetch.js"() {
    import_node_http2 = __toModule(require("http"));
    import_node_https2 = __toModule(require("https"));
    import_node_zlib2 = __toModule(require("zlib"));
    import_node_stream2 = __toModule(require("stream"));
    import_node_util2 = __toModule(require("util"));
    import_node_url2 = __toModule(require("url"));
    import_net2 = __toModule(require("net"));
    commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
    ponyfill_es2018 = { exports: {} };
    (function(module2, exports) {
      (function(global2, factory) {
        factory(exports);
      })(commonjsGlobal, function(exports2) {
        const SymbolPolyfill = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol : (description) => `Symbol(${description})`;
        function noop4() {
          return void 0;
        }
        function getGlobals() {
          if (typeof self !== "undefined") {
            return self;
          } else if (typeof window !== "undefined") {
            return window;
          } else if (typeof commonjsGlobal !== "undefined") {
            return commonjsGlobal;
          }
          return void 0;
        }
        const globals2 = getGlobals();
        function typeIsObject(x2) {
          return typeof x2 === "object" && x2 !== null || typeof x2 === "function";
        }
        const rethrowAssertionErrorRejection = noop4;
        const originalPromise = Promise;
        const originalPromiseThen = Promise.prototype.then;
        const originalPromiseResolve = Promise.resolve.bind(originalPromise);
        const originalPromiseReject = Promise.reject.bind(originalPromise);
        function newPromise(executor) {
          return new originalPromise(executor);
        }
        function promiseResolvedWith(value) {
          return originalPromiseResolve(value);
        }
        function promiseRejectedWith(reason) {
          return originalPromiseReject(reason);
        }
        function PerformPromiseThen(promise, onFulfilled, onRejected) {
          return originalPromiseThen.call(promise, onFulfilled, onRejected);
        }
        function uponPromise(promise, onFulfilled, onRejected) {
          PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);
        }
        function uponFulfillment(promise, onFulfilled) {
          uponPromise(promise, onFulfilled);
        }
        function uponRejection(promise, onRejected) {
          uponPromise(promise, void 0, onRejected);
        }
        function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
          return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
        }
        function setPromiseIsHandledToTrue(promise) {
          PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);
        }
        const queueMicrotask2 = (() => {
          const globalQueueMicrotask = globals2 && globals2.queueMicrotask;
          if (typeof globalQueueMicrotask === "function") {
            return globalQueueMicrotask;
          }
          const resolvedPromise = promiseResolvedWith(void 0);
          return (fn) => PerformPromiseThen(resolvedPromise, fn);
        })();
        function reflectCall(F2, V, args) {
          if (typeof F2 !== "function") {
            throw new TypeError("Argument is not a function");
          }
          return Function.prototype.apply.call(F2, V, args);
        }
        function promiseCall(F2, V, args) {
          try {
            return promiseResolvedWith(reflectCall(F2, V, args));
          } catch (value) {
            return promiseRejectedWith(value);
          }
        }
        const QUEUE_MAX_ARRAY_SIZE = 16384;
        class SimpleQueue {
          constructor() {
            this._cursor = 0;
            this._size = 0;
            this._front = {
              _elements: [],
              _next: void 0
            };
            this._back = this._front;
            this._cursor = 0;
            this._size = 0;
          }
          get length() {
            return this._size;
          }
          push(element) {
            const oldBack = this._back;
            let newBack = oldBack;
            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {
              newBack = {
                _elements: [],
                _next: void 0
              };
            }
            oldBack._elements.push(element);
            if (newBack !== oldBack) {
              this._back = newBack;
              oldBack._next = newBack;
            }
            ++this._size;
          }
          shift() {
            const oldFront = this._front;
            let newFront = oldFront;
            const oldCursor = this._cursor;
            let newCursor = oldCursor + 1;
            const elements = oldFront._elements;
            const element = elements[oldCursor];
            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {
              newFront = oldFront._next;
              newCursor = 0;
            }
            --this._size;
            this._cursor = newCursor;
            if (oldFront !== newFront) {
              this._front = newFront;
            }
            elements[oldCursor] = void 0;
            return element;
          }
          forEach(callback) {
            let i2 = this._cursor;
            let node = this._front;
            let elements = node._elements;
            while (i2 !== elements.length || node._next !== void 0) {
              if (i2 === elements.length) {
                node = node._next;
                elements = node._elements;
                i2 = 0;
                if (elements.length === 0) {
                  break;
                }
              }
              callback(elements[i2]);
              ++i2;
            }
          }
          peek() {
            const front = this._front;
            const cursor = this._cursor;
            return front._elements[cursor];
          }
        }
        function ReadableStreamReaderGenericInitialize(reader, stream) {
          reader._ownerReadableStream = stream;
          stream._reader = reader;
          if (stream._state === "readable") {
            defaultReaderClosedPromiseInitialize(reader);
          } else if (stream._state === "closed") {
            defaultReaderClosedPromiseInitializeAsResolved(reader);
          } else {
            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
          }
        }
        function ReadableStreamReaderGenericCancel(reader, reason) {
          const stream = reader._ownerReadableStream;
          return ReadableStreamCancel(stream, reason);
        }
        function ReadableStreamReaderGenericRelease(reader) {
          if (reader._ownerReadableStream._state === "readable") {
            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          } else {
            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          }
          reader._ownerReadableStream._reader = void 0;
          reader._ownerReadableStream = void 0;
        }
        function readerLockException(name2) {
          return new TypeError("Cannot " + name2 + " a stream using a released reader");
        }
        function defaultReaderClosedPromiseInitialize(reader) {
          reader._closedPromise = newPromise((resolve2, reject) => {
            reader._closedPromise_resolve = resolve2;
            reader._closedPromise_reject = reject;
          });
        }
        function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseReject(reader, reason);
        }
        function defaultReaderClosedPromiseInitializeAsResolved(reader) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseResolve(reader);
        }
        function defaultReaderClosedPromiseReject(reader, reason) {
          if (reader._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(reader._closedPromise);
          reader._closedPromise_reject(reason);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        function defaultReaderClosedPromiseResetToRejected(reader, reason) {
          defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
        }
        function defaultReaderClosedPromiseResolve(reader) {
          if (reader._closedPromise_resolve === void 0) {
            return;
          }
          reader._closedPromise_resolve(void 0);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        const AbortSteps = SymbolPolyfill("[[AbortSteps]]");
        const ErrorSteps = SymbolPolyfill("[[ErrorSteps]]");
        const CancelSteps = SymbolPolyfill("[[CancelSteps]]");
        const PullSteps = SymbolPolyfill("[[PullSteps]]");
        const NumberIsFinite = Number.isFinite || function(x2) {
          return typeof x2 === "number" && isFinite(x2);
        };
        const MathTrunc = Math.trunc || function(v) {
          return v < 0 ? Math.ceil(v) : Math.floor(v);
        };
        function isDictionary(x2) {
          return typeof x2 === "object" || typeof x2 === "function";
        }
        function assertDictionary(obj, context) {
          if (obj !== void 0 && !isDictionary(obj)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertFunction(x2, context) {
          if (typeof x2 !== "function") {
            throw new TypeError(`${context} is not a function.`);
          }
        }
        function isObject(x2) {
          return typeof x2 === "object" && x2 !== null || typeof x2 === "function";
        }
        function assertObject(x2, context) {
          if (!isObject(x2)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertRequiredArgument(x2, position, context) {
          if (x2 === void 0) {
            throw new TypeError(`Parameter ${position} is required in '${context}'.`);
          }
        }
        function assertRequiredField(x2, field, context) {
          if (x2 === void 0) {
            throw new TypeError(`${field} is required in '${context}'.`);
          }
        }
        function convertUnrestrictedDouble(value) {
          return Number(value);
        }
        function censorNegativeZero(x2) {
          return x2 === 0 ? 0 : x2;
        }
        function integerPart(x2) {
          return censorNegativeZero(MathTrunc(x2));
        }
        function convertUnsignedLongLongWithEnforceRange(value, context) {
          const lowerBound = 0;
          const upperBound = Number.MAX_SAFE_INTEGER;
          let x2 = Number(value);
          x2 = censorNegativeZero(x2);
          if (!NumberIsFinite(x2)) {
            throw new TypeError(`${context} is not a finite number`);
          }
          x2 = integerPart(x2);
          if (x2 < lowerBound || x2 > upperBound) {
            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);
          }
          if (!NumberIsFinite(x2) || x2 === 0) {
            return 0;
          }
          return x2;
        }
        function assertReadableStream(x2, context) {
          if (!IsReadableStream(x2)) {
            throw new TypeError(`${context} is not a ReadableStream.`);
          }
        }
        function AcquireReadableStreamDefaultReader(stream) {
          return new ReadableStreamDefaultReader(stream);
        }
        function ReadableStreamAddReadRequest(stream, readRequest) {
          stream._reader._readRequests.push(readRequest);
        }
        function ReadableStreamFulfillReadRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readRequest = reader._readRequests.shift();
          if (done) {
            readRequest._closeSteps();
          } else {
            readRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadRequests(stream) {
          return stream._reader._readRequests.length;
        }
        function ReadableStreamHasDefaultReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamDefaultReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamDefaultReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamDefaultReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("read"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: () => resolvePromise({ value: void 0, done: true }),
              _errorSteps: (e2) => rejectPromise(e2)
            };
            ReadableStreamDefaultReaderRead(this, readRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamDefaultReader(this)) {
              throw defaultReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamDefaultReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultReader",
            configurable: true
          });
        }
        function IsReadableStreamDefaultReader(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_readRequests")) {
            return false;
          }
          return x2 instanceof ReadableStreamDefaultReader;
        }
        function ReadableStreamDefaultReaderRead(reader, readRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "closed") {
            readRequest._closeSteps();
          } else if (stream._state === "errored") {
            readRequest._errorSteps(stream._storedError);
          } else {
            stream._readableStreamController[PullSteps](readRequest);
          }
        }
        function defaultReaderBrandCheckException(name2) {
          return new TypeError(`ReadableStreamDefaultReader.prototype.${name2} can only be used on a ReadableStreamDefaultReader`);
        }
        const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {
        }).prototype);
        class ReadableStreamAsyncIteratorImpl {
          constructor(reader, preventCancel) {
            this._ongoingPromise = void 0;
            this._isFinished = false;
            this._reader = reader;
            this._preventCancel = preventCancel;
          }
          next() {
            const nextSteps = () => this._nextSteps();
            this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps();
            return this._ongoingPromise;
          }
          return(value) {
            const returnSteps = () => this._returnSteps(value);
            return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
          }
          _nextSteps() {
            if (this._isFinished) {
              return Promise.resolve({ value: void 0, done: true });
            }
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("iterate"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => {
                this._ongoingPromise = void 0;
                queueMicrotask2(() => resolvePromise({ value: chunk, done: false }));
              },
              _closeSteps: () => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                resolvePromise({ value: void 0, done: true });
              },
              _errorSteps: (reason) => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                rejectPromise(reason);
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promise;
          }
          _returnSteps(value) {
            if (this._isFinished) {
              return Promise.resolve({ value, done: true });
            }
            this._isFinished = true;
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("finish iterating"));
            }
            if (!this._preventCancel) {
              const result = ReadableStreamReaderGenericCancel(reader, value);
              ReadableStreamReaderGenericRelease(reader);
              return transformPromiseWith(result, () => ({ value, done: true }));
            }
            ReadableStreamReaderGenericRelease(reader);
            return promiseResolvedWith({ value, done: true });
          }
        }
        const ReadableStreamAsyncIteratorPrototype = {
          next() {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"));
            }
            return this._asyncIteratorImpl.next();
          },
          return(value) {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"));
            }
            return this._asyncIteratorImpl.return(value);
          }
        };
        if (AsyncIteratorPrototype !== void 0) {
          Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);
        }
        function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);
          const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
          iterator._asyncIteratorImpl = impl;
          return iterator;
        }
        function IsReadableStreamAsyncIterator(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_asyncIteratorImpl")) {
            return false;
          }
          try {
            return x2._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;
          } catch (_a4) {
            return false;
          }
        }
        function streamAsyncIteratorBrandCheckException(name2) {
          return new TypeError(`ReadableStreamAsyncIterator.${name2} can only be used on a ReadableSteamAsyncIterator`);
        }
        const NumberIsNaN = Number.isNaN || function(x2) {
          return x2 !== x2;
        };
        function CreateArrayFromList(elements) {
          return elements.slice();
        }
        function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {
          new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);
        }
        function TransferArrayBuffer(O) {
          return O;
        }
        function IsDetachedBuffer(O) {
          return false;
        }
        function ArrayBufferSlice(buffer, begin, end) {
          if (buffer.slice) {
            return buffer.slice(begin, end);
          }
          const length = end - begin;
          const slice = new ArrayBuffer(length);
          CopyDataBlockBytes(slice, 0, buffer, begin, length);
          return slice;
        }
        function IsNonNegativeNumber(v) {
          if (typeof v !== "number") {
            return false;
          }
          if (NumberIsNaN(v)) {
            return false;
          }
          if (v < 0) {
            return false;
          }
          return true;
        }
        function CloneAsUint8Array(O) {
          const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);
          return new Uint8Array(buffer);
        }
        function DequeueValue(container) {
          const pair = container._queue.shift();
          container._queueTotalSize -= pair.size;
          if (container._queueTotalSize < 0) {
            container._queueTotalSize = 0;
          }
          return pair.value;
        }
        function EnqueueValueWithSize(container, value, size) {
          if (!IsNonNegativeNumber(size) || size === Infinity) {
            throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
          }
          container._queue.push({ value, size });
          container._queueTotalSize += size;
        }
        function PeekQueueValue(container) {
          const pair = container._queue.peek();
          return pair.value;
        }
        function ResetQueue(container) {
          container._queue = new SimpleQueue();
          container._queueTotalSize = 0;
        }
        class ReadableStreamBYOBRequest {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get view() {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("view");
            }
            return this._view;
          }
          respond(bytesWritten) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respond");
            }
            assertRequiredArgument(bytesWritten, 1, "respond");
            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, "First parameter");
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(this._view.buffer))
              ;
            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
          }
          respondWithNewView(view) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respondWithNewView");
            }
            assertRequiredArgument(view, 1, "respondWithNewView");
            if (!ArrayBuffer.isView(view)) {
              throw new TypeError("You can only respond with array buffer views");
            }
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
          }
        }
        Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
          respond: { enumerable: true },
          respondWithNewView: { enumerable: true },
          view: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBRequest",
            configurable: true
          });
        }
        class ReadableByteStreamController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get byobRequest() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("byobRequest");
            }
            return ReadableByteStreamControllerGetBYOBRequest(this);
          }
          get desiredSize() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("desiredSize");
            }
            return ReadableByteStreamControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("close");
            }
            if (this._closeRequested) {
              throw new TypeError("The stream has already been closed; do not close it again!");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);
            }
            ReadableByteStreamControllerClose(this);
          }
          enqueue(chunk) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("enqueue");
            }
            assertRequiredArgument(chunk, 1, "enqueue");
            if (!ArrayBuffer.isView(chunk)) {
              throw new TypeError("chunk must be an array buffer view");
            }
            if (chunk.byteLength === 0) {
              throw new TypeError("chunk must have non-zero byteLength");
            }
            if (chunk.buffer.byteLength === 0) {
              throw new TypeError(`chunk's buffer must have non-zero byteLength`);
            }
            if (this._closeRequested) {
              throw new TypeError("stream is closed or draining");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);
            }
            ReadableByteStreamControllerEnqueue(this, chunk);
          }
          error(e2 = void 0) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("error");
            }
            ReadableByteStreamControllerError(this, e2);
          }
          [CancelSteps](reason) {
            ReadableByteStreamControllerClearPendingPullIntos(this);
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableByteStreamControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableByteStream;
            if (this._queueTotalSize > 0) {
              const entry37 = this._queue.shift();
              this._queueTotalSize -= entry37.byteLength;
              ReadableByteStreamControllerHandleQueueDrain(this);
              const view = new Uint8Array(entry37.buffer, entry37.byteOffset, entry37.byteLength);
              readRequest._chunkSteps(view);
              return;
            }
            const autoAllocateChunkSize = this._autoAllocateChunkSize;
            if (autoAllocateChunkSize !== void 0) {
              let buffer;
              try {
                buffer = new ArrayBuffer(autoAllocateChunkSize);
              } catch (bufferE) {
                readRequest._errorSteps(bufferE);
                return;
              }
              const pullIntoDescriptor = {
                buffer,
                bufferByteLength: autoAllocateChunkSize,
                byteOffset: 0,
                byteLength: autoAllocateChunkSize,
                bytesFilled: 0,
                elementSize: 1,
                viewConstructor: Uint8Array,
                readerType: "default"
              };
              this._pendingPullIntos.push(pullIntoDescriptor);
            }
            ReadableStreamAddReadRequest(stream, readRequest);
            ReadableByteStreamControllerCallPullIfNeeded(this);
          }
        }
        Object.defineProperties(ReadableByteStreamController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          byobRequest: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableByteStreamController",
            configurable: true
          });
        }
        function IsReadableByteStreamController(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_controlledReadableByteStream")) {
            return false;
          }
          return x2 instanceof ReadableByteStreamController;
        }
        function IsReadableStreamBYOBRequest(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_associatedReadableByteStreamController")) {
            return false;
          }
          return x2 instanceof ReadableStreamBYOBRequest;
        }
        function ReadableByteStreamControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableByteStreamControllerCallPullIfNeeded(controller);
            }
          }, (e2) => {
            ReadableByteStreamControllerError(controller, e2);
          });
        }
        function ReadableByteStreamControllerClearPendingPullIntos(controller) {
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          controller._pendingPullIntos = new SimpleQueue();
        }
        function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
          let done = false;
          if (stream._state === "closed") {
            done = true;
          }
          const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
          if (pullIntoDescriptor.readerType === "default") {
            ReadableStreamFulfillReadRequest(stream, filledView, done);
          } else {
            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
          }
        }
        function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
          const bytesFilled = pullIntoDescriptor.bytesFilled;
          const elementSize = pullIntoDescriptor.elementSize;
          return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
        }
        function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {
          controller._queue.push({ buffer, byteOffset, byteLength });
          controller._queueTotalSize += byteLength;
        }
        function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
          const elementSize = pullIntoDescriptor.elementSize;
          const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
          const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
          const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
          const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
          let totalBytesToCopyRemaining = maxBytesToCopy;
          let ready = false;
          if (maxAlignedBytes > currentAlignedBytes) {
            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
            ready = true;
          }
          const queue = controller._queue;
          while (totalBytesToCopyRemaining > 0) {
            const headOfQueue = queue.peek();
            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
            if (headOfQueue.byteLength === bytesToCopy) {
              queue.shift();
            } else {
              headOfQueue.byteOffset += bytesToCopy;
              headOfQueue.byteLength -= bytesToCopy;
            }
            controller._queueTotalSize -= bytesToCopy;
            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);
            totalBytesToCopyRemaining -= bytesToCopy;
          }
          return ready;
        }
        function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
          pullIntoDescriptor.bytesFilled += size;
        }
        function ReadableByteStreamControllerHandleQueueDrain(controller) {
          if (controller._queueTotalSize === 0 && controller._closeRequested) {
            ReadableByteStreamControllerClearAlgorithms(controller);
            ReadableStreamClose(controller._controlledReadableByteStream);
          } else {
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }
        }
        function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
          if (controller._byobRequest === null) {
            return;
          }
          controller._byobRequest._associatedReadableByteStreamController = void 0;
          controller._byobRequest._view = null;
          controller._byobRequest = null;
        }
        function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
          while (controller._pendingPullIntos.length > 0) {
            if (controller._queueTotalSize === 0) {
              return;
            }
            const pullIntoDescriptor = controller._pendingPullIntos.peek();
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
          const stream = controller._controlledReadableByteStream;
          let elementSize = 1;
          if (view.constructor !== DataView) {
            elementSize = view.constructor.BYTES_PER_ELEMENT;
          }
          const ctor = view.constructor;
          const buffer = TransferArrayBuffer(view.buffer);
          const pullIntoDescriptor = {
            buffer,
            bufferByteLength: buffer.byteLength,
            byteOffset: view.byteOffset,
            byteLength: view.byteLength,
            bytesFilled: 0,
            elementSize,
            viewConstructor: ctor,
            readerType: "byob"
          };
          if (controller._pendingPullIntos.length > 0) {
            controller._pendingPullIntos.push(pullIntoDescriptor);
            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
            return;
          }
          if (stream._state === "closed") {
            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
            readIntoRequest._closeSteps(emptyView);
            return;
          }
          if (controller._queueTotalSize > 0) {
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
              ReadableByteStreamControllerHandleQueueDrain(controller);
              readIntoRequest._chunkSteps(filledView);
              return;
            }
            if (controller._closeRequested) {
              const e2 = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e2);
              readIntoRequest._errorSteps(e2);
              return;
            }
          }
          controller._pendingPullIntos.push(pullIntoDescriptor);
          ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
          const stream = controller._controlledReadableByteStream;
          if (ReadableStreamHasBYOBReader(stream)) {
            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {
              const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
          ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);
          if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
            return;
          }
          ReadableByteStreamControllerShiftPendingPullInto(controller);
          const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
          if (remainderSize > 0) {
            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
          }
          pullIntoDescriptor.bytesFilled -= remainderSize;
          ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
        }
        function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            ReadableByteStreamControllerRespondInClosedState(controller);
          } else {
            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerShiftPendingPullInto(controller) {
          const descriptor = controller._pendingPullIntos.shift();
          return descriptor;
        }
        function ReadableByteStreamControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return false;
          }
          if (controller._closeRequested) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableByteStreamControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
        }
        function ReadableByteStreamControllerClose(controller) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          if (controller._queueTotalSize > 0) {
            controller._closeRequested = true;
            return;
          }
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (firstPendingPullInto.bytesFilled > 0) {
              const e2 = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e2);
              throw e2;
            }
          }
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamClose(stream);
        }
        function ReadableByteStreamControllerEnqueue(controller, chunk) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          const buffer = chunk.buffer;
          const byteOffset = chunk.byteOffset;
          const byteLength = chunk.byteLength;
          const transferredBuffer = TransferArrayBuffer(buffer);
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (IsDetachedBuffer(firstPendingPullInto.buffer))
              ;
            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);
          }
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          if (ReadableStreamHasDefaultReader(stream)) {
            if (ReadableStreamGetNumReadRequests(stream) === 0) {
              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            } else {
              if (controller._pendingPullIntos.length > 0) {
                ReadableByteStreamControllerShiftPendingPullInto(controller);
              }
              const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
              ReadableStreamFulfillReadRequest(stream, transferredView, false);
            }
          } else if (ReadableStreamHasBYOBReader(stream)) {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
          } else {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerError(controller, e2) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return;
          }
          ReadableByteStreamControllerClearPendingPullIntos(controller);
          ResetQueue(controller);
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e2);
        }
        function ReadableByteStreamControllerGetBYOBRequest(controller) {
          if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
            const firstDescriptor = controller._pendingPullIntos.peek();
            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);
            controller._byobRequest = byobRequest;
          }
          return controller._byobRequest;
        }
        function ReadableByteStreamControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableByteStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableByteStreamControllerRespond(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (bytesWritten !== 0) {
              throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
            }
          } else {
            if (bytesWritten === 0) {
              throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
            }
            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {
              throw new RangeError("bytesWritten out of range");
            }
          }
          firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);
          ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
        }
        function ReadableByteStreamControllerRespondWithNewView(controller, view) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (view.byteLength !== 0) {
              throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
            }
          } else {
            if (view.byteLength === 0) {
              throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
            }
          }
          if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
            throw new RangeError("The region specified by view does not match byobRequest");
          }
          if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {
            throw new RangeError("The buffer of view has different capacity than byobRequest");
          }
          if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {
            throw new RangeError("The region specified by view is larger than byobRequest");
          }
          const viewByteLength = view.byteLength;
          firstDescriptor.buffer = TransferArrayBuffer(view.buffer);
          ReadableByteStreamControllerRespondInternal(controller, viewByteLength);
        }
        function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
          controller._controlledReadableByteStream = stream;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._byobRequest = null;
          controller._queue = controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._closeRequested = false;
          controller._started = false;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          controller._autoAllocateChunkSize = autoAllocateChunkSize;
          controller._pendingPullIntos = new SimpleQueue();
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }, (r2) => {
            ReadableByteStreamControllerError(controller, r2);
          });
        }
        function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
          const controller = Object.create(ReadableByteStreamController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingByteSource.start !== void 0) {
            startAlgorithm = () => underlyingByteSource.start(controller);
          }
          if (underlyingByteSource.pull !== void 0) {
            pullAlgorithm = () => underlyingByteSource.pull(controller);
          }
          if (underlyingByteSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingByteSource.cancel(reason);
          }
          const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
          if (autoAllocateChunkSize === 0) {
            throw new TypeError("autoAllocateChunkSize must be greater than 0");
          }
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
        }
        function SetUpReadableStreamBYOBRequest(request, controller, view) {
          request._associatedReadableByteStreamController = controller;
          request._view = view;
        }
        function byobRequestBrandCheckException(name2) {
          return new TypeError(`ReadableStreamBYOBRequest.prototype.${name2} can only be used on a ReadableStreamBYOBRequest`);
        }
        function byteStreamControllerBrandCheckException(name2) {
          return new TypeError(`ReadableByteStreamController.prototype.${name2} can only be used on a ReadableByteStreamController`);
        }
        function AcquireReadableStreamBYOBReader(stream) {
          return new ReadableStreamBYOBReader(stream);
        }
        function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
          stream._reader._readIntoRequests.push(readIntoRequest);
        }
        function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readIntoRequest = reader._readIntoRequests.shift();
          if (done) {
            readIntoRequest._closeSteps(chunk);
          } else {
            readIntoRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadIntoRequests(stream) {
          return stream._reader._readIntoRequests.length;
        }
        function ReadableStreamHasBYOBReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamBYOBReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamBYOBReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamBYOBReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            if (!IsReadableByteStreamController(stream._readableStreamController)) {
              throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readIntoRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read(view) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("read"));
            }
            if (!ArrayBuffer.isView(view)) {
              return promiseRejectedWith(new TypeError("view must be an array buffer view"));
            }
            if (view.byteLength === 0) {
              return promiseRejectedWith(new TypeError("view must have non-zero byteLength"));
            }
            if (view.buffer.byteLength === 0) {
              return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readIntoRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: (chunk) => resolvePromise({ value: chunk, done: true }),
              _errorSteps: (e2) => rejectPromise(e2)
            };
            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamBYOBReader(this)) {
              throw byobReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readIntoRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamBYOBReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBReader",
            configurable: true
          });
        }
        function IsReadableStreamBYOBReader(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_readIntoRequests")) {
            return false;
          }
          return x2 instanceof ReadableStreamBYOBReader;
        }
        function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "errored") {
            readIntoRequest._errorSteps(stream._storedError);
          } else {
            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
          }
        }
        function byobReaderBrandCheckException(name2) {
          return new TypeError(`ReadableStreamBYOBReader.prototype.${name2} can only be used on a ReadableStreamBYOBReader`);
        }
        function ExtractHighWaterMark(strategy, defaultHWM) {
          const { highWaterMark } = strategy;
          if (highWaterMark === void 0) {
            return defaultHWM;
          }
          if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {
            throw new RangeError("Invalid highWaterMark");
          }
          return highWaterMark;
        }
        function ExtractSizeAlgorithm(strategy) {
          const { size } = strategy;
          if (!size) {
            return () => 1;
          }
          return size;
        }
        function convertQueuingStrategy(init, context) {
          assertDictionary(init, context);
          const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;
          const size = init === null || init === void 0 ? void 0 : init.size;
          return {
            highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),
            size: size === void 0 ? void 0 : convertQueuingStrategySize(size, `${context} has member 'size' that`)
          };
        }
        function convertQueuingStrategySize(fn, context) {
          assertFunction(fn, context);
          return (chunk) => convertUnrestrictedDouble(fn(chunk));
        }
        function convertUnderlyingSink(original, context) {
          assertDictionary(original, context);
          const abort = original === null || original === void 0 ? void 0 : original.abort;
          const close = original === null || original === void 0 ? void 0 : original.close;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const type = original === null || original === void 0 ? void 0 : original.type;
          const write = original === null || original === void 0 ? void 0 : original.write;
          return {
            abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),
            close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),
            start: start === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),
            write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),
            type
          };
        }
        function convertUnderlyingSinkAbortCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSinkCloseCallback(fn, original, context) {
          assertFunction(fn, context);
          return () => promiseCall(fn, original, []);
        }
        function convertUnderlyingSinkStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertUnderlyingSinkWriteCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        function assertWritableStream(x2, context) {
          if (!IsWritableStream(x2)) {
            throw new TypeError(`${context} is not a WritableStream.`);
          }
        }
        function isAbortSignal2(value) {
          if (typeof value !== "object" || value === null) {
            return false;
          }
          try {
            return typeof value.aborted === "boolean";
          } catch (_a4) {
            return false;
          }
        }
        const supportsAbortController = typeof AbortController === "function";
        function createAbortController() {
          if (supportsAbortController) {
            return new AbortController();
          }
          return void 0;
        }
        class WritableStream {
          constructor(rawUnderlyingSink = {}, rawStrategy = {}) {
            if (rawUnderlyingSink === void 0) {
              rawUnderlyingSink = null;
            } else {
              assertObject(rawUnderlyingSink, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, "First parameter");
            InitializeWritableStream(this);
            const type = underlyingSink.type;
            if (type !== void 0) {
              throw new RangeError("Invalid type is specified");
            }
            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
            const highWaterMark = ExtractHighWaterMark(strategy, 1);
            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
          }
          get locked() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("locked");
            }
            return IsWritableStreamLocked(this);
          }
          abort(reason = void 0) {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("abort"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer"));
            }
            return WritableStreamAbort(this, reason);
          }
          close() {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("close"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer"));
            }
            if (WritableStreamCloseQueuedOrInFlight(this)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamClose(this);
          }
          getWriter() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("getWriter");
            }
            return AcquireWritableStreamDefaultWriter(this);
          }
        }
        Object.defineProperties(WritableStream.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          getWriter: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStream",
            configurable: true
          });
        }
        function AcquireWritableStreamDefaultWriter(stream) {
          return new WritableStreamDefaultWriter(stream);
        }
        function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(WritableStream.prototype);
          InitializeWritableStream(stream);
          const controller = Object.create(WritableStreamDefaultController.prototype);
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function InitializeWritableStream(stream) {
          stream._state = "writable";
          stream._storedError = void 0;
          stream._writer = void 0;
          stream._writableStreamController = void 0;
          stream._writeRequests = new SimpleQueue();
          stream._inFlightWriteRequest = void 0;
          stream._closeRequest = void 0;
          stream._inFlightCloseRequest = void 0;
          stream._pendingAbortRequest = void 0;
          stream._backpressure = false;
        }
        function IsWritableStream(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_writableStreamController")) {
            return false;
          }
          return x2 instanceof WritableStream;
        }
        function IsWritableStreamLocked(stream) {
          if (stream._writer === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamAbort(stream, reason) {
          var _a4;
          if (stream._state === "closed" || stream._state === "errored") {
            return promiseResolvedWith(void 0);
          }
          stream._writableStreamController._abortReason = reason;
          (_a4 = stream._writableStreamController._abortController) === null || _a4 === void 0 ? void 0 : _a4.abort();
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseResolvedWith(void 0);
          }
          if (stream._pendingAbortRequest !== void 0) {
            return stream._pendingAbortRequest._promise;
          }
          let wasAlreadyErroring = false;
          if (state === "erroring") {
            wasAlreadyErroring = true;
            reason = void 0;
          }
          const promise = newPromise((resolve2, reject) => {
            stream._pendingAbortRequest = {
              _promise: void 0,
              _resolve: resolve2,
              _reject: reject,
              _reason: reason,
              _wasAlreadyErroring: wasAlreadyErroring
            };
          });
          stream._pendingAbortRequest._promise = promise;
          if (!wasAlreadyErroring) {
            WritableStreamStartErroring(stream, reason);
          }
          return promise;
        }
        function WritableStreamClose(stream) {
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));
          }
          const promise = newPromise((resolve2, reject) => {
            const closeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._closeRequest = closeRequest;
          });
          const writer = stream._writer;
          if (writer !== void 0 && stream._backpressure && state === "writable") {
            defaultWriterReadyPromiseResolve(writer);
          }
          WritableStreamDefaultControllerClose(stream._writableStreamController);
          return promise;
        }
        function WritableStreamAddWriteRequest(stream) {
          const promise = newPromise((resolve2, reject) => {
            const writeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._writeRequests.push(writeRequest);
          });
          return promise;
        }
        function WritableStreamDealWithRejection(stream, error2) {
          const state = stream._state;
          if (state === "writable") {
            WritableStreamStartErroring(stream, error2);
            return;
          }
          WritableStreamFinishErroring(stream);
        }
        function WritableStreamStartErroring(stream, reason) {
          const controller = stream._writableStreamController;
          stream._state = "erroring";
          stream._storedError = reason;
          const writer = stream._writer;
          if (writer !== void 0) {
            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);
          }
          if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {
            WritableStreamFinishErroring(stream);
          }
        }
        function WritableStreamFinishErroring(stream) {
          stream._state = "errored";
          stream._writableStreamController[ErrorSteps]();
          const storedError = stream._storedError;
          stream._writeRequests.forEach((writeRequest) => {
            writeRequest._reject(storedError);
          });
          stream._writeRequests = new SimpleQueue();
          if (stream._pendingAbortRequest === void 0) {
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const abortRequest = stream._pendingAbortRequest;
          stream._pendingAbortRequest = void 0;
          if (abortRequest._wasAlreadyErroring) {
            abortRequest._reject(storedError);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
          uponPromise(promise, () => {
            abortRequest._resolve();
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          }, (reason) => {
            abortRequest._reject(reason);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          });
        }
        function WritableStreamFinishInFlightWrite(stream) {
          stream._inFlightWriteRequest._resolve(void 0);
          stream._inFlightWriteRequest = void 0;
        }
        function WritableStreamFinishInFlightWriteWithError(stream, error2) {
          stream._inFlightWriteRequest._reject(error2);
          stream._inFlightWriteRequest = void 0;
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamFinishInFlightClose(stream) {
          stream._inFlightCloseRequest._resolve(void 0);
          stream._inFlightCloseRequest = void 0;
          const state = stream._state;
          if (state === "erroring") {
            stream._storedError = void 0;
            if (stream._pendingAbortRequest !== void 0) {
              stream._pendingAbortRequest._resolve();
              stream._pendingAbortRequest = void 0;
            }
          }
          stream._state = "closed";
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseResolve(writer);
          }
        }
        function WritableStreamFinishInFlightCloseWithError(stream, error2) {
          stream._inFlightCloseRequest._reject(error2);
          stream._inFlightCloseRequest = void 0;
          if (stream._pendingAbortRequest !== void 0) {
            stream._pendingAbortRequest._reject(error2);
            stream._pendingAbortRequest = void 0;
          }
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamCloseQueuedOrInFlight(stream) {
          if (stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamHasOperationMarkedInFlight(stream) {
          if (stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamMarkCloseRequestInFlight(stream) {
          stream._inFlightCloseRequest = stream._closeRequest;
          stream._closeRequest = void 0;
        }
        function WritableStreamMarkFirstWriteRequestInFlight(stream) {
          stream._inFlightWriteRequest = stream._writeRequests.shift();
        }
        function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
          if (stream._closeRequest !== void 0) {
            stream._closeRequest._reject(stream._storedError);
            stream._closeRequest = void 0;
          }
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseReject(writer, stream._storedError);
          }
        }
        function WritableStreamUpdateBackpressure(stream, backpressure) {
          const writer = stream._writer;
          if (writer !== void 0 && backpressure !== stream._backpressure) {
            if (backpressure) {
              defaultWriterReadyPromiseReset(writer);
            } else {
              defaultWriterReadyPromiseResolve(writer);
            }
          }
          stream._backpressure = backpressure;
        }
        class WritableStreamDefaultWriter {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "WritableStreamDefaultWriter");
            assertWritableStream(stream, "First parameter");
            if (IsWritableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive writing by another writer");
            }
            this._ownerWritableStream = stream;
            stream._writer = this;
            const state = stream._state;
            if (state === "writable") {
              if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {
                defaultWriterReadyPromiseInitialize(this);
              } else {
                defaultWriterReadyPromiseInitializeAsResolved(this);
              }
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "erroring") {
              defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "closed") {
              defaultWriterReadyPromiseInitializeAsResolved(this);
              defaultWriterClosedPromiseInitializeAsResolved(this);
            } else {
              const storedError = stream._storedError;
              defaultWriterReadyPromiseInitializeAsRejected(this, storedError);
              defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
            }
          }
          get closed() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          get desiredSize() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("desiredSize");
            }
            if (this._ownerWritableStream === void 0) {
              throw defaultWriterLockException("desiredSize");
            }
            return WritableStreamDefaultWriterGetDesiredSize(this);
          }
          get ready() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("ready"));
            }
            return this._readyPromise;
          }
          abort(reason = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("abort"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("abort"));
            }
            return WritableStreamDefaultWriterAbort(this, reason);
          }
          close() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("close"));
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("close"));
            }
            if (WritableStreamCloseQueuedOrInFlight(stream)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamDefaultWriterClose(this);
          }
          releaseLock() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("releaseLock");
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return;
            }
            WritableStreamDefaultWriterRelease(this);
          }
          write(chunk = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("write"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("write to"));
            }
            return WritableStreamDefaultWriterWrite(this, chunk);
          }
        }
        Object.defineProperties(WritableStreamDefaultWriter.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          releaseLock: { enumerable: true },
          write: { enumerable: true },
          closed: { enumerable: true },
          desiredSize: { enumerable: true },
          ready: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultWriter",
            configurable: true
          });
        }
        function IsWritableStreamDefaultWriter(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_ownerWritableStream")) {
            return false;
          }
          return x2 instanceof WritableStreamDefaultWriter;
        }
        function WritableStreamDefaultWriterAbort(writer, reason) {
          const stream = writer._ownerWritableStream;
          return WritableStreamAbort(stream, reason);
        }
        function WritableStreamDefaultWriterClose(writer) {
          const stream = writer._ownerWritableStream;
          return WritableStreamClose(stream);
        }
        function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          return WritableStreamDefaultWriterClose(writer);
        }
        function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error2) {
          if (writer._closedPromiseState === "pending") {
            defaultWriterClosedPromiseReject(writer, error2);
          } else {
            defaultWriterClosedPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error2) {
          if (writer._readyPromiseState === "pending") {
            defaultWriterReadyPromiseReject(writer, error2);
          } else {
            defaultWriterReadyPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterGetDesiredSize(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (state === "errored" || state === "erroring") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
        }
        function WritableStreamDefaultWriterRelease(writer) {
          const stream = writer._ownerWritableStream;
          const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);
          WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);
          WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);
          stream._writer = void 0;
          writer._ownerWritableStream = void 0;
        }
        function WritableStreamDefaultWriterWrite(writer, chunk) {
          const stream = writer._ownerWritableStream;
          const controller = stream._writableStreamController;
          const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
          if (stream !== writer._ownerWritableStream) {
            return promiseRejectedWith(defaultWriterLockException("write to"));
          }
          const state = stream._state;
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"));
          }
          if (state === "erroring") {
            return promiseRejectedWith(stream._storedError);
          }
          const promise = WritableStreamAddWriteRequest(stream);
          WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);
          return promise;
        }
        const closeSentinel = {};
        class WritableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get abortReason() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("abortReason");
            }
            return this._abortReason;
          }
          get signal() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("signal");
            }
            if (this._abortController === void 0) {
              throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
            }
            return this._abortController.signal;
          }
          error(e2 = void 0) {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("error");
            }
            const state = this._controlledWritableStream._state;
            if (state !== "writable") {
              return;
            }
            WritableStreamDefaultControllerError(this, e2);
          }
          [AbortSteps](reason) {
            const result = this._abortAlgorithm(reason);
            WritableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [ErrorSteps]() {
            ResetQueue(this);
          }
        }
        Object.defineProperties(WritableStreamDefaultController.prototype, {
          abortReason: { enumerable: true },
          signal: { enumerable: true },
          error: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultController",
            configurable: true
          });
        }
        function IsWritableStreamDefaultController(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_controlledWritableStream")) {
            return false;
          }
          return x2 instanceof WritableStreamDefaultController;
        }
        function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledWritableStream = stream;
          stream._writableStreamController = controller;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._abortReason = void 0;
          controller._abortController = createAbortController();
          controller._started = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._writeAlgorithm = writeAlgorithm;
          controller._closeAlgorithm = closeAlgorithm;
          controller._abortAlgorithm = abortAlgorithm;
          const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
          WritableStreamUpdateBackpressure(stream, backpressure);
          const startResult = startAlgorithm();
          const startPromise = promiseResolvedWith(startResult);
          uponPromise(startPromise, () => {
            controller._started = true;
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (r2) => {
            controller._started = true;
            WritableStreamDealWithRejection(stream, r2);
          });
        }
        function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(WritableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let writeAlgorithm = () => promiseResolvedWith(void 0);
          let closeAlgorithm = () => promiseResolvedWith(void 0);
          let abortAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSink.start !== void 0) {
            startAlgorithm = () => underlyingSink.start(controller);
          }
          if (underlyingSink.write !== void 0) {
            writeAlgorithm = (chunk) => underlyingSink.write(chunk, controller);
          }
          if (underlyingSink.close !== void 0) {
            closeAlgorithm = () => underlyingSink.close();
          }
          if (underlyingSink.abort !== void 0) {
            abortAlgorithm = (reason) => underlyingSink.abort(reason);
          }
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function WritableStreamDefaultControllerClearAlgorithms(controller) {
          controller._writeAlgorithm = void 0;
          controller._closeAlgorithm = void 0;
          controller._abortAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function WritableStreamDefaultControllerClose(controller) {
          EnqueueValueWithSize(controller, closeSentinel, 0);
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
          try {
            return controller._strategySizeAlgorithm(chunk);
          } catch (chunkSizeE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
            return 1;
          }
        }
        function WritableStreamDefaultControllerGetDesiredSize(controller) {
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
          try {
            EnqueueValueWithSize(controller, chunk, chunkSize);
          } catch (enqueueE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
            return;
          }
          const stream = controller._controlledWritableStream;
          if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === "writable") {
            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
            WritableStreamUpdateBackpressure(stream, backpressure);
          }
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
          const stream = controller._controlledWritableStream;
          if (!controller._started) {
            return;
          }
          if (stream._inFlightWriteRequest !== void 0) {
            return;
          }
          const state = stream._state;
          if (state === "erroring") {
            WritableStreamFinishErroring(stream);
            return;
          }
          if (controller._queue.length === 0) {
            return;
          }
          const value = PeekQueueValue(controller);
          if (value === closeSentinel) {
            WritableStreamDefaultControllerProcessClose(controller);
          } else {
            WritableStreamDefaultControllerProcessWrite(controller, value);
          }
        }
        function WritableStreamDefaultControllerErrorIfNeeded(controller, error2) {
          if (controller._controlledWritableStream._state === "writable") {
            WritableStreamDefaultControllerError(controller, error2);
          }
        }
        function WritableStreamDefaultControllerProcessClose(controller) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkCloseRequestInFlight(stream);
          DequeueValue(controller);
          const sinkClosePromise = controller._closeAlgorithm();
          WritableStreamDefaultControllerClearAlgorithms(controller);
          uponPromise(sinkClosePromise, () => {
            WritableStreamFinishInFlightClose(stream);
          }, (reason) => {
            WritableStreamFinishInFlightCloseWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkFirstWriteRequestInFlight(stream);
          const sinkWritePromise = controller._writeAlgorithm(chunk);
          uponPromise(sinkWritePromise, () => {
            WritableStreamFinishInFlightWrite(stream);
            const state = stream._state;
            DequeueValue(controller);
            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === "writable") {
              const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
              WritableStreamUpdateBackpressure(stream, backpressure);
            }
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (reason) => {
            if (stream._state === "writable") {
              WritableStreamDefaultControllerClearAlgorithms(controller);
            }
            WritableStreamFinishInFlightWriteWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerGetBackpressure(controller) {
          const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
          return desiredSize <= 0;
        }
        function WritableStreamDefaultControllerError(controller, error2) {
          const stream = controller._controlledWritableStream;
          WritableStreamDefaultControllerClearAlgorithms(controller);
          WritableStreamStartErroring(stream, error2);
        }
        function streamBrandCheckException$2(name2) {
          return new TypeError(`WritableStream.prototype.${name2} can only be used on a WritableStream`);
        }
        function defaultControllerBrandCheckException$2(name2) {
          return new TypeError(`WritableStreamDefaultController.prototype.${name2} can only be used on a WritableStreamDefaultController`);
        }
        function defaultWriterBrandCheckException(name2) {
          return new TypeError(`WritableStreamDefaultWriter.prototype.${name2} can only be used on a WritableStreamDefaultWriter`);
        }
        function defaultWriterLockException(name2) {
          return new TypeError("Cannot " + name2 + " a stream using a released writer");
        }
        function defaultWriterClosedPromiseInitialize(writer) {
          writer._closedPromise = newPromise((resolve2, reject) => {
            writer._closedPromise_resolve = resolve2;
            writer._closedPromise_reject = reject;
            writer._closedPromiseState = "pending";
          });
        }
        function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseReject(writer, reason);
        }
        function defaultWriterClosedPromiseInitializeAsResolved(writer) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseResolve(writer);
        }
        function defaultWriterClosedPromiseReject(writer, reason) {
          if (writer._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._closedPromise);
          writer._closedPromise_reject(reason);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "rejected";
        }
        function defaultWriterClosedPromiseResetToRejected(writer, reason) {
          defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterClosedPromiseResolve(writer) {
          if (writer._closedPromise_resolve === void 0) {
            return;
          }
          writer._closedPromise_resolve(void 0);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "resolved";
        }
        function defaultWriterReadyPromiseInitialize(writer) {
          writer._readyPromise = newPromise((resolve2, reject) => {
            writer._readyPromise_resolve = resolve2;
            writer._readyPromise_reject = reject;
          });
          writer._readyPromiseState = "pending";
        }
        function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseReject(writer, reason);
        }
        function defaultWriterReadyPromiseInitializeAsResolved(writer) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseResolve(writer);
        }
        function defaultWriterReadyPromiseReject(writer, reason) {
          if (writer._readyPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._readyPromise);
          writer._readyPromise_reject(reason);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "rejected";
        }
        function defaultWriterReadyPromiseReset(writer) {
          defaultWriterReadyPromiseInitialize(writer);
        }
        function defaultWriterReadyPromiseResetToRejected(writer, reason) {
          defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterReadyPromiseResolve(writer) {
          if (writer._readyPromise_resolve === void 0) {
            return;
          }
          writer._readyPromise_resolve(void 0);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "fulfilled";
        }
        const NativeDOMException = typeof DOMException !== "undefined" ? DOMException : void 0;
        function isDOMExceptionConstructor(ctor) {
          if (!(typeof ctor === "function" || typeof ctor === "object")) {
            return false;
          }
          try {
            new ctor();
            return true;
          } catch (_a4) {
            return false;
          }
        }
        function createDOMExceptionPolyfill() {
          const ctor = function DOMException2(message, name2) {
            this.message = message || "";
            this.name = name2 || "Error";
            if (Error.captureStackTrace) {
              Error.captureStackTrace(this, this.constructor);
            }
          };
          ctor.prototype = Object.create(Error.prototype);
          Object.defineProperty(ctor.prototype, "constructor", { value: ctor, writable: true, configurable: true });
          return ctor;
        }
        const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();
        function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
          const reader = AcquireReadableStreamDefaultReader(source);
          const writer = AcquireWritableStreamDefaultWriter(dest);
          source._disturbed = true;
          let shuttingDown = false;
          let currentWrite = promiseResolvedWith(void 0);
          return newPromise((resolve2, reject) => {
            let abortAlgorithm;
            if (signal !== void 0) {
              abortAlgorithm = () => {
                const error2 = new DOMException$1("Aborted", "AbortError");
                const actions = [];
                if (!preventAbort) {
                  actions.push(() => {
                    if (dest._state === "writable") {
                      return WritableStreamAbort(dest, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                if (!preventCancel) {
                  actions.push(() => {
                    if (source._state === "readable") {
                      return ReadableStreamCancel(source, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                shutdownWithAction(() => Promise.all(actions.map((action) => action())), true, error2);
              };
              if (signal.aborted) {
                abortAlgorithm();
                return;
              }
              signal.addEventListener("abort", abortAlgorithm);
            }
            function pipeLoop() {
              return newPromise((resolveLoop, rejectLoop) => {
                function next(done) {
                  if (done) {
                    resolveLoop();
                  } else {
                    PerformPromiseThen(pipeStep(), next, rejectLoop);
                  }
                }
                next(false);
              });
            }
            function pipeStep() {
              if (shuttingDown) {
                return promiseResolvedWith(true);
              }
              return PerformPromiseThen(writer._readyPromise, () => {
                return newPromise((resolveRead, rejectRead) => {
                  ReadableStreamDefaultReaderRead(reader, {
                    _chunkSteps: (chunk) => {
                      currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop4);
                      resolveRead(false);
                    },
                    _closeSteps: () => resolveRead(true),
                    _errorSteps: rejectRead
                  });
                });
              });
            }
            isOrBecomesErrored(source, reader._closedPromise, (storedError) => {
              if (!preventAbort) {
                shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesErrored(dest, writer._closedPromise, (storedError) => {
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesClosed(source, reader._closedPromise, () => {
              if (!preventClose) {
                shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));
              } else {
                shutdown();
              }
            });
            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === "closed") {
              const destClosed = new TypeError("the destination writable stream closed before all data could be piped to it");
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);
              } else {
                shutdown(true, destClosed);
              }
            }
            setPromiseIsHandledToTrue(pipeLoop());
            function waitForWritesToFinish() {
              const oldCurrentWrite = currentWrite;
              return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0);
            }
            function isOrBecomesErrored(stream, promise, action) {
              if (stream._state === "errored") {
                action(stream._storedError);
              } else {
                uponRejection(promise, action);
              }
            }
            function isOrBecomesClosed(stream, promise, action) {
              if (stream._state === "closed") {
                action();
              } else {
                uponFulfillment(promise, action);
              }
            }
            function shutdownWithAction(action, originalIsError, originalError) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), doTheRest);
              } else {
                doTheRest();
              }
              function doTheRest() {
                uponPromise(action(), () => finalize(originalIsError, originalError), (newError) => finalize(true, newError));
              }
            }
            function shutdown(isError, error2) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error2));
              } else {
                finalize(isError, error2);
              }
            }
            function finalize(isError, error2) {
              WritableStreamDefaultWriterRelease(writer);
              ReadableStreamReaderGenericRelease(reader);
              if (signal !== void 0) {
                signal.removeEventListener("abort", abortAlgorithm);
              }
              if (isError) {
                reject(error2);
              } else {
                resolve2(void 0);
              }
            }
          });
        }
        class ReadableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("desiredSize");
            }
            return ReadableStreamDefaultControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("close");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits close");
            }
            ReadableStreamDefaultControllerClose(this);
          }
          enqueue(chunk = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("enqueue");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits enqueue");
            }
            return ReadableStreamDefaultControllerEnqueue(this, chunk);
          }
          error(e2 = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("error");
            }
            ReadableStreamDefaultControllerError(this, e2);
          }
          [CancelSteps](reason) {
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableStream;
            if (this._queue.length > 0) {
              const chunk = DequeueValue(this);
              if (this._closeRequested && this._queue.length === 0) {
                ReadableStreamDefaultControllerClearAlgorithms(this);
                ReadableStreamClose(stream);
              } else {
                ReadableStreamDefaultControllerCallPullIfNeeded(this);
              }
              readRequest._chunkSteps(chunk);
            } else {
              ReadableStreamAddReadRequest(stream, readRequest);
              ReadableStreamDefaultControllerCallPullIfNeeded(this);
            }
          }
        }
        Object.defineProperties(ReadableStreamDefaultController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultController",
            configurable: true
          });
        }
        function IsReadableStreamDefaultController(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_controlledReadableStream")) {
            return false;
          }
          return x2 instanceof ReadableStreamDefaultController;
        }
        function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableStreamDefaultControllerCallPullIfNeeded(controller);
            }
          }, (e2) => {
            ReadableStreamDefaultControllerError(controller, e2);
          });
        }
        function ReadableStreamDefaultControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableStream;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableStreamDefaultControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function ReadableStreamDefaultControllerClose(controller) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          controller._closeRequested = true;
          if (controller._queue.length === 0) {
            ReadableStreamDefaultControllerClearAlgorithms(controller);
            ReadableStreamClose(stream);
          }
        }
        function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            ReadableStreamFulfillReadRequest(stream, chunk, false);
          } else {
            let chunkSize;
            try {
              chunkSize = controller._strategySizeAlgorithm(chunk);
            } catch (chunkSizeE) {
              ReadableStreamDefaultControllerError(controller, chunkSizeE);
              throw chunkSizeE;
            }
            try {
              EnqueueValueWithSize(controller, chunk, chunkSize);
            } catch (enqueueE) {
              ReadableStreamDefaultControllerError(controller, enqueueE);
              throw enqueueE;
            }
          }
          ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }
        function ReadableStreamDefaultControllerError(controller, e2) {
          const stream = controller._controlledReadableStream;
          if (stream._state !== "readable") {
            return;
          }
          ResetQueue(controller);
          ReadableStreamDefaultControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e2);
        }
        function ReadableStreamDefaultControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableStreamDefaultControllerHasBackpressure(controller) {
          if (ReadableStreamDefaultControllerShouldCallPull(controller)) {
            return false;
          }
          return true;
        }
        function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
          const state = controller._controlledReadableStream._state;
          if (!controller._closeRequested && state === "readable") {
            return true;
          }
          return false;
        }
        function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledReadableStream = stream;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._started = false;
          controller._closeRequested = false;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableStreamDefaultControllerCallPullIfNeeded(controller);
          }, (r2) => {
            ReadableStreamDefaultControllerError(controller, r2);
          });
        }
        function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSource.start !== void 0) {
            startAlgorithm = () => underlyingSource.start(controller);
          }
          if (underlyingSource.pull !== void 0) {
            pullAlgorithm = () => underlyingSource.pull(controller);
          }
          if (underlyingSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingSource.cancel(reason);
          }
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function defaultControllerBrandCheckException$1(name2) {
          return new TypeError(`ReadableStreamDefaultController.prototype.${name2} can only be used on a ReadableStreamDefaultController`);
        }
        function ReadableStreamTee(stream, cloneForBranch2) {
          if (IsReadableByteStreamController(stream._readableStreamController)) {
            return ReadableByteStreamTee(stream);
          }
          return ReadableStreamDefaultTee(stream);
        }
        function ReadableStreamDefaultTee(stream, cloneForBranch2) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let readAgain = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function pullAlgorithm() {
            if (reading) {
              readAgain = true;
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask2(() => {
                  readAgain = false;
                  const chunk1 = chunk;
                  const chunk2 = chunk;
                  if (!canceled1) {
                    ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                  reading = false;
                  if (readAgain) {
                    pullAlgorithm();
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableStreamDefaultControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableStreamDefaultControllerClose(branch2._readableStreamController);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
          }
          branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);
          branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);
          uponRejection(reader._closedPromise, (r2) => {
            ReadableStreamDefaultControllerError(branch1._readableStreamController, r2);
            ReadableStreamDefaultControllerError(branch2._readableStreamController, r2);
            if (!canceled1 || !canceled2) {
              resolveCancelPromise(void 0);
            }
          });
          return [branch1, branch2];
        }
        function ReadableByteStreamTee(stream) {
          let reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let readAgainForBranch1 = false;
          let readAgainForBranch2 = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function forwardReaderError(thisReader) {
            uponRejection(thisReader._closedPromise, (r2) => {
              if (thisReader !== reader) {
                return;
              }
              ReadableByteStreamControllerError(branch1._readableStreamController, r2);
              ReadableByteStreamControllerError(branch2._readableStreamController, r2);
              if (!canceled1 || !canceled2) {
                resolveCancelPromise(void 0);
              }
            });
          }
          function pullWithDefaultReader() {
            if (IsReadableStreamBYOBReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamDefaultReader(stream);
              forwardReaderError(reader);
            }
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask2(() => {
                  readAgainForBranch1 = false;
                  readAgainForBranch2 = false;
                  const chunk1 = chunk;
                  let chunk2 = chunk;
                  if (!canceled1 && !canceled2) {
                    try {
                      chunk2 = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                  }
                  if (!canceled1) {
                    ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                  reading = false;
                  if (readAgainForBranch1) {
                    pull1Algorithm();
                  } else if (readAgainForBranch2) {
                    pull2Algorithm();
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableByteStreamControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableByteStreamControllerClose(branch2._readableStreamController);
                }
                if (branch1._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);
                }
                if (branch2._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
          }
          function pullWithBYOBReader(view, forBranch2) {
            if (IsReadableStreamDefaultReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamBYOBReader(stream);
              forwardReaderError(reader);
            }
            const byobBranch = forBranch2 ? branch2 : branch1;
            const otherBranch = forBranch2 ? branch1 : branch2;
            const readIntoRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask2(() => {
                  readAgainForBranch1 = false;
                  readAgainForBranch2 = false;
                  const byobCanceled = forBranch2 ? canceled2 : canceled1;
                  const otherCanceled = forBranch2 ? canceled1 : canceled2;
                  if (!otherCanceled) {
                    let clonedChunk;
                    try {
                      clonedChunk = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                    if (!byobCanceled) {
                      ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                    }
                    ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
                  } else if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                  reading = false;
                  if (readAgainForBranch1) {
                    pull1Algorithm();
                  } else if (readAgainForBranch2) {
                    pull2Algorithm();
                  }
                });
              },
              _closeSteps: (chunk) => {
                reading = false;
                const byobCanceled = forBranch2 ? canceled2 : canceled1;
                const otherCanceled = forBranch2 ? canceled1 : canceled2;
                if (!byobCanceled) {
                  ReadableByteStreamControllerClose(byobBranch._readableStreamController);
                }
                if (!otherCanceled) {
                  ReadableByteStreamControllerClose(otherBranch._readableStreamController);
                }
                if (chunk !== void 0) {
                  if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                  if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {
                    ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);
                  }
                }
                if (!byobCanceled || !otherCanceled) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
          }
          function pull1Algorithm() {
            if (reading) {
              readAgainForBranch1 = true;
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, false);
            }
            return promiseResolvedWith(void 0);
          }
          function pull2Algorithm() {
            if (reading) {
              readAgainForBranch2 = true;
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, true);
            }
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
            return;
          }
          branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);
          branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);
          forwardReaderError(reader);
          return [branch1, branch2];
        }
        function convertUnderlyingDefaultOrByteSource(source, context) {
          assertDictionary(source, context);
          const original = source;
          const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;
          const cancel = original === null || original === void 0 ? void 0 : original.cancel;
          const pull = original === null || original === void 0 ? void 0 : original.pull;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const type = original === null || original === void 0 ? void 0 : original.type;
          return {
            autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),
            cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),
            pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),
            start: start === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),
            type: type === void 0 ? void 0 : convertReadableStreamType(type, `${context} has member 'type' that`)
          };
        }
        function convertUnderlyingSourceCancelCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSourcePullCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertUnderlyingSourceStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertReadableStreamType(type, context) {
          type = `${type}`;
          if (type !== "bytes") {
            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);
          }
          return type;
        }
        function convertReaderOptions(options, context) {
          assertDictionary(options, context);
          const mode = options === null || options === void 0 ? void 0 : options.mode;
          return {
            mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)
          };
        }
        function convertReadableStreamReaderMode(mode, context) {
          mode = `${mode}`;
          if (mode !== "byob") {
            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);
          }
          return mode;
        }
        function convertIteratorOptions(options, context) {
          assertDictionary(options, context);
          const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
          return { preventCancel: Boolean(preventCancel) };
        }
        function convertPipeOptions(options, context) {
          assertDictionary(options, context);
          const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;
          const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;
          const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;
          const signal = options === null || options === void 0 ? void 0 : options.signal;
          if (signal !== void 0) {
            assertAbortSignal(signal, `${context} has member 'signal' that`);
          }
          return {
            preventAbort: Boolean(preventAbort),
            preventCancel: Boolean(preventCancel),
            preventClose: Boolean(preventClose),
            signal
          };
        }
        function assertAbortSignal(signal, context) {
          if (!isAbortSignal2(signal)) {
            throw new TypeError(`${context} is not an AbortSignal.`);
          }
        }
        function convertReadableWritablePair(pair, context) {
          assertDictionary(pair, context);
          const readable = pair === null || pair === void 0 ? void 0 : pair.readable;
          assertRequiredField(readable, "readable", "ReadableWritablePair");
          assertReadableStream(readable, `${context} has member 'readable' that`);
          const writable3 = pair === null || pair === void 0 ? void 0 : pair.writable;
          assertRequiredField(writable3, "writable", "ReadableWritablePair");
          assertWritableStream(writable3, `${context} has member 'writable' that`);
          return { readable, writable: writable3 };
        }
        class ReadableStream2 {
          constructor(rawUnderlyingSource = {}, rawStrategy = {}) {
            if (rawUnderlyingSource === void 0) {
              rawUnderlyingSource = null;
            } else {
              assertObject(rawUnderlyingSource, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, "First parameter");
            InitializeReadableStream(this);
            if (underlyingSource.type === "bytes") {
              if (strategy.size !== void 0) {
                throw new RangeError("The strategy for a byte stream cannot have a size function");
              }
              const highWaterMark = ExtractHighWaterMark(strategy, 0);
              SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
            } else {
              const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
              const highWaterMark = ExtractHighWaterMark(strategy, 1);
              SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
            }
          }
          get locked() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("locked");
            }
            return IsReadableStreamLocked(this);
          }
          cancel(reason = void 0) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("cancel"));
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader"));
            }
            return ReadableStreamCancel(this, reason);
          }
          getReader(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("getReader");
            }
            const options = convertReaderOptions(rawOptions, "First parameter");
            if (options.mode === void 0) {
              return AcquireReadableStreamDefaultReader(this);
            }
            return AcquireReadableStreamBYOBReader(this);
          }
          pipeThrough(rawTransform, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("pipeThrough");
            }
            assertRequiredArgument(rawTransform, 1, "pipeThrough");
            const transform = convertReadableWritablePair(rawTransform, "First parameter");
            const options = convertPipeOptions(rawOptions, "Second parameter");
            if (IsReadableStreamLocked(this)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
            }
            if (IsWritableStreamLocked(transform.writable)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
            }
            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
            setPromiseIsHandledToTrue(promise);
            return transform.readable;
          }
          pipeTo(destination, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("pipeTo"));
            }
            if (destination === void 0) {
              return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);
            }
            if (!IsWritableStream(destination)) {
              return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));
            }
            let options;
            try {
              options = convertPipeOptions(rawOptions, "Second parameter");
            } catch (e2) {
              return promiseRejectedWith(e2);
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"));
            }
            if (IsWritableStreamLocked(destination)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"));
            }
            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
          }
          tee() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("tee");
            }
            const branches = ReadableStreamTee(this);
            return CreateArrayFromList(branches);
          }
          values(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("values");
            }
            const options = convertIteratorOptions(rawOptions, "First parameter");
            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);
          }
        }
        Object.defineProperties(ReadableStream2.prototype, {
          cancel: { enumerable: true },
          getReader: { enumerable: true },
          pipeThrough: { enumerable: true },
          pipeTo: { enumerable: true },
          tee: { enumerable: true },
          values: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStream",
            configurable: true
          });
        }
        if (typeof SymbolPolyfill.asyncIterator === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.asyncIterator, {
            value: ReadableStream2.prototype.values,
            writable: true,
            configurable: true
          });
        }
        function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableByteStreamController.prototype);
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0);
          return stream;
        }
        function InitializeReadableStream(stream) {
          stream._state = "readable";
          stream._reader = void 0;
          stream._storedError = void 0;
          stream._disturbed = false;
        }
        function IsReadableStream(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_readableStreamController")) {
            return false;
          }
          return x2 instanceof ReadableStream2;
        }
        function IsReadableStreamLocked(stream) {
          if (stream._reader === void 0) {
            return false;
          }
          return true;
        }
        function ReadableStreamCancel(stream, reason) {
          stream._disturbed = true;
          if (stream._state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (stream._state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          ReadableStreamClose(stream);
          const reader = stream._reader;
          if (reader !== void 0 && IsReadableStreamBYOBReader(reader)) {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._closeSteps(void 0);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
          const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
          return transformPromiseWith(sourceCancelPromise, noop4);
        }
        function ReadableStreamClose(stream) {
          stream._state = "closed";
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseResolve(reader);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._closeSteps();
            });
            reader._readRequests = new SimpleQueue();
          }
        }
        function ReadableStreamError(stream, e2) {
          stream._state = "errored";
          stream._storedError = e2;
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseReject(reader, e2);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._errorSteps(e2);
            });
            reader._readRequests = new SimpleQueue();
          } else {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._errorSteps(e2);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
        }
        function streamBrandCheckException$1(name2) {
          return new TypeError(`ReadableStream.prototype.${name2} can only be used on a ReadableStream`);
        }
        function convertQueuingStrategyInit(init, context) {
          assertDictionary(init, context);
          const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;
          assertRequiredField(highWaterMark, "highWaterMark", "QueuingStrategyInit");
          return {
            highWaterMark: convertUnrestrictedDouble(highWaterMark)
          };
        }
        const byteLengthSizeFunction = (chunk) => {
          return chunk.byteLength;
        };
        Object.defineProperty(byteLengthSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class ByteLengthQueuingStrategy {
          constructor(options) {
            assertRequiredArgument(options, 1, "ByteLengthQueuingStrategy");
            options = convertQueuingStrategyInit(options, "First parameter");
            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;
          }
          get highWaterMark() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("highWaterMark");
            }
            return this._byteLengthQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("size");
            }
            return byteLengthSizeFunction;
          }
        }
        Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "ByteLengthQueuingStrategy",
            configurable: true
          });
        }
        function byteLengthBrandCheckException(name2) {
          return new TypeError(`ByteLengthQueuingStrategy.prototype.${name2} can only be used on a ByteLengthQueuingStrategy`);
        }
        function IsByteLengthQueuingStrategy(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_byteLengthQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x2 instanceof ByteLengthQueuingStrategy;
        }
        const countSizeFunction = () => {
          return 1;
        };
        Object.defineProperty(countSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class CountQueuingStrategy {
          constructor(options) {
            assertRequiredArgument(options, 1, "CountQueuingStrategy");
            options = convertQueuingStrategyInit(options, "First parameter");
            this._countQueuingStrategyHighWaterMark = options.highWaterMark;
          }
          get highWaterMark() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("highWaterMark");
            }
            return this._countQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("size");
            }
            return countSizeFunction;
          }
        }
        Object.defineProperties(CountQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "CountQueuingStrategy",
            configurable: true
          });
        }
        function countBrandCheckException(name2) {
          return new TypeError(`CountQueuingStrategy.prototype.${name2} can only be used on a CountQueuingStrategy`);
        }
        function IsCountQueuingStrategy(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_countQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x2 instanceof CountQueuingStrategy;
        }
        function convertTransformer(original, context) {
          assertDictionary(original, context);
          const flush = original === null || original === void 0 ? void 0 : original.flush;
          const readableType = original === null || original === void 0 ? void 0 : original.readableType;
          const start = original === null || original === void 0 ? void 0 : original.start;
          const transform = original === null || original === void 0 ? void 0 : original.transform;
          const writableType = original === null || original === void 0 ? void 0 : original.writableType;
          return {
            flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),
            readableType,
            start: start === void 0 ? void 0 : convertTransformerStartCallback(start, original, `${context} has member 'start' that`),
            transform: transform === void 0 ? void 0 : convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),
            writableType
          };
        }
        function convertTransformerFlushCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertTransformerStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertTransformerTransformCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        class TransformStream {
          constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {
            if (rawTransformer === void 0) {
              rawTransformer = null;
            }
            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, "Second parameter");
            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, "Third parameter");
            const transformer = convertTransformer(rawTransformer, "First parameter");
            if (transformer.readableType !== void 0) {
              throw new RangeError("Invalid readableType specified");
            }
            if (transformer.writableType !== void 0) {
              throw new RangeError("Invalid writableType specified");
            }
            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);
            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);
            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);
            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);
            let startPromise_resolve;
            const startPromise = newPromise((resolve2) => {
              startPromise_resolve = resolve2;
            });
            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);
            if (transformer.start !== void 0) {
              startPromise_resolve(transformer.start(this._transformStreamController));
            } else {
              startPromise_resolve(void 0);
            }
          }
          get readable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("readable");
            }
            return this._readable;
          }
          get writable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("writable");
            }
            return this._writable;
          }
        }
        Object.defineProperties(TransformStream.prototype, {
          readable: { enumerable: true },
          writable: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStream",
            configurable: true
          });
        }
        function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
          function startAlgorithm() {
            return startPromise;
          }
          function writeAlgorithm(chunk) {
            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
          }
          function abortAlgorithm(reason) {
            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
          }
          function closeAlgorithm() {
            return TransformStreamDefaultSinkCloseAlgorithm(stream);
          }
          stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
          function pullAlgorithm() {
            return TransformStreamDefaultSourcePullAlgorithm(stream);
          }
          function cancelAlgorithm(reason) {
            TransformStreamErrorWritableAndUnblockWrite(stream, reason);
            return promiseResolvedWith(void 0);
          }
          stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
          stream._backpressure = void 0;
          stream._backpressureChangePromise = void 0;
          stream._backpressureChangePromise_resolve = void 0;
          TransformStreamSetBackpressure(stream, true);
          stream._transformStreamController = void 0;
        }
        function IsTransformStream(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_transformStreamController")) {
            return false;
          }
          return x2 instanceof TransformStream;
        }
        function TransformStreamError(stream, e2) {
          ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e2);
          TransformStreamErrorWritableAndUnblockWrite(stream, e2);
        }
        function TransformStreamErrorWritableAndUnblockWrite(stream, e2) {
          TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);
          WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e2);
          if (stream._backpressure) {
            TransformStreamSetBackpressure(stream, false);
          }
        }
        function TransformStreamSetBackpressure(stream, backpressure) {
          if (stream._backpressureChangePromise !== void 0) {
            stream._backpressureChangePromise_resolve();
          }
          stream._backpressureChangePromise = newPromise((resolve2) => {
            stream._backpressureChangePromise_resolve = resolve2;
          });
          stream._backpressure = backpressure;
        }
        class TransformStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("desiredSize");
            }
            const readableController = this._controlledTransformStream._readable._readableStreamController;
            return ReadableStreamDefaultControllerGetDesiredSize(readableController);
          }
          enqueue(chunk = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("enqueue");
            }
            TransformStreamDefaultControllerEnqueue(this, chunk);
          }
          error(reason = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("error");
            }
            TransformStreamDefaultControllerError(this, reason);
          }
          terminate() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("terminate");
            }
            TransformStreamDefaultControllerTerminate(this);
          }
        }
        Object.defineProperties(TransformStreamDefaultController.prototype, {
          enqueue: { enumerable: true },
          error: { enumerable: true },
          terminate: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStreamDefaultController",
            configurable: true
          });
        }
        function IsTransformStreamDefaultController(x2) {
          if (!typeIsObject(x2)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x2, "_controlledTransformStream")) {
            return false;
          }
          return x2 instanceof TransformStreamDefaultController;
        }
        function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
          controller._controlledTransformStream = stream;
          stream._transformStreamController = controller;
          controller._transformAlgorithm = transformAlgorithm;
          controller._flushAlgorithm = flushAlgorithm;
        }
        function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {
          const controller = Object.create(TransformStreamDefaultController.prototype);
          let transformAlgorithm = (chunk) => {
            try {
              TransformStreamDefaultControllerEnqueue(controller, chunk);
              return promiseResolvedWith(void 0);
            } catch (transformResultE) {
              return promiseRejectedWith(transformResultE);
            }
          };
          let flushAlgorithm = () => promiseResolvedWith(void 0);
          if (transformer.transform !== void 0) {
            transformAlgorithm = (chunk) => transformer.transform(chunk, controller);
          }
          if (transformer.flush !== void 0) {
            flushAlgorithm = () => transformer.flush(controller);
          }
          SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
        }
        function TransformStreamDefaultControllerClearAlgorithms(controller) {
          controller._transformAlgorithm = void 0;
          controller._flushAlgorithm = void 0;
        }
        function TransformStreamDefaultControllerEnqueue(controller, chunk) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {
            throw new TypeError("Readable side is not in a state that permits enqueue");
          }
          try {
            ReadableStreamDefaultControllerEnqueue(readableController, chunk);
          } catch (e2) {
            TransformStreamErrorWritableAndUnblockWrite(stream, e2);
            throw stream._readable._storedError;
          }
          const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
          if (backpressure !== stream._backpressure) {
            TransformStreamSetBackpressure(stream, true);
          }
        }
        function TransformStreamDefaultControllerError(controller, e2) {
          TransformStreamError(controller._controlledTransformStream, e2);
        }
        function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
          const transformPromise = controller._transformAlgorithm(chunk);
          return transformPromiseWith(transformPromise, void 0, (r2) => {
            TransformStreamError(controller._controlledTransformStream, r2);
            throw r2;
          });
        }
        function TransformStreamDefaultControllerTerminate(controller) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          ReadableStreamDefaultControllerClose(readableController);
          const error2 = new TypeError("TransformStream terminated");
          TransformStreamErrorWritableAndUnblockWrite(stream, error2);
        }
        function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
          const controller = stream._transformStreamController;
          if (stream._backpressure) {
            const backpressureChangePromise = stream._backpressureChangePromise;
            return transformPromiseWith(backpressureChangePromise, () => {
              const writable3 = stream._writable;
              const state = writable3._state;
              if (state === "erroring") {
                throw writable3._storedError;
              }
              return TransformStreamDefaultControllerPerformTransform(controller, chunk);
            });
          }
          return TransformStreamDefaultControllerPerformTransform(controller, chunk);
        }
        function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
          TransformStreamError(stream, reason);
          return promiseResolvedWith(void 0);
        }
        function TransformStreamDefaultSinkCloseAlgorithm(stream) {
          const readable = stream._readable;
          const controller = stream._transformStreamController;
          const flushPromise = controller._flushAlgorithm();
          TransformStreamDefaultControllerClearAlgorithms(controller);
          return transformPromiseWith(flushPromise, () => {
            if (readable._state === "errored") {
              throw readable._storedError;
            }
            ReadableStreamDefaultControllerClose(readable._readableStreamController);
          }, (r2) => {
            TransformStreamError(stream, r2);
            throw readable._storedError;
          });
        }
        function TransformStreamDefaultSourcePullAlgorithm(stream) {
          TransformStreamSetBackpressure(stream, false);
          return stream._backpressureChangePromise;
        }
        function defaultControllerBrandCheckException(name2) {
          return new TypeError(`TransformStreamDefaultController.prototype.${name2} can only be used on a TransformStreamDefaultController`);
        }
        function streamBrandCheckException(name2) {
          return new TypeError(`TransformStream.prototype.${name2} can only be used on a TransformStream`);
        }
        exports2.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;
        exports2.CountQueuingStrategy = CountQueuingStrategy;
        exports2.ReadableByteStreamController = ReadableByteStreamController;
        exports2.ReadableStream = ReadableStream2;
        exports2.ReadableStreamBYOBReader = ReadableStreamBYOBReader;
        exports2.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;
        exports2.ReadableStreamDefaultController = ReadableStreamDefaultController;
        exports2.ReadableStreamDefaultReader = ReadableStreamDefaultReader;
        exports2.TransformStream = TransformStream;
        exports2.TransformStreamDefaultController = TransformStreamDefaultController;
        exports2.WritableStream = WritableStream;
        exports2.WritableStreamDefaultController = WritableStreamDefaultController;
        exports2.WritableStreamDefaultWriter = WritableStreamDefaultWriter;
        Object.defineProperty(exports2, "__esModule", { value: true });
      });
    })(ponyfill_es2018, ponyfill_es2018.exports);
    POOL_SIZE$1 = 65536;
    if (!globalThis.ReadableStream) {
      try {
        const process2 = require("process");
        const { emitWarning } = process2;
        try {
          process2.emitWarning = () => {
          };
          Object.assign(globalThis, require("stream/web"));
          process2.emitWarning = emitWarning;
        } catch (error2) {
          process2.emitWarning = emitWarning;
          throw error2;
        }
      } catch (error2) {
        Object.assign(globalThis, ponyfill_es2018.exports);
      }
    }
    try {
      const { Blob: Blob3 } = require("buffer");
      if (Blob3 && !Blob3.prototype.stream) {
        Blob3.prototype.stream = function name2(params) {
          let position = 0;
          const blob = this;
          return new ReadableStream({
            type: "bytes",
            async pull(ctrl) {
              const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE$1));
              const buffer = await chunk.arrayBuffer();
              position += buffer.byteLength;
              ctrl.enqueue(new Uint8Array(buffer));
              if (position === blob.size) {
                ctrl.close();
              }
            }
          });
        };
      }
    } catch (error2) {
    }
    POOL_SIZE = 65536;
    _Blob = (_a = class {
      constructor(blobParts = [], options = {}) {
        __privateAdd(this, _parts, []);
        __privateAdd(this, _type, "");
        __privateAdd(this, _size, 0);
        if (typeof blobParts !== "object" || blobParts === null) {
          throw new TypeError("Failed to construct 'Blob': The provided value cannot be converted to a sequence.");
        }
        if (typeof blobParts[Symbol.iterator] !== "function") {
          throw new TypeError("Failed to construct 'Blob': The object must have a callable @@iterator property.");
        }
        if (typeof options !== "object" && typeof options !== "function") {
          throw new TypeError("Failed to construct 'Blob': parameter 2 cannot convert to dictionary.");
        }
        if (options === null)
          options = {};
        const encoder = new TextEncoder();
        for (const element of blobParts) {
          let part;
          if (ArrayBuffer.isView(element)) {
            part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));
          } else if (element instanceof ArrayBuffer) {
            part = new Uint8Array(element.slice(0));
          } else if (element instanceof _a) {
            part = element;
          } else {
            part = encoder.encode(element);
          }
          __privateSet(this, _size, __privateGet(this, _size) + (ArrayBuffer.isView(part) ? part.byteLength : part.size));
          __privateGet(this, _parts).push(part);
        }
        const type = options.type === void 0 ? "" : String(options.type);
        __privateSet(this, _type, /^[\x20-\x7E]*$/.test(type) ? type : "");
      }
      get size() {
        return __privateGet(this, _size);
      }
      get type() {
        return __privateGet(this, _type);
      }
      async text() {
        const decoder = new TextDecoder();
        let str = "";
        for await (const part of toIterator(__privateGet(this, _parts), false)) {
          str += decoder.decode(part, { stream: true });
        }
        str += decoder.decode();
        return str;
      }
      async arrayBuffer() {
        const data2 = new Uint8Array(this.size);
        let offset = 0;
        for await (const chunk of toIterator(__privateGet(this, _parts), false)) {
          data2.set(chunk, offset);
          offset += chunk.length;
        }
        return data2.buffer;
      }
      stream() {
        const it = toIterator(__privateGet(this, _parts), true);
        return new globalThis.ReadableStream({
          type: "bytes",
          async pull(ctrl) {
            const chunk = await it.next();
            chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);
          },
          async cancel() {
            await it.return();
          }
        });
      }
      slice(start = 0, end = this.size, type = "") {
        const { size } = this;
        let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);
        let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);
        const span = Math.max(relativeEnd - relativeStart, 0);
        const parts = __privateGet(this, _parts);
        const blobParts = [];
        let added = 0;
        for (const part of parts) {
          if (added >= span) {
            break;
          }
          const size2 = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (relativeStart && size2 <= relativeStart) {
            relativeStart -= size2;
            relativeEnd -= size2;
          } else {
            let chunk;
            if (ArrayBuffer.isView(part)) {
              chunk = part.subarray(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.byteLength;
            } else {
              chunk = part.slice(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.size;
            }
            relativeEnd -= size2;
            blobParts.push(chunk);
            relativeStart = 0;
          }
        }
        const blob = new _a([], { type: String(type).toLowerCase() });
        __privateSet(blob, _size, span);
        __privateSet(blob, _parts, blobParts);
        return blob;
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
      static [Symbol.hasInstance](object) {
        return object && typeof object === "object" && typeof object.constructor === "function" && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);
      }
    }, _parts = new WeakMap(), _type = new WeakMap(), _size = new WeakMap(), _a);
    Object.defineProperties(_Blob.prototype, {
      size: { enumerable: true },
      type: { enumerable: true },
      slice: { enumerable: true }
    });
    Blob2 = _Blob;
    Blob$1 = Blob2;
    _File = (_a2 = class extends Blob$1 {
      constructor(fileBits, fileName, options = {}) {
        if (arguments.length < 2) {
          throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);
        }
        super(fileBits, options);
        __privateAdd(this, _lastModified, 0);
        __privateAdd(this, _name, "");
        if (options === null)
          options = {};
        const lastModified = options.lastModified === void 0 ? Date.now() : Number(options.lastModified);
        if (!Number.isNaN(lastModified)) {
          __privateSet(this, _lastModified, lastModified);
        }
        __privateSet(this, _name, String(fileName));
      }
      get name() {
        return __privateGet(this, _name);
      }
      get lastModified() {
        return __privateGet(this, _lastModified);
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
    }, _lastModified = new WeakMap(), _name = new WeakMap(), _a2);
    File = _File;
    ({ toStringTag: t, iterator: i, hasInstance: h } = Symbol);
    r = Math.random;
    m = "append,set,get,getAll,delete,keys,values,entries,forEach,constructor".split(",");
    f2 = (a, b, c) => (a += "", /^(Blob|File)$/.test(b && b[t]) ? [(c = c !== void 0 ? c + "" : b[t] == "File" ? b.name : "blob", a), b.name !== c || b[t] == "blob" ? new File([b], c, b) : b] : [a, b + ""]);
    e = (c, f3) => (f3 ? c : c.replace(/\r?\n|\r/g, "\r\n")).replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22");
    x = (n, a, e2) => {
      if (a.length < e2) {
        throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e2} arguments required, but only ${a.length} present.`);
      }
    };
    FormData = (_a3 = class {
      constructor(...a) {
        __privateAdd(this, _d, []);
        if (a.length)
          throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`);
      }
      get [t]() {
        return "FormData";
      }
      [i]() {
        return this.entries();
      }
      static [h](o2) {
        return o2 && typeof o2 === "object" && o2[t] === "FormData" && !m.some((m2) => typeof o2[m2] != "function");
      }
      append(...a) {
        x("append", arguments, 2);
        __privateGet(this, _d).push(f2(...a));
      }
      delete(a) {
        x("delete", arguments, 1);
        a += "";
        __privateSet(this, _d, __privateGet(this, _d).filter(([b]) => b !== a));
      }
      get(a) {
        x("get", arguments, 1);
        a += "";
        for (var b = __privateGet(this, _d), l = b.length, c = 0; c < l; c++)
          if (b[c][0] === a)
            return b[c][1];
        return null;
      }
      getAll(a, b) {
        x("getAll", arguments, 1);
        b = [];
        a += "";
        __privateGet(this, _d).forEach((c) => c[0] === a && b.push(c[1]));
        return b;
      }
      has(a) {
        x("has", arguments, 1);
        a += "";
        return __privateGet(this, _d).some((b) => b[0] === a);
      }
      forEach(a, b) {
        x("forEach", arguments, 1);
        for (var [c, d] of this)
          a.call(b, d, c, this);
      }
      set(...a) {
        x("set", arguments, 2);
        var b = [], c = true;
        a = f2(...a);
        __privateGet(this, _d).forEach((d) => {
          d[0] === a[0] ? c && (c = !b.push(a)) : b.push(d);
        });
        c && b.push(a);
        __privateSet(this, _d, b);
      }
      *entries() {
        yield* __privateGet(this, _d);
      }
      *keys() {
        for (var [a] of this)
          yield a;
      }
      *values() {
        for (var [, a] of this)
          yield a;
      }
    }, _d = new WeakMap(), _a3);
    FetchBaseError = class extends Error {
      constructor(message, type) {
        super(message);
        Error.captureStackTrace(this, this.constructor);
        this.type = type;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    };
    FetchError = class extends FetchBaseError {
      constructor(message, type, systemError) {
        super(message, type);
        if (systemError) {
          this.code = this.errno = systemError.code;
          this.erroredSysCall = systemError.syscall;
        }
      }
    };
    NAME = Symbol.toStringTag;
    isURLSearchParameters = (object) => {
      return typeof object === "object" && typeof object.append === "function" && typeof object.delete === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.has === "function" && typeof object.set === "function" && typeof object.sort === "function" && object[NAME] === "URLSearchParams";
    };
    isBlob = (object) => {
      return object && typeof object === "object" && typeof object.arrayBuffer === "function" && typeof object.type === "string" && typeof object.stream === "function" && typeof object.constructor === "function" && /^(Blob|File)$/.test(object[NAME]);
    };
    isAbortSignal = (object) => {
      return typeof object === "object" && (object[NAME] === "AbortSignal" || object[NAME] === "EventTarget");
    };
    INTERNALS$2 = Symbol("Body internals");
    Body = class {
      constructor(body, {
        size = 0
      } = {}) {
        let boundary = null;
        if (body === null) {
          body = null;
        } else if (isURLSearchParameters(body)) {
          body = Buffer.from(body.toString());
        } else if (isBlob(body))
          ;
        else if (Buffer.isBuffer(body))
          ;
        else if (import_node_util2.types.isAnyArrayBuffer(body)) {
          body = Buffer.from(body);
        } else if (ArrayBuffer.isView(body)) {
          body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
        } else if (body instanceof import_node_stream2.default)
          ;
        else if (body instanceof FormData) {
          body = formDataToBlob(body);
          boundary = body.type.split("=")[1];
        } else {
          body = Buffer.from(String(body));
        }
        let stream = body;
        if (Buffer.isBuffer(body)) {
          stream = import_node_stream2.default.Readable.from(body);
        } else if (isBlob(body)) {
          stream = import_node_stream2.default.Readable.from(body.stream());
        }
        this[INTERNALS$2] = {
          body,
          stream,
          boundary,
          disturbed: false,
          error: null
        };
        this.size = size;
        if (body instanceof import_node_stream2.default) {
          body.on("error", (error_) => {
            const error2 = error_ instanceof FetchBaseError ? error_ : new FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, "system", error_);
            this[INTERNALS$2].error = error2;
          });
        }
      }
      get body() {
        return this[INTERNALS$2].stream;
      }
      get bodyUsed() {
        return this[INTERNALS$2].disturbed;
      }
      async arrayBuffer() {
        const { buffer, byteOffset, byteLength } = await consumeBody(this);
        return buffer.slice(byteOffset, byteOffset + byteLength);
      }
      async formData() {
        const ct = this.headers.get("content-type");
        if (ct.startsWith("application/x-www-form-urlencoded")) {
          const formData = new FormData();
          const parameters = new URLSearchParams(await this.text());
          for (const [name2, value] of parameters) {
            formData.append(name2, value);
          }
          return formData;
        }
        const { toFormData: toFormData2 } = await Promise.resolve().then(() => (init_multipart_parser(), multipart_parser_exports));
        return toFormData2(this.body, ct);
      }
      async blob() {
        const ct = this.headers && this.headers.get("content-type") || this[INTERNALS$2].body && this[INTERNALS$2].body.type || "";
        const buf = await this.buffer();
        return new Blob$1([buf], {
          type: ct
        });
      }
      async json() {
        const buffer = await consumeBody(this);
        return JSON.parse(buffer.toString());
      }
      async text() {
        const buffer = await consumeBody(this);
        return buffer.toString();
      }
      buffer() {
        return consumeBody(this);
      }
    };
    Body.prototype.buffer = (0, import_node_util2.deprecate)(Body.prototype.buffer, "Please use 'response.arrayBuffer()' instead of 'response.buffer()'", "node-fetch#buffer");
    Object.defineProperties(Body.prototype, {
      body: { enumerable: true },
      bodyUsed: { enumerable: true },
      arrayBuffer: { enumerable: true },
      blob: { enumerable: true },
      json: { enumerable: true },
      text: { enumerable: true }
    });
    clone = (instance, highWaterMark) => {
      let p1;
      let p2;
      let { body } = instance[INTERNALS$2];
      if (instance.bodyUsed) {
        throw new Error("cannot clone body after it is used");
      }
      if (body instanceof import_node_stream2.default && typeof body.getBoundary !== "function") {
        p1 = new import_node_stream2.PassThrough({ highWaterMark });
        p2 = new import_node_stream2.PassThrough({ highWaterMark });
        body.pipe(p1);
        body.pipe(p2);
        instance[INTERNALS$2].stream = p1;
        body = p2;
      }
      return body;
    };
    getNonSpecFormDataBoundary = (0, import_node_util2.deprecate)((body) => body.getBoundary(), "form-data doesn't follow the spec and requires special treatment. Use alternative package", "https://github.com/node-fetch/node-fetch/issues/1167");
    extractContentType = (body, request) => {
      if (body === null) {
        return null;
      }
      if (typeof body === "string") {
        return "text/plain;charset=UTF-8";
      }
      if (isURLSearchParameters(body)) {
        return "application/x-www-form-urlencoded;charset=UTF-8";
      }
      if (isBlob(body)) {
        return body.type || null;
      }
      if (Buffer.isBuffer(body) || import_node_util2.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {
        return null;
      }
      if (body instanceof FormData) {
        return `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;
      }
      if (body && typeof body.getBoundary === "function") {
        return `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;
      }
      if (body instanceof import_node_stream2.default) {
        return null;
      }
      return "text/plain;charset=UTF-8";
    };
    getTotalBytes = (request) => {
      const { body } = request[INTERNALS$2];
      if (body === null) {
        return 0;
      }
      if (isBlob(body)) {
        return body.size;
      }
      if (Buffer.isBuffer(body)) {
        return body.length;
      }
      if (body && typeof body.getLengthSync === "function") {
        return body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;
      }
      return null;
    };
    writeToStream = (dest, { body }) => {
      if (body === null) {
        dest.end();
      } else {
        body.pipe(dest);
      }
    };
    validateHeaderName = typeof import_node_http2.default.validateHeaderName === "function" ? import_node_http2.default.validateHeaderName : (name2) => {
      if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name2)) {
        const error2 = new TypeError(`Header name must be a valid HTTP token [${name2}]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_HTTP_TOKEN" });
        throw error2;
      }
    };
    validateHeaderValue = typeof import_node_http2.default.validateHeaderValue === "function" ? import_node_http2.default.validateHeaderValue : (name2, value) => {
      if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
        const error2 = new TypeError(`Invalid character in header content ["${name2}"]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_CHAR" });
        throw error2;
      }
    };
    Headers2 = class extends URLSearchParams {
      constructor(init) {
        let result = [];
        if (init instanceof Headers2) {
          const raw = init.raw();
          for (const [name2, values] of Object.entries(raw)) {
            result.push(...values.map((value) => [name2, value]));
          }
        } else if (init == null)
          ;
        else if (typeof init === "object" && !import_node_util2.types.isBoxedPrimitive(init)) {
          const method = init[Symbol.iterator];
          if (method == null) {
            result.push(...Object.entries(init));
          } else {
            if (typeof method !== "function") {
              throw new TypeError("Header pairs must be iterable");
            }
            result = [...init].map((pair) => {
              if (typeof pair !== "object" || import_node_util2.types.isBoxedPrimitive(pair)) {
                throw new TypeError("Each header pair must be an iterable object");
              }
              return [...pair];
            }).map((pair) => {
              if (pair.length !== 2) {
                throw new TypeError("Each header pair must be a name/value tuple");
              }
              return [...pair];
            });
          }
        } else {
          throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        }
        result = result.length > 0 ? result.map(([name2, value]) => {
          validateHeaderName(name2);
          validateHeaderValue(name2, String(value));
          return [String(name2).toLowerCase(), String(value)];
        }) : void 0;
        super(result);
        return new Proxy(this, {
          get(target, p, receiver) {
            switch (p) {
              case "append":
              case "set":
                return (name2, value) => {
                  validateHeaderName(name2);
                  validateHeaderValue(name2, String(value));
                  return URLSearchParams.prototype[p].call(target, String(name2).toLowerCase(), String(value));
                };
              case "delete":
              case "has":
              case "getAll":
                return (name2) => {
                  validateHeaderName(name2);
                  return URLSearchParams.prototype[p].call(target, String(name2).toLowerCase());
                };
              case "keys":
                return () => {
                  target.sort();
                  return new Set(URLSearchParams.prototype.keys.call(target)).keys();
                };
              default:
                return Reflect.get(target, p, receiver);
            }
          }
        });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      get(name2) {
        const values = this.getAll(name2);
        if (values.length === 0) {
          return null;
        }
        let value = values.join(", ");
        if (/^content-encoding$/i.test(name2)) {
          value = value.toLowerCase();
        }
        return value;
      }
      forEach(callback, thisArg = void 0) {
        for (const name2 of this.keys()) {
          Reflect.apply(callback, thisArg, [this.get(name2), name2, this]);
        }
      }
      *values() {
        for (const name2 of this.keys()) {
          yield this.get(name2);
        }
      }
      *entries() {
        for (const name2 of this.keys()) {
          yield [name2, this.get(name2)];
        }
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      raw() {
        return [...this.keys()].reduce((result, key) => {
          result[key] = this.getAll(key);
          return result;
        }, {});
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce((result, key) => {
          const values = this.getAll(key);
          if (key === "host") {
            result[key] = values[0];
          } else {
            result[key] = values.length > 1 ? values : values[0];
          }
          return result;
        }, {});
      }
    };
    Object.defineProperties(Headers2.prototype, ["get", "entries", "forEach", "values"].reduce((result, property) => {
      result[property] = { enumerable: true };
      return result;
    }, {}));
    redirectStatus = new Set([301, 302, 303, 307, 308]);
    isRedirect = (code) => {
      return redirectStatus.has(code);
    };
    INTERNALS$1 = Symbol("Response internals");
    Response2 = class extends Body {
      constructor(body = null, options = {}) {
        super(body, options);
        const status = options.status != null ? options.status : 200;
        const headers = new Headers2(options.headers);
        if (body !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(body, this);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        this[INTERNALS$1] = {
          type: "default",
          url: options.url,
          status,
          statusText: options.statusText || "",
          headers,
          counter: options.counter,
          highWaterMark: options.highWaterMark
        };
      }
      get type() {
        return this[INTERNALS$1].type;
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      get highWaterMark() {
        return this[INTERNALS$1].highWaterMark;
      }
      clone() {
        return new Response2(clone(this, this.highWaterMark), {
          type: this.type,
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected,
          size: this.size,
          highWaterMark: this.highWaterMark
        });
      }
      static redirect(url, status = 302) {
        if (!isRedirect(status)) {
          throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        }
        return new Response2(null, {
          headers: {
            location: new URL(url).toString()
          },
          status
        });
      }
      static error() {
        const response = new Response2(null, { status: 0, statusText: "" });
        response[INTERNALS$1].type = "error";
        return response;
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(Response2.prototype, {
      type: { enumerable: true },
      url: { enumerable: true },
      status: { enumerable: true },
      ok: { enumerable: true },
      redirected: { enumerable: true },
      statusText: { enumerable: true },
      headers: { enumerable: true },
      clone: { enumerable: true }
    });
    getSearch = (parsedURL) => {
      if (parsedURL.search) {
        return parsedURL.search;
      }
      const lastOffset = parsedURL.href.length - 1;
      const hash2 = parsedURL.hash || (parsedURL.href[lastOffset] === "#" ? "#" : "");
      return parsedURL.href[lastOffset - hash2.length] === "?" ? "?" : "";
    };
    ReferrerPolicy = new Set([
      "",
      "no-referrer",
      "no-referrer-when-downgrade",
      "same-origin",
      "origin",
      "strict-origin",
      "origin-when-cross-origin",
      "strict-origin-when-cross-origin",
      "unsafe-url"
    ]);
    DEFAULT_REFERRER_POLICY = "strict-origin-when-cross-origin";
    INTERNALS = Symbol("Request internals");
    isRequest = (object) => {
      return typeof object === "object" && typeof object[INTERNALS] === "object";
    };
    Request2 = class extends Body {
      constructor(input, init = {}) {
        let parsedURL;
        if (isRequest(input)) {
          parsedURL = new URL(input.url);
        } else {
          parsedURL = new URL(input);
          input = {};
        }
        if (parsedURL.username !== "" || parsedURL.password !== "") {
          throw new TypeError(`${parsedURL} is an url with embedded credentails.`);
        }
        let method = init.method || input.method || "GET";
        method = method.toUpperCase();
        if ((init.body != null || isRequest(input)) && input.body !== null && (method === "GET" || method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body");
        }
        const inputBody = init.body ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;
        super(inputBody, {
          size: init.size || input.size || 0
        });
        const headers = new Headers2(init.headers || input.headers || {});
        if (inputBody !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(inputBody, this);
          if (contentType) {
            headers.set("Content-Type", contentType);
          }
        }
        let signal = isRequest(input) ? input.signal : null;
        if ("signal" in init) {
          signal = init.signal;
        }
        if (signal != null && !isAbortSignal(signal)) {
          throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget");
        }
        let referrer = init.referrer == null ? input.referrer : init.referrer;
        if (referrer === "") {
          referrer = "no-referrer";
        } else if (referrer) {
          const parsedReferrer = new URL(referrer);
          referrer = /^about:(\/\/)?client$/.test(parsedReferrer) ? "client" : parsedReferrer;
        } else {
          referrer = void 0;
        }
        this[INTERNALS] = {
          method,
          redirect: init.redirect || input.redirect || "follow",
          headers,
          parsedURL,
          signal,
          referrer
        };
        this.follow = init.follow === void 0 ? input.follow === void 0 ? 20 : input.follow : init.follow;
        this.compress = init.compress === void 0 ? input.compress === void 0 ? true : input.compress : init.compress;
        this.counter = init.counter || input.counter || 0;
        this.agent = init.agent || input.agent;
        this.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;
        this.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;
        this.referrerPolicy = init.referrerPolicy || input.referrerPolicy || "";
      }
      get method() {
        return this[INTERNALS].method;
      }
      get url() {
        return (0, import_node_url2.format)(this[INTERNALS].parsedURL);
      }
      get headers() {
        return this[INTERNALS].headers;
      }
      get redirect() {
        return this[INTERNALS].redirect;
      }
      get signal() {
        return this[INTERNALS].signal;
      }
      get referrer() {
        if (this[INTERNALS].referrer === "no-referrer") {
          return "";
        }
        if (this[INTERNALS].referrer === "client") {
          return "about:client";
        }
        if (this[INTERNALS].referrer) {
          return this[INTERNALS].referrer.toString();
        }
        return void 0;
      }
      get referrerPolicy() {
        return this[INTERNALS].referrerPolicy;
      }
      set referrerPolicy(referrerPolicy) {
        this[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);
      }
      clone() {
        return new Request2(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Request2.prototype, {
      method: { enumerable: true },
      url: { enumerable: true },
      headers: { enumerable: true },
      redirect: { enumerable: true },
      clone: { enumerable: true },
      signal: { enumerable: true },
      referrer: { enumerable: true },
      referrerPolicy: { enumerable: true }
    });
    getNodeRequestOptions = (request) => {
      const { parsedURL } = request[INTERNALS];
      const headers = new Headers2(request[INTERNALS].headers);
      if (!headers.has("Accept")) {
        headers.set("Accept", "*/*");
      }
      let contentLengthValue = null;
      if (request.body === null && /^(post|put)$/i.test(request.method)) {
        contentLengthValue = "0";
      }
      if (request.body !== null) {
        const totalBytes = getTotalBytes(request);
        if (typeof totalBytes === "number" && !Number.isNaN(totalBytes)) {
          contentLengthValue = String(totalBytes);
        }
      }
      if (contentLengthValue) {
        headers.set("Content-Length", contentLengthValue);
      }
      if (request.referrerPolicy === "") {
        request.referrerPolicy = DEFAULT_REFERRER_POLICY;
      }
      if (request.referrer && request.referrer !== "no-referrer") {
        request[INTERNALS].referrer = determineRequestsReferrer(request);
      } else {
        request[INTERNALS].referrer = "no-referrer";
      }
      if (request[INTERNALS].referrer instanceof URL) {
        headers.set("Referer", request.referrer);
      }
      if (!headers.has("User-Agent")) {
        headers.set("User-Agent", "node-fetch");
      }
      if (request.compress && !headers.has("Accept-Encoding")) {
        headers.set("Accept-Encoding", "gzip,deflate,br");
      }
      let { agent } = request;
      if (typeof agent === "function") {
        agent = agent(parsedURL);
      }
      if (!headers.has("Connection") && !agent) {
        headers.set("Connection", "close");
      }
      const search = getSearch(parsedURL);
      const options = {
        path: parsedURL.pathname + search,
        method: request.method,
        headers: headers[Symbol.for("nodejs.util.inspect.custom")](),
        insecureHTTPParser: request.insecureHTTPParser,
        agent
      };
      return {
        parsedURL,
        options
      };
    };
    AbortError = class extends FetchBaseError {
      constructor(message, type = "aborted") {
        super(message, type);
      }
    };
    supportedSchemas = new Set(["data:", "http:", "https:"]);
  }
});

// .svelte-kit/output/server/chunks/index-0300a598.js
function noop2() {
}
function assign(tar, src) {
  for (const k in src)
    tar[k] = src[k];
  return tar;
}
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function subscribe(store, ...callbacks2) {
  if (store == null) {
    return noop2;
  }
  const unsub = store.subscribe(...callbacks2);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function null_to_empty(value) {
  return value == null ? "" : value;
}
function run_tasks(now2) {
  tasks.forEach((task) => {
    if (!task.c(now2)) {
      tasks.delete(task);
      task.f();
    }
  });
  if (tasks.size !== 0)
    raf(run_tasks);
}
function loop2(callback) {
  let task;
  if (tasks.size === 0)
    raf(run_tasks);
  return {
    promise: new Promise((fulfill) => {
      tasks.add(task = { c: callback, f: fulfill });
    }),
    abort() {
      tasks.delete(task);
    }
  };
}
function custom_event(type, detail, bubbles = false) {
  const e2 = document.createEvent("CustomEvent");
  e2.initCustomEvent(type, bubbles, false, detail);
  return e2;
}
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function onDestroy(fn) {
  get_current_component().$$.on_destroy.push(fn);
}
function createEventDispatcher() {
  const component = get_current_component();
  return (type, detail) => {
    const callbacks2 = component.$$.callbacks[type];
    if (callbacks2) {
      const event2 = custom_event(type, detail);
      callbacks2.slice().forEach((fn) => {
        fn.call(component, event2);
      });
    }
  };
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
function getContext(key) {
  return get_current_component().$$.context.get(key);
}
function spread(args, attrs_to_add) {
  const attributes = Object.assign({}, ...args);
  if (attrs_to_add) {
    const classes_to_add = attrs_to_add.classes;
    const styles_to_add = attrs_to_add.styles;
    if (classes_to_add) {
      if (attributes.class == null) {
        attributes.class = classes_to_add;
      } else {
        attributes.class += " " + classes_to_add;
      }
    }
    if (styles_to_add) {
      if (attributes.style == null) {
        attributes.style = style_object_to_string(styles_to_add);
      } else {
        attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));
      }
    }
  }
  let str = "";
  Object.keys(attributes).forEach((name2) => {
    if (invalid_attribute_name_character.test(name2))
      return;
    const value = attributes[name2];
    if (value === true)
      str += " " + name2;
    else if (boolean_attributes.has(name2.toLowerCase())) {
      if (value)
        str += " " + name2;
    } else if (value != null) {
      str += ` ${name2}="${value}"`;
    }
  });
  return str;
}
function merge_ssr_styles(style_attribute, style_directive) {
  const style_object = {};
  for (const individual_style of style_attribute.split(";")) {
    const colon_index = individual_style.indexOf(":");
    const name2 = individual_style.slice(0, colon_index).trim();
    const value = individual_style.slice(colon_index + 1).trim();
    if (!name2)
      continue;
    style_object[name2] = value;
  }
  for (const name2 in style_directive) {
    const value = style_directive[name2];
    if (value) {
      style_object[name2] = value;
    } else {
      delete style_object[name2];
    }
  }
  return style_object;
}
function escape2(html) {
  return String(html).replace(/["'&<>]/g, (match) => escaped[match]);
}
function escape_attribute_value(value) {
  return typeof value === "string" ? escape2(value) : value;
}
function escape_object(obj) {
  const result = {};
  for (const key in obj) {
    result[key] = escape_attribute_value(obj[key]);
  }
  return result;
}
function each(items, fn) {
  let str = "";
  for (let i2 = 0; i2 < items.length; i2 += 1) {
    str += fn(items[i2], i2);
  }
  return str;
}
function validate_component(component, name2) {
  if (!component || !component.$$render) {
    if (name2 === "svelte:component")
      name2 += " this={...}";
    throw new Error(`<${name2}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
  }
  return component;
}
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(context || (parent_component ? parent_component.$$.context : [])),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css57) => css57.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name2, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  return ` ${name2}${value === true && boolean_attributes.has(name2) ? "" : `=${typeof value === "string" ? JSON.stringify(escape2(value)) : `"${value}"`}`}`;
}
function style_object_to_string(style_object) {
  return Object.keys(style_object).filter((key) => style_object[key]).map((key) => `${key}: ${style_object[key]};`).join(" ");
}
var identity, is_client, now, raf, tasks, current_component, globals, boolean_attributes, invalid_attribute_name_character, escaped, missing_component, on_destroy;
var init_index_0300a598 = __esm({
  ".svelte-kit/output/server/chunks/index-0300a598.js"() {
    identity = (x2) => x2;
    is_client = typeof window !== "undefined";
    now = is_client ? () => window.performance.now() : () => Date.now();
    raf = is_client ? (cb) => requestAnimationFrame(cb) : noop2;
    tasks = new Set();
    Promise.resolve();
    globals = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : global;
    boolean_attributes = new Set([
      "allowfullscreen",
      "allowpaymentrequest",
      "async",
      "autofocus",
      "autoplay",
      "checked",
      "controls",
      "default",
      "defer",
      "disabled",
      "formnovalidate",
      "hidden",
      "ismap",
      "loop",
      "multiple",
      "muted",
      "nomodule",
      "novalidate",
      "open",
      "playsinline",
      "readonly",
      "required",
      "reversed",
      "selected"
    ]);
    invalid_attribute_name_character = /[\s'">/=\u{FDD0}-\u{FDEF}\u{FFFE}\u{FFFF}\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\u{4FFFE}\u{4FFFF}\u{5FFFE}\u{5FFFF}\u{6FFFE}\u{6FFFF}\u{7FFFE}\u{7FFFF}\u{8FFFE}\u{8FFFF}\u{9FFFE}\u{9FFFF}\u{AFFFE}\u{AFFFF}\u{BFFFE}\u{BFFFF}\u{CFFFE}\u{CFFFF}\u{DFFFE}\u{DFFFF}\u{EFFFE}\u{EFFFF}\u{FFFFE}\u{FFFFF}\u{10FFFE}\u{10FFFF}]/u;
    escaped = {
      '"': "&quot;",
      "'": "&#39;",
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;"
    };
    missing_component = {
      $$render: () => ""
    };
  }
});

// .svelte-kit/output/server/chunks/functions-9959eb37.js
function fullIcon(data2) {
  return __spreadValues(__spreadValues({}, iconDefaults), data2);
}
function mergeIconData(icon, alias) {
  const result = __spreadValues({}, icon);
  for (const key in iconDefaults) {
    const prop = key;
    if (alias[prop] !== void 0) {
      const value = alias[prop];
      if (result[prop] === void 0) {
        result[prop] = value;
        continue;
      }
      switch (prop) {
        case "rotate":
          result[prop] = (result[prop] + value) % 4;
          break;
        case "hFlip":
        case "vFlip":
          result[prop] = value !== result[prop];
          break;
        default:
          result[prop] = value;
      }
    }
  }
  return result;
}
function getIconData$1(data2, name2, full = false) {
  function getIcon(name22, iteration) {
    var _a4, _b, _c, _d2;
    if (data2.icons[name22] !== void 0) {
      return Object.assign({}, data2.icons[name22]);
    }
    if (iteration > 5) {
      return null;
    }
    if (((_a4 = data2.aliases) == null ? void 0 : _a4[name22]) !== void 0) {
      const item = (_b = data2.aliases) == null ? void 0 : _b[name22];
      const result2 = getIcon(item.parent, iteration + 1);
      if (result2) {
        return mergeIconData(result2, item);
      }
      return result2;
    }
    if (iteration === 0 && ((_c = data2.chars) == null ? void 0 : _c[name22]) !== void 0) {
      return getIcon((_d2 = data2.chars) == null ? void 0 : _d2[name22], iteration + 1);
    }
    return null;
  }
  const result = getIcon(name2, 0);
  if (result) {
    for (const key in iconDefaults) {
      if (result[key] === void 0 && data2[key] !== void 0) {
        result[key] = data2[key];
      }
    }
  }
  return result && full ? fullIcon(result) : result;
}
function validateIconProps(item, fix) {
  for (const key in item) {
    const attr = key;
    const value = item[attr];
    const type = typeof value;
    if (type === "undefined") {
      delete item[attr];
      continue;
    }
    switch (key) {
      case "body":
      case "parent":
        if (type !== "string") {
          return key;
        }
        break;
      case "hFlip":
      case "vFlip":
      case "hidden":
        if (type !== "boolean") {
          if (fix) {
            delete item[attr];
          } else {
            return key;
          }
        }
        break;
      case "width":
      case "height":
      case "left":
      case "top":
      case "rotate":
      case "inlineHeight":
      case "inlineTop":
      case "verticalAlign":
        if (type !== "number") {
          if (fix) {
            delete item[attr];
          } else {
            return key;
          }
        }
        break;
      default:
        if (type === "object") {
          if (fix) {
            delete item[attr];
          } else {
            return key;
          }
        }
    }
  }
  return null;
}
function validateIconSet(obj, options) {
  const fix = !!(options == null ? void 0 : options.fix);
  if (typeof obj !== "object" || obj === null || typeof obj.icons !== "object" || !obj.icons) {
    throw new Error("Bad icon set");
  }
  const data2 = obj;
  if (typeof (options == null ? void 0 : options.prefix) === "string") {
    data2.prefix = options.prefix;
  } else if (typeof data2.prefix !== "string" || !data2.prefix.match(matchName)) {
    throw new Error("Invalid prefix");
  }
  if (typeof (options == null ? void 0 : options.provider) === "string") {
    data2.provider = options.provider;
  } else if (data2.provider !== void 0) {
    const value = data2.provider;
    if (typeof value !== "string" || value !== "" && !value.match(matchName)) {
      if (fix) {
        delete data2.provider;
      } else {
        throw new Error("Invalid provider");
      }
    }
  }
  const icons = data2.icons;
  Object.keys(icons).forEach((name2) => {
    if (!name2.match(matchName)) {
      if (fix) {
        delete icons[name2];
        return;
      }
      throw new Error(`Invalid icon name: "${name2}"`);
    }
    const item = icons[name2];
    if (typeof item !== "object" || item === null || typeof item.body !== "string") {
      if (fix) {
        delete icons[name2];
        return;
      }
      throw new Error(`Invalid icon: "${name2}"`);
    }
    const key = typeof item.parent === "string" ? "parent" : validateIconProps(item, fix);
    if (key !== null) {
      if (fix) {
        delete icons[name2];
        return;
      }
      throw new Error(`Invalid property "${key}" in icon "${name2}"`);
    }
  });
  if (!Object.keys(data2.icons).length) {
    throw new Error("Icon set is empty");
  }
  if (data2.aliases !== void 0) {
    if (typeof data2.aliases !== "object" || data2.aliases === null) {
      if (fix) {
        delete data2.aliases;
      } else {
        throw new Error("Invalid aliases list");
      }
    }
  }
  if (typeof data2.aliases === "object") {
    let validateAlias = function(name2, iteration) {
      if (validatedAliases.has(name2)) {
        return !failedAliases.has(name2);
      }
      const item = aliases[name2];
      if (iteration > 5 || typeof item !== "object" || item === null || typeof item.parent !== "string" || !name2.match(matchName)) {
        if (fix) {
          delete aliases[name2];
          failedAliases.add(name2);
          return false;
        }
        throw new Error(`Invalid icon alias: "${name2}"`);
      }
      const parent = item.parent;
      if (data2.icons[parent] === void 0) {
        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {
          if (fix) {
            delete aliases[name2];
            failedAliases.add(name2);
            return false;
          }
          throw new Error(`Missing parent icon for alias "${name2}`);
        }
      }
      if (fix && item.body !== void 0) {
        delete item.body;
      }
      const key = item.body !== void 0 ? "body" : validateIconProps(item, fix);
      if (key !== null) {
        if (fix) {
          delete aliases[name2];
          failedAliases.add(name2);
          return false;
        }
        throw new Error(`Invalid property "${key}" in alias "${name2}"`);
      }
      validatedAliases.add(name2);
      return true;
    };
    const aliases = data2.aliases;
    const validatedAliases = new Set();
    const failedAliases = new Set();
    Object.keys(aliases).forEach((name2) => {
      validateAlias(name2, 0);
    });
    if (fix && !Object.keys(data2.aliases).length) {
      delete data2.aliases;
    }
  }
  Object.keys(iconDefaults).forEach((prop) => {
    const expectedType = typeof iconDefaults[prop];
    const actualType = typeof data2[prop];
    if (actualType !== "undefined" && actualType !== expectedType) {
      throw new Error(`Invalid value type for "${prop}"`);
    }
  });
  if (data2.chars !== void 0) {
    if (typeof data2.chars !== "object" || data2.chars === null) {
      if (fix) {
        delete data2.chars;
      } else {
        throw new Error("Invalid characters map");
      }
    }
  }
  if (typeof data2.chars === "object") {
    const chars2 = data2.chars;
    Object.keys(chars2).forEach((char) => {
      var _a4;
      if (!char.match(matchChar) || typeof chars2[char] !== "string") {
        if (fix) {
          delete chars2[char];
          return;
        }
        throw new Error(`Invalid character "${char}"`);
      }
      const target = chars2[char];
      if (data2.icons[target] === void 0 && ((_a4 = data2.aliases) == null ? void 0 : _a4[target]) === void 0) {
        if (fix) {
          delete chars2[char];
          return;
        }
        throw new Error(`Character "${char}" points to missing icon "${target}"`);
      }
    });
    if (fix && !Object.keys(data2.chars).length) {
      delete data2.chars;
    }
  }
  return data2;
}
function isVariation(item) {
  for (const key in iconDefaults) {
    if (item[key] !== void 0) {
      return true;
    }
  }
  return false;
}
function parseIconSet(data2, callback, options) {
  options = options || {};
  const names = [];
  if (typeof data2 !== "object" || typeof data2.icons !== "object") {
    return names;
  }
  const validate = options.validate;
  if (validate !== false) {
    try {
      validateIconSet(data2, typeof validate === "object" ? validate : { fix: true });
    } catch (err) {
      return names;
    }
  }
  if (data2.not_found instanceof Array) {
    data2.not_found.forEach((name2) => {
      callback(name2, null);
      names.push(name2);
    });
  }
  const icons = data2.icons;
  Object.keys(icons).forEach((name2) => {
    const iconData = getIconData$1(data2, name2, true);
    if (iconData) {
      callback(name2, iconData);
      names.push(name2);
    }
  });
  const parseAliases = options.aliases || "all";
  if (parseAliases !== "none" && typeof data2.aliases === "object") {
    const aliases = data2.aliases;
    Object.keys(aliases).forEach((name2) => {
      if (parseAliases === "variations" && isVariation(aliases[name2])) {
        return;
      }
      const iconData = getIconData$1(data2, name2, true);
      if (iconData) {
        callback(name2, iconData);
        names.push(name2);
      }
    });
  }
  return names;
}
function newStorage(provider, prefix) {
  return {
    provider,
    prefix,
    icons: Object.create(null),
    missing: Object.create(null)
  };
}
function getStorage(provider, prefix) {
  if (storage$1[provider] === void 0) {
    storage$1[provider] = Object.create(null);
  }
  const providerStorage = storage$1[provider];
  if (providerStorage[prefix] === void 0) {
    providerStorage[prefix] = newStorage(provider, prefix);
  }
  return providerStorage[prefix];
}
function addIconSet(storage2, data2) {
  const t2 = Date.now();
  return parseIconSet(data2, (name2, icon) => {
    if (icon) {
      storage2.icons[name2] = icon;
    } else {
      storage2.missing[name2] = t2;
    }
  });
}
function addIconToStorage(storage2, name2, icon) {
  try {
    if (typeof icon.body === "string") {
      storage2.icons[name2] = Object.freeze(fullIcon(icon));
      return true;
    }
  } catch (err) {
  }
  return false;
}
function getIconFromStorage(storage2, name2) {
  const value = storage2.icons[name2];
  return value === void 0 ? null : value;
}
function allowSimpleNames(allow) {
  if (typeof allow === "boolean") {
    simpleNames = allow;
  }
  return simpleNames;
}
function getIconData(name2) {
  const icon = typeof name2 === "string" ? stringToIcon(name2, true, simpleNames) : name2;
  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;
}
function addIcon(name2, data2) {
  const icon = stringToIcon(name2, true, simpleNames);
  if (!icon) {
    return false;
  }
  const storage2 = getStorage(icon.provider, icon.prefix);
  return addIconToStorage(storage2, icon.name, data2);
}
function addCollection(data2, provider) {
  if (typeof data2 !== "object") {
    return false;
  }
  if (typeof provider !== "string") {
    provider = typeof data2.provider === "string" ? data2.provider : "";
  }
  if (simpleNames && provider === "" && (typeof data2.prefix !== "string" || data2.prefix === "")) {
    let added = false;
    parseIconSet(data2, (name2, icon) => {
      if (icon && addIcon(name2, icon)) {
        added = true;
      }
    }, {
      validate: {
        fix: true,
        prefix: ""
      }
    });
    return added;
  }
  if (typeof data2.prefix !== "string" || !validateIcon({
    provider,
    prefix: data2.prefix,
    name: "a"
  })) {
    return false;
  }
  const storage2 = getStorage(provider, data2.prefix);
  return !!addIconSet(storage2, data2);
}
function mergeCustomisations(defaults2, item) {
  const result = {};
  for (const key in defaults2) {
    const attr = key;
    result[attr] = defaults2[attr];
    if (item[attr] === void 0) {
      continue;
    }
    const value = item[attr];
    switch (attr) {
      case "inline":
      case "slice":
        if (typeof value === "boolean") {
          result[attr] = value;
        }
        break;
      case "hFlip":
      case "vFlip":
        if (value === true) {
          result[attr] = !result[attr];
        }
        break;
      case "hAlign":
      case "vAlign":
        if (typeof value === "string" && value !== "") {
          result[attr] = value;
        }
        break;
      case "width":
      case "height":
        if (typeof value === "string" && value !== "" || typeof value === "number" && value || value === null) {
          result[attr] = value;
        }
        break;
      case "rotate":
        if (typeof value === "number") {
          result[attr] += value;
        }
        break;
    }
  }
  return result;
}
function calculateSize(size, ratio, precision) {
  if (ratio === 1) {
    return size;
  }
  precision = precision === void 0 ? 100 : precision;
  if (typeof size === "number") {
    return Math.ceil(size * ratio * precision) / precision;
  }
  if (typeof size !== "string") {
    return size;
  }
  const oldParts = size.split(unitsSplit);
  if (oldParts === null || !oldParts.length) {
    return size;
  }
  const newParts = [];
  let code = oldParts.shift();
  let isNumber = unitsTest.test(code);
  while (true) {
    if (isNumber) {
      const num = parseFloat(code);
      if (isNaN(num)) {
        newParts.push(code);
      } else {
        newParts.push(Math.ceil(num * ratio * precision) / precision);
      }
    } else {
      newParts.push(code);
    }
    code = oldParts.shift();
    if (code === void 0) {
      return newParts.join("");
    }
    isNumber = !isNumber;
  }
}
function preserveAspectRatio(props) {
  let result = "";
  switch (props.hAlign) {
    case "left":
      result += "xMin";
      break;
    case "right":
      result += "xMax";
      break;
    default:
      result += "xMid";
  }
  switch (props.vAlign) {
    case "top":
      result += "YMin";
      break;
    case "bottom":
      result += "YMax";
      break;
    default:
      result += "YMid";
  }
  result += props.slice ? " slice" : " meet";
  return result;
}
function iconToSVG(icon, customisations) {
  const box = {
    left: icon.left,
    top: icon.top,
    width: icon.width,
    height: icon.height
  };
  let body = icon.body;
  [icon, customisations].forEach((props) => {
    const transformations = [];
    const hFlip = props.hFlip;
    const vFlip = props.vFlip;
    let rotation = props.rotate;
    if (hFlip) {
      if (vFlip) {
        rotation += 2;
      } else {
        transformations.push("translate(" + (box.width + box.left) + " " + (0 - box.top) + ")");
        transformations.push("scale(-1 1)");
        box.top = box.left = 0;
      }
    } else if (vFlip) {
      transformations.push("translate(" + (0 - box.left) + " " + (box.height + box.top) + ")");
      transformations.push("scale(1 -1)");
      box.top = box.left = 0;
    }
    let tempValue;
    if (rotation < 0) {
      rotation -= Math.floor(rotation / 4) * 4;
    }
    rotation = rotation % 4;
    switch (rotation) {
      case 1:
        tempValue = box.height / 2 + box.top;
        transformations.unshift("rotate(90 " + tempValue + " " + tempValue + ")");
        break;
      case 2:
        transformations.unshift("rotate(180 " + (box.width / 2 + box.left) + " " + (box.height / 2 + box.top) + ")");
        break;
      case 3:
        tempValue = box.width / 2 + box.left;
        transformations.unshift("rotate(-90 " + tempValue + " " + tempValue + ")");
        break;
    }
    if (rotation % 2 === 1) {
      if (box.left !== 0 || box.top !== 0) {
        tempValue = box.left;
        box.left = box.top;
        box.top = tempValue;
      }
      if (box.width !== box.height) {
        tempValue = box.width;
        box.width = box.height;
        box.height = tempValue;
      }
    }
    if (transformations.length) {
      body = '<g transform="' + transformations.join(" ") + '">' + body + "</g>";
    }
  });
  let width3, height3;
  if (customisations.width === null && customisations.height === null) {
    height3 = "1em";
    width3 = calculateSize(height3, box.width / box.height);
  } else if (customisations.width !== null && customisations.height !== null) {
    width3 = customisations.width;
    height3 = customisations.height;
  } else if (customisations.height !== null) {
    height3 = customisations.height;
    width3 = calculateSize(height3, box.width / box.height);
  } else {
    width3 = customisations.width;
    height3 = calculateSize(width3, box.height / box.width);
  }
  if (width3 === "auto") {
    width3 = box.width;
  }
  if (height3 === "auto") {
    height3 = box.height;
  }
  width3 = typeof width3 === "string" ? width3 : width3 + "";
  height3 = typeof height3 === "string" ? height3 : height3 + "";
  const result = {
    attributes: {
      width: width3,
      height: height3,
      preserveAspectRatio: preserveAspectRatio(customisations),
      viewBox: box.left + " " + box.top + " " + box.width + " " + box.height
    },
    body
  };
  if (customisations.inline) {
    result.inline = true;
  }
  return result;
}
function replaceIDs(body, prefix = randomPrefix) {
  const ids = [];
  let match;
  while (match = regex.exec(body)) {
    ids.push(match[1]);
  }
  if (!ids.length) {
    return body;
  }
  ids.forEach((id2) => {
    const newID = typeof prefix === "function" ? prefix(id2) : prefix + counter++;
    const escapedID = id2.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    body = body.replace(new RegExp('([#;"])(' + escapedID + ')([")]|\\.[a-z])', "g"), "$1" + newID + "$3");
  });
  return body;
}
function setAPIModule(provider, item) {
  storage[provider] = item;
}
function getAPIModule(provider) {
  return storage[provider] || storage[""];
}
function createAPIConfig(source) {
  let resources;
  if (typeof source.resources === "string") {
    resources = [source.resources];
  } else {
    resources = source.resources;
    if (!(resources instanceof Array) || !resources.length) {
      return null;
    }
  }
  const result = {
    resources,
    path: source.path === void 0 ? "/" : source.path,
    maxURL: source.maxURL ? source.maxURL : 500,
    rotate: source.rotate ? source.rotate : 750,
    timeout: source.timeout ? source.timeout : 5e3,
    random: source.random === true,
    index: source.index ? source.index : 0,
    dataAfterTimeout: source.dataAfterTimeout !== false
  };
  return result;
}
function addAPIProvider(provider, customConfig) {
  const config2 = createAPIConfig(customConfig);
  if (config2 === null) {
    return false;
  }
  configStorage[provider] = config2;
  return true;
}
function getAPIConfig(provider) {
  return configStorage[provider];
}
function calculateMaxLength(provider, prefix) {
  const config2 = getAPIConfig(provider);
  if (!config2) {
    return 0;
  }
  let result;
  if (!config2.maxURL) {
    result = 0;
  } else {
    let maxHostLength = 0;
    config2.resources.forEach((item) => {
      const host = item;
      maxHostLength = Math.max(maxHostLength, host.length);
    });
    const url = mergeParams(prefix + ".json", {
      icons: ""
    });
    result = config2.maxURL - maxHostLength - config2.path.length - url.length;
  }
  const cacheKey = provider + ":" + prefix;
  pathCache[provider] = config2.path;
  maxLengthCache[cacheKey] = result;
  return result;
}
function getPath(provider) {
  if (typeof provider === "string") {
    if (pathCache[provider] === void 0) {
      const config2 = getAPIConfig(provider);
      if (!config2) {
        return "/";
      }
      pathCache[provider] = config2.path;
    }
    return pathCache[provider];
  }
  return "/";
}
function sortIcons(icons) {
  const result = {
    loaded: [],
    missing: [],
    pending: []
  };
  const storage2 = Object.create(null);
  icons.sort((a, b) => {
    if (a.provider !== b.provider) {
      return a.provider.localeCompare(b.provider);
    }
    if (a.prefix !== b.prefix) {
      return a.prefix.localeCompare(b.prefix);
    }
    return a.name.localeCompare(b.name);
  });
  let lastIcon = {
    provider: "",
    prefix: "",
    name: ""
  };
  icons.forEach((icon) => {
    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {
      return;
    }
    lastIcon = icon;
    const provider = icon.provider;
    const prefix = icon.prefix;
    const name2 = icon.name;
    if (storage2[provider] === void 0) {
      storage2[provider] = Object.create(null);
    }
    const providerStorage = storage2[provider];
    if (providerStorage[prefix] === void 0) {
      providerStorage[prefix] = getStorage(provider, prefix);
    }
    const localStorage2 = providerStorage[prefix];
    let list;
    if (localStorage2.icons[name2] !== void 0) {
      list = result.loaded;
    } else if (prefix === "" || localStorage2.missing[name2] !== void 0) {
      list = result.missing;
    } else {
      list = result.pending;
    }
    const item = {
      provider,
      prefix,
      name: name2
    };
    list.push(item);
  });
  return result;
}
function removeCallback(sources, id2) {
  sources.forEach((source) => {
    const provider = source.provider;
    if (callbacks[provider] === void 0) {
      return;
    }
    const providerCallbacks = callbacks[provider];
    const prefix = source.prefix;
    const items = providerCallbacks[prefix];
    if (items) {
      providerCallbacks[prefix] = items.filter((row) => row.id !== id2);
    }
  });
}
function updateCallbacks(provider, prefix) {
  if (pendingUpdates[provider] === void 0) {
    pendingUpdates[provider] = Object.create(null);
  }
  const providerPendingUpdates = pendingUpdates[provider];
  if (!providerPendingUpdates[prefix]) {
    providerPendingUpdates[prefix] = true;
    setTimeout(() => {
      providerPendingUpdates[prefix] = false;
      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {
        return;
      }
      const items = callbacks[provider][prefix].slice(0);
      if (!items.length) {
        return;
      }
      const storage2 = getStorage(provider, prefix);
      let hasPending = false;
      items.forEach((item) => {
        const icons = item.icons;
        const oldLength = icons.pending.length;
        icons.pending = icons.pending.filter((icon) => {
          if (icon.prefix !== prefix) {
            return true;
          }
          const name2 = icon.name;
          if (storage2.icons[name2] !== void 0) {
            icons.loaded.push({
              provider,
              prefix,
              name: name2
            });
          } else if (storage2.missing[name2] !== void 0) {
            icons.missing.push({
              provider,
              prefix,
              name: name2
            });
          } else {
            hasPending = true;
            return true;
          }
          return false;
        });
        if (icons.pending.length !== oldLength) {
          if (!hasPending) {
            removeCallback([
              {
                provider,
                prefix
              }
            ], item.id);
          }
          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);
        }
      });
    });
  }
}
function storeCallback(callback, icons, pendingSources) {
  const id2 = idCounter++;
  const abort = removeCallback.bind(null, pendingSources, id2);
  if (!icons.pending.length) {
    return abort;
  }
  const item = {
    id: id2,
    icons,
    callback,
    abort
  };
  pendingSources.forEach((source) => {
    const provider = source.provider;
    const prefix = source.prefix;
    if (callbacks[provider] === void 0) {
      callbacks[provider] = Object.create(null);
    }
    const providerCallbacks = callbacks[provider];
    if (providerCallbacks[prefix] === void 0) {
      providerCallbacks[prefix] = [];
    }
    providerCallbacks[prefix].push(item);
  });
  return abort;
}
function listToIcons(list, validate = true, simpleNames2 = false) {
  const result = [];
  list.forEach((item) => {
    const icon = typeof item === "string" ? stringToIcon(item, false, simpleNames2) : item;
    if (!validate || validateIcon(icon, simpleNames2)) {
      result.push({
        provider: icon.provider,
        prefix: icon.prefix,
        name: icon.name
      });
    }
  });
  return result;
}
function sendQuery(config2, payload, query, done, success) {
  const resourcesCount = config2.resources.length;
  const startIndex = config2.random ? Math.floor(Math.random() * resourcesCount) : config2.index;
  let resources;
  if (config2.random) {
    let list = config2.resources.slice(0);
    resources = [];
    while (list.length > 1) {
      const nextIndex = Math.floor(Math.random() * list.length);
      resources.push(list[nextIndex]);
      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));
    }
    resources = resources.concat(list);
  } else {
    resources = config2.resources.slice(startIndex).concat(config2.resources.slice(0, startIndex));
  }
  const startTime = Date.now();
  let status = "pending";
  let queriesSent = 0;
  let lastError = void 0;
  let timer = null;
  let queue = [];
  let doneCallbacks = [];
  if (typeof done === "function") {
    doneCallbacks.push(done);
  }
  function resetTimer() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }
  function abort() {
    if (status === "pending") {
      status = "aborted";
    }
    resetTimer();
    queue.forEach((item) => {
      if (item.abort) {
        item.abort();
      }
      if (item.status === "pending") {
        item.status = "aborted";
      }
    });
    queue = [];
  }
  function subscribe2(callback, overwrite) {
    if (overwrite) {
      doneCallbacks = [];
    }
    if (typeof callback === "function") {
      doneCallbacks.push(callback);
    }
  }
  function getQueryStatus() {
    return {
      startTime,
      payload,
      status,
      queriesSent,
      queriesPending: queue.length,
      subscribe: subscribe2,
      abort
    };
  }
  function failQuery() {
    status = "failed";
    doneCallbacks.forEach((callback) => {
      callback(void 0, lastError);
    });
  }
  function clearQueue() {
    queue = queue.filter((item) => {
      if (item.status === "pending") {
        item.status = "aborted";
      }
      if (item.abort) {
        item.abort();
      }
      return false;
    });
  }
  function moduleResponse(item, data2, error2) {
    const isError = data2 === void 0;
    queue = queue.filter((queued) => queued !== item);
    switch (status) {
      case "pending":
        break;
      case "failed":
        if (isError || !config2.dataAfterTimeout) {
          return;
        }
        break;
      default:
        return;
    }
    if (isError) {
      if (error2 !== void 0) {
        lastError = error2;
      }
      if (!queue.length) {
        if (!resources.length) {
          failQuery();
        } else {
          execNext();
        }
      }
      return;
    }
    resetTimer();
    clearQueue();
    if (success && !config2.random) {
      const index = config2.resources.indexOf(item.resource);
      if (index !== -1 && index !== config2.index) {
        success(index);
      }
    }
    status = "completed";
    doneCallbacks.forEach((callback) => {
      callback(data2);
    });
  }
  function execNext() {
    if (status !== "pending") {
      return;
    }
    resetTimer();
    const resource = resources.shift();
    if (resource === void 0) {
      if (queue.length) {
        const timeout22 = typeof config2.timeout === "function" ? config2.timeout(startTime) : config2.timeout;
        if (timeout22) {
          timer = setTimeout(() => {
            resetTimer();
            if (status === "pending") {
              clearQueue();
              failQuery();
            }
          }, timeout22);
          return;
        }
      }
      failQuery();
      return;
    }
    const item = {
      getQueryStatus,
      status: "pending",
      resource,
      done: (data2, error2) => {
        moduleResponse(item, data2, error2);
      }
    };
    queue.push(item);
    queriesSent++;
    const timeout2 = typeof config2.rotate === "function" ? config2.rotate(queriesSent, startTime) : config2.rotate;
    timer = setTimeout(execNext, timeout2);
    query(resource, payload, item);
  }
  setTimeout(execNext);
  return getQueryStatus;
}
function setConfig(config2) {
  if (typeof config2 !== "object" || typeof config2.resources !== "object" || !(config2.resources instanceof Array) || !config2.resources.length) {
    throw new Error("Invalid Reduncancy configuration");
  }
  const newConfig = Object.create(null);
  let key;
  for (key in defaultConfig) {
    if (config2[key] !== void 0) {
      newConfig[key] = config2[key];
    } else {
      newConfig[key] = defaultConfig[key];
    }
  }
  return newConfig;
}
function initRedundancy(cfg) {
  const config2 = setConfig(cfg);
  let queries = [];
  function cleanup() {
    queries = queries.filter((item) => item().status === "pending");
  }
  function query(payload, queryCallback, doneCallback) {
    const query2 = sendQuery(config2, payload, queryCallback, (data2, error2) => {
      cleanup();
      if (doneCallback) {
        doneCallback(data2, error2);
      }
    }, (newIndex) => {
      config2.index = newIndex;
    });
    queries.push(query2);
    return query2;
  }
  function find(callback) {
    const result = queries.find((value) => {
      return callback(value);
    });
    return result !== void 0 ? result : null;
  }
  const instance = {
    query,
    find,
    setIndex: (index) => {
      config2.index = index;
    },
    getIndex: () => config2.index,
    cleanup
  };
  return instance;
}
function emptyCallback$1() {
}
function getRedundancyCache(provider) {
  if (redundancyCache[provider] === void 0) {
    const config2 = getAPIConfig(provider);
    if (!config2) {
      return;
    }
    const redundancy = initRedundancy(config2);
    const cachedReundancy = {
      config: config2,
      redundancy
    };
    redundancyCache[provider] = cachedReundancy;
  }
  return redundancyCache[provider];
}
function sendAPIQuery(target, query, callback) {
  let redundancy;
  let send2;
  if (typeof target === "string") {
    const api = getAPIModule(target);
    if (!api) {
      callback(void 0, 424);
      return emptyCallback$1;
    }
    send2 = api.send;
    const cached = getRedundancyCache(target);
    if (cached) {
      redundancy = cached.redundancy;
    }
  } else {
    const config2 = createAPIConfig(target);
    if (config2) {
      redundancy = initRedundancy(config2);
      const moduleKey = target.resources ? target.resources[0] : "";
      const api = getAPIModule(moduleKey);
      if (api) {
        send2 = api.send;
      }
    }
  }
  if (!redundancy || !send2) {
    callback(void 0, 424);
    return emptyCallback$1;
  }
  return redundancy.query(query, send2, callback)().abort;
}
function emptyCallback() {
}
function loadedNewIcons(provider, prefix) {
  if (loaderFlags[provider] === void 0) {
    loaderFlags[provider] = Object.create(null);
  }
  const providerLoaderFlags = loaderFlags[provider];
  if (!providerLoaderFlags[prefix]) {
    providerLoaderFlags[prefix] = true;
    setTimeout(() => {
      providerLoaderFlags[prefix] = false;
      updateCallbacks(provider, prefix);
    });
  }
}
function loadNewIcons(provider, prefix, icons) {
  function err() {
    const key = (provider === "" ? "" : "@" + provider + ":") + prefix;
    const time = Math.floor(Date.now() / 6e4);
    if (errorsCache[key] < time) {
      errorsCache[key] = time;
      console.error('Unable to retrieve icons for "' + key + '" because API is not configured properly.');
    }
  }
  if (iconsToLoad[provider] === void 0) {
    iconsToLoad[provider] = Object.create(null);
  }
  const providerIconsToLoad = iconsToLoad[provider];
  if (queueFlags[provider] === void 0) {
    queueFlags[provider] = Object.create(null);
  }
  const providerQueueFlags = queueFlags[provider];
  if (pendingIcons[provider] === void 0) {
    pendingIcons[provider] = Object.create(null);
  }
  const providerPendingIcons = pendingIcons[provider];
  if (providerIconsToLoad[prefix] === void 0) {
    providerIconsToLoad[prefix] = icons;
  } else {
    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();
  }
  if (!providerQueueFlags[prefix]) {
    providerQueueFlags[prefix] = true;
    setTimeout(() => {
      providerQueueFlags[prefix] = false;
      const icons2 = providerIconsToLoad[prefix];
      delete providerIconsToLoad[prefix];
      const api = getAPIModule(provider);
      if (!api) {
        err();
        return;
      }
      const params = api.prepare(provider, prefix, icons2);
      params.forEach((item) => {
        sendAPIQuery(provider, item, (data2, error2) => {
          const storage2 = getStorage(provider, prefix);
          if (typeof data2 !== "object") {
            if (error2 !== 404) {
              return;
            }
            const t2 = Date.now();
            item.icons.forEach((name2) => {
              storage2.missing[name2] = t2;
            });
          } else {
            try {
              const parsed = addIconSet(storage2, data2);
              if (!parsed.length) {
                return;
              }
              const pending = providerPendingIcons[prefix];
              parsed.forEach((name2) => {
                delete pending[name2];
              });
              if (cache.store) {
                cache.store(provider, data2);
              }
            } catch (err2) {
              console.error(err2);
            }
          }
          loadedNewIcons(provider, prefix);
        });
      });
    });
  }
}
function getGlobal(key) {
  const attr = key + "Storage";
  try {
    if (_window && _window[attr] && typeof _window[attr].length === "number") {
      return _window[attr];
    }
  } catch (err) {
  }
  config[key] = false;
  return null;
}
function setCount(storage2, key, value) {
  try {
    storage2.setItem(countKey, value + "");
    count[key] = value;
    return true;
  } catch (err) {
    return false;
  }
}
function getCount(storage2) {
  const count2 = storage2.getItem(countKey);
  if (count2) {
    const total = parseInt(count2);
    return total ? total : 0;
  }
  return 0;
}
function initCache(storage2, key) {
  try {
    storage2.setItem(versionKey, cacheVersion);
  } catch (err) {
  }
  setCount(storage2, key, 0);
}
function destroyCache(storage2) {
  try {
    const total = getCount(storage2);
    for (let i2 = 0; i2 < total; i2++) {
      storage2.removeItem(cachePrefix + i2);
    }
  } catch (err) {
  }
}
function flipFromString(custom, flip) {
  flip.split(separator).forEach((str) => {
    const value = str.trim();
    switch (value) {
      case "horizontal":
        custom.hFlip = true;
        break;
      case "vertical":
        custom.vFlip = true;
        break;
    }
  });
}
function alignmentFromString(custom, align) {
  align.split(separator).forEach((str) => {
    const value = str.trim();
    switch (value) {
      case "left":
      case "center":
      case "right":
        custom.hAlign = value;
        break;
      case "top":
      case "middle":
      case "bottom":
        custom.vAlign = value;
        break;
      case "slice":
      case "crop":
        custom.slice = true;
        break;
      case "meet":
        custom.slice = false;
    }
  });
}
function rotateFromString(value, defaultValue = 0) {
  const units = value.replace(/^-?[0-9.]*/, "");
  function cleanup(value2) {
    while (value2 < 0) {
      value2 += 4;
    }
    return value2 % 4;
  }
  if (units === "") {
    const num = parseInt(value);
    return isNaN(num) ? 0 : cleanup(num);
  } else if (units !== value) {
    let split = 0;
    switch (units) {
      case "%":
        split = 25;
        break;
      case "deg":
        split = 90;
    }
    if (split) {
      let num = parseFloat(value.slice(0, value.length - units.length));
      if (isNaN(num)) {
        return 0;
      }
      num = num / split;
      return num % 1 === 0 ? cleanup(num) : 0;
    }
  }
  return defaultValue;
}
function render(icon, props) {
  const customisations = mergeCustomisations(defaults, props);
  const componentProps = __spreadValues({}, svgDefaults);
  let style = typeof props.style === "string" ? props.style : "";
  for (let key in props) {
    const value = props[key];
    if (value === void 0) {
      continue;
    }
    switch (key) {
      case "icon":
      case "style":
      case "onLoad":
        break;
      case "inline":
      case "hFlip":
      case "vFlip":
        customisations[key] = value === true || value === "true" || value === 1;
        break;
      case "flip":
        if (typeof value === "string") {
          flipFromString(customisations, value);
        }
        break;
      case "align":
        if (typeof value === "string") {
          alignmentFromString(customisations, value);
        }
        break;
      case "color":
        style = style + (style.length > 0 && style.trim().slice(-1) !== ";" ? ";" : "") + "color: " + value + "; ";
        break;
      case "rotate":
        if (typeof value === "string") {
          customisations[key] = rotateFromString(value);
        } else if (typeof value === "number") {
          customisations[key] = value;
        }
        break;
      case "ariaHidden":
      case "aria-hidden":
        if (value !== true && value !== "true") {
          delete componentProps["aria-hidden"];
        }
        break;
      default:
        if (key.slice(0, 3) === "on:") {
          break;
        }
        if (defaults[key] === void 0) {
          componentProps[key] = value;
        }
    }
  }
  const item = iconToSVG(icon, customisations);
  for (let key in item.attributes) {
    componentProps[key] = item.attributes[key];
  }
  if (item.inline) {
    style = "vertical-align: -0.125em; " + style;
  }
  if (style !== "") {
    componentProps.style = style;
  }
  let localCounter = 0;
  const id2 = props.id;
  return {
    attributes: componentProps,
    body: replaceIDs(item.body, id2 ? () => id2 + "ID" + localCounter++ : "iconifySvelte")
  };
}
function checkIconState(icon, state, mounted, callback, onload) {
  function abortLoading() {
    if (state.loading) {
      state.loading.abort();
      state.loading = null;
    }
  }
  if (typeof icon === "object" && icon !== null && typeof icon.body === "string") {
    state.name = "";
    abortLoading();
    return { data: fullIcon(icon) };
  }
  let iconName;
  if (typeof icon !== "string" || (iconName = stringToIcon(icon, false, true)) === null) {
    abortLoading();
    return null;
  }
  const data2 = getIconData(iconName);
  if (data2 === null) {
    if (mounted && (!state.loading || state.loading.name !== icon)) {
      abortLoading();
      state.name = "";
      state.loading = {
        name: icon,
        abort: loadIcons([iconName], callback)
      };
    }
    return null;
  }
  abortLoading();
  if (state.name !== icon) {
    state.name = icon;
    if (onload && !state.destroyed) {
      onload(icon);
    }
  }
  const classes = ["iconify"];
  if (iconName.prefix !== "") {
    classes.push("iconify--" + iconName.prefix);
  }
  if (iconName.provider !== "") {
    classes.push("iconify--" + iconName.provider);
  }
  return { data: data2, classes };
}
function generateIcon(icon, props) {
  return icon ? render(icon, props) : null;
}
var matchName, iconDefaults, stringToIcon, validateIcon, matchChar, storageVersion, storage$1, simpleNames, defaults, unitsSplit, unitsTest, regex, randomPrefix, counter, storage, configStorage, fallBackAPISources, fallBackAPI, mergeParams, maxLengthCache, pathCache, detectFetch, fetchModule, prepare, send, fetchAPIModule, callbacks, pendingUpdates, idCounter, defaultConfig, redundancyCache, cache, pendingIcons, iconsToLoad, loaderFlags, queueFlags, errorsCache, loadIcons, cacheVersion, cachePrefix, countKey, versionKey, hour, cacheExpiration, config, loaded, count, emptyList, _window, loadCache, storeCache, separator, svgDefaults;
var init_functions_9959eb37 = __esm({
  ".svelte-kit/output/server/chunks/functions-9959eb37.js"() {
    matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;
    iconDefaults = Object.freeze({
      left: 0,
      top: 0,
      width: 16,
      height: 16,
      rotate: 0,
      vFlip: false,
      hFlip: false
    });
    stringToIcon = (value, validate, allowSimpleName, provider = "") => {
      const colonSeparated = value.split(":");
      if (value.slice(0, 1) === "@") {
        if (colonSeparated.length < 2 || colonSeparated.length > 3) {
          return null;
        }
        provider = colonSeparated.shift().slice(1);
      }
      if (colonSeparated.length > 3 || !colonSeparated.length) {
        return null;
      }
      if (colonSeparated.length > 1) {
        const name22 = colonSeparated.pop();
        const prefix = colonSeparated.pop();
        const result = {
          provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,
          prefix,
          name: name22
        };
        return validate && !validateIcon(result) ? null : result;
      }
      const name2 = colonSeparated[0];
      const dashSeparated = name2.split("-");
      if (dashSeparated.length > 1) {
        const result = {
          provider,
          prefix: dashSeparated.shift(),
          name: dashSeparated.join("-")
        };
        return validate && !validateIcon(result) ? null : result;
      }
      if (allowSimpleName && provider === "") {
        const result = {
          provider,
          prefix: "",
          name: name2
        };
        return validate && !validateIcon(result, allowSimpleName) ? null : result;
      }
      return null;
    };
    validateIcon = (icon, allowSimpleName) => {
      if (!icon) {
        return false;
      }
      return !!((icon.provider === "" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === "" || icon.prefix.match(matchName)) && icon.name.match(matchName));
    };
    matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;
    storageVersion = 1;
    storage$1 = Object.create(null);
    try {
      const w = window || self;
      if ((w == null ? void 0 : w._iconifyStorage.version) === storageVersion) {
        storage$1 = w._iconifyStorage.storage;
      }
    } catch (err) {
    }
    simpleNames = false;
    defaults = Object.freeze({
      inline: false,
      width: null,
      height: null,
      hAlign: "center",
      vAlign: "middle",
      slice: false,
      hFlip: false,
      vFlip: false,
      rotate: 0
    });
    unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;
    unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
    regex = /\sid="(\S+)"/g;
    randomPrefix = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
    counter = 0;
    storage = Object.create(null);
    configStorage = Object.create(null);
    fallBackAPISources = [
      "https://api.simplesvg.com",
      "https://api.unisvg.com"
    ];
    fallBackAPI = [];
    while (fallBackAPISources.length > 0) {
      if (fallBackAPISources.length === 1) {
        fallBackAPI.push(fallBackAPISources.shift());
      } else {
        if (Math.random() > 0.5) {
          fallBackAPI.push(fallBackAPISources.shift());
        } else {
          fallBackAPI.push(fallBackAPISources.pop());
        }
      }
    }
    configStorage[""] = createAPIConfig({
      resources: ["https://api.iconify.design"].concat(fallBackAPI)
    });
    mergeParams = (base2, params) => {
      let result = base2, hasParams = result.indexOf("?") !== -1;
      function paramToString(value) {
        switch (typeof value) {
          case "boolean":
            return value ? "true" : "false";
          case "number":
            return encodeURIComponent(value);
          case "string":
            return encodeURIComponent(value);
          default:
            throw new Error("Invalid parameter");
        }
      }
      Object.keys(params).forEach((key) => {
        let value;
        try {
          value = paramToString(params[key]);
        } catch (err) {
          return;
        }
        result += (hasParams ? "&" : "?") + encodeURIComponent(key) + "=" + value;
        hasParams = true;
      });
      return result;
    };
    maxLengthCache = Object.create(null);
    pathCache = Object.create(null);
    detectFetch = () => {
      let callback;
      try {
        callback = fetch;
        if (typeof callback === "function") {
          return callback;
        }
      } catch (err) {
      }
      try {
        const chunk = String.fromCharCode(114) + String.fromCharCode(101);
        const req = global[chunk + "qui" + chunk];
        callback = req("cross-fetch");
        if (typeof callback === "function") {
          return callback;
        }
      } catch (err) {
      }
      return null;
    };
    fetchModule = detectFetch();
    prepare = (provider, prefix, icons) => {
      const results = [];
      let maxLength = maxLengthCache[prefix];
      if (maxLength === void 0) {
        maxLength = calculateMaxLength(provider, prefix);
      }
      const type = "icons";
      let item = {
        type,
        provider,
        prefix,
        icons: []
      };
      let length = 0;
      icons.forEach((name2, index) => {
        length += name2.length + 1;
        if (length >= maxLength && index > 0) {
          results.push(item);
          item = {
            type,
            provider,
            prefix,
            icons: []
          };
          length = name2.length;
        }
        item.icons.push(name2);
      });
      results.push(item);
      return results;
    };
    send = (host, params, status) => {
      if (!fetchModule) {
        status.done(void 0, 424);
        return;
      }
      let path = getPath(params.provider);
      switch (params.type) {
        case "icons": {
          const prefix = params.prefix;
          const icons = params.icons;
          const iconsList = icons.join(",");
          path += mergeParams(prefix + ".json", {
            icons: iconsList
          });
          break;
        }
        case "custom": {
          const uri = params.uri;
          path += uri.slice(0, 1) === "/" ? uri.slice(1) : uri;
          break;
        }
        default:
          status.done(void 0, 400);
          return;
      }
      let defaultError = 503;
      fetchModule(host + path).then((response) => {
        if (response.status !== 200) {
          setTimeout(() => {
            status.done(void 0, response.status);
          });
          return;
        }
        defaultError = 501;
        return response.json();
      }).then((data2) => {
        if (typeof data2 !== "object" || data2 === null) {
          setTimeout(() => {
            status.done(void 0, defaultError);
          });
          return;
        }
        setTimeout(() => {
          status.done(data2);
        });
      }).catch(() => {
        status.done(void 0, defaultError);
      });
    };
    fetchAPIModule = {
      prepare,
      send
    };
    callbacks = Object.create(null);
    pendingUpdates = Object.create(null);
    idCounter = 0;
    defaultConfig = {
      resources: [],
      index: 0,
      timeout: 2e3,
      rotate: 750,
      random: false,
      dataAfterTimeout: false
    };
    redundancyCache = Object.create(null);
    cache = {};
    pendingIcons = Object.create(null);
    iconsToLoad = Object.create(null);
    loaderFlags = Object.create(null);
    queueFlags = Object.create(null);
    errorsCache = Object.create(null);
    loadIcons = (icons, callback) => {
      const cleanedIcons = listToIcons(icons, true, allowSimpleNames());
      const sortedIcons = sortIcons(cleanedIcons);
      if (!sortedIcons.pending.length) {
        let callCallback = true;
        if (callback) {
          setTimeout(() => {
            if (callCallback) {
              callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);
            }
          });
        }
        return () => {
          callCallback = false;
        };
      }
      const newIcons = Object.create(null);
      const sources = [];
      let lastProvider, lastPrefix;
      sortedIcons.pending.forEach((icon) => {
        const provider = icon.provider;
        const prefix = icon.prefix;
        if (prefix === lastPrefix && provider === lastProvider) {
          return;
        }
        lastProvider = provider;
        lastPrefix = prefix;
        sources.push({
          provider,
          prefix
        });
        if (pendingIcons[provider] === void 0) {
          pendingIcons[provider] = Object.create(null);
        }
        const providerPendingIcons = pendingIcons[provider];
        if (providerPendingIcons[prefix] === void 0) {
          providerPendingIcons[prefix] = Object.create(null);
        }
        if (newIcons[provider] === void 0) {
          newIcons[provider] = Object.create(null);
        }
        const providerNewIcons = newIcons[provider];
        if (providerNewIcons[prefix] === void 0) {
          providerNewIcons[prefix] = [];
        }
      });
      const time = Date.now();
      sortedIcons.pending.forEach((icon) => {
        const provider = icon.provider;
        const prefix = icon.prefix;
        const name2 = icon.name;
        const pendingQueue = pendingIcons[provider][prefix];
        if (pendingQueue[name2] === void 0) {
          pendingQueue[name2] = time;
          newIcons[provider][prefix].push(name2);
        }
      });
      sources.forEach((source) => {
        const provider = source.provider;
        const prefix = source.prefix;
        if (newIcons[provider][prefix].length) {
          loadNewIcons(provider, prefix, newIcons[provider][prefix]);
        }
      });
      return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;
    };
    cacheVersion = "iconify2";
    cachePrefix = "iconify";
    countKey = cachePrefix + "-count";
    versionKey = cachePrefix + "-version";
    hour = 36e5;
    cacheExpiration = 168;
    config = {
      local: true,
      session: true
    };
    loaded = false;
    count = {
      local: 0,
      session: 0
    };
    emptyList = {
      local: [],
      session: []
    };
    _window = typeof window === "undefined" ? {} : window;
    loadCache = () => {
      if (loaded) {
        return;
      }
      loaded = true;
      const minTime = Math.floor(Date.now() / hour) - cacheExpiration;
      function load3(key) {
        const func = getGlobal(key);
        if (!func) {
          return;
        }
        const getItem = (index) => {
          const name2 = cachePrefix + index;
          const item = func.getItem(name2);
          if (typeof item !== "string") {
            return false;
          }
          let valid = true;
          try {
            const data2 = JSON.parse(item);
            if (typeof data2 !== "object" || typeof data2.cached !== "number" || data2.cached < minTime || typeof data2.provider !== "string" || typeof data2.data !== "object" || typeof data2.data.prefix !== "string") {
              valid = false;
            } else {
              const provider = data2.provider;
              const prefix = data2.data.prefix;
              const storage2 = getStorage(provider, prefix);
              valid = addIconSet(storage2, data2.data).length > 0;
            }
          } catch (err) {
            valid = false;
          }
          if (!valid) {
            func.removeItem(name2);
          }
          return valid;
        };
        try {
          const version = func.getItem(versionKey);
          if (version !== cacheVersion) {
            if (version) {
              destroyCache(func);
            }
            initCache(func, key);
            return;
          }
          let total = getCount(func);
          for (let i2 = total - 1; i2 >= 0; i2--) {
            if (!getItem(i2)) {
              if (i2 === total - 1) {
                total--;
              } else {
                emptyList[key].push(i2);
              }
            }
          }
          setCount(func, key, total);
        } catch (err) {
        }
      }
      for (const key in config) {
        load3(key);
      }
    };
    storeCache = (provider, data2) => {
      if (!loaded) {
        loadCache();
      }
      function store(key) {
        if (!config[key]) {
          return false;
        }
        const func = getGlobal(key);
        if (!func) {
          return false;
        }
        let index = emptyList[key].shift();
        if (index === void 0) {
          index = count[key];
          if (!setCount(func, key, index + 1)) {
            return false;
          }
        }
        try {
          const item = {
            cached: Math.floor(Date.now() / hour),
            provider,
            data: data2
          };
          func.setItem(cachePrefix + index, JSON.stringify(item));
        } catch (err) {
          return false;
        }
        return true;
      }
      if (!store("local")) {
        store("session");
      }
    };
    separator = /[\s,]+/;
    svgDefaults = {
      "xmlns": "http://www.w3.org/2000/svg",
      "xmlns:xlink": "http://www.w3.org/1999/xlink",
      "aria-hidden": true,
      "role": "img"
    };
    allowSimpleNames(true);
    setAPIModule("", fetchAPIModule);
    if (typeof document !== "undefined" && typeof window !== "undefined") {
      cache.store = storeCache;
      loadCache();
      const _window2 = window;
      if (_window2.IconifyPreload !== void 0) {
        const preload = _window2.IconifyPreload;
        const err = "Invalid IconifyPreload syntax.";
        if (typeof preload === "object" && preload !== null) {
          (preload instanceof Array ? preload : [preload]).forEach((item) => {
            try {
              if (typeof item !== "object" || item === null || item instanceof Array || typeof item.icons !== "object" || typeof item.prefix !== "string" || !addCollection(item)) {
                console.error(err);
              }
            } catch (e2) {
              console.error(err);
            }
          });
        }
      }
      if (_window2.IconifyProviders !== void 0) {
        const providers = _window2.IconifyProviders;
        if (typeof providers === "object" && providers !== null) {
          for (let key in providers) {
            const err = "IconifyProviders[" + key + "] is invalid.";
            try {
              const value = providers[key];
              if (typeof value !== "object" || !value || value.resources === void 0) {
                continue;
              }
              if (!addAPIProvider(key, value)) {
                console.error(err);
              }
            } catch (e2) {
              console.error(err);
            }
          }
        }
      }
    }
  }
});

// .svelte-kit/output/server/entries/pages/__layout.svelte.js
var layout_svelte_exports = {};
__export(layout_svelte_exports, {
  default: () => _layout
});
var Icon, css$1, Footer, css, _layout;
var init_layout_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/__layout.svelte.js"() {
    init_index_0300a598();
    init_functions_9959eb37();
    Icon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const state = {
        name: "",
        loading: null,
        destroyed: false
      };
      let mounted = false;
      let data2;
      const onLoad = (icon) => {
        if (typeof $$props.onLoad === "function") {
          $$props.onLoad(icon);
        }
        const dispatch = createEventDispatcher();
        dispatch("load", { icon });
      };
      function loaded2() {
      }
      onDestroy(() => {
        state.destroyed = true;
        if (state.loading) {
          state.loading.abort();
          state.loading = null;
        }
      });
      {
        {
          const iconData = checkIconState($$props.icon, state, mounted, loaded2, onLoad);
          data2 = iconData ? generateIcon(iconData.data, $$props) : null;
          if (data2 && iconData.classes) {
            data2.attributes["class"] = (typeof $$props["class"] === "string" ? $$props["class"] + " " : "") + iconData.classes.join(" ");
          }
        }
      }
      return `${data2 !== null ? `<svg${spread([escape_object(data2.attributes)], {})}><!-- HTML_TAG_START -->${data2.body}<!-- HTML_TAG_END --></svg>` : ``}`;
    });
    css$1 = {
      code: ".logo.svelte-7weaca.svelte-7weaca{grid-area:logo}nav.svelte-7weaca.svelte-7weaca{grid-area:social}nav.svelte-7weaca a.svelte-7weaca{text-decoration:none;font-weight:500}",
      map: null
    };
    Footer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { bgColor = "bg-[#222222]" } = $$props;
      let { textColor = "text-gray-300" } = $$props;
      let icons = { github: "carbon:logo-github" };
      if ($$props.bgColor === void 0 && $$bindings.bgColor && bgColor !== void 0)
        $$bindings.bgColor(bgColor);
      if ($$props.textColor === void 0 && $$bindings.textColor && textColor !== void 0)
        $$bindings.textColor(textColor);
      $$result.css.add(css$1);
      return `<div class="${"footer flex bg-black/60 " + escape2(textColor) + " w-full self-end font-display text-base flex align-middle items-center justify-between h-20 relative z-20 svelte-7weaca"}">
    <nav class="${"social w-full flex items-end m-0 justify-center xl:pl-24 svelte-7weaca"}"><a href="${"https://www.mikepeiman.dev"}" target="${"_blank"}" class="${"pointer font-mono text-base text-winterblues-700 hover:text-winterblues-400 hover:font-bold svelte-7weaca"}"><div class="${""}">Made with <span class="${"text-rose-500 text-lg px-1.5"}">\u2665</span> by Mike Peiman.</div></a>
        <a href="${"https://github.com/mikepeiman/metabrain"}" target="${"_blank"}" class="${"w-8 h-8 text-winterblues-700 hover:text-winterblues-400 transition m-0  svelte-7weaca"}">${validate_component(Icon, "Icon").$$render($$result, {
        icon: icons.github,
        class: "w-8 h-8 ml-2 -mt-1"
      }, {}, {})}</a>
        </nav>
</div>`;
    });
    css = {
      code: '#svelte{min-height:100vh}#app-layout{grid-template-rows:auto 80px;grid-template-columns:auto;grid-template-areas:" layout-main " " footer "}.layout-main{grid-area:layout-main}html{max-width:100vw;width:100%}body{margin:0;height:90%}',
      map: null
    };
    _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css);
      return `<div id="${"app-layout"}" class="${"grid w-full min-h-screen bg-black absolute top-0 left-0 z-90 transition"}"><div class="${"layout-main flex flex-col items-center jutify-center bg-black/40"}">${slots.default ? slots.default({}) : ``}</div>
	
		${validate_component(Footer, "Footer").$$render($$result, {}, {}, {})}
	
</div>`;
    });
  }
});

// .svelte-kit/output/server/nodes/0.js
var __exports = {};
__export(__exports, {
  css: () => css2,
  entry: () => entry,
  js: () => js,
  module: () => layout_svelte_exports
});
var entry, js, css2;
var init__ = __esm({
  ".svelte-kit/output/server/nodes/0.js"() {
    init_layout_svelte();
    entry = "pages/__layout.svelte-9e93eed5.js";
    js = ["pages/__layout.svelte-9e93eed5.js", "chunks/vendor-525e7dbe.js"];
    css2 = ["assets/pages/__layout.svelte-e0137110.css", "assets/Footer.svelte_svelte_type_style_lang-2e9d039a.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/error.svelte.js
var error_svelte_exports = {};
__export(error_svelte_exports, {
  default: () => Error2,
  load: () => load
});
function load({ error: error2, status }) {
  return { props: { error: error2, status } };
}
var Error2;
var init_error_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/error.svelte.js"() {
    init_index_0300a598();
    Error2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { status } = $$props;
      let { error: error2 } = $$props;
      if ($$props.status === void 0 && $$bindings.status && status !== void 0)
        $$bindings.status(status);
      if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
        $$bindings.error(error2);
      return `<h1>${escape2(status)}</h1>

<pre>${escape2(error2.message)}</pre>



${error2.frame ? `<pre>${escape2(error2.frame)}</pre>` : ``}
${error2.stack ? `<pre>${escape2(error2.stack)}</pre>` : ``}`;
    });
  }
});

// .svelte-kit/output/server/nodes/1.js
var __exports2 = {};
__export(__exports2, {
  css: () => css3,
  entry: () => entry2,
  js: () => js2,
  module: () => error_svelte_exports
});
var entry2, js2, css3;
var init__2 = __esm({
  ".svelte-kit/output/server/nodes/1.js"() {
    init_error_svelte();
    entry2 = "error.svelte-e1e50419.js";
    js2 = ["error.svelte-e1e50419.js", "chunks/vendor-525e7dbe.js"];
    css3 = ["assets/vendor-e0d31265.css"];
  }
});

// node_modules/canvas-sketch/dist/canvas-sketch.umd.js
var require_canvas_sketch_umd = __commonJS({
  "node_modules/canvas-sketch/dist/canvas-sketch.umd.js"(exports, module2) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? module2.exports = factory() : typeof define === "function" && define.amd ? define(factory) : global2.canvasSketch = factory();
    })(exports, function() {
      var getOwnPropertySymbols = Object.getOwnPropertySymbols;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;
      function toObject(val) {
        if (val === null || val === void 0) {
          throw new TypeError("Object.assign cannot be called with null or undefined");
        }
        return Object(val);
      }
      function shouldUseNative() {
        try {
          if (!Object.assign) {
            return false;
          }
          var test1 = new String("abc");
          test1[5] = "de";
          if (Object.getOwnPropertyNames(test1)[0] === "5") {
            return false;
          }
          var test2 = {};
          for (var i2 = 0; i2 < 10; i2++) {
            test2["_" + String.fromCharCode(i2)] = i2;
          }
          var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
          });
          if (order2.join("") !== "0123456789") {
            return false;
          }
          var test3 = {};
          "abcdefghijklmnopqrst".split("").forEach(function(letter) {
            test3[letter] = letter;
          });
          if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
            return false;
          }
          return true;
        } catch (err) {
          return false;
        }
      }
      var objectAssign = shouldUseNative() ? Object.assign : function(target, source) {
        var from;
        var to = toObject(target);
        var symbols;
        for (var s4 = 1; s4 < arguments.length; s4++) {
          from = Object(arguments[s4]);
          for (var key in from) {
            if (hasOwnProperty.call(from, key)) {
              to[key] = from[key];
            }
          }
          if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for (var i2 = 0; i2 < symbols.length; i2++) {
              if (propIsEnumerable.call(from, symbols[i2])) {
                to[symbols[i2]] = from[symbols[i2]];
              }
            }
          }
        }
        return to;
      };
      var commonjsGlobal2 = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
      function createCommonjsModule(fn, module3) {
        return module3 = { exports: {} }, fn(module3, module3.exports), module3.exports;
      }
      var browser = commonjsGlobal2.performance && commonjsGlobal2.performance.now ? function now2() {
        return performance.now();
      } : Date.now || function now2() {
        return +new Date();
      };
      var isPromise_1 = isPromise;
      function isPromise(obj) {
        return !!obj && (typeof obj === "object" || typeof obj === "function") && typeof obj.then === "function";
      }
      var isDom = isNode;
      function isNode(val) {
        return !val || typeof val !== "object" ? false : typeof window === "object" && typeof window.Node === "object" ? val instanceof window.Node : typeof val.nodeType === "number" && typeof val.nodeName === "string";
      }
      function getClientAPI() {
        return typeof window !== "undefined" && window["canvas-sketch-cli"];
      }
      function defined() {
        var arguments$1 = arguments;
        for (var i2 = 0; i2 < arguments.length; i2++) {
          if (arguments$1[i2] != null) {
            return arguments$1[i2];
          }
        }
        return void 0;
      }
      function isBrowser() {
        return typeof document !== "undefined";
      }
      function isWebGLContext(ctx) {
        return typeof ctx.clear === "function" && typeof ctx.clearColor === "function" && typeof ctx.bufferData === "function";
      }
      function isCanvas(element) {
        return isDom(element) && /canvas/i.test(element.nodeName) && typeof element.getContext === "function";
      }
      var keys = createCommonjsModule(function(module3, exports2) {
        exports2 = module3.exports = typeof Object.keys === "function" ? Object.keys : shim;
        exports2.shim = shim;
        function shim(obj) {
          var keys2 = [];
          for (var key in obj)
            keys2.push(key);
          return keys2;
        }
      });
      var keys_1 = keys.shim;
      var is_arguments = createCommonjsModule(function(module3, exports2) {
        var supportsArgumentsClass = function() {
          return Object.prototype.toString.call(arguments);
        }() == "[object Arguments]";
        exports2 = module3.exports = supportsArgumentsClass ? supported : unsupported;
        exports2.supported = supported;
        function supported(object) {
          return Object.prototype.toString.call(object) == "[object Arguments]";
        }
        exports2.unsupported = unsupported;
        function unsupported(object) {
          return object && typeof object == "object" && typeof object.length == "number" && Object.prototype.hasOwnProperty.call(object, "callee") && !Object.prototype.propertyIsEnumerable.call(object, "callee") || false;
        }
      });
      var is_arguments_1 = is_arguments.supported;
      var is_arguments_2 = is_arguments.unsupported;
      var deepEqual_1 = createCommonjsModule(function(module3) {
        var pSlice = Array.prototype.slice;
        var deepEqual = module3.exports = function(actual, expected, opts) {
          if (!opts)
            opts = {};
          if (actual === expected) {
            return true;
          } else if (actual instanceof Date && expected instanceof Date) {
            return actual.getTime() === expected.getTime();
          } else if (!actual || !expected || typeof actual != "object" && typeof expected != "object") {
            return opts.strict ? actual === expected : actual == expected;
          } else {
            return objEquiv(actual, expected, opts);
          }
        };
        function isUndefinedOrNull(value) {
          return value === null || value === void 0;
        }
        function isBuffer(x2) {
          if (!x2 || typeof x2 !== "object" || typeof x2.length !== "number")
            return false;
          if (typeof x2.copy !== "function" || typeof x2.slice !== "function") {
            return false;
          }
          if (x2.length > 0 && typeof x2[0] !== "number")
            return false;
          return true;
        }
        function objEquiv(a, b, opts) {
          var i2, key;
          if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
            return false;
          if (a.prototype !== b.prototype)
            return false;
          if (is_arguments(a)) {
            if (!is_arguments(b)) {
              return false;
            }
            a = pSlice.call(a);
            b = pSlice.call(b);
            return deepEqual(a, b, opts);
          }
          if (isBuffer(a)) {
            if (!isBuffer(b)) {
              return false;
            }
            if (a.length !== b.length)
              return false;
            for (i2 = 0; i2 < a.length; i2++) {
              if (a[i2] !== b[i2])
                return false;
            }
            return true;
          }
          try {
            var ka = keys(a), kb = keys(b);
          } catch (e2) {
            return false;
          }
          if (ka.length != kb.length)
            return false;
          ka.sort();
          kb.sort();
          for (i2 = ka.length - 1; i2 >= 0; i2--) {
            if (ka[i2] != kb[i2])
              return false;
          }
          for (i2 = ka.length - 1; i2 >= 0; i2--) {
            key = ka[i2];
            if (!deepEqual(a[key], b[key], opts))
              return false;
          }
          return typeof a === typeof b;
        }
      });
      var dateformat = createCommonjsModule(function(module3, exports2) {
        (function(global2) {
          var dateFormat = function() {
            var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|"[^"]*"|'[^']*'/g;
            var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
            var timezoneClip = /[^-+\dA-Z]/g;
            return function(date, mask, utc, gmt) {
              if (arguments.length === 1 && kindOf(date) === "string" && !/\d/.test(date)) {
                mask = date;
                date = void 0;
              }
              date = date || new Date();
              if (!(date instanceof Date)) {
                date = new Date(date);
              }
              if (isNaN(date)) {
                throw TypeError("Invalid date");
              }
              mask = String(dateFormat.masks[mask] || mask || dateFormat.masks["default"]);
              var maskSlice = mask.slice(0, 4);
              if (maskSlice === "UTC:" || maskSlice === "GMT:") {
                mask = mask.slice(4);
                utc = true;
                if (maskSlice === "GMT:") {
                  gmt = true;
                }
              }
              var _ = utc ? "getUTC" : "get";
              var d = date[_ + "Date"]();
              var D = date[_ + "Day"]();
              var m2 = date[_ + "Month"]();
              var y = date[_ + "FullYear"]();
              var H = date[_ + "Hours"]();
              var M = date[_ + "Minutes"]();
              var s4 = date[_ + "Seconds"]();
              var L = date[_ + "Milliseconds"]();
              var o2 = utc ? 0 : date.getTimezoneOffset();
              var W = getWeek(date);
              var N = getDayOfWeek(date);
              var flags = {
                d,
                dd: pad(d),
                ddd: dateFormat.i18n.dayNames[D],
                dddd: dateFormat.i18n.dayNames[D + 7],
                m: m2 + 1,
                mm: pad(m2 + 1),
                mmm: dateFormat.i18n.monthNames[m2],
                mmmm: dateFormat.i18n.monthNames[m2 + 12],
                yy: String(y).slice(2),
                yyyy: y,
                h: H % 12 || 12,
                hh: pad(H % 12 || 12),
                H,
                HH: pad(H),
                M,
                MM: pad(M),
                s: s4,
                ss: pad(s4),
                l: pad(L, 3),
                L: pad(Math.round(L / 10)),
                t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],
                tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],
                T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],
                TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],
                Z: gmt ? "GMT" : utc ? "UTC" : (String(date).match(timezone) || [""]).pop().replace(timezoneClip, ""),
                o: (o2 > 0 ? "-" : "+") + pad(Math.floor(Math.abs(o2) / 60) * 100 + Math.abs(o2) % 60, 4),
                S: ["th", "st", "nd", "rd"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
                W,
                N
              };
              return mask.replace(token, function(match) {
                if (match in flags) {
                  return flags[match];
                }
                return match.slice(1, match.length - 1);
              });
            };
          }();
          dateFormat.masks = {
            "default": "ddd mmm dd yyyy HH:MM:ss",
            "shortDate": "m/d/yy",
            "mediumDate": "mmm d, yyyy",
            "longDate": "mmmm d, yyyy",
            "fullDate": "dddd, mmmm d, yyyy",
            "shortTime": "h:MM TT",
            "mediumTime": "h:MM:ss TT",
            "longTime": "h:MM:ss TT Z",
            "isoDate": "yyyy-mm-dd",
            "isoTime": "HH:MM:ss",
            "isoDateTime": "yyyy-mm-dd'T'HH:MM:sso",
            "isoUtcDateTime": "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",
            "expiresHeaderFormat": "ddd, dd mmm yyyy HH:MM:ss Z"
          };
          dateFormat.i18n = {
            dayNames: [
              "Sun",
              "Mon",
              "Tue",
              "Wed",
              "Thu",
              "Fri",
              "Sat",
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            monthNames: [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December"
            ],
            timeNames: [
              "a",
              "p",
              "am",
              "pm",
              "A",
              "P",
              "AM",
              "PM"
            ]
          };
          function pad(val, len) {
            val = String(val);
            len = len || 2;
            while (val.length < len) {
              val = "0" + val;
            }
            return val;
          }
          function getWeek(date) {
            var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());
            targetThursday.setDate(targetThursday.getDate() - (targetThursday.getDay() + 6) % 7 + 3);
            var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);
            firstThursday.setDate(firstThursday.getDate() - (firstThursday.getDay() + 6) % 7 + 3);
            var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
            targetThursday.setHours(targetThursday.getHours() - ds);
            var weekDiff = (targetThursday - firstThursday) / (864e5 * 7);
            return 1 + Math.floor(weekDiff);
          }
          function getDayOfWeek(date) {
            var dow = date.getDay();
            if (dow === 0) {
              dow = 7;
            }
            return dow;
          }
          function kindOf(val) {
            if (val === null) {
              return "null";
            }
            if (val === void 0) {
              return "undefined";
            }
            if (typeof val !== "object") {
              return typeof val;
            }
            if (Array.isArray(val)) {
              return "array";
            }
            return {}.toString.call(val).slice(8, -1).toLowerCase();
          }
          if (false) {
            (void 0)(function() {
              return dateFormat;
            });
          } else {
            module3.exports = dateFormat;
          }
        })(commonjsGlobal2);
      });
      var res = "";
      var cache2;
      var repeatString = repeat;
      function repeat(str, num) {
        if (typeof str !== "string") {
          throw new TypeError("expected a string");
        }
        if (num === 1)
          return str;
        if (num === 2)
          return str + str;
        var max = str.length * num;
        if (cache2 !== str || typeof cache2 === "undefined") {
          cache2 = str;
          res = "";
        } else if (res.length >= max) {
          return res.substr(0, max);
        }
        while (max > res.length && num > 1) {
          if (num & 1) {
            res += str;
          }
          num >>= 1;
          str += str;
        }
        res += str;
        res = res.substr(0, max);
        return res;
      }
      var padLeft = function padLeft2(str, num, ch) {
        str = str.toString();
        if (typeof num === "undefined") {
          return str;
        }
        if (ch === 0) {
          ch = "0";
        } else if (ch) {
          ch = ch.toString();
        } else {
          ch = " ";
        }
        return repeatString(ch, num - str.length) + str;
      };
      var noop4 = function() {
      };
      var link;
      var defaultExts = {
        extension: "",
        prefix: "",
        suffix: ""
      };
      var supportedEncodings = ["image/png", "image/jpeg", "image/webp"];
      function stream(isStart, opts) {
        if (opts === void 0)
          opts = {};
        return new Promise(function(resolve2, reject) {
          opts = objectAssign({}, defaultExts, opts);
          var filename = resolveFilename(Object.assign({}, opts, {
            extension: "",
            frame: void 0
          }));
          var func = isStart ? "streamStart" : "streamEnd";
          var client2 = getClientAPI();
          if (client2 && client2.output && typeof client2[func] === "function") {
            return client2[func](objectAssign({}, opts, {
              filename
            })).then(function(ev) {
              return resolve2(ev);
            });
          } else {
            return resolve2({
              filename,
              client: false
            });
          }
        });
      }
      function streamStart(opts) {
        if (opts === void 0)
          opts = {};
        return stream(true, opts);
      }
      function streamEnd(opts) {
        if (opts === void 0)
          opts = {};
        return stream(false, opts);
      }
      function exportCanvas(canvas, opt) {
        if (opt === void 0)
          opt = {};
        var encoding = opt.encoding || "image/png";
        if (!supportedEncodings.includes(encoding)) {
          throw new Error("Invalid canvas encoding " + encoding);
        }
        var extension = (encoding.split("/")[1] || "").replace(/jpeg/i, "jpg");
        if (extension) {
          extension = ("." + extension).toLowerCase();
        }
        return {
          extension,
          type: encoding,
          dataURL: canvas.toDataURL(encoding, opt.encodingQuality)
        };
      }
      function createBlobFromDataURL(dataURL) {
        return new Promise(function(resolve2) {
          var splitIndex = dataURL.indexOf(",");
          if (splitIndex === -1) {
            resolve2(new window.Blob());
            return;
          }
          var base64 = dataURL.slice(splitIndex + 1);
          var byteString = window.atob(base64);
          var type = dataURL.slice(0, splitIndex);
          var mimeMatch = /data:([^;]+)/.exec(type);
          var mime = (mimeMatch ? mimeMatch[1] : "") || void 0;
          var ab = new ArrayBuffer(byteString.length);
          var ia = new Uint8Array(ab);
          for (var i2 = 0; i2 < byteString.length; i2++) {
            ia[i2] = byteString.charCodeAt(i2);
          }
          resolve2(new window.Blob([ab], {
            type: mime
          }));
        });
      }
      function saveDataURL(dataURL, opts) {
        if (opts === void 0)
          opts = {};
        return createBlobFromDataURL(dataURL).then(function(blob) {
          return saveBlob(blob, opts);
        });
      }
      function saveBlob(blob, opts) {
        if (opts === void 0)
          opts = {};
        return new Promise(function(resolve2) {
          opts = objectAssign({}, defaultExts, opts);
          var filename = opts.filename;
          var client2 = getClientAPI();
          if (client2 && typeof client2.saveBlob === "function" && client2.output) {
            return client2.saveBlob(blob, objectAssign({}, opts, {
              filename
            })).then(function(ev) {
              return resolve2(ev);
            });
          } else {
            if (!link) {
              link = document.createElement("a");
              link.style.visibility = "hidden";
              link.target = "_blank";
            }
            link.download = filename;
            link.href = window.URL.createObjectURL(blob);
            document.body.appendChild(link);
            link.onclick = function() {
              link.onclick = noop4;
              setTimeout(function() {
                window.URL.revokeObjectURL(blob);
                if (link.parentElement) {
                  link.parentElement.removeChild(link);
                }
                link.removeAttribute("href");
                resolve2({
                  filename,
                  client: false
                });
              });
            };
            link.click();
          }
        });
      }
      function saveFile(data3, opts) {
        if (opts === void 0)
          opts = {};
        var parts = Array.isArray(data3) ? data3 : [data3];
        var blob = new window.Blob(parts, {
          type: opts.type || ""
        });
        return saveBlob(blob, opts);
      }
      function getTimeStamp() {
        var dateFormatStr = "yyyy.mm.dd-HH.MM.ss";
        return dateformat(new Date(), dateFormatStr);
      }
      function resolveFilename(opt) {
        if (opt === void 0)
          opt = {};
        opt = objectAssign({}, opt);
        if (typeof opt.file === "function") {
          return opt.file(opt);
        } else if (opt.file) {
          return opt.file;
        }
        var frame2 = null;
        var extension = "";
        if (typeof opt.extension === "string") {
          extension = opt.extension;
        }
        if (typeof opt.frame === "number") {
          var totalFrames;
          if (typeof opt.totalFrames === "number") {
            totalFrames = opt.totalFrames;
          } else {
            totalFrames = Math.max(1e4, opt.frame);
          }
          frame2 = padLeft(String(opt.frame), String(totalFrames).length, "0");
        }
        var layerStr = isFinite(opt.totalLayers) && isFinite(opt.layer) && opt.totalLayers > 1 ? "" + opt.layer : "";
        if (frame2 != null) {
          return [layerStr, frame2].filter(Boolean).join("-") + extension;
        } else {
          var defaultFileName = opt.timeStamp;
          return [opt.prefix, opt.name || defaultFileName, layerStr, opt.hash, opt.suffix].filter(Boolean).join("-") + extension;
        }
      }
      var commonTypos = {
        dimension: "dimensions",
        animated: "animate",
        animating: "animate",
        unit: "units",
        P5: "p5",
        pixellated: "pixelated",
        looping: "loop",
        pixelPerInch: "pixels"
      };
      var allKeys = [
        "dimensions",
        "units",
        "pixelsPerInch",
        "orientation",
        "scaleToFit",
        "scaleToView",
        "bleed",
        "pixelRatio",
        "exportPixelRatio",
        "maxPixelRatio",
        "scaleContext",
        "resizeCanvas",
        "styleCanvas",
        "canvas",
        "context",
        "attributes",
        "parent",
        "file",
        "name",
        "prefix",
        "suffix",
        "animate",
        "playing",
        "loop",
        "duration",
        "totalFrames",
        "fps",
        "playbackRate",
        "timeScale",
        "frame",
        "time",
        "flush",
        "pixelated",
        "hotkeys",
        "p5",
        "id",
        "scaleToFitPadding",
        "data",
        "params",
        "encoding",
        "encodingQuality"
      ];
      var checkSettings = function(settings) {
        var keys2 = Object.keys(settings);
        keys2.forEach(function(key) {
          if (key in commonTypos) {
            var actual = commonTypos[key];
            console.warn('[canvas-sketch] Could not recognize the setting "' + key + '", did you mean "' + actual + '"?');
          } else if (!allKeys.includes(key)) {
            console.warn('[canvas-sketch] Could not recognize the setting "' + key + '"');
          }
        });
      };
      function keyboardShortcuts(opt) {
        if (opt === void 0)
          opt = {};
        var handler = function(ev) {
          if (!opt.enabled()) {
            return;
          }
          var client2 = getClientAPI();
          if (ev.keyCode === 83 && !ev.altKey && (ev.metaKey || ev.ctrlKey)) {
            ev.preventDefault();
            opt.save(ev);
          } else if (ev.keyCode === 32) {
            opt.togglePlay(ev);
          } else if (client2 && !ev.altKey && ev.keyCode === 75 && (ev.metaKey || ev.ctrlKey)) {
            ev.preventDefault();
            opt.commit(ev);
          }
        };
        var attach = function() {
          window.addEventListener("keydown", handler);
        };
        var detach = function() {
          window.removeEventListener("keydown", handler);
        };
        return {
          attach,
          detach
        };
      }
      var defaultUnits = "mm";
      var data2 = [
        ["postcard", 101.6, 152.4],
        ["poster-small", 280, 430],
        ["poster", 460, 610],
        ["poster-large", 610, 910],
        ["business-card", 50.8, 88.9],
        ["2r", 64, 89],
        ["3r", 89, 127],
        ["4r", 102, 152],
        ["5r", 127, 178],
        ["6r", 152, 203],
        ["8r", 203, 254],
        ["10r", 254, 305],
        [
          "11r",
          279,
          356
        ],
        ["12r", 305, 381],
        ["a0", 841, 1189],
        ["a1", 594, 841],
        ["a2", 420, 594],
        [
          "a3",
          297,
          420
        ],
        ["a4", 210, 297],
        ["a5", 148, 210],
        ["a6", 105, 148],
        ["a7", 74, 105],
        [
          "a8",
          52,
          74
        ],
        ["a9", 37, 52],
        ["a10", 26, 37],
        ["2a0", 1189, 1682],
        ["4a0", 1682, 2378],
        [
          "b0",
          1e3,
          1414
        ],
        ["b1", 707, 1e3],
        ["b1+", 720, 1020],
        ["b2", 500, 707],
        ["b2+", 520, 720],
        [
          "b3",
          353,
          500
        ],
        ["b4", 250, 353],
        ["b5", 176, 250],
        ["b6", 125, 176],
        ["b7", 88, 125],
        ["b8", 62, 88],
        ["b9", 44, 62],
        ["b10", 31, 44],
        ["b11", 22, 32],
        ["b12", 16, 22],
        ["c0", 917, 1297],
        [
          "c1",
          648,
          917
        ],
        ["c2", 458, 648],
        ["c3", 324, 458],
        ["c4", 229, 324],
        ["c5", 162, 229],
        [
          "c6",
          114,
          162
        ],
        ["c7", 81, 114],
        ["c8", 57, 81],
        ["c9", 40, 57],
        ["c10", 28, 40],
        ["c11", 22, 32],
        [
          "c12",
          16,
          22
        ],
        ["half-letter", 5.5, 8.5, "in"],
        ["letter", 8.5, 11, "in"],
        ["legal", 8.5, 14, "in"],
        ["junior-legal", 5, 8, "in"],
        ["ledger", 11, 17, "in"],
        ["tabloid", 11, 17, "in"],
        [
          "ansi-a",
          8.5,
          11,
          "in"
        ],
        ["ansi-b", 11, 17, "in"],
        ["ansi-c", 17, 22, "in"],
        [
          "ansi-d",
          22,
          34,
          "in"
        ],
        ["ansi-e", 34, 44, "in"],
        ["arch-a", 9, 12, "in"],
        [
          "arch-b",
          12,
          18,
          "in"
        ],
        ["arch-c", 18, 24, "in"],
        ["arch-d", 24, 36, "in"],
        ["arch-e", 36, 48, "in"],
        [
          "arch-e1",
          30,
          42,
          "in"
        ],
        ["arch-e2", 26, 38, "in"],
        ["arch-e3", 27, 39, "in"]
      ];
      var paperSizes = data2.reduce(function(dict, preset) {
        var item = {
          units: preset[3] || defaultUnits,
          dimensions: [preset[1], preset[2]]
        };
        dict[preset[0]] = item;
        dict[preset[0].replace(/-/g, " ")] = item;
        return dict;
      }, {});
      var defined$1 = function() {
        for (var i2 = 0; i2 < arguments.length; i2++) {
          if (arguments[i2] !== void 0)
            return arguments[i2];
        }
      };
      var units = ["mm", "cm", "m", "pc", "pt", "in", "ft", "px"];
      var conversions = {
        m: {
          system: "metric",
          factor: 1
        },
        cm: {
          system: "metric",
          factor: 1 / 100
        },
        mm: {
          system: "metric",
          factor: 1 / 1e3
        },
        pt: {
          system: "imperial",
          factor: 1 / 72
        },
        pc: {
          system: "imperial",
          factor: 1 / 6
        },
        in: {
          system: "imperial",
          factor: 1
        },
        ft: {
          system: "imperial",
          factor: 12
        }
      };
      const anchors = {
        metric: {
          unit: "m",
          ratio: 1 / 0.0254
        },
        imperial: {
          unit: "in",
          ratio: 0.0254
        }
      };
      function round(value, decimals2) {
        return Number(Math.round(value + "e" + decimals2) + "e-" + decimals2);
      }
      function convertDistance(value, fromUnit, toUnit, opts) {
        if (typeof value !== "number" || !isFinite(value))
          throw new Error("Value must be a finite number");
        if (!fromUnit || !toUnit)
          throw new Error("Must specify from and to units");
        opts = opts || {};
        var pixelsPerInch = defined$1(opts.pixelsPerInch, 96);
        var precision = opts.precision;
        var roundPixel = opts.roundPixel !== false;
        fromUnit = fromUnit.toLowerCase();
        toUnit = toUnit.toLowerCase();
        if (units.indexOf(fromUnit) === -1)
          throw new Error('Invalid from unit "' + fromUnit + '", must be one of: ' + units.join(", "));
        if (units.indexOf(toUnit) === -1)
          throw new Error('Invalid from unit "' + toUnit + '", must be one of: ' + units.join(", "));
        if (fromUnit === toUnit) {
          return value;
        }
        var toFactor = 1;
        var fromFactor = 1;
        var isToPixel = false;
        if (fromUnit === "px") {
          fromFactor = 1 / pixelsPerInch;
          fromUnit = "in";
        }
        if (toUnit === "px") {
          isToPixel = true;
          toFactor = pixelsPerInch;
          toUnit = "in";
        }
        var fromUnitData = conversions[fromUnit];
        var toUnitData = conversions[toUnit];
        var anchor = value * fromUnitData.factor * fromFactor;
        if (fromUnitData.system !== toUnitData.system) {
          anchor *= anchors[fromUnitData.system].ratio;
        }
        var result = anchor / toUnitData.factor * toFactor;
        if (isToPixel && roundPixel) {
          result = Math.round(result);
        } else if (typeof precision === "number" && isFinite(precision)) {
          result = round(result, precision);
        }
        return result;
      }
      var convertLength = convertDistance;
      var units_1 = units;
      convertLength.units = units_1;
      function getDimensionsFromPreset(dimensions, unitsTo, pixelsPerInch) {
        if (unitsTo === void 0)
          unitsTo = "px";
        if (pixelsPerInch === void 0)
          pixelsPerInch = 72;
        if (typeof dimensions === "string") {
          var key = dimensions.toLowerCase();
          if (!(key in paperSizes)) {
            throw new Error('The dimension preset "' + dimensions + '" is not supported or could not be found; try using a4, a3, postcard, letter, etc.');
          }
          var preset = paperSizes[key];
          return preset.dimensions.map(function(d) {
            return convertDistance$1(d, preset.units, unitsTo, pixelsPerInch);
          });
        } else {
          return dimensions;
        }
      }
      function convertDistance$1(dimension, unitsFrom, unitsTo, pixelsPerInch) {
        if (unitsFrom === void 0)
          unitsFrom = "px";
        if (unitsTo === void 0)
          unitsTo = "px";
        if (pixelsPerInch === void 0)
          pixelsPerInch = 72;
        return convertLength(dimension, unitsFrom, unitsTo, {
          pixelsPerInch,
          precision: 4,
          roundPixel: true
        });
      }
      function checkIfHasDimensions(settings) {
        if (!settings.dimensions) {
          return false;
        }
        if (typeof settings.dimensions === "string") {
          return true;
        }
        if (Array.isArray(settings.dimensions) && settings.dimensions.length >= 2) {
          return true;
        }
        return false;
      }
      function getParentSize(props, settings) {
        if (!isBrowser()) {
          return [300, 150];
        }
        var element = settings.parent || window;
        if (element === window || element === document || element === document.body) {
          return [window.innerWidth, window.innerHeight];
        } else {
          var ref = element.getBoundingClientRect();
          var width3 = ref.width;
          var height3 = ref.height;
          return [width3, height3];
        }
      }
      function resizeCanvas(props, settings) {
        var width3, height3;
        var styleWidth, styleHeight;
        var canvasWidth, canvasHeight;
        var browser2 = isBrowser();
        var dimensions = settings.dimensions;
        var hasDimensions = checkIfHasDimensions(settings);
        var exporting = props.exporting;
        var scaleToFit = hasDimensions ? settings.scaleToFit !== false : false;
        var scaleToView = !exporting && hasDimensions ? settings.scaleToView : true;
        if (!browser2) {
          scaleToFit = scaleToView = false;
        }
        var units2 = settings.units;
        var pixelsPerInch = typeof settings.pixelsPerInch === "number" && isFinite(settings.pixelsPerInch) ? settings.pixelsPerInch : 72;
        var bleed = defined(settings.bleed, 0);
        var devicePixelRatio = browser2 ? window.devicePixelRatio : 1;
        var basePixelRatio = scaleToView ? devicePixelRatio : 1;
        var pixelRatio, exportPixelRatio;
        if (typeof settings.pixelRatio === "number" && isFinite(settings.pixelRatio)) {
          pixelRatio = settings.pixelRatio;
          exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);
        } else {
          if (hasDimensions) {
            pixelRatio = basePixelRatio;
            exportPixelRatio = defined(settings.exportPixelRatio, 1);
          } else {
            pixelRatio = devicePixelRatio;
            exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);
          }
        }
        if (typeof settings.maxPixelRatio === "number" && isFinite(settings.maxPixelRatio)) {
          pixelRatio = Math.min(settings.maxPixelRatio, pixelRatio);
        }
        if (exporting) {
          pixelRatio = exportPixelRatio;
        }
        var ref = getParentSize(props, settings);
        var parentWidth = ref[0];
        var parentHeight = ref[1];
        var trimWidth, trimHeight;
        if (hasDimensions) {
          var result = getDimensionsFromPreset(dimensions, units2, pixelsPerInch);
          var highest = Math.max(result[0], result[1]);
          var lowest = Math.min(result[0], result[1]);
          if (settings.orientation) {
            var landscape = settings.orientation === "landscape";
            width3 = landscape ? highest : lowest;
            height3 = landscape ? lowest : highest;
          } else {
            width3 = result[0];
            height3 = result[1];
          }
          trimWidth = width3;
          trimHeight = height3;
          width3 += bleed * 2;
          height3 += bleed * 2;
        } else {
          width3 = parentWidth;
          height3 = parentHeight;
          trimWidth = width3;
          trimHeight = height3;
        }
        var realWidth = width3;
        var realHeight = height3;
        if (hasDimensions && units2) {
          realWidth = convertDistance$1(width3, units2, "px", pixelsPerInch);
          realHeight = convertDistance$1(height3, units2, "px", pixelsPerInch);
        }
        styleWidth = Math.round(realWidth);
        styleHeight = Math.round(realHeight);
        if (scaleToFit && !exporting && hasDimensions) {
          var aspect = width3 / height3;
          var windowAspect = parentWidth / parentHeight;
          var scaleToFitPadding = defined(settings.scaleToFitPadding, 40);
          var maxWidth = Math.round(parentWidth - scaleToFitPadding * 2);
          var maxHeight = Math.round(parentHeight - scaleToFitPadding * 2);
          if (styleWidth > maxWidth || styleHeight > maxHeight) {
            if (windowAspect > aspect) {
              styleHeight = maxHeight;
              styleWidth = Math.round(styleHeight * aspect);
            } else {
              styleWidth = maxWidth;
              styleHeight = Math.round(styleWidth / aspect);
            }
          }
        }
        canvasWidth = scaleToView ? Math.round(pixelRatio * styleWidth) : Math.round(pixelRatio * realWidth);
        canvasHeight = scaleToView ? Math.round(pixelRatio * styleHeight) : Math.round(pixelRatio * realHeight);
        var viewportWidth = scaleToView ? Math.round(styleWidth) : Math.round(realWidth);
        var viewportHeight = scaleToView ? Math.round(styleHeight) : Math.round(realHeight);
        var scaleX = canvasWidth / width3;
        var scaleY = canvasHeight / height3;
        return {
          bleed,
          pixelRatio,
          width: width3,
          height: height3,
          dimensions: [width3, height3],
          units: units2 || "px",
          scaleX,
          scaleY,
          pixelsPerInch,
          viewportWidth,
          viewportHeight,
          canvasWidth,
          canvasHeight,
          trimWidth,
          trimHeight,
          styleWidth,
          styleHeight
        };
      }
      var getCanvasContext_1 = getCanvasContext;
      function getCanvasContext(type, opts) {
        if (typeof type !== "string") {
          throw new TypeError("must specify type string");
        }
        opts = opts || {};
        if (typeof document === "undefined" && !opts.canvas) {
          return null;
        }
        var canvas = opts.canvas || document.createElement("canvas");
        if (typeof opts.width === "number") {
          canvas.width = opts.width;
        }
        if (typeof opts.height === "number") {
          canvas.height = opts.height;
        }
        var attribs = opts;
        var gl;
        try {
          var names = [type];
          if (type.indexOf("webgl") === 0) {
            names.push("experimental-" + type);
          }
          for (var i2 = 0; i2 < names.length; i2++) {
            gl = canvas.getContext(names[i2], attribs);
            if (gl)
              return gl;
          }
        } catch (e2) {
          gl = null;
        }
        return gl || null;
      }
      function createCanvasElement() {
        if (!isBrowser()) {
          throw new Error("It appears you are runing from Node.js or a non-browser environment. Try passing in an existing { canvas } interface instead.");
        }
        return document.createElement("canvas");
      }
      function createCanvas(settings) {
        if (settings === void 0)
          settings = {};
        var context, canvas;
        var ownsCanvas = false;
        if (settings.canvas !== false) {
          context = settings.context;
          if (!context || typeof context === "string") {
            var newCanvas = settings.canvas;
            if (!newCanvas) {
              newCanvas = createCanvasElement();
              ownsCanvas = true;
            }
            var type = context || "2d";
            if (typeof newCanvas.getContext !== "function") {
              throw new Error("The specified { canvas } element does not have a getContext() function, maybe it is not a <canvas> tag?");
            }
            context = getCanvasContext_1(type, objectAssign({}, settings.attributes, {
              canvas: newCanvas
            }));
            if (!context) {
              throw new Error("Failed at canvas.getContext('" + type + "') - the browser may not support this context, or a different context may already be in use with this canvas.");
            }
          }
          canvas = context.canvas;
          if (settings.canvas && canvas !== settings.canvas) {
            throw new Error("The { canvas } and { context } settings must point to the same underlying canvas element");
          }
          if (settings.pixelated) {
            context.imageSmoothingEnabled = false;
            context.mozImageSmoothingEnabled = false;
            context.oImageSmoothingEnabled = false;
            context.webkitImageSmoothingEnabled = false;
            context.msImageSmoothingEnabled = false;
            canvas.style["image-rendering"] = "pixelated";
          }
        }
        return {
          canvas,
          context,
          ownsCanvas
        };
      }
      var SketchManager = function SketchManager2() {
        var this$1 = this;
        this._settings = {};
        this._props = {};
        this._sketch = void 0;
        this._raf = null;
        this._recordTimeout = null;
        this._lastRedrawResult = void 0;
        this._isP5Resizing = false;
        this._keyboardShortcuts = keyboardShortcuts({
          enabled: function() {
            return this$1.settings.hotkeys !== false;
          },
          save: function(ev) {
            if (ev.shiftKey) {
              if (this$1.props.recording) {
                this$1.endRecord();
                this$1.run();
              } else {
                this$1.record();
              }
            } else if (!this$1.props.recording) {
              this$1.exportFrame();
            }
          },
          togglePlay: function() {
            if (this$1.props.playing) {
              this$1.pause();
            } else {
              this$1.play();
            }
          },
          commit: function(ev) {
            this$1.exportFrame({
              commit: true
            });
          }
        });
        this._animateHandler = function() {
          return this$1.animate();
        };
        this._resizeHandler = function() {
          var changed = this$1.resize();
          if (changed) {
            this$1.render();
          }
        };
      };
      var prototypeAccessors = { sketch: { configurable: true }, settings: { configurable: true }, props: { configurable: true } };
      prototypeAccessors.sketch.get = function() {
        return this._sketch;
      };
      prototypeAccessors.settings.get = function() {
        return this._settings;
      };
      prototypeAccessors.props.get = function() {
        return this._props;
      };
      SketchManager.prototype._computePlayhead = function _computePlayhead(currentTime, duration) {
        var hasDuration = typeof duration === "number" && isFinite(duration);
        return hasDuration ? currentTime / duration : 0;
      };
      SketchManager.prototype._computeFrame = function _computeFrame(playhead, time, totalFrames, fps) {
        return isFinite(totalFrames) && totalFrames > 1 ? Math.floor(playhead * (totalFrames - 1)) : Math.floor(fps * time);
      };
      SketchManager.prototype._computeCurrentFrame = function _computeCurrentFrame() {
        return this._computeFrame(this.props.playhead, this.props.time, this.props.totalFrames, this.props.fps);
      };
      SketchManager.prototype._getSizeProps = function _getSizeProps() {
        var props = this.props;
        return {
          width: props.width,
          height: props.height,
          pixelRatio: props.pixelRatio,
          canvasWidth: props.canvasWidth,
          canvasHeight: props.canvasHeight,
          viewportWidth: props.viewportWidth,
          viewportHeight: props.viewportHeight
        };
      };
      SketchManager.prototype.run = function run2() {
        if (!this.sketch) {
          throw new Error("should wait until sketch is loaded before trying to play()");
        }
        if (this.settings.playing !== false) {
          this.play();
        }
        if (typeof this.sketch.dispose === "function") {
          console.warn("In canvas-sketch@0.0.23 the dispose() event has been renamed to unload()");
        }
        if (!this.props.started) {
          this._signalBegin();
          this.props.started = true;
        }
        this.tick();
        this.render();
        return this;
      };
      SketchManager.prototype._cancelTimeouts = function _cancelTimeouts() {
        if (this._raf != null && typeof window !== "undefined" && typeof window.cancelAnimationFrame === "function") {
          window.cancelAnimationFrame(this._raf);
          this._raf = null;
        }
        if (this._recordTimeout != null) {
          clearTimeout(this._recordTimeout);
          this._recordTimeout = null;
        }
      };
      SketchManager.prototype.play = function play() {
        var animate = this.settings.animate;
        if ("animation" in this.settings) {
          animate = true;
          console.warn("[canvas-sketch] { animation } has been renamed to { animate }");
        }
        if (!animate) {
          return;
        }
        if (!isBrowser()) {
          console.error("[canvas-sketch] WARN: Using { animate } in Node.js is not yet supported");
          return;
        }
        if (this.props.playing) {
          return;
        }
        if (!this.props.started) {
          this._signalBegin();
          this.props.started = true;
        }
        this.props.playing = true;
        this._cancelTimeouts();
        this._lastTime = browser();
        this._raf = window.requestAnimationFrame(this._animateHandler);
      };
      SketchManager.prototype.pause = function pause() {
        if (this.props.recording) {
          this.endRecord();
        }
        this.props.playing = false;
        this._cancelTimeouts();
      };
      SketchManager.prototype.togglePlay = function togglePlay() {
        if (this.props.playing) {
          this.pause();
        } else {
          this.play();
        }
      };
      SketchManager.prototype.stop = function stop() {
        this.pause();
        this.props.frame = 0;
        this.props.playhead = 0;
        this.props.time = 0;
        this.props.deltaTime = 0;
        this.props.started = false;
        this.render();
      };
      SketchManager.prototype.record = function record() {
        var this$1 = this;
        if (this.props.recording) {
          return;
        }
        if (!isBrowser()) {
          console.error("[canvas-sketch] WARN: Recording from Node.js is not yet supported");
          return;
        }
        this.stop();
        this.props.playing = true;
        this.props.recording = true;
        var exportOpts = this._createExportOptions({
          sequence: true
        });
        var frameInterval = 1 / this.props.fps;
        this._cancelTimeouts();
        var tick = function() {
          if (!this$1.props.recording) {
            return Promise.resolve();
          }
          this$1.props.deltaTime = frameInterval;
          this$1.tick();
          return this$1.exportFrame(exportOpts).then(function() {
            if (!this$1.props.recording) {
              return;
            }
            this$1.props.deltaTime = 0;
            this$1.props.frame++;
            if (this$1.props.frame < this$1.props.totalFrames) {
              this$1.props.time += frameInterval;
              this$1.props.playhead = this$1._computePlayhead(this$1.props.time, this$1.props.duration);
              this$1._recordTimeout = setTimeout(tick, 0);
            } else {
              console.log("Finished recording");
              this$1._signalEnd();
              this$1.endRecord();
              this$1.stop();
              this$1.run();
            }
          });
        };
        if (!this.props.started) {
          this._signalBegin();
          this.props.started = true;
        }
        if (this.sketch && typeof this.sketch.beginRecord === "function") {
          this._wrapContextScale(function(props) {
            return this$1.sketch.beginRecord(props);
          });
        }
        streamStart(exportOpts).catch(function(err) {
          console.error(err);
        }).then(function(response) {
          this$1._raf = window.requestAnimationFrame(tick);
        });
      };
      SketchManager.prototype._signalBegin = function _signalBegin() {
        var this$1 = this;
        if (this.sketch && typeof this.sketch.begin === "function") {
          this._wrapContextScale(function(props) {
            return this$1.sketch.begin(props);
          });
        }
      };
      SketchManager.prototype._signalEnd = function _signalEnd() {
        var this$1 = this;
        if (this.sketch && typeof this.sketch.end === "function") {
          this._wrapContextScale(function(props) {
            return this$1.sketch.end(props);
          });
        }
      };
      SketchManager.prototype.endRecord = function endRecord() {
        var this$1 = this;
        var wasRecording = this.props.recording;
        this._cancelTimeouts();
        this.props.recording = false;
        this.props.deltaTime = 0;
        this.props.playing = false;
        return streamEnd().catch(function(err) {
          console.error(err);
        }).then(function() {
          if (wasRecording && this$1.sketch && typeof this$1.sketch.endRecord === "function") {
            this$1._wrapContextScale(function(props) {
              return this$1.sketch.endRecord(props);
            });
          }
        });
      };
      SketchManager.prototype._createExportOptions = function _createExportOptions(opt) {
        if (opt === void 0)
          opt = {};
        return {
          sequence: opt.sequence,
          save: opt.save,
          fps: this.props.fps,
          frame: opt.sequence ? this.props.frame : void 0,
          file: this.settings.file,
          name: this.settings.name,
          prefix: this.settings.prefix,
          suffix: this.settings.suffix,
          encoding: this.settings.encoding,
          encodingQuality: this.settings.encodingQuality,
          timeStamp: opt.timeStamp || getTimeStamp(),
          totalFrames: isFinite(this.props.totalFrames) ? Math.max(0, this.props.totalFrames) : 1e3
        };
      };
      SketchManager.prototype.exportFrame = function exportFrame(opt) {
        var this$1 = this;
        if (opt === void 0)
          opt = {};
        if (!this.sketch) {
          return Promise.all([]);
        }
        if (typeof this.sketch.preExport === "function") {
          this.sketch.preExport();
        }
        var exportOpts = this._createExportOptions(opt);
        var client2 = getClientAPI();
        var p = Promise.resolve();
        if (client2 && opt.commit && typeof client2.commit === "function") {
          var commitOpts = objectAssign({}, exportOpts);
          var hash2 = client2.commit(commitOpts);
          if (isPromise_1(hash2)) {
            p = hash2;
          } else {
            p = Promise.resolve(hash2);
          }
        }
        return p.then(function(hash3) {
          return this$1._doExportFrame(objectAssign({}, exportOpts, {
            hash: hash3 || ""
          }));
        }).then(function(result) {
          if (result.length === 1) {
            return result[0];
          } else {
            return result;
          }
        });
      };
      SketchManager.prototype._doExportFrame = function _doExportFrame(exportOpts) {
        var this$1 = this;
        if (exportOpts === void 0)
          exportOpts = {};
        this._props.exporting = true;
        this.resize();
        var drawResult = this.render();
        var canvas = this.props.canvas;
        if (typeof drawResult === "undefined") {
          drawResult = [canvas];
        }
        drawResult = [].concat(drawResult).filter(Boolean);
        drawResult = drawResult.map(function(result) {
          var hasDataObject = typeof result === "object" && result && ("data" in result || "dataURL" in result);
          var data3 = hasDataObject ? result.data : result;
          var opts = hasDataObject ? objectAssign({}, result, {
            data: data3
          }) : {
            data: data3
          };
          if (isCanvas(data3)) {
            var encoding = opts.encoding || exportOpts.encoding;
            var encodingQuality = defined(opts.encodingQuality, exportOpts.encodingQuality, 0.95);
            var ref = exportCanvas(data3, {
              encoding,
              encodingQuality
            });
            var dataURL = ref.dataURL;
            var extension = ref.extension;
            var type = ref.type;
            return Object.assign(opts, {
              dataURL,
              extension,
              type
            });
          } else {
            return opts;
          }
        });
        this._props.exporting = false;
        this.resize();
        this.render();
        return Promise.all(drawResult.map(function(result, i2, layerList) {
          var curOpt = objectAssign({
            extension: "",
            prefix: "",
            suffix: ""
          }, exportOpts, result, {
            layer: i2,
            totalLayers: layerList.length
          });
          var saveParam = exportOpts.save === false ? false : result.save;
          curOpt.save = saveParam !== false;
          curOpt.filename = resolveFilename(curOpt);
          delete curOpt.encoding;
          delete curOpt.encodingQuality;
          for (var k in curOpt) {
            if (typeof curOpt[k] === "undefined") {
              delete curOpt[k];
            }
          }
          var savePromise = Promise.resolve({});
          if (curOpt.save) {
            var data3 = curOpt.data;
            if (curOpt.dataURL) {
              var dataURL = curOpt.dataURL;
              savePromise = saveDataURL(dataURL, curOpt);
            } else {
              savePromise = saveFile(data3, curOpt);
            }
          }
          return savePromise.then(function(saveResult) {
            return Object.assign({}, curOpt, saveResult);
          });
        })).then(function(ev) {
          var savedEvents = ev.filter(function(e2) {
            return e2.save;
          });
          if (savedEvents.length > 0) {
            var eventWithOutput = savedEvents.find(function(e2) {
              return e2.outputName;
            });
            var isClient = savedEvents.some(function(e2) {
              return e2.client;
            });
            var isStreaming = savedEvents.some(function(e2) {
              return e2.stream;
            });
            var item;
            if (savedEvents.length > 1) {
              item = savedEvents.length;
            } else if (eventWithOutput) {
              item = eventWithOutput.outputName + "/" + savedEvents[0].filename;
            } else {
              item = "" + savedEvents[0].filename;
            }
            var ofSeq = "";
            if (exportOpts.sequence) {
              var hasTotalFrames = isFinite(this$1.props.totalFrames);
              ofSeq = hasTotalFrames ? " (frame " + (exportOpts.frame + 1) + " / " + this$1.props.totalFrames + ")" : " (frame " + exportOpts.frame + ")";
            } else if (savedEvents.length > 1) {
              ofSeq = " files";
            }
            var client2 = isClient ? "canvas-sketch-cli" : "canvas-sketch";
            var action = isStreaming ? "Streaming into" : "Exported";
            console.log("%c[" + client2 + "]%c " + action + " %c" + item + "%c" + ofSeq, "color: #8e8e8e;", "color: initial;", "font-weight: bold;", "font-weight: initial;");
          }
          if (typeof this$1.sketch.postExport === "function") {
            this$1.sketch.postExport();
          }
          return ev;
        });
      };
      SketchManager.prototype._wrapContextScale = function _wrapContextScale(cb) {
        this._preRender();
        cb(this.props);
        this._postRender();
      };
      SketchManager.prototype._preRender = function _preRender() {
        var props = this.props;
        if (!this.props.gl && props.context && !props.p5) {
          props.context.save();
          if (this.settings.scaleContext !== false) {
            props.context.scale(props.scaleX, props.scaleY);
          }
        } else if (props.p5) {
          props.p5.scale(props.scaleX / props.pixelRatio, props.scaleY / props.pixelRatio);
        }
      };
      SketchManager.prototype._postRender = function _postRender() {
        var props = this.props;
        if (!this.props.gl && props.context && !props.p5) {
          props.context.restore();
        }
        if (props.gl && this.settings.flush !== false && !props.p5) {
          props.gl.flush();
        }
      };
      SketchManager.prototype.tick = function tick() {
        if (this.sketch && typeof this.sketch.tick === "function") {
          this._preRender();
          this.sketch.tick(this.props);
          this._postRender();
        }
      };
      SketchManager.prototype.render = function render2() {
        if (this.props.p5) {
          this._lastRedrawResult = void 0;
          this.props.p5.redraw();
          return this._lastRedrawResult;
        } else {
          return this.submitDrawCall();
        }
      };
      SketchManager.prototype.submitDrawCall = function submitDrawCall() {
        if (!this.sketch) {
          return;
        }
        var props = this.props;
        this._preRender();
        var drawResult;
        if (typeof this.sketch === "function") {
          drawResult = this.sketch(props);
        } else if (typeof this.sketch.render === "function") {
          drawResult = this.sketch.render(props);
        }
        this._postRender();
        return drawResult;
      };
      SketchManager.prototype.update = function update(opt) {
        var this$1 = this;
        if (opt === void 0)
          opt = {};
        var notYetSupported = ["animate"];
        Object.keys(opt).forEach(function(key2) {
          if (notYetSupported.indexOf(key2) >= 0) {
            throw new Error("Sorry, the { " + key2 + " } option is not yet supported with update().");
          }
        });
        var oldCanvas = this._settings.canvas;
        var oldContext = this._settings.context;
        for (var key in opt) {
          var value = opt[key];
          if (typeof value !== "undefined") {
            this$1._settings[key] = value;
          }
        }
        var timeOpts = Object.assign({}, this._settings, opt);
        if ("time" in opt && "frame" in opt) {
          throw new Error("You should specify { time } or { frame } but not both");
        } else if ("time" in opt) {
          delete timeOpts.frame;
        } else if ("frame" in opt) {
          delete timeOpts.time;
        }
        if ("duration" in opt && "totalFrames" in opt) {
          throw new Error("You should specify { duration } or { totalFrames } but not both");
        } else if ("duration" in opt) {
          delete timeOpts.totalFrames;
        } else if ("totalFrames" in opt) {
          delete timeOpts.duration;
        }
        if ("data" in opt) {
          this._props.data = opt.data;
        }
        var timeProps = this.getTimeProps(timeOpts);
        Object.assign(this._props, timeProps);
        if (oldCanvas !== this._settings.canvas || oldContext !== this._settings.context) {
          var ref = createCanvas(this._settings);
          var canvas = ref.canvas;
          var context = ref.context;
          this.props.canvas = canvas;
          this.props.context = context;
          this._setupGLKey();
          this._appendCanvasIfNeeded();
        }
        if (opt.p5 && typeof opt.p5 !== "function") {
          this.props.p5 = opt.p5;
          this.props.p5.draw = function() {
            if (this$1._isP5Resizing) {
              return;
            }
            this$1._lastRedrawResult = this$1.submitDrawCall();
          };
        }
        if ("playing" in opt) {
          if (opt.playing) {
            this.play();
          } else {
            this.pause();
          }
        }
        checkSettings(this._settings);
        this.resize();
        this.render();
        return this.props;
      };
      SketchManager.prototype.resize = function resize() {
        var oldSizes = this._getSizeProps();
        var settings = this.settings;
        var props = this.props;
        var newProps = resizeCanvas(props, settings);
        Object.assign(this._props, newProps);
        var ref = this.props;
        var pixelRatio = ref.pixelRatio;
        var canvasWidth = ref.canvasWidth;
        var canvasHeight = ref.canvasHeight;
        var styleWidth = ref.styleWidth;
        var styleHeight = ref.styleHeight;
        var canvas = this.props.canvas;
        if (canvas && settings.resizeCanvas !== false) {
          if (props.p5) {
            if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {
              this._isP5Resizing = true;
              props.p5.pixelDensity(pixelRatio);
              props.p5.resizeCanvas(canvasWidth / pixelRatio, canvasHeight / pixelRatio, false);
              this._isP5Resizing = false;
            }
          } else {
            if (canvas.width !== canvasWidth) {
              canvas.width = canvasWidth;
            }
            if (canvas.height !== canvasHeight) {
              canvas.height = canvasHeight;
            }
          }
          if (isBrowser() && settings.styleCanvas !== false) {
            canvas.style.width = styleWidth + "px";
            canvas.style.height = styleHeight + "px";
          }
        }
        var newSizes = this._getSizeProps();
        var changed = !deepEqual_1(oldSizes, newSizes);
        if (changed) {
          this._sizeChanged();
        }
        return changed;
      };
      SketchManager.prototype._sizeChanged = function _sizeChanged() {
        if (this.sketch && typeof this.sketch.resize === "function") {
          this.sketch.resize(this.props);
        }
      };
      SketchManager.prototype.animate = function animate() {
        if (!this.props.playing) {
          return;
        }
        if (!isBrowser()) {
          console.error("[canvas-sketch] WARN: Animation in Node.js is not yet supported");
          return;
        }
        this._raf = window.requestAnimationFrame(this._animateHandler);
        var now2 = browser();
        var fps = this.props.fps;
        var frameIntervalMS = 1e3 / fps;
        var deltaTimeMS = now2 - this._lastTime;
        var duration = this.props.duration;
        var hasDuration = typeof duration === "number" && isFinite(duration);
        var isNewFrame = true;
        var playbackRate = this.settings.playbackRate;
        if (playbackRate === "fixed") {
          deltaTimeMS = frameIntervalMS;
        } else if (playbackRate === "throttle") {
          if (deltaTimeMS > frameIntervalMS) {
            now2 = now2 - deltaTimeMS % frameIntervalMS;
            this._lastTime = now2;
          } else {
            isNewFrame = false;
          }
        } else {
          this._lastTime = now2;
        }
        var deltaTime = deltaTimeMS / 1e3;
        var newTime = this.props.time + deltaTime * this.props.timeScale;
        if (newTime < 0 && hasDuration) {
          newTime = duration + newTime;
        }
        var isFinished = false;
        var isLoopStart = false;
        var looping = this.settings.loop !== false;
        if (hasDuration && newTime >= duration) {
          if (looping) {
            isNewFrame = true;
            newTime = newTime % duration;
            isLoopStart = true;
          } else {
            isNewFrame = false;
            newTime = duration;
            isFinished = true;
          }
          this._signalEnd();
        }
        if (isNewFrame) {
          this.props.deltaTime = deltaTime;
          this.props.time = newTime;
          this.props.playhead = this._computePlayhead(newTime, duration);
          var lastFrame = this.props.frame;
          this.props.frame = this._computeCurrentFrame();
          if (isLoopStart) {
            this._signalBegin();
          }
          if (lastFrame !== this.props.frame) {
            this.tick();
          }
          this.render();
          this.props.deltaTime = 0;
        }
        if (isFinished) {
          this.pause();
        }
      };
      SketchManager.prototype.dispatch = function dispatch(cb) {
        if (typeof cb !== "function") {
          throw new Error("must pass function into dispatch()");
        }
        cb(this.props);
        this.render();
      };
      SketchManager.prototype.mount = function mount() {
        this._appendCanvasIfNeeded();
      };
      SketchManager.prototype.unmount = function unmount() {
        if (isBrowser()) {
          window.removeEventListener("resize", this._resizeHandler);
          this._keyboardShortcuts.detach();
        }
        if (this.props.canvas.parentElement) {
          this.props.canvas.parentElement.removeChild(this.props.canvas);
        }
      };
      SketchManager.prototype._appendCanvasIfNeeded = function _appendCanvasIfNeeded() {
        if (!isBrowser()) {
          return;
        }
        if (this.settings.parent !== false && (this.props.canvas && !this.props.canvas.parentElement)) {
          var defaultParent = this.settings.parent || document.body;
          defaultParent.appendChild(this.props.canvas);
        }
      };
      SketchManager.prototype._setupGLKey = function _setupGLKey() {
        if (this.props.context) {
          if (isWebGLContext(this.props.context)) {
            this._props.gl = this.props.context;
          } else {
            delete this._props.gl;
          }
        }
      };
      SketchManager.prototype.getTimeProps = function getTimeProps(settings) {
        if (settings === void 0)
          settings = {};
        var duration = settings.duration;
        var totalFrames = settings.totalFrames;
        var timeScale = defined(settings.timeScale, 1);
        var fps = defined(settings.fps, 24);
        var hasDuration = typeof duration === "number" && isFinite(duration);
        var hasTotalFrames = typeof totalFrames === "number" && isFinite(totalFrames);
        var totalFramesFromDuration = hasDuration ? Math.floor(fps * duration) : void 0;
        var durationFromTotalFrames = hasTotalFrames ? totalFrames / fps : void 0;
        if (hasDuration && hasTotalFrames && totalFramesFromDuration !== totalFrames) {
          throw new Error("You should specify either duration or totalFrames, but not both. Or, they must match exactly.");
        }
        if (typeof settings.dimensions === "undefined" && typeof settings.units !== "undefined") {
          console.warn("You've specified a { units } setting but no { dimension }, so the units will be ignored.");
        }
        totalFrames = defined(totalFrames, totalFramesFromDuration, Infinity);
        duration = defined(duration, durationFromTotalFrames, Infinity);
        var startTime = settings.time;
        var startFrame = settings.frame;
        var hasStartTime = typeof startTime === "number" && isFinite(startTime);
        var hasStartFrame = typeof startFrame === "number" && isFinite(startFrame);
        var time = 0;
        var frame2 = 0;
        var playhead = 0;
        if (hasStartTime && hasStartFrame) {
          throw new Error("You should specify either start frame or time, but not both.");
        } else if (hasStartTime) {
          time = startTime;
          playhead = this._computePlayhead(time, duration);
          frame2 = this._computeFrame(playhead, time, totalFrames, fps);
        } else if (hasStartFrame) {
          frame2 = startFrame;
          time = frame2 / fps;
          playhead = this._computePlayhead(time, duration);
        }
        return {
          playhead,
          time,
          frame: frame2,
          duration,
          totalFrames,
          fps,
          timeScale
        };
      };
      SketchManager.prototype.setup = function setup(settings) {
        var this$1 = this;
        if (settings === void 0)
          settings = {};
        if (this.sketch) {
          throw new Error("Multiple setup() calls not yet supported.");
        }
        this._settings = Object.assign({}, settings, this._settings);
        checkSettings(this._settings);
        var ref = createCanvas(this._settings);
        var context = ref.context;
        var canvas = ref.canvas;
        var timeProps = this.getTimeProps(this._settings);
        this._props = Object.assign({}, timeProps, {
          canvas,
          context,
          deltaTime: 0,
          started: false,
          exporting: false,
          playing: false,
          recording: false,
          settings: this.settings,
          data: this.settings.data,
          render: function() {
            return this$1.render();
          },
          togglePlay: function() {
            return this$1.togglePlay();
          },
          dispatch: function(cb) {
            return this$1.dispatch(cb);
          },
          tick: function() {
            return this$1.tick();
          },
          resize: function() {
            return this$1.resize();
          },
          update: function(opt) {
            return this$1.update(opt);
          },
          exportFrame: function(opt) {
            return this$1.exportFrame(opt);
          },
          record: function() {
            return this$1.record();
          },
          play: function() {
            return this$1.play();
          },
          pause: function() {
            return this$1.pause();
          },
          stop: function() {
            return this$1.stop();
          }
        });
        this._setupGLKey();
        this.resize();
      };
      SketchManager.prototype.loadAndRun = function loadAndRun(canvasSketch2, newSettings) {
        var this$1 = this;
        return this.load(canvasSketch2, newSettings).then(function() {
          this$1.run();
          return this$1;
        });
      };
      SketchManager.prototype.unload = function unload() {
        var this$1 = this;
        this.pause();
        if (!this.sketch) {
          return;
        }
        if (typeof this.sketch.unload === "function") {
          this._wrapContextScale(function(props) {
            return this$1.sketch.unload(props);
          });
        }
        this._sketch = null;
      };
      SketchManager.prototype.destroy = function destroy() {
        this.unload();
        this.unmount();
      };
      SketchManager.prototype.load = function load3(createSketch, newSettings) {
        var this$1 = this;
        if (typeof createSketch !== "function") {
          throw new Error("The function must take in a function as the first parameter. Example:\n  canvasSketcher(() => { ... }, settings)");
        }
        if (this.sketch) {
          this.unload();
        }
        if (typeof newSettings !== "undefined") {
          this.update(newSettings);
        }
        this._preRender();
        var preload = Promise.resolve();
        if (this.settings.p5) {
          if (!isBrowser()) {
            throw new Error("[canvas-sketch] ERROR: Using p5.js in Node.js is not supported");
          }
          preload = new Promise(function(resolve2) {
            var P5Constructor = this$1.settings.p5;
            var preload2;
            if (P5Constructor.p5) {
              preload2 = P5Constructor.preload;
              P5Constructor = P5Constructor.p5;
            }
            var p5Sketch = function(p5) {
              if (preload2) {
                p5.preload = function() {
                  return preload2(p5);
                };
              }
              p5.setup = function() {
                var props = this$1.props;
                var isGL = this$1.settings.context === "webgl";
                var renderer = isGL ? p5.WEBGL : p5.P2D;
                p5.noLoop();
                p5.pixelDensity(props.pixelRatio);
                p5.createCanvas(props.viewportWidth, props.viewportHeight, renderer);
                if (isGL && this$1.settings.attributes) {
                  p5.setAttributes(this$1.settings.attributes);
                }
                this$1.update({
                  p5,
                  canvas: p5.canvas,
                  context: p5._renderer.drawingContext
                });
                resolve2();
              };
            };
            if (typeof P5Constructor === "function") {
              new P5Constructor(p5Sketch);
            } else {
              if (typeof window.createCanvas !== "function") {
                throw new Error("{ p5 } setting is passed but can't find p5.js in global (window) scope. Maybe you did not create it globally?\nnew p5(); // <-- attaches to global scope");
              }
              p5Sketch(window);
            }
          });
        }
        return preload.then(function() {
          var loader = createSketch(this$1.props);
          if (!isPromise_1(loader)) {
            loader = Promise.resolve(loader);
          }
          return loader;
        }).then(function(sketch) {
          if (!sketch) {
            sketch = {};
          }
          this$1._sketch = sketch;
          if (isBrowser()) {
            this$1._keyboardShortcuts.attach();
            window.addEventListener("resize", this$1._resizeHandler);
          }
          this$1._postRender();
          this$1._sizeChanged();
          return this$1;
        }).catch(function(err) {
          console.warn("Could not start sketch, the async loading function rejected with an error:\n    Error: " + err.message);
          throw err;
        });
      };
      Object.defineProperties(SketchManager.prototype, prototypeAccessors);
      var CACHE = "hot-id-cache";
      var runtimeCollisions = [];
      function isHotReload() {
        var client2 = getClientAPI();
        return client2 && client2.hot;
      }
      function cacheGet(id2) {
        var client2 = getClientAPI();
        if (!client2) {
          return void 0;
        }
        client2[CACHE] = client2[CACHE] || {};
        return client2[CACHE][id2];
      }
      function cachePut(id2, data3) {
        var client2 = getClientAPI();
        if (!client2) {
          return void 0;
        }
        client2[CACHE] = client2[CACHE] || {};
        client2[CACHE][id2] = data3;
      }
      function getTimeProp(oldManager, newSettings) {
        return newSettings.animate ? {
          time: oldManager.props.time
        } : void 0;
      }
      function canvasSketch(sketch, settings) {
        if (settings === void 0)
          settings = {};
        if (settings.p5) {
          if (settings.canvas || settings.context && typeof settings.context !== "string") {
            throw new Error(`In { p5 } mode, you can't pass your own canvas or context, unless the context is a "webgl" or "2d" string`);
          }
          var context = typeof settings.context === "string" ? settings.context : false;
          settings = Object.assign({}, settings, {
            canvas: false,
            context
          });
        }
        var isHot = isHotReload();
        var hotID;
        if (isHot) {
          hotID = defined(settings.id, "$__DEFAULT_CANVAS_SKETCH_ID__$");
        }
        var isInjecting = isHot && typeof hotID === "string";
        if (isInjecting && runtimeCollisions.includes(hotID)) {
          console.warn("Warning: You have multiple calls to canvasSketch() in --hot mode. You must pass unique { id } strings in settings to enable hot reload across multiple sketches. ", hotID);
          isInjecting = false;
        }
        var preload = Promise.resolve();
        if (isInjecting) {
          runtimeCollisions.push(hotID);
          var previousData = cacheGet(hotID);
          if (previousData) {
            var next = function() {
              var newProps = getTimeProp(previousData.manager, settings);
              previousData.manager.destroy();
              return newProps;
            };
            preload = previousData.load.then(next).catch(next);
          }
        }
        return preload.then(function(newProps) {
          var manager = new SketchManager();
          var result;
          if (sketch) {
            settings = Object.assign({}, settings, newProps);
            manager.setup(settings);
            manager.mount();
            result = manager.loadAndRun(sketch);
          } else {
            result = Promise.resolve(manager);
          }
          if (isInjecting) {
            cachePut(hotID, {
              load: result,
              manager
            });
          }
          return result;
        });
      }
      canvasSketch.canvasSketch = canvasSketch;
      canvasSketch.PaperSizes = paperSizes;
      return canvasSketch;
    });
  }
});

// .svelte-kit/output/server/chunks/Slider-944f32d0.js
function writable2(value, start = noop2) {
  let stop;
  const subscribers = new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue2.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue2.push(subscriber, value);
        }
        if (run_queue) {
          for (let i2 = 0; i2 < subscriber_queue2.length; i2 += 2) {
            subscriber_queue2[i2][0](subscriber_queue2[i2 + 1]);
          }
          subscriber_queue2.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop2) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop2;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
var subscriber_queue2, css$12, Param, css4, Slider;
var init_Slider_944f32d0 = __esm({
  ".svelte-kit/output/server/chunks/Slider-944f32d0.js"() {
    init_index_0300a598();
    subscriber_queue2 = [];
    css$12 = {
      code: ".param.svelte-11wod0f{box-sizing:border-box;display:flex;justify-content:flex-start;align-items:center;width:100%}div.svelte-11wod0f:first-child{margin-top:0}.param-wrapper.svelte-11wod0f{display:flex;justify-content:flex-start;align-items:center;flex-shrink:1;flex-grow:1;flex-basis:60%;box-sizing:border-box}label.svelte-11wod0f{font-size:12px;flex-shrink:1;flex-grow:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding-right:10px;flex-basis:40%;box-sizing:border-box}",
      map: null
    };
    Param = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { label: label2 = "" } = $$props;
      let { color = "currentColor" } = $$props;
      if ($$props.label === void 0 && $$bindings.label && label2 !== void 0)
        $$bindings.label(label2);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      $$result.css.add(css$12);
      return `<div class="${"param svelte-11wod0f"}">${label2 ? `<label class="${escape2(null_to_empty(color ? color : "currentColor")) + " svelte-11wod0f"}">${escape2(label2)}</label>` : ``}
	<div class="${"param-wrapper svelte-11wod0f"}">${slots.default ? slots.default({ class: "test" }) : ``}</div>
</div>`;
    });
    css4 = {
      code: "input.svelte-6isbck::-webkit-outer-spin-button,input.svelte-6isbck::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type='number'].svelte-6isbck{-moz-appearance:textfield}",
      map: null
    };
    Slider = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      createEventDispatcher();
      let { label: label2 = "" } = $$props;
      let { value } = $$props;
      let { min = 1 } = $$props;
      let { max = 100 } = $$props;
      let { step = 1 } = $$props;
      let { color = "currentColor" } = $$props;
      if ($$props.label === void 0 && $$bindings.label && label2 !== void 0)
        $$bindings.label(label2);
      if ($$props.value === void 0 && $$bindings.value && value !== void 0)
        $$bindings.value(value);
      if ($$props.min === void 0 && $$bindings.min && min !== void 0)
        $$bindings.min(min);
      if ($$props.max === void 0 && $$bindings.max && max !== void 0)
        $$bindings.max(max);
      if ($$props.step === void 0 && $$bindings.step && step !== void 0)
        $$bindings.step(step);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      $$result.css.add(css4);
      return `${validate_component(Param, "Param").$$render($$result, { label: label2, color }, {}, {
        default: () => {
          return `<div class="${"flex"}"><input type="${"range"}"${add_attribute("min", min, 0)}${add_attribute("max", max, 0)}${add_attribute("step", step, 0)} class="${"svelte-6isbck"}"${add_attribute("value", value, 0)}>
		<input type="${"number"}" class="${"input input-primary input-bordered w-14 p-2 svelte-6isbck"}"${add_attribute("min", min, 0)}${add_attribute("max", max, 0)}${add_attribute("step", step, 0)}${add_attribute("value", value, 0)}></div>`;
        }
      })}`;
    });
  }
});

// .svelte-kit/output/server/chunks/stores-45e3dd62.js
var getStores, page;
var init_stores_45e3dd62 = __esm({
  ".svelte-kit/output/server/chunks/stores-45e3dd62.js"() {
    init_index_0300a598();
    getStores = () => {
      const stores = getContext("__svelte__");
      return {
        page: {
          subscribe: stores.page.subscribe
        },
        navigating: {
          subscribe: stores.navigating.subscribe
        },
        get preloading() {
          console.error("stores.preloading is deprecated; use stores.navigating instead");
          return {
            subscribe: stores.navigating.subscribe
          };
        },
        session: stores.session
      };
    };
    page = {
      subscribe(fn) {
        const store = getStores().page;
        return store.subscribe(fn);
      }
    };
  }
});

// .svelte-kit/output/server/chunks/CanvasManager-ef2b843a.js
var import_canvas_sketch, settingsChange, storedSettingsChange, CanvasManager;
var init_CanvasManager_ef2b843a = __esm({
  ".svelte-kit/output/server/chunks/CanvasManager-ef2b843a.js"() {
    init_index_0300a598();
    import_canvas_sketch = __toModule(require_canvas_sketch_umd());
    init_Slider_944f32d0();
    init_stores_45e3dd62();
    settingsChange = writable2({});
    storedSettingsChange = {
      subscribe: settingsChange.subscribe,
      set: (val) => {
        console.log(`\u{1F680} ~ file: stores.js ~ line 8 ~ val`, val);
        settingsChange.set(val);
        localStorage.setItem("settingsChange", JSON.stringify(val));
      }
    };
    CanvasManager = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $storedSettingsChange, $$unsubscribe_storedSettingsChange;
      let $page, $$unsubscribe_page;
      $$unsubscribe_storedSettingsChange = subscribe(storedSettingsChange, (value) => $storedSettingsChange = value);
      $$unsubscribe_page = subscribe(page, (value) => $page = value);
      let { settings = {} } = $$props;
      let { data: data2 = {} } = $$props;
      let { hidePanel = false } = $$props;
      let localStorageSupported = (() => {
        try {
          return typeof window.localStorage !== "undefined";
        } catch (err) {
          return false;
        }
      })();
      readData(settings, data2);
      function saveData(settings2, data22) {
        if (localStorageSupported && settings2.localStorage !== false) {
          window.localStorage.setItem(`${data22.TITLE}`, JSON.stringify(data22));
          if (data22.clearLS) {
            window.localStorage.setItem(`${data22.TITLE}`, JSON.stringify({}));
            data22.clearLS = false;
            $storedSettingsChange.set(!$storedSettingsChange);
            readData(settings2, data22);
            saveData(settings2, data22);
          }
        }
      }
      function readData(settings2, data22) {
        if (localStorageSupported && settings2.localStorage !== false) {
          try {
            const prev = window.localStorage.getItem(`${data22.TITLE}`);
            if (!prev)
              return;
            const newData = JSON.parse(prev);
            Object.assign(data22, newData);
          } catch (err) {
            console.warn(err);
          }
        }
      }
      if ($$props.settings === void 0 && $$bindings.settings && settings !== void 0)
        $$bindings.settings(settings);
      if ($$props.data === void 0 && $$bindings.data && data2 !== void 0)
        $$bindings.data(data2);
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      $page.url.pathname;
      {
        saveData(settings, data2);
      }
      $$unsubscribe_storedSettingsChange();
      $$unsubscribe_page();
      return `${!hidePanel ? `${slots.default ? slots.default({}) : ``}` : ``}`;
    });
  }
});

// .svelte-kit/output/server/chunks/index-b00483ad.js
function sineInOut(t2) {
  return -0.5 * (Math.cos(Math.PI * t2) - 1);
}
function is_date(obj) {
  return Object.prototype.toString.call(obj) === "[object Date]";
}
function get_interpolator(a, b) {
  if (a === b || a !== a)
    return () => a;
  const type = typeof a;
  if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {
    throw new Error("Cannot interpolate values of different type");
  }
  if (Array.isArray(a)) {
    const arr2 = b.map((bi, i2) => {
      return get_interpolator(a[i2], bi);
    });
    return (t2) => arr2.map((fn) => fn(t2));
  }
  if (type === "object") {
    if (!a || !b)
      throw new Error("Object cannot be null");
    if (is_date(a) && is_date(b)) {
      a = a.getTime();
      b = b.getTime();
      const delta = b - a;
      return (t2) => new Date(a + t2 * delta);
    }
    const keys = Object.keys(b);
    const interpolators = {};
    keys.forEach((key) => {
      interpolators[key] = get_interpolator(a[key], b[key]);
    });
    return (t2) => {
      const result = {};
      keys.forEach((key) => {
        result[key] = interpolators[key](t2);
      });
      return result;
    };
  }
  if (type === "number") {
    const delta = b - a;
    return (t2) => a + t2 * delta;
  }
  throw new Error(`Cannot interpolate ${type} values`);
}
function tweened(value, defaults2 = {}) {
  const store = writable2(value);
  let task;
  let target_value = value;
  function set(new_value, opts) {
    if (value == null) {
      store.set(value = new_value);
      return Promise.resolve();
    }
    target_value = new_value;
    let previous_task = task;
    let started = false;
    let { delay = 0, duration = 400, easing = identity, interpolate = get_interpolator } = assign(assign({}, defaults2), opts);
    if (duration === 0) {
      if (previous_task) {
        previous_task.abort();
        previous_task = null;
      }
      store.set(value = target_value);
      return Promise.resolve();
    }
    const start = now() + delay;
    let fn;
    task = loop2((now2) => {
      if (now2 < start)
        return true;
      if (!started) {
        fn = interpolate(value, new_value);
        if (typeof duration === "function")
          duration = duration(value, new_value);
        started = true;
      }
      if (previous_task) {
        previous_task.abort();
        previous_task = null;
      }
      const elapsed = now2 - start;
      if (elapsed > duration) {
        store.set(value = new_value);
        return false;
      }
      store.set(value = fn(easing(elapsed / duration)));
      return true;
    });
    return task.promise;
  }
  return {
    set,
    update: (fn, opts) => set(fn(target_value, value), opts),
    subscribe: store.subscribe
  };
}
var init_index_b00483ad = __esm({
  ".svelte-kit/output/server/chunks/index-b00483ad.js"() {
    init_index_0300a598();
    init_Slider_944f32d0();
  }
});

// .svelte-kit/output/server/chunks/Checkbox-import-b229c392.js
var createStyle, css5, Checkbox, Checkbox_import;
var init_Checkbox_import_b229c392 = __esm({
  ".svelte-kit/output/server/chunks/Checkbox-import-b229c392.js"() {
    init_index_0300a598();
    init_Slider_944f32d0();
    init_index_b00483ad();
    createStyle = ({
      from = 0,
      to = 1,
      reverse = false,
      duration = 300,
      delay = 0,
      css: css210 = {},
      onChange = () => false,
      onEnd = () => false,
      easing
    }) => {
      const animation = tweened(reverse ? to : from, {
        duration,
        delay,
        easing
      });
      animation.subscribe((t2) => {
        let newStyle = "";
        for (let item in css210) {
          const {
            input,
            output,
            onComplete = () => false,
            beforeStart = () => false
          } = css210[item];
          const inRange = input.filter((i2) => i2 <= t2).reverse()[0];
          const index = input.indexOf(inRange);
          let val;
          if (!inRange && inRange !== 0) {
            val = output[0];
            beforeStart();
          } else {
            if (input.length - 1 === index) {
              val = output[output.length - 1];
              input[input.length - 1] <= t2 && onComplete();
            } else {
              const endRange = input[index + 1];
              const percent = (t2 - inRange) * 100 / (endRange - inRange);
              const firstItem = output[index];
              const lastItem = output[index + 1];
              if (typeof lastItem === "object") {
                val = "";
                lastItem.map((i2) => {
                  val += firstItem + (i2 - firstItem) * percent / 100;
                  val += " ";
                });
              } else {
                val = firstItem + (lastItem - firstItem) * percent / 100;
              }
            }
          }
          newStyle += `${item}: ${val};`;
        }
        onChange(newStyle);
        if (t2 === to || t2 === from) {
          onEnd();
        }
      });
      return {
        play: () => animation.set(to),
        reverse: () => animation.set(from)
      };
    };
    css5 = {
      code: ".checkbox.svelte-d8g7vy.svelte-d8g7vy{--checkbox-color-primary:#242432;--checkbox-color-secondary:#d8d8ea;--checkbox-border-width:4%;--checkbox-border-width-active:7%;position:relative}.checkbox.svelte-d8g7vy input.svelte-d8g7vy{opacity:0;width:100%;height:100%;position:absolute;top:0;right:0;margin:0;padding:0;cursor:pointer}.checkbox__svg.svelte-d8g7vy.svelte-d8g7vy{width:100%;height:100%}.checkbox__check.svelte-d8g7vy.svelte-d8g7vy,.checkbox__border.svelte-d8g7vy.svelte-d8g7vy{stroke-width:var(--checkbox-border-width);fill:none;stroke-linecap:round;stroke-linejoin:round}.checkbox__border.svelte-d8g7vy.svelte-d8g7vy{width:calc(100% - (var(--checkbox-border-width) * 2));height:calc(100% - (var(--checkbox-border-width) * 2));transform:translate(\n        calc(var(--checkbox-border-width) * -1),\n        var(--checkbox-border-width)\n      )\n      rotate(90deg);stroke:var(--checkbox-color-secondary);transition:0.2s;transform-origin:50% 50%}.checkbox__border.-active.svelte-d8g7vy.svelte-d8g7vy{stroke:var(--checkbox-color-primary);transition:none}.checkbox.svelte-d8g7vy:hover .checkbox__border.svelte-d8g7vy,.checkbox.-checked.svelte-d8g7vy .checkbox__border.svelte-d8g7vy{--checkbox-border-width:var(--checkbox-border-width-active)}.checkbox.-changeBg.svelte-d8g7vy .checkbox__border.svelte-d8g7vy{stroke:var(--checkbox-color-primary)}.checkbox__check.svelte-d8g7vy.svelte-d8g7vy{--checkbox-border-width:var(--checkbox-border-width-active);stroke:var(--checkbox-color-primary)}",
      map: null
    };
    Checkbox = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let self2, canChange = true, changeBg = false, borderStyle, checkStyle;
      let { checked = false, size = "3rem", name: name2 = "", id: id2 = "", labelId = "", duration = 900, primaryColor = "#242432", secondaryColor = "#d8d8ea" } = $$props;
      createEventDispatcher();
      const animationOptions = {
        to: 100,
        duration,
        easing: sineInOut,
        reverse: checked
      };
      createStyle(__spreadProps(__spreadValues({}, animationOptions), {
        duration,
        css: {
          "stroke-dashoffset": {
            input: [0, 45, 75],
            output: [342, -150, -307],
            onComplete: () => changeBg = true
          },
          "stroke-dasharray": {
            input: [0, 45, 75],
            output: [342, 154, [0, 310]]
          },
          opacity: { input: [0, 5], output: [0, 1] }
        },
        onChange: (style) => borderStyle = style,
        onEnd: () => canChange = true
      }));
      createStyle(__spreadProps(__spreadValues({}, animationOptions), {
        css: {
          "stroke-dashoffset": {
            input: [65, 100],
            output: [300, 144],
            beforeStart: () => changeBg = false
          },
          "stroke-dasharray": { input: [65, 100], output: [100, 84] }
        },
        onChange: (style) => checkStyle = style
      }));
      if ($$props.checked === void 0 && $$bindings.checked && checked !== void 0)
        $$bindings.checked(checked);
      if ($$props.size === void 0 && $$bindings.size && size !== void 0)
        $$bindings.size(size);
      if ($$props.name === void 0 && $$bindings.name && name2 !== void 0)
        $$bindings.name(name2);
      if ($$props.id === void 0 && $$bindings.id && id2 !== void 0)
        $$bindings.id(id2);
      if ($$props.labelId === void 0 && $$bindings.labelId && labelId !== void 0)
        $$bindings.labelId(labelId);
      if ($$props.duration === void 0 && $$bindings.duration && duration !== void 0)
        $$bindings.duration(duration);
      if ($$props.primaryColor === void 0 && $$bindings.primaryColor && primaryColor !== void 0)
        $$bindings.primaryColor(primaryColor);
      if ($$props.secondaryColor === void 0 && $$bindings.secondaryColor && secondaryColor !== void 0)
        $$bindings.secondaryColor(secondaryColor);
      $$result.css.add(css5);
      return `<div${add_attribute("id", id2, 0)} class="${[
        "checkbox " + escape2($$props.class) + " svelte-d8g7vy",
        (changeBg ? "-changeBg" : "") + " " + (checked || !canChange ? "-checked" : "")
      ].join(" ").trim()}" style="${"width: " + escape2(size) + ";height: " + escape2(size) + ";"}"${add_attribute("this", self2, 0)}><input${add_attribute("id", labelId, 0)} type="${"checkbox"}"${add_attribute("name", name2, 0)} class="${"svelte-d8g7vy"}">
  <svg class="${"checkbox__svg svelte-d8g7vy"}" preserveAspectRatio="${"none"}" viewBox="${"0 0 100 100"}"><rect class="${"checkbox__border svelte-d8g7vy"}" rx="${"15%"}"></rect><rect class="${"checkbox__border -active svelte-d8g7vy"}"${add_attribute("style", borderStyle, 0)} rx="${"15%"}"></rect><path${add_attribute("style", checkStyle, 0)} class="${"checkbox__check svelte-d8g7vy"}" d="${"M 89.5 13 L 46 71 L 28 54"}"></path></svg></div>`;
    });
    Checkbox_import = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      createEventDispatcher();
      let { label: label2 = "" } = $$props;
      let { duration = "" } = $$props;
      let { checked = false } = $$props;
      if ($$props.label === void 0 && $$bindings.label && label2 !== void 0)
        $$bindings.label(label2);
      if ($$props.duration === void 0 && $$bindings.duration && duration !== void 0)
        $$bindings.duration(duration);
      if ($$props.checked === void 0 && $$bindings.checked && checked !== void 0)
        $$bindings.checked(checked);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `${validate_component(Param, "Param").$$render($$result, { label: label2 }, {}, {
          default: () => {
            return `<div class="${"py-2"}">${validate_component(Checkbox, "Checkbox").$$render($$result, {
              duration: "400",
              primaryColor: "#11cc55",
              size: "2rem",
              checked
            }, {
              checked: ($$value) => {
                checked = $$value;
                $$settled = false;
              }
            }, {})}</div>
	`;
          }
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/OptionSelect-4e269dd6.js
function isOutOfViewport(parent, container) {
  const parentBounding = parent.getBoundingClientRect();
  const boundingContainer = container.getBoundingClientRect();
  const out = {};
  out.top = parentBounding.top < 0;
  out.left = parentBounding.left < 0;
  out.bottom = parentBounding.bottom + boundingContainer.height > (window.innerHeight || document.documentElement.clientHeight);
  out.right = parentBounding.right > (window.innerWidth || document.documentElement.clientWidth);
  out.any = out.top || out.left || out.bottom || out.right;
  return out;
}
function isItemActive(item, value, optionIdentifier) {
  return value && value[optionIdentifier] === item[optionIdentifier];
}
function isItemFirst(itemIndex) {
  return itemIndex === 0;
}
function isItemHover(hoverItemIndex, item, itemIndex, items) {
  return isItemSelectable(item) && (hoverItemIndex === itemIndex || items.length === 1);
}
function isItemSelectable(item) {
  return item.isGroupHeader && item.isSelectable || item.selectable || !item.hasOwnProperty("selectable");
}
function debounce(func, wait, immediate) {
  let timeout2;
  return function executedFunction() {
    let context = this;
    let args = arguments;
    let later = function() {
      timeout2 = null;
      if (!immediate)
        func.apply(context, args);
    };
    let callNow = immediate && !timeout2;
    clearTimeout(timeout2);
    timeout2 = setTimeout(later, wait);
    if (callNow)
      func.apply(context, args);
  };
}
function convertStringItemsToObjects(_items) {
  return _items.map((item, index) => {
    return { index, value: item, label: `${item}` };
  });
}
var css$6, Item, css$5, List, css$4, Selection, css$3, MultiSelection, css$2, VirtualList, ClearIcon, Object_1, css$13, Select, css6, OptionSelect;
var init_OptionSelect_4e269dd6 = __esm({
  ".svelte-kit/output/server/chunks/OptionSelect-4e269dd6.js"() {
    init_index_0300a598();
    init_Slider_944f32d0();
    css$6 = {
      code: ".item.svelte-3e0qet{cursor:default;height:var(--height, 42px);line-height:var(--height, 42px);padding:var(--itemPadding, 0 20px);color:var(--itemColor, inherit);text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.groupHeader.svelte-3e0qet{text-transform:var(--groupTitleTextTransform, uppercase)}.groupItem.svelte-3e0qet{padding-left:var(--groupItemPaddingLeft, 40px)}.item.svelte-3e0qet:active{background:var(--itemActiveBackground, #b9daff)}.item.active.svelte-3e0qet{background:var(--itemIsActiveBG, #007aff);color:var(--itemIsActiveColor, #fff)}.item.notSelectable.svelte-3e0qet{color:var(--itemIsNotSelectableColor, #999)}.item.first.svelte-3e0qet{border-radius:var(--itemFirstBorderRadius, 4px 4px 0 0)}.item.hover.svelte-3e0qet:not(.active){background:var(--itemHoverBG, #e7f2ff);color:var(--itemHoverColor, inherit)}",
      map: null
    };
    Item = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { isActive = false } = $$props;
      let { isFirst = false } = $$props;
      let { isHover = false } = $$props;
      let { isSelectable = false } = $$props;
      let { getOptionLabel = void 0 } = $$props;
      let { item = void 0 } = $$props;
      let { filterText = "" } = $$props;
      let itemClasses = "";
      if ($$props.isActive === void 0 && $$bindings.isActive && isActive !== void 0)
        $$bindings.isActive(isActive);
      if ($$props.isFirst === void 0 && $$bindings.isFirst && isFirst !== void 0)
        $$bindings.isFirst(isFirst);
      if ($$props.isHover === void 0 && $$bindings.isHover && isHover !== void 0)
        $$bindings.isHover(isHover);
      if ($$props.isSelectable === void 0 && $$bindings.isSelectable && isSelectable !== void 0)
        $$bindings.isSelectable(isSelectable);
      if ($$props.getOptionLabel === void 0 && $$bindings.getOptionLabel && getOptionLabel !== void 0)
        $$bindings.getOptionLabel(getOptionLabel);
      if ($$props.item === void 0 && $$bindings.item && item !== void 0)
        $$bindings.item(item);
      if ($$props.filterText === void 0 && $$bindings.filterText && filterText !== void 0)
        $$bindings.filterText(filterText);
      $$result.css.add(css$6);
      {
        {
          const classes = [];
          if (isActive) {
            classes.push("active");
          }
          if (isFirst) {
            classes.push("first");
          }
          if (isHover) {
            classes.push("hover");
          }
          if (item.isGroupHeader) {
            classes.push("groupHeader");
          }
          if (item.isGroupItem) {
            classes.push("groupItem");
          }
          if (!isSelectable) {
            classes.push("notSelectable");
          }
          itemClasses = classes.join(" ");
        }
      }
      return `<div class="${"item " + escape2(itemClasses) + " svelte-3e0qet"}"><!-- HTML_TAG_START -->${getOptionLabel(item, filterText)}<!-- HTML_TAG_END --></div>`;
    });
    css$5 = {
      code: ".listContainer.svelte-1uyqfml{box-shadow:var(--listShadow, 0 2px 3px 0 rgba(44, 62, 80, 0.24));border-radius:var(--listBorderRadius, 4px);max-height:var(--listMaxHeight, 250px);overflow-y:auto;background:var(--listBackground, #fff);border:var(--listBorder, none);position:var(--listPosition, absolute);z-index:var(--listZIndex, 2);width:100%;left:var(--listLeft, 0);right:var(--listRight, 0)}.virtualList.svelte-1uyqfml{height:var(--virtualListHeight, 200px)}.listGroupTitle.svelte-1uyqfml{color:var(--groupTitleColor, #8f8f8f);cursor:default;font-size:var(--groupTitleFontSize, 12px);font-weight:var(--groupTitleFontWeight, 600);height:var(--height, 42px);line-height:var(--height, 42px);padding:var(--groupTitlePadding, 0 20px);text-overflow:ellipsis;overflow-x:hidden;white-space:nowrap;text-transform:var(--groupTitleTextTransform, uppercase)}.empty.svelte-1uyqfml{text-align:var(--listEmptyTextAlign, center);padding:var(--listEmptyPadding, 20px 0);color:var(--listEmptyColor, #78848f)}",
      map: null
    };
    List = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      createEventDispatcher();
      let { container = void 0 } = $$props;
      let { VirtualList: VirtualList2 = null } = $$props;
      let { Item: Item$1 = Item } = $$props;
      let { isVirtualList = false } = $$props;
      let { items = [] } = $$props;
      let { labelIdentifier = "label" } = $$props;
      let { getOptionLabel = (option, filterText2) => {
        if (option)
          return option.isCreator ? `Create "${filterText2}"` : option[labelIdentifier];
      } } = $$props;
      let { getGroupHeaderLabel = null } = $$props;
      let { itemHeight = 40 } = $$props;
      let { hoverItemIndex = 0 } = $$props;
      let { value = void 0 } = $$props;
      let { optionIdentifier = "value" } = $$props;
      let { hideEmptyState = false } = $$props;
      let { noOptionsMessage = "No options" } = $$props;
      let { isMulti = false } = $$props;
      let { activeItemIndex = 0 } = $$props;
      let { filterText = "" } = $$props;
      let { parent = null } = $$props;
      let { listPlacement = null } = $$props;
      let { listAutoWidth = null } = $$props;
      let { listOffset = 5 } = $$props;
      let listStyle;
      function computePlacement() {
        const { height: height3, width: width3 } = parent.getBoundingClientRect();
        listStyle = "";
        listStyle += `min-width:${width3}px;width:${listAutoWidth ? "auto" : "100%"};`;
        if (listPlacement === "top" || listPlacement === "auto" && isOutOfViewport(parent, container).bottom) {
          listStyle += `bottom:${height3 + listOffset}px;`;
        } else {
          listStyle += `top:${height3 + listOffset}px;`;
        }
      }
      if ($$props.container === void 0 && $$bindings.container && container !== void 0)
        $$bindings.container(container);
      if ($$props.VirtualList === void 0 && $$bindings.VirtualList && VirtualList2 !== void 0)
        $$bindings.VirtualList(VirtualList2);
      if ($$props.Item === void 0 && $$bindings.Item && Item$1 !== void 0)
        $$bindings.Item(Item$1);
      if ($$props.isVirtualList === void 0 && $$bindings.isVirtualList && isVirtualList !== void 0)
        $$bindings.isVirtualList(isVirtualList);
      if ($$props.items === void 0 && $$bindings.items && items !== void 0)
        $$bindings.items(items);
      if ($$props.labelIdentifier === void 0 && $$bindings.labelIdentifier && labelIdentifier !== void 0)
        $$bindings.labelIdentifier(labelIdentifier);
      if ($$props.getOptionLabel === void 0 && $$bindings.getOptionLabel && getOptionLabel !== void 0)
        $$bindings.getOptionLabel(getOptionLabel);
      if ($$props.getGroupHeaderLabel === void 0 && $$bindings.getGroupHeaderLabel && getGroupHeaderLabel !== void 0)
        $$bindings.getGroupHeaderLabel(getGroupHeaderLabel);
      if ($$props.itemHeight === void 0 && $$bindings.itemHeight && itemHeight !== void 0)
        $$bindings.itemHeight(itemHeight);
      if ($$props.hoverItemIndex === void 0 && $$bindings.hoverItemIndex && hoverItemIndex !== void 0)
        $$bindings.hoverItemIndex(hoverItemIndex);
      if ($$props.value === void 0 && $$bindings.value && value !== void 0)
        $$bindings.value(value);
      if ($$props.optionIdentifier === void 0 && $$bindings.optionIdentifier && optionIdentifier !== void 0)
        $$bindings.optionIdentifier(optionIdentifier);
      if ($$props.hideEmptyState === void 0 && $$bindings.hideEmptyState && hideEmptyState !== void 0)
        $$bindings.hideEmptyState(hideEmptyState);
      if ($$props.noOptionsMessage === void 0 && $$bindings.noOptionsMessage && noOptionsMessage !== void 0)
        $$bindings.noOptionsMessage(noOptionsMessage);
      if ($$props.isMulti === void 0 && $$bindings.isMulti && isMulti !== void 0)
        $$bindings.isMulti(isMulti);
      if ($$props.activeItemIndex === void 0 && $$bindings.activeItemIndex && activeItemIndex !== void 0)
        $$bindings.activeItemIndex(activeItemIndex);
      if ($$props.filterText === void 0 && $$bindings.filterText && filterText !== void 0)
        $$bindings.filterText(filterText);
      if ($$props.parent === void 0 && $$bindings.parent && parent !== void 0)
        $$bindings.parent(parent);
      if ($$props.listPlacement === void 0 && $$bindings.listPlacement && listPlacement !== void 0)
        $$bindings.listPlacement(listPlacement);
      if ($$props.listAutoWidth === void 0 && $$bindings.listAutoWidth && listAutoWidth !== void 0)
        $$bindings.listAutoWidth(listAutoWidth);
      if ($$props.listOffset === void 0 && $$bindings.listOffset && listOffset !== void 0)
        $$bindings.listOffset(listOffset);
      $$result.css.add(css$5);
      {
        {
          if (parent && container)
            computePlacement();
        }
      }
      return `

<div class="${["listContainer svelte-1uyqfml", isVirtualList ? "virtualList" : ""].join(" ").trim()}"${add_attribute("style", listStyle, 0)}${add_attribute("this", container, 0)}>${isVirtualList ? `${validate_component(VirtualList2 || missing_component, "svelte:component").$$render($$result, { items, itemHeight }, {}, {
        default: ({ item, i: i2 }) => {
          return `<div class="${"listItem"}">${validate_component(Item$1 || missing_component, "svelte:component").$$render($$result, {
            item,
            filterText,
            getOptionLabel,
            isFirst: isItemFirst(i2),
            isActive: isItemActive(item, value, optionIdentifier),
            isHover: isItemHover(hoverItemIndex, item, i2, items),
            isSelectable: isItemSelectable(item)
          }, {}, {})}</div>`;
        }
      })}` : `${items.length ? each(items, (item, i2) => {
        return `${item.isGroupHeader && !item.isSelectable ? `<div class="${"listGroupTitle svelte-1uyqfml"}">${escape2(getGroupHeaderLabel(item))}</div>` : `<div class="${"listItem"}" tabindex="${"-1"}">${validate_component(Item$1 || missing_component, "svelte:component").$$render($$result, {
          item,
          filterText,
          getOptionLabel,
          isFirst: isItemFirst(i2),
          isActive: isItemActive(item, value, optionIdentifier),
          isHover: isItemHover(hoverItemIndex, item, i2, items),
          isSelectable: isItemSelectable(item)
        }, {}, {})}
                </div>`}`;
      }) : `${!hideEmptyState ? `<div class="${"empty svelte-1uyqfml"}">${escape2(noOptionsMessage)}</div>` : ``}`}`}</div>`;
    });
    css$4 = {
      code: ".selection.svelte-pu1q1n{text-overflow:ellipsis;overflow-x:hidden;white-space:nowrap}",
      map: null
    };
    Selection = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { getSelectionLabel = void 0 } = $$props;
      let { item = void 0 } = $$props;
      if ($$props.getSelectionLabel === void 0 && $$bindings.getSelectionLabel && getSelectionLabel !== void 0)
        $$bindings.getSelectionLabel(getSelectionLabel);
      if ($$props.item === void 0 && $$bindings.item && item !== void 0)
        $$bindings.item(item);
      $$result.css.add(css$4);
      return `<div class="${"selection svelte-pu1q1n"}"><!-- HTML_TAG_START -->${getSelectionLabel(item)}<!-- HTML_TAG_END --></div>`;
    });
    css$3 = {
      code: ".multiSelectItem.svelte-liu9pa.svelte-liu9pa{background:var(--multiItemBG, #ebedef);margin:var(--multiItemMargin, 5px 5px 0 0);border-radius:var(--multiItemBorderRadius, 16px);height:var(--multiItemHeight, 32px);line-height:var(--multiItemHeight, 32px);display:flex;cursor:default;padding:var(--multiItemPadding, 0 10px 0 15px);max-width:100%}.multiSelectItem_label.svelte-liu9pa.svelte-liu9pa{margin:var(--multiLabelMargin, 0 5px 0 0);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.multiSelectItem.svelte-liu9pa.svelte-liu9pa:hover,.multiSelectItem.active.svelte-liu9pa.svelte-liu9pa{background-color:var(--multiItemActiveBG, #006fff);color:var(--multiItemActiveColor, #fff)}.multiSelectItem.disabled.svelte-liu9pa.svelte-liu9pa:hover{background:var(--multiItemDisabledHoverBg, #ebedef);color:var(--multiItemDisabledHoverColor, #c1c6cc)}.multiSelectItem_clear.svelte-liu9pa.svelte-liu9pa{border-radius:var(--multiClearRadius, 50%);background:var(--multiClearBG, #52616f);min-width:var(--multiClearWidth, 16px);max-width:var(--multiClearWidth, 16px);height:var(--multiClearHeight, 16px);position:relative;top:var(--multiClearTop, 8px);text-align:var(--multiClearTextAlign, center);padding:var(--multiClearPadding, 1px)}.multiSelectItem_clear.svelte-liu9pa.svelte-liu9pa:hover,.active.svelte-liu9pa .multiSelectItem_clear.svelte-liu9pa{background:var(--multiClearHoverBG, #fff)}.multiSelectItem_clear.svelte-liu9pa:hover svg.svelte-liu9pa,.active.svelte-liu9pa .multiSelectItem_clear svg.svelte-liu9pa{fill:var(--multiClearHoverFill, #006fff)}.multiSelectItem_clear.svelte-liu9pa svg.svelte-liu9pa{fill:var(--multiClearFill, #ebedef);vertical-align:top}",
      map: null
    };
    MultiSelection = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      createEventDispatcher();
      let { value = [] } = $$props;
      let { activeValue = void 0 } = $$props;
      let { isDisabled = false } = $$props;
      let { multiFullItemClearable = false } = $$props;
      let { getSelectionLabel = void 0 } = $$props;
      if ($$props.value === void 0 && $$bindings.value && value !== void 0)
        $$bindings.value(value);
      if ($$props.activeValue === void 0 && $$bindings.activeValue && activeValue !== void 0)
        $$bindings.activeValue(activeValue);
      if ($$props.isDisabled === void 0 && $$bindings.isDisabled && isDisabled !== void 0)
        $$bindings.isDisabled(isDisabled);
      if ($$props.multiFullItemClearable === void 0 && $$bindings.multiFullItemClearable && multiFullItemClearable !== void 0)
        $$bindings.multiFullItemClearable(multiFullItemClearable);
      if ($$props.getSelectionLabel === void 0 && $$bindings.getSelectionLabel && getSelectionLabel !== void 0)
        $$bindings.getSelectionLabel(getSelectionLabel);
      $$result.css.add(css$3);
      return `${each(value, (item, i2) => {
        return `<div class="${"multiSelectItem " + escape2(activeValue === i2 ? "active" : "") + " " + escape2(isDisabled ? "disabled" : "") + " svelte-liu9pa"}"><div class="${"multiSelectItem_label svelte-liu9pa"}"><!-- HTML_TAG_START -->${getSelectionLabel(item)}<!-- HTML_TAG_END --></div>
        ${!isDisabled && !multiFullItemClearable ? `<div class="${"multiSelectItem_clear svelte-liu9pa"}"><svg width="${"100%"}" height="${"100%"}" viewBox="${"-2 -2 50 50"}" focusable="${"false"}" aria-hidden="${"true"}" role="${"presentation"}" class="${"svelte-liu9pa"}"><path d="${"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124 l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z"}"></path></svg>
            </div>` : ``}
    </div>`;
      })}`;
    });
    css$2 = {
      code: "svelte-virtual-list-viewport.svelte-g2cagw{position:relative;overflow-y:auto;-webkit-overflow-scrolling:touch;display:block}svelte-virtual-list-contents.svelte-g2cagw,svelte-virtual-list-row.svelte-g2cagw{display:block}svelte-virtual-list-row.svelte-g2cagw{overflow:hidden}",
      map: null
    };
    VirtualList = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { items = void 0 } = $$props;
      let { height: height3 = "100%" } = $$props;
      let { itemHeight = 40 } = $$props;
      let { hoverItemIndex = 0 } = $$props;
      let { start = 0 } = $$props;
      let { end = 0 } = $$props;
      let viewport;
      let contents;
      let visible;
      let top = 0;
      let bottom = 0;
      if ($$props.items === void 0 && $$bindings.items && items !== void 0)
        $$bindings.items(items);
      if ($$props.height === void 0 && $$bindings.height && height3 !== void 0)
        $$bindings.height(height3);
      if ($$props.itemHeight === void 0 && $$bindings.itemHeight && itemHeight !== void 0)
        $$bindings.itemHeight(itemHeight);
      if ($$props.hoverItemIndex === void 0 && $$bindings.hoverItemIndex && hoverItemIndex !== void 0)
        $$bindings.hoverItemIndex(hoverItemIndex);
      if ($$props.start === void 0 && $$bindings.start && start !== void 0)
        $$bindings.start(start);
      if ($$props.end === void 0 && $$bindings.end && end !== void 0)
        $$bindings.end(end);
      $$result.css.add(css$2);
      visible = items.slice(start, end).map((data2, i2) => {
        return { index: i2 + start, data: data2 };
      });
      return `<svelte-virtual-list-viewport style="${"height: " + escape2(height3) + ";"}" class="${"svelte-g2cagw"}"${add_attribute("this", viewport, 0)}><svelte-virtual-list-contents style="${"padding-top: " + escape2(top) + "px; padding-bottom: " + escape2(bottom) + "px;"}" class="${"svelte-g2cagw"}"${add_attribute("this", contents, 0)}>${each(visible, (row) => {
        return `<svelte-virtual-list-row class="${"svelte-g2cagw"}">${slots.default ? slots.default({
          item: row.data,
          i: row.index,
          hoverItemIndex
        }) : `Missing template`}
            </svelte-virtual-list-row>`;
      })}</svelte-virtual-list-contents></svelte-virtual-list-viewport>`;
    });
    ClearIcon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `<svg width="${"100%"}" height="${"100%"}" viewBox="${"-2 -2 50 50"}" focusable="${"false"}" aria-hidden="${"true"}" role="${"presentation"}"><path fill="${"currentColor"}" d="${"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n    l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z"}"></path></svg>`;
    });
    ({ Object: Object_1 } = globals);
    css$13 = {
      code: ".selectContainer.svelte-17l1npl.svelte-17l1npl{--internalPadding:0 16px;border:var(--border, 1px solid #d8dbdf);border-radius:var(--borderRadius, 3px);box-sizing:border-box;height:var(--height, 42px);position:relative;display:flex;align-items:center;padding:var(--padding, var(--internalPadding));background:var(--background, #fff);margin:var(--margin, 0)}.selectContainer.svelte-17l1npl input.svelte-17l1npl{cursor:default;border:none;color:var(--inputColor, #3f4f5f);height:var(--height, 42px);line-height:var(--height, 42px);padding:var(--inputPadding, var(--padding, var(--internalPadding)));width:100%;background:transparent;font-size:var(--inputFontSize, 14px);letter-spacing:var(--inputLetterSpacing, -0.08px);position:absolute;left:var(--inputLeft, 0);margin:var(--inputMargin, 0)}.selectContainer.svelte-17l1npl input.svelte-17l1npl::placeholder{color:var(--placeholderColor, #78848f);opacity:var(--placeholderOpacity, 1)}.selectContainer.svelte-17l1npl input.svelte-17l1npl:focus{outline:none}.selectContainer.svelte-17l1npl.svelte-17l1npl:hover{border-color:var(--borderHoverColor, #b2b8bf)}.selectContainer.focused.svelte-17l1npl.svelte-17l1npl{border-color:var(--borderFocusColor, #006fe8)}.selectContainer.disabled.svelte-17l1npl.svelte-17l1npl{background:var(--disabledBackground, #ebedef);border-color:var(--disabledBorderColor, #ebedef);color:var(--disabledColor, #c1c6cc)}.selectContainer.disabled.svelte-17l1npl input.svelte-17l1npl::placeholder{color:var(--disabledPlaceholderColor, #c1c6cc);opacity:var(--disabledPlaceholderOpacity, 1)}.selectedItem.svelte-17l1npl.svelte-17l1npl{line-height:var(--height, 42px);height:var(--height, 42px);overflow-x:hidden;padding:var(--selectedItemPadding, 0 20px 0 0)}.selectedItem.svelte-17l1npl.svelte-17l1npl:focus{outline:none}.clearSelect.svelte-17l1npl.svelte-17l1npl{position:absolute;right:var(--clearSelectRight, 10px);top:var(--clearSelectTop, 11px);bottom:var(--clearSelectBottom, 11px);width:var(--clearSelectWidth, 20px);color:var(--clearSelectColor, #c5cacf);flex:none !important}.clearSelect.svelte-17l1npl.svelte-17l1npl:hover{color:var(--clearSelectHoverColor, #2c3e50)}.selectContainer.focused.svelte-17l1npl .clearSelect.svelte-17l1npl{color:var(--clearSelectFocusColor, #3f4f5f)}.indicator.svelte-17l1npl.svelte-17l1npl{position:absolute;right:var(--indicatorRight, 10px);top:var(--indicatorTop, 11px);width:var(--indicatorWidth, 20px);height:var(--indicatorHeight, 20px);color:var(--indicatorColor, #c5cacf)}.indicator.svelte-17l1npl svg.svelte-17l1npl{display:inline-block;fill:var(--indicatorFill, currentcolor);line-height:1;stroke:var(--indicatorStroke, currentcolor);stroke-width:0}.spinner.svelte-17l1npl.svelte-17l1npl{position:absolute;right:var(--spinnerRight, 10px);top:var(--spinnerLeft, 11px);width:var(--spinnerWidth, 20px);height:var(--spinnerHeight, 20px);color:var(--spinnerColor, #51ce6c);animation:svelte-17l1npl-rotate 0.75s linear infinite}.spinner_icon.svelte-17l1npl.svelte-17l1npl{display:block;height:100%;transform-origin:center center;width:100%;position:absolute;top:0;bottom:0;left:0;right:0;margin:auto;-webkit-transform:none}.spinner_path.svelte-17l1npl.svelte-17l1npl{stroke-dasharray:90;stroke-linecap:round}.multiSelect.svelte-17l1npl.svelte-17l1npl{display:flex;padding:var(--multiSelectPadding, 0 35px 0 16px);height:auto;flex-wrap:wrap;align-items:stretch}.multiSelect.svelte-17l1npl>.svelte-17l1npl{flex:1 1 50px}.selectContainer.multiSelect.svelte-17l1npl input.svelte-17l1npl{padding:var(--multiSelectInputPadding, 0);position:relative;margin:var(--multiSelectInputMargin, 0)}.hasError.svelte-17l1npl.svelte-17l1npl{border:var(--errorBorder, 1px solid #ff2d55);background:var(--errorBackground, #fff)}.a11yText.svelte-17l1npl.svelte-17l1npl{z-index:9999;border:0px;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0px;white-space:nowrap}@keyframes svelte-17l1npl-rotate{100%{transform:rotate(360deg)}}",
      map: null
    };
    Select = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let filteredItems;
      let showSelectedItem;
      let showClearIcon;
      let placeholderText;
      let showMultiSelect;
      let listProps;
      let ariaSelection;
      let ariaContext;
      const dispatch = createEventDispatcher();
      let { id: id2 = null } = $$props;
      let { container = void 0 } = $$props;
      let { input = void 0 } = $$props;
      let { isMulti = false } = $$props;
      let { multiFullItemClearable = false } = $$props;
      let { isDisabled = false } = $$props;
      let { isCreatable = false } = $$props;
      let { isFocused = false } = $$props;
      let { value = null } = $$props;
      let { filterText = "" } = $$props;
      let { placeholder = "Select..." } = $$props;
      let { placeholderAlwaysShow = false } = $$props;
      let { items = null } = $$props;
      let { itemFilter = (label2, filterText2, option) => `${label2}`.toLowerCase().includes(filterText2.toLowerCase()) } = $$props;
      let { groupBy = void 0 } = $$props;
      let { groupFilter = (groups) => groups } = $$props;
      let { isGroupHeaderSelectable = false } = $$props;
      let { getGroupHeaderLabel = (option) => {
        return option[labelIdentifier] || option.id;
      } } = $$props;
      let { labelIdentifier = "label" } = $$props;
      let { getOptionLabel = (option, filterText2) => {
        return option.isCreator ? `Create "${filterText2}"` : option[labelIdentifier];
      } } = $$props;
      let { optionIdentifier = "value" } = $$props;
      let { loadOptions = void 0 } = $$props;
      let { hasError = false } = $$props;
      let { containerStyles = "" } = $$props;
      let { getSelectionLabel = (option) => {
        if (option)
          return option[labelIdentifier];
        else
          return null;
      } } = $$props;
      let { createGroupHeaderItem = (groupValue) => {
        return { value: groupValue, label: groupValue };
      } } = $$props;
      let { createItem = (filterText2) => {
        return { value: filterText2, label: filterText2 };
      } } = $$props;
      const getFilteredItems = () => {
        return filteredItems;
      };
      let { isSearchable = true } = $$props;
      let { inputStyles = "" } = $$props;
      let { isClearable = true } = $$props;
      let { isWaiting = false } = $$props;
      let { listPlacement = "auto" } = $$props;
      let { listOpen = false } = $$props;
      let { isVirtualList = false } = $$props;
      let { loadOptionsInterval = 300 } = $$props;
      let { noOptionsMessage = "No options" } = $$props;
      let { hideEmptyState = false } = $$props;
      let { inputAttributes = {} } = $$props;
      let { listAutoWidth = true } = $$props;
      let { itemHeight = 40 } = $$props;
      let { Icon: Icon2 = void 0 } = $$props;
      let { iconProps = {} } = $$props;
      let { showChevron = false } = $$props;
      let { showIndicator = false } = $$props;
      let { containerClasses = "" } = $$props;
      let { indicatorSvg = void 0 } = $$props;
      let { listOffset = 5 } = $$props;
      let { ClearIcon: ClearIcon$1 = ClearIcon } = $$props;
      let { Item: Item$1 = Item } = $$props;
      let { List: List$1 = List } = $$props;
      let { Selection: Selection$1 = Selection } = $$props;
      let { MultiSelection: MultiSelection$1 = MultiSelection } = $$props;
      let { VirtualList: VirtualList$1 = VirtualList } = $$props;
      function filterMethod(args) {
        if (args.loadOptions && args.filterText.length > 0)
          return;
        if (!args.items)
          return [];
        if (args.items && args.items.length > 0 && typeof args.items[0] !== "object") {
          args.items = convertStringItemsToObjects(args.items);
        }
        let filterResults = args.items.filter((item) => {
          let matchesFilter = itemFilter(getOptionLabel(item, args.filterText), args.filterText, item);
          if (matchesFilter && args.isMulti && args.value && Array.isArray(args.value)) {
            matchesFilter = !args.value.some((x2) => {
              return x2[args.optionIdentifier] === item[args.optionIdentifier];
            });
          }
          return matchesFilter;
        });
        if (args.groupBy) {
          filterResults = filterGroupedItems(filterResults);
        }
        if (args.isCreatable) {
          filterResults = addCreatableItem(filterResults, args.filterText);
        }
        return filterResults;
      }
      function addCreatableItem(_items, _filterText) {
        if (_filterText.length === 0)
          return _items;
        const itemToCreate = createItem(_filterText);
        if (_items[0] && _filterText === _items[0][labelIdentifier])
          return _items;
        itemToCreate.isCreator = true;
        return [..._items, itemToCreate];
      }
      let { selectedValue = null } = $$props;
      let activeValue;
      let prev_value;
      let prev_filterText;
      let prev_isFocused;
      let hoverItemIndex;
      const getItems = debounce(async () => {
        isWaiting = true;
        let res = await loadOptions(filterText).catch((err) => {
          console.warn("svelte-select loadOptions error :>> ", err);
          dispatch("error", { type: "loadOptions", details: err });
        });
        if (res && !res.cancelled) {
          if (res) {
            if (res && res.length > 0 && typeof res[0] !== "object") {
              res = convertStringItemsToObjects(res);
            }
            filteredItems = [...res];
            dispatch("loaded", { items: filteredItems });
          } else {
            filteredItems = [];
          }
          if (isCreatable) {
            filteredItems = addCreatableItem(filteredItems, filterText);
          }
          isWaiting = false;
          isFocused = true;
          listOpen = true;
        }
      }, loadOptionsInterval);
      function setValue() {
        if (typeof value === "string") {
          value = { [optionIdentifier]: value, label: value };
        } else if (isMulti && Array.isArray(value) && value.length > 0) {
          value = value.map((item) => typeof item === "string" ? { value: item, label: item } : item);
        }
      }
      let _inputAttributes;
      function assignInputAttributes() {
        _inputAttributes = Object.assign({
          autocapitalize: "none",
          autocomplete: "off",
          autocorrect: "off",
          spellcheck: false,
          tabindex: 0,
          type: "text",
          "aria-autocomplete": "list"
        }, inputAttributes);
        if (id2) {
          _inputAttributes.id = id2;
        }
        if (!isSearchable) {
          _inputAttributes.readonly = true;
        }
      }
      function filterGroupedItems(_items) {
        const groupValues = [];
        const groups = {};
        _items.forEach((item) => {
          const groupValue = groupBy(item);
          if (!groupValues.includes(groupValue)) {
            groupValues.push(groupValue);
            groups[groupValue] = [];
            if (groupValue) {
              groups[groupValue].push(Object.assign(createGroupHeaderItem(groupValue, item), {
                id: groupValue,
                isGroupHeader: true,
                isSelectable: isGroupHeaderSelectable
              }));
            }
          }
          groups[groupValue].push(Object.assign({ isGroupItem: !!groupValue }, item));
        });
        const sortedGroupedItems = [];
        groupFilter(groupValues).forEach((groupValue) => {
          sortedGroupedItems.push(...groups[groupValue]);
        });
        return sortedGroupedItems;
      }
      function dispatchSelectedItem() {
        if (isMulti) {
          if (JSON.stringify(value) !== JSON.stringify(prev_value)) {
            if (checkValueForDuplicates()) {
              dispatch("select", value);
            }
          }
          return;
        }
        {
          dispatch("select", value);
        }
      }
      function setupFocus() {
        if (isFocused || listOpen) {
          handleFocus();
        } else {
          if (input)
            input.blur();
        }
      }
      function setupMulti() {
        if (value) {
          if (Array.isArray(value)) {
            value = [...value];
          } else {
            value = [value];
          }
        }
      }
      function setupFilterText() {
        if (filterText.length === 0)
          return;
        isFocused = true;
        listOpen = true;
        if (loadOptions) {
          getItems();
        } else {
          listOpen = true;
          if (isMulti) {
            activeValue = void 0;
          }
        }
      }
      function checkValueForDuplicates() {
        let noDuplicates = true;
        if (value) {
          const ids = [];
          const uniqueValues = [];
          value.forEach((val) => {
            if (!ids.includes(val[optionIdentifier])) {
              ids.push(val[optionIdentifier]);
              uniqueValues.push(val);
            } else {
              noDuplicates = false;
            }
          });
          if (!noDuplicates)
            value = uniqueValues;
        }
        return noDuplicates;
      }
      function findItem(selection) {
        let matchTo = selection ? selection[optionIdentifier] : value[optionIdentifier];
        return items.find((item) => item[optionIdentifier] === matchTo);
      }
      function updateValueDisplay(items2) {
        if (!items2 || items2.length === 0 || items2.some((item) => typeof item !== "object"))
          return;
        if (!value || (isMulti ? value.some((selection) => !selection || !selection[optionIdentifier]) : !value[optionIdentifier]))
          return;
        if (Array.isArray(value)) {
          value = value.map((selection) => findItem(selection) || selection);
        } else {
          value = findItem() || value;
        }
      }
      function handleFocus() {
        isFocused = true;
        if (input)
          input.focus();
      }
      function handleClear() {
        value = void 0;
        listOpen = false;
        dispatch("clear", value);
        handleFocus();
      }
      let { ariaValues = (values) => {
        return `Option ${values}, selected.`;
      } } = $$props;
      let { ariaListOpen = (label2, count2) => {
        return `You are currently focused on option ${label2}. There are ${count2} results available.`;
      } } = $$props;
      let { ariaFocused = () => {
        return `Select is focused, type to refine list, press down to open the menu.`;
      } } = $$props;
      function handleAriaSelection() {
        let selected2 = void 0;
        if (isMulti && value.length > 0) {
          selected2 = value.map((v) => getSelectionLabel(v)).join(", ");
        } else {
          selected2 = getSelectionLabel(value);
        }
        return ariaValues(selected2);
      }
      function handleAriaContent() {
        if (!isFocused || !filteredItems || filteredItems.length === 0)
          return "";
        let _item = filteredItems[hoverItemIndex];
        if (listOpen && _item) {
          let label2 = getSelectionLabel(_item);
          let count2 = filteredItems ? filteredItems.length : 0;
          return ariaListOpen(label2, count2);
        } else {
          return ariaFocused();
        }
      }
      if ($$props.id === void 0 && $$bindings.id && id2 !== void 0)
        $$bindings.id(id2);
      if ($$props.container === void 0 && $$bindings.container && container !== void 0)
        $$bindings.container(container);
      if ($$props.input === void 0 && $$bindings.input && input !== void 0)
        $$bindings.input(input);
      if ($$props.isMulti === void 0 && $$bindings.isMulti && isMulti !== void 0)
        $$bindings.isMulti(isMulti);
      if ($$props.multiFullItemClearable === void 0 && $$bindings.multiFullItemClearable && multiFullItemClearable !== void 0)
        $$bindings.multiFullItemClearable(multiFullItemClearable);
      if ($$props.isDisabled === void 0 && $$bindings.isDisabled && isDisabled !== void 0)
        $$bindings.isDisabled(isDisabled);
      if ($$props.isCreatable === void 0 && $$bindings.isCreatable && isCreatable !== void 0)
        $$bindings.isCreatable(isCreatable);
      if ($$props.isFocused === void 0 && $$bindings.isFocused && isFocused !== void 0)
        $$bindings.isFocused(isFocused);
      if ($$props.value === void 0 && $$bindings.value && value !== void 0)
        $$bindings.value(value);
      if ($$props.filterText === void 0 && $$bindings.filterText && filterText !== void 0)
        $$bindings.filterText(filterText);
      if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
        $$bindings.placeholder(placeholder);
      if ($$props.placeholderAlwaysShow === void 0 && $$bindings.placeholderAlwaysShow && placeholderAlwaysShow !== void 0)
        $$bindings.placeholderAlwaysShow(placeholderAlwaysShow);
      if ($$props.items === void 0 && $$bindings.items && items !== void 0)
        $$bindings.items(items);
      if ($$props.itemFilter === void 0 && $$bindings.itemFilter && itemFilter !== void 0)
        $$bindings.itemFilter(itemFilter);
      if ($$props.groupBy === void 0 && $$bindings.groupBy && groupBy !== void 0)
        $$bindings.groupBy(groupBy);
      if ($$props.groupFilter === void 0 && $$bindings.groupFilter && groupFilter !== void 0)
        $$bindings.groupFilter(groupFilter);
      if ($$props.isGroupHeaderSelectable === void 0 && $$bindings.isGroupHeaderSelectable && isGroupHeaderSelectable !== void 0)
        $$bindings.isGroupHeaderSelectable(isGroupHeaderSelectable);
      if ($$props.getGroupHeaderLabel === void 0 && $$bindings.getGroupHeaderLabel && getGroupHeaderLabel !== void 0)
        $$bindings.getGroupHeaderLabel(getGroupHeaderLabel);
      if ($$props.labelIdentifier === void 0 && $$bindings.labelIdentifier && labelIdentifier !== void 0)
        $$bindings.labelIdentifier(labelIdentifier);
      if ($$props.getOptionLabel === void 0 && $$bindings.getOptionLabel && getOptionLabel !== void 0)
        $$bindings.getOptionLabel(getOptionLabel);
      if ($$props.optionIdentifier === void 0 && $$bindings.optionIdentifier && optionIdentifier !== void 0)
        $$bindings.optionIdentifier(optionIdentifier);
      if ($$props.loadOptions === void 0 && $$bindings.loadOptions && loadOptions !== void 0)
        $$bindings.loadOptions(loadOptions);
      if ($$props.hasError === void 0 && $$bindings.hasError && hasError !== void 0)
        $$bindings.hasError(hasError);
      if ($$props.containerStyles === void 0 && $$bindings.containerStyles && containerStyles !== void 0)
        $$bindings.containerStyles(containerStyles);
      if ($$props.getSelectionLabel === void 0 && $$bindings.getSelectionLabel && getSelectionLabel !== void 0)
        $$bindings.getSelectionLabel(getSelectionLabel);
      if ($$props.createGroupHeaderItem === void 0 && $$bindings.createGroupHeaderItem && createGroupHeaderItem !== void 0)
        $$bindings.createGroupHeaderItem(createGroupHeaderItem);
      if ($$props.createItem === void 0 && $$bindings.createItem && createItem !== void 0)
        $$bindings.createItem(createItem);
      if ($$props.getFilteredItems === void 0 && $$bindings.getFilteredItems && getFilteredItems !== void 0)
        $$bindings.getFilteredItems(getFilteredItems);
      if ($$props.isSearchable === void 0 && $$bindings.isSearchable && isSearchable !== void 0)
        $$bindings.isSearchable(isSearchable);
      if ($$props.inputStyles === void 0 && $$bindings.inputStyles && inputStyles !== void 0)
        $$bindings.inputStyles(inputStyles);
      if ($$props.isClearable === void 0 && $$bindings.isClearable && isClearable !== void 0)
        $$bindings.isClearable(isClearable);
      if ($$props.isWaiting === void 0 && $$bindings.isWaiting && isWaiting !== void 0)
        $$bindings.isWaiting(isWaiting);
      if ($$props.listPlacement === void 0 && $$bindings.listPlacement && listPlacement !== void 0)
        $$bindings.listPlacement(listPlacement);
      if ($$props.listOpen === void 0 && $$bindings.listOpen && listOpen !== void 0)
        $$bindings.listOpen(listOpen);
      if ($$props.isVirtualList === void 0 && $$bindings.isVirtualList && isVirtualList !== void 0)
        $$bindings.isVirtualList(isVirtualList);
      if ($$props.loadOptionsInterval === void 0 && $$bindings.loadOptionsInterval && loadOptionsInterval !== void 0)
        $$bindings.loadOptionsInterval(loadOptionsInterval);
      if ($$props.noOptionsMessage === void 0 && $$bindings.noOptionsMessage && noOptionsMessage !== void 0)
        $$bindings.noOptionsMessage(noOptionsMessage);
      if ($$props.hideEmptyState === void 0 && $$bindings.hideEmptyState && hideEmptyState !== void 0)
        $$bindings.hideEmptyState(hideEmptyState);
      if ($$props.inputAttributes === void 0 && $$bindings.inputAttributes && inputAttributes !== void 0)
        $$bindings.inputAttributes(inputAttributes);
      if ($$props.listAutoWidth === void 0 && $$bindings.listAutoWidth && listAutoWidth !== void 0)
        $$bindings.listAutoWidth(listAutoWidth);
      if ($$props.itemHeight === void 0 && $$bindings.itemHeight && itemHeight !== void 0)
        $$bindings.itemHeight(itemHeight);
      if ($$props.Icon === void 0 && $$bindings.Icon && Icon2 !== void 0)
        $$bindings.Icon(Icon2);
      if ($$props.iconProps === void 0 && $$bindings.iconProps && iconProps !== void 0)
        $$bindings.iconProps(iconProps);
      if ($$props.showChevron === void 0 && $$bindings.showChevron && showChevron !== void 0)
        $$bindings.showChevron(showChevron);
      if ($$props.showIndicator === void 0 && $$bindings.showIndicator && showIndicator !== void 0)
        $$bindings.showIndicator(showIndicator);
      if ($$props.containerClasses === void 0 && $$bindings.containerClasses && containerClasses !== void 0)
        $$bindings.containerClasses(containerClasses);
      if ($$props.indicatorSvg === void 0 && $$bindings.indicatorSvg && indicatorSvg !== void 0)
        $$bindings.indicatorSvg(indicatorSvg);
      if ($$props.listOffset === void 0 && $$bindings.listOffset && listOffset !== void 0)
        $$bindings.listOffset(listOffset);
      if ($$props.ClearIcon === void 0 && $$bindings.ClearIcon && ClearIcon$1 !== void 0)
        $$bindings.ClearIcon(ClearIcon$1);
      if ($$props.Item === void 0 && $$bindings.Item && Item$1 !== void 0)
        $$bindings.Item(Item$1);
      if ($$props.List === void 0 && $$bindings.List && List$1 !== void 0)
        $$bindings.List(List$1);
      if ($$props.Selection === void 0 && $$bindings.Selection && Selection$1 !== void 0)
        $$bindings.Selection(Selection$1);
      if ($$props.MultiSelection === void 0 && $$bindings.MultiSelection && MultiSelection$1 !== void 0)
        $$bindings.MultiSelection(MultiSelection$1);
      if ($$props.VirtualList === void 0 && $$bindings.VirtualList && VirtualList$1 !== void 0)
        $$bindings.VirtualList(VirtualList$1);
      if ($$props.selectedValue === void 0 && $$bindings.selectedValue && selectedValue !== void 0)
        $$bindings.selectedValue(selectedValue);
      if ($$props.handleClear === void 0 && $$bindings.handleClear && handleClear !== void 0)
        $$bindings.handleClear(handleClear);
      if ($$props.ariaValues === void 0 && $$bindings.ariaValues && ariaValues !== void 0)
        $$bindings.ariaValues(ariaValues);
      if ($$props.ariaListOpen === void 0 && $$bindings.ariaListOpen && ariaListOpen !== void 0)
        $$bindings.ariaListOpen(ariaListOpen);
      if ($$props.ariaFocused === void 0 && $$bindings.ariaFocused && ariaFocused !== void 0)
        $$bindings.ariaFocused(ariaFocused);
      $$result.css.add(css$13);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        filteredItems = filterMethod({
          loadOptions,
          filterText,
          items,
          value,
          isMulti,
          optionIdentifier,
          groupBy,
          isCreatable
        });
        {
          {
            if (selectedValue)
              console.warn("selectedValue is no longer used. Please use value instead.");
          }
        }
        {
          updateValueDisplay(items);
        }
        {
          {
            if (value)
              setValue();
          }
        }
        {
          {
            if (inputAttributes || !isSearchable)
              assignInputAttributes();
          }
        }
        {
          {
            if (isMulti) {
              setupMulti();
            }
          }
        }
        {
          {
            if (isMulti && value && value.length > 1) {
              checkValueForDuplicates();
            }
          }
        }
        {
          {
            if (value)
              dispatchSelectedItem();
          }
        }
        {
          {
            if (!value && isMulti && prev_value) {
              dispatch("select", value);
            }
          }
        }
        {
          {
            if (isFocused !== prev_isFocused) {
              setupFocus();
            }
          }
        }
        {
          {
            if (filterText !== prev_filterText) {
              setupFilterText();
            }
          }
        }
        showSelectedItem = value && filterText.length === 0;
        showClearIcon = showSelectedItem && isClearable && !isDisabled && !isWaiting;
        placeholderText = placeholderAlwaysShow && isMulti ? placeholder : value ? "" : placeholder;
        showMultiSelect = isMulti && value && value.length > 0;
        listProps = {
          Item: Item$1,
          filterText,
          optionIdentifier,
          noOptionsMessage,
          hideEmptyState,
          isVirtualList,
          VirtualList: VirtualList$1,
          value,
          isMulti,
          getGroupHeaderLabel,
          items: filteredItems,
          itemHeight,
          getOptionLabel,
          listPlacement,
          parent: container,
          listAutoWidth,
          listOffset
        };
        ariaSelection = value ? handleAriaSelection() : "";
        ariaContext = handleAriaContent();
        $$rendered = `

<div class="${[
          "selectContainer " + escape2(containerClasses) + " svelte-17l1npl",
          (hasError ? "hasError" : "") + " " + (isMulti ? "multiSelect" : "") + " " + (isDisabled ? "disabled" : "") + " " + (isFocused ? "focused" : "")
        ].join(" ").trim()}"${add_attribute("style", containerStyles, 0)}${add_attribute("this", container, 0)}><span aria-live="${"polite"}" aria-atomic="${"false"}" aria-relevant="${"additions text"}" class="${"a11yText svelte-17l1npl"}">${isFocused ? `<span id="${"aria-selection"}">${escape2(ariaSelection)}</span>
            <span id="${"aria-context"}">${escape2(ariaContext)}</span>` : ``}</span>

    ${Icon2 ? `${validate_component(Icon2 || missing_component, "svelte:component").$$render($$result, Object_1.assign(iconProps), {}, {})}` : ``}

    ${showMultiSelect ? `${validate_component(MultiSelection$1 || missing_component, "svelte:component").$$render($$result, {
          value,
          getSelectionLabel,
          activeValue,
          isDisabled,
          multiFullItemClearable
        }, {}, {})}` : ``}

    <input${spread([
          { readonly: !isSearchable || null },
          escape_object(_inputAttributes),
          {
            placeholder: escape_attribute_value(placeholderText)
          },
          {
            style: escape_attribute_value(inputStyles)
          },
          { disabled: isDisabled || null }
        ], { classes: "svelte-17l1npl" })}${add_attribute("this", input, 0)}${add_attribute("value", filterText, 0)}>

    ${!isMulti && showSelectedItem ? `<div class="${"selectedItem svelte-17l1npl"}">${validate_component(Selection$1 || missing_component, "svelte:component").$$render($$result, { item: value, getSelectionLabel }, {}, {})}</div>` : ``}

    ${showClearIcon ? `<div class="${"clearSelect svelte-17l1npl"}" aria-hidden="${"true"}">${validate_component(ClearIcon$1 || missing_component, "svelte:component").$$render($$result, {}, {}, {})}</div>` : ``}

    ${!showClearIcon && (showIndicator || showChevron && !value || !isSearchable && !isDisabled && !isWaiting && (showSelectedItem && !isClearable || !showSelectedItem)) ? `<div class="${"indicator svelte-17l1npl"}" aria-hidden="${"true"}">${indicatorSvg ? `<!-- HTML_TAG_START -->${indicatorSvg}<!-- HTML_TAG_END -->` : `<svg width="${"100%"}" height="${"100%"}" viewBox="${"0 0 20 20"}" focusable="${"false"}" aria-hidden="${"true"}" class="${"svelte-17l1npl"}"><path d="${"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747\n          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0\n          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502\n          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0\n          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"}"></path></svg>`}</div>` : ``}

    ${isWaiting ? `<div class="${"spinner svelte-17l1npl"}"><svg class="${"spinner_icon svelte-17l1npl"}" viewBox="${"25 25 50 50"}"><circle class="${"spinner_path svelte-17l1npl"}" cx="${"50"}" cy="${"50"}" r="${"20"}" fill="${"none"}" stroke="${"currentColor"}" stroke-width="${"5"}" stroke-miterlimit="${"10"}"></circle></svg></div>` : ``}

    ${listOpen ? `${validate_component(List$1 || missing_component, "svelte:component").$$render($$result, Object_1.assign(listProps, { hoverItemIndex }), {
          hoverItemIndex: ($$value) => {
            hoverItemIndex = $$value;
            $$settled = false;
          }
        }, {})}` : ``}

    ${!isMulti || isMulti && !showMultiSelect ? `<input${add_attribute("name", inputAttributes.name, 0)} type="${"hidden"}"${add_attribute("value", value ? getSelectionLabel(value) : null, 0)} class="${"svelte-17l1npl"}">` : ``}

    ${isMulti && showMultiSelect ? `${each(value, (item) => {
          return `<input${add_attribute("name", inputAttributes.name, 0)} type="${"hidden"}"${add_attribute("value", item ? getSelectionLabel(item) : null, 0)} class="${"svelte-17l1npl"}">`;
        })}` : ``}</div>`;
      } while (!$$settled);
      return $$rendered;
    });
    css6 = {
      code: ".themed.svelte-1af71g1{--border:3px solid var(--color-sky-600);--border-focus-color:var(--color-sky-100);--placeholderColor:red;--itemHoverColor:var(--color-fuchsia-200);--itemHoverBG:var(--color-slate-900);--itemIsActive:var(--color-slate-900);--itemActiveBackground:var(--color-slate-900);--itemIsActiveBG:var(--color-slate-900);--clearSelectFocusColor:green;--clearSelectHoverColor:blue;--inputColor:purple;--itemColor:var(--color-fuchsia-400);--spinnerColor:orange;--indicatorColor:orange;--placeholderColor:var(--color-sky-500);--indicatorWidth:12rem}",
      map: null
    };
    OptionSelect = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { label: label2 = "" } = $$props;
      let { items = [] } = $$props;
      let { selected: selected2 = "" } = $$props;
      let { value = "Select option..." } = $$props;
      if ($$props.label === void 0 && $$bindings.label && label2 !== void 0)
        $$bindings.label(label2);
      if ($$props.items === void 0 && $$bindings.items && items !== void 0)
        $$bindings.items(items);
      if ($$props.selected === void 0 && $$bindings.selected && selected2 !== void 0)
        $$bindings.selected(selected2);
      if ($$props.value === void 0 && $$bindings.value && value !== void 0)
        $$bindings.value(value);
      $$result.css.add(css6);
      return `${validate_component(Param, "Param").$$render($$result, { label: label2 }, {}, {
        default: () => {
          return `<div class="${"themed py-2 w-48 text-cyan-600 svelte-1af71g1"}">${validate_component(Select, "Select").$$render($$result, { items, value }, {}, {})}</div>
	`;
        }
      })}`;
    });
  }
});

// .svelte-kit/output/server/entries/pages/index.svelte.js
var index_svelte_exports = {};
__export(index_svelte_exports, {
  default: () => Routes
});
var import_canvas_sketch2, css7, Routes;
var init_index_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/index.svelte.js"() {
    init_index_0300a598();
    init_CanvasManager_ef2b843a();
    init_Slider_944f32d0();
    init_Checkbox_import_b229c392();
    init_OptionSelect_4e269dd6();
    import_canvas_sketch2 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    init_index_b00483ad();
    css7 = {
      code: '.sketch-wrapper.svelte-v1peie{display:grid;grid-template-areas:"canvas controls";grid-template-columns:4fr 1fr}#canvas.svelte-v1peie{grid-area:canvas}.controls.svelte-v1peie{grid-area:controls}',
      map: null
    };
    Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $storedSettingsChange, $$unsubscribe_storedSettingsChange;
      $$unsubscribe_storedSettingsChange = subscribe(storedSettingsChange, (value) => $storedSettingsChange = value);
      let w, h2, canvas, stars = [], activeStar = null, originStarId, previousOriginStarId, destinationStarId, mousedownStarId, mouseupStarId;
      let data2;
      data2 = {
        TITLE: "Pax01-vanilla",
        fps: 60,
        tickRate: 10,
        numStars: 10,
        numTypes: 5,
        shipsMin: 1,
        shipsMax: 50,
        starRadius: 20,
        shipRadius: 5,
        gridRadius: 55,
        gridOffset: 0,
        orbitXmod: 1,
        orbitYmod: 1,
        speed: 10,
        clearLS: false,
        drawStars: true,
        drawShips: true,
        drawCenters: false,
        drawHexes: true,
        drawVertices: true,
        buildVertices: true,
        drawNumShips: true,
        stars: []
      };
      let previousData = false;
      let localStorageSupported = (() => {
        try {
          return typeof window.localStorage !== "undefined";
        } catch (err) {
          return false;
        }
      })();
      $$result.css.add(css7);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        {
          console.log(`\u{1F680} ~ file: index.svelte ~ line 15 ~ $storedSettingsChange`, $storedSettingsChange);
        }
        {
          console.log(`\u{1F680} ~ file: index.svelte ~ line 30 ~ 

mousedownStarId`, mousedownStarId, `
mouseupStarId`, mouseupStarId);
        }
        {
          console.log(`\u{1F680} ~ file: index.svelte ~ line 28 ~ 

originStarId`, originStarId, `
destinationStarId`, destinationStarId, `
previousOriginStarId`, previousOriginStarId, `activeStar`, activeStar);
        }
        {
          console.log(w, h2);
        }
        {
          console.log(`\u{1F680} ~ file: index.svelte ~ line 67 ~ previousData`, previousData);
        }
        {
          console.log(`\u{1F680} ~ file: index.svelte ~ line 71 ~ localStorageSupported ~ localStorageSupported`, localStorageSupported);
        }
        data2.stars = stars;
        $$rendered = `${$$result.head += `<script src="${"https://code.createjs.com/1.0.0/createjs.min.js"}" data-svelte="svelte-1g386ht"><\/script>`, ""}



<div class="${"sketch-wrapper svelte-v1peie"}"><canvas id="${"canvas"}" class="${"svelte-v1peie"}"${add_attribute("this", canvas, 0)}></canvas>
	<div class="${"controls flex flex-col p-5 svelte-v1peie"}">${validate_component(CanvasManager, "CanvasManager").$$render($$result, { data: data2 }, {}, {
          default: () => {
            return `${validate_component(Slider, "Slider").$$render($$result, {
              label: "Number of stars",
              min: "1",
              max: "50",
              step: "1",
              value: data2.numStars
            }, {
              value: ($$value) => {
                data2.numStars = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Ships min",
              min: "1",
              max: "50",
              step: "1",
              value: data2.shipsMin
            }, {
              value: ($$value) => {
                data2.shipsMin = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Ships max",
              min: "5",
              max: "250",
              step: "5",
              value: data2.shipsMax
            }, {
              value: ($$value) => {
                data2.shipsMax = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Speed",
              min: "5",
              max: "100",
              step: "5",
              value: data2.speed
            }, {
              value: ($$value) => {
                data2.speed = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "FPS",
              min: "1",
              max: "60",
              step: "1",
              value: data2.fps
            }, {
              value: ($$value) => {
                data2.fps = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Orbit X mod",
              min: ".1",
              max: "5",
              step: ".1",
              value: data2.orbitXmod
            }, {
              value: ($$value) => {
                data2.orbitXmod = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Orbit Y mod",
              min: ".1",
              max: "5",
              step: ".1",
              value: data2.orbitYmod
            }, {
              value: ($$value) => {
                data2.orbitYmod = $$value;
                $$settled = false;
              }
            }, {})}
			<button label="${"Start"}" class="${"p-3 m-2 bg-sky-600 hover:bg-sky-500 rounded"}">Animate</button>
			<button label="${"Start"}" class="${"p-3 m-2 bg-sky-600 hover:bg-sky-500 rounded"}">Remove directions</button>
			<button label="${"Start"}" class="${"p-3 m-2 bg-sky-600 hover:bg-sky-500 rounded"}">Redraw grid</button>
			<button label="${"Start"}" class="${"p-3 m-2 bg-sky-600 hover:bg-sky-500 rounded"}">Clear localStorage</button>
			${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              duration: "200",
              label: "Draw stars",
              checked: data2.drawStars
            }, {
              checked: ($$value) => {
                data2.drawStars = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              duration: "200",
              label: "Draw ships",
              checked: data2.drawShips
            }, {
              checked: ($$value) => {
                data2.drawShips = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              duration: "200",
              label: "Draw Centers",
              checked: data2.drawCenters
            }, {
              checked: ($$value) => {
                data2.drawCenters = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              duration: "200",
              label: "Draw Hexes",
              checked: data2.drawHexes
            }, {
              checked: ($$value) => {
                data2.drawHexes = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              duration: "200",
              label: "Draw Vertices",
              checked: data2.drawVertices
            }, {
              checked: ($$value) => {
                data2.drawVertices = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(OptionSelect, "OptionSelect").$$render($$result, {
              items: data2.colorFunctions,
              selected: data2.colorFunctionsIndex
            }, {
              selected: ($$value) => {
                data2.colorFunctionsIndex = $$value;
                $$settled = false;
              }
            }, {})}`;
          }
        })}</div>
</div>`;
      } while (!$$settled);
      $$unsubscribe_storedSettingsChange();
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/nodes/2.js
var __exports3 = {};
__export(__exports3, {
  css: () => css8,
  entry: () => entry3,
  js: () => js3,
  module: () => index_svelte_exports
});
var entry3, js3, css8;
var init__3 = __esm({
  ".svelte-kit/output/server/nodes/2.js"() {
    init_index_svelte();
    entry3 = "pages/index.svelte-8ad6344b.js";
    js3 = ["pages/index.svelte-8ad6344b.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasManager-bc3a3d50.js", "chunks/stores-1f2db047.js", "chunks/Slider-724e463d.js", "chunks/Checkbox-import-1c0ce484.js", "chunks/OptionSelect-daaabff4.js"];
    css8 = ["assets/pages/index.svelte-db861b43.css", "assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/OptionSelect.svelte_svelte_type_style_lang-f02abe27.css", "assets/vendor-e0d31265.css"];
  }
});

// node_modules/seed-random/index.js
var require_seed_random = __commonJS({
  "node_modules/seed-random/index.js"(exports, module2) {
    "use strict";
    var width3 = 256;
    var chunks = 6;
    var digits = 52;
    var pool = [];
    var GLOBAL = typeof global === "undefined" ? window : global;
    var startdenom = Math.pow(width3, chunks);
    var significance = Math.pow(2, digits);
    var overflow = significance * 2;
    var mask = width3 - 1;
    var oldRandom = Math.random;
    module2.exports = function(seed, options) {
      if (options && options.global === true) {
        options.global = false;
        Math.random = module2.exports(seed, options);
        options.global = true;
        return Math.random;
      }
      var use_entropy = options && options.entropy || false;
      var key = [];
      var shortseed = mixkey(flatten(use_entropy ? [seed, tostring(pool)] : 0 in arguments ? seed : autoseed(), 3), key);
      var arc4 = new ARC4(key);
      mixkey(tostring(arc4.S), pool);
      return function() {
        var n = arc4.g(chunks), d = startdenom, x2 = 0;
        while (n < significance) {
          n = (n + x2) * width3;
          d *= width3;
          x2 = arc4.g(1);
        }
        while (n >= overflow) {
          n /= 2;
          d /= 2;
          x2 >>>= 1;
        }
        return (n + x2) / d;
      };
    };
    module2.exports.resetGlobal = function() {
      Math.random = oldRandom;
    };
    function ARC4(key) {
      var t2, keylen = key.length, me = this, i2 = 0, j = me.i = me.j = 0, s4 = me.S = [];
      if (!keylen) {
        key = [keylen++];
      }
      while (i2 < width3) {
        s4[i2] = i2++;
      }
      for (i2 = 0; i2 < width3; i2++) {
        s4[i2] = s4[j = mask & j + key[i2 % keylen] + (t2 = s4[i2])];
        s4[j] = t2;
      }
      (me.g = function(count2) {
        var t3, r2 = 0, i3 = me.i, j2 = me.j, s5 = me.S;
        while (count2--) {
          t3 = s5[i3 = mask & i3 + 1];
          r2 = r2 * width3 + s5[mask & (s5[i3] = s5[j2 = mask & j2 + t3]) + (s5[j2] = t3)];
        }
        me.i = i3;
        me.j = j2;
        return r2;
      })(width3);
    }
    function flatten(obj, depth) {
      var result = [], typ = (typeof obj)[0], prop;
      if (depth && typ == "o") {
        for (prop in obj) {
          try {
            result.push(flatten(obj[prop], depth - 1));
          } catch (e2) {
          }
        }
      }
      return result.length ? result : typ == "s" ? obj : obj + "\0";
    }
    function mixkey(seed, key) {
      var stringseed = seed + "", smear, j = 0;
      while (j < stringseed.length) {
        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);
      }
      return tostring(key);
    }
    function autoseed(seed) {
      try {
        GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width3));
        return tostring(seed);
      } catch (e2) {
        return [
          +new Date(),
          GLOBAL,
          GLOBAL.navigator && GLOBAL.navigator.plugins,
          GLOBAL.screen,
          tostring(pool)
        ];
      }
    }
    function tostring(a) {
      return String.fromCharCode.apply(0, a);
    }
    mixkey(Math.random(), pool);
  }
});

// node_modules/simplex-noise/simplex-noise.js
var require_simplex_noise = __commonJS({
  "node_modules/simplex-noise/simplex-noise.js"(exports, module2) {
    (function() {
      "use strict";
      var F2 = 0.5 * (Math.sqrt(3) - 1);
      var G2 = (3 - Math.sqrt(3)) / 6;
      var F3 = 1 / 3;
      var G3 = 1 / 6;
      var F4 = (Math.sqrt(5) - 1) / 4;
      var G4 = (5 - Math.sqrt(5)) / 20;
      function SimplexNoise(randomOrSeed) {
        var random9;
        if (typeof randomOrSeed == "function") {
          random9 = randomOrSeed;
        } else if (randomOrSeed) {
          random9 = alea(randomOrSeed);
        } else {
          random9 = Math.random;
        }
        this.p = buildPermutationTable(random9);
        this.perm = new Uint8Array(512);
        this.permMod12 = new Uint8Array(512);
        for (var i2 = 0; i2 < 512; i2++) {
          this.perm[i2] = this.p[i2 & 255];
          this.permMod12[i2] = this.perm[i2] % 12;
        }
      }
      SimplexNoise.prototype = {
        grad3: new Float32Array([
          1,
          1,
          0,
          -1,
          1,
          0,
          1,
          -1,
          0,
          -1,
          -1,
          0,
          1,
          0,
          1,
          -1,
          0,
          1,
          1,
          0,
          -1,
          -1,
          0,
          -1,
          0,
          1,
          1,
          0,
          -1,
          1,
          0,
          1,
          -1,
          0,
          -1,
          -1
        ]),
        grad4: new Float32Array([
          0,
          1,
          1,
          1,
          0,
          1,
          1,
          -1,
          0,
          1,
          -1,
          1,
          0,
          1,
          -1,
          -1,
          0,
          -1,
          1,
          1,
          0,
          -1,
          1,
          -1,
          0,
          -1,
          -1,
          1,
          0,
          -1,
          -1,
          -1,
          1,
          0,
          1,
          1,
          1,
          0,
          1,
          -1,
          1,
          0,
          -1,
          1,
          1,
          0,
          -1,
          -1,
          -1,
          0,
          1,
          1,
          -1,
          0,
          1,
          -1,
          -1,
          0,
          -1,
          1,
          -1,
          0,
          -1,
          -1,
          1,
          1,
          0,
          1,
          1,
          1,
          0,
          -1,
          1,
          -1,
          0,
          1,
          1,
          -1,
          0,
          -1,
          -1,
          1,
          0,
          1,
          -1,
          1,
          0,
          -1,
          -1,
          -1,
          0,
          1,
          -1,
          -1,
          0,
          -1,
          1,
          1,
          1,
          0,
          1,
          1,
          -1,
          0,
          1,
          -1,
          1,
          0,
          1,
          -1,
          -1,
          0,
          -1,
          1,
          1,
          0,
          -1,
          1,
          -1,
          0,
          -1,
          -1,
          1,
          0,
          -1,
          -1,
          -1,
          0
        ]),
        noise2D: function(xin, yin) {
          var permMod12 = this.permMod12;
          var perm = this.perm;
          var grad3 = this.grad3;
          var n0 = 0;
          var n1 = 0;
          var n2 = 0;
          var s4 = (xin + yin) * F2;
          var i2 = Math.floor(xin + s4);
          var j = Math.floor(yin + s4);
          var t2 = (i2 + j) * G2;
          var X0 = i2 - t2;
          var Y0 = j - t2;
          var x0 = xin - X0;
          var y0 = yin - Y0;
          var i1, j1;
          if (x0 > y0) {
            i1 = 1;
            j1 = 0;
          } else {
            i1 = 0;
            j1 = 1;
          }
          var x1 = x0 - i1 + G2;
          var y1 = y0 - j1 + G2;
          var x2 = x0 - 1 + 2 * G2;
          var y2 = y0 - 1 + 2 * G2;
          var ii = i2 & 255;
          var jj = j & 255;
          var t0 = 0.5 - x0 * x0 - y0 * y0;
          if (t0 >= 0) {
            var gi0 = permMod12[ii + perm[jj]] * 3;
            t0 *= t0;
            n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0);
          }
          var t1 = 0.5 - x1 * x1 - y1 * y1;
          if (t1 >= 0) {
            var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;
            t1 *= t1;
            n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);
          }
          var t22 = 0.5 - x2 * x2 - y2 * y2;
          if (t22 >= 0) {
            var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;
            t22 *= t22;
            n2 = t22 * t22 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);
          }
          return 70 * (n0 + n1 + n2);
        },
        noise3D: function(xin, yin, zin) {
          var permMod12 = this.permMod12;
          var perm = this.perm;
          var grad3 = this.grad3;
          var n0, n1, n2, n3;
          var s4 = (xin + yin + zin) * F3;
          var i2 = Math.floor(xin + s4);
          var j = Math.floor(yin + s4);
          var k = Math.floor(zin + s4);
          var t2 = (i2 + j + k) * G3;
          var X0 = i2 - t2;
          var Y0 = j - t2;
          var Z0 = k - t2;
          var x0 = xin - X0;
          var y0 = yin - Y0;
          var z0 = zin - Z0;
          var i1, j1, k1;
          var i22, j2, k2;
          if (x0 >= y0) {
            if (y0 >= z0) {
              i1 = 1;
              j1 = 0;
              k1 = 0;
              i22 = 1;
              j2 = 1;
              k2 = 0;
            } else if (x0 >= z0) {
              i1 = 1;
              j1 = 0;
              k1 = 0;
              i22 = 1;
              j2 = 0;
              k2 = 1;
            } else {
              i1 = 0;
              j1 = 0;
              k1 = 1;
              i22 = 1;
              j2 = 0;
              k2 = 1;
            }
          } else {
            if (y0 < z0) {
              i1 = 0;
              j1 = 0;
              k1 = 1;
              i22 = 0;
              j2 = 1;
              k2 = 1;
            } else if (x0 < z0) {
              i1 = 0;
              j1 = 1;
              k1 = 0;
              i22 = 0;
              j2 = 1;
              k2 = 1;
            } else {
              i1 = 0;
              j1 = 1;
              k1 = 0;
              i22 = 1;
              j2 = 1;
              k2 = 0;
            }
          }
          var x1 = x0 - i1 + G3;
          var y1 = y0 - j1 + G3;
          var z1 = z0 - k1 + G3;
          var x2 = x0 - i22 + 2 * G3;
          var y2 = y0 - j2 + 2 * G3;
          var z2 = z0 - k2 + 2 * G3;
          var x3 = x0 - 1 + 3 * G3;
          var y3 = y0 - 1 + 3 * G3;
          var z3 = z0 - 1 + 3 * G3;
          var ii = i2 & 255;
          var jj = j & 255;
          var kk = k & 255;
          var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;
          if (t0 < 0)
            n0 = 0;
          else {
            var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;
            t0 *= t0;
            n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);
          }
          var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;
          if (t1 < 0)
            n1 = 0;
          else {
            var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;
            t1 *= t1;
            n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);
          }
          var t22 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;
          if (t22 < 0)
            n2 = 0;
          else {
            var gi2 = permMod12[ii + i22 + perm[jj + j2 + perm[kk + k2]]] * 3;
            t22 *= t22;
            n2 = t22 * t22 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);
          }
          var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;
          if (t3 < 0)
            n3 = 0;
          else {
            var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;
            t3 *= t3;
            n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);
          }
          return 32 * (n0 + n1 + n2 + n3);
        },
        noise4D: function(x2, y, z, w) {
          var perm = this.perm;
          var grad4 = this.grad4;
          var n0, n1, n2, n3, n4;
          var s4 = (x2 + y + z + w) * F4;
          var i2 = Math.floor(x2 + s4);
          var j = Math.floor(y + s4);
          var k = Math.floor(z + s4);
          var l = Math.floor(w + s4);
          var t2 = (i2 + j + k + l) * G4;
          var X0 = i2 - t2;
          var Y0 = j - t2;
          var Z0 = k - t2;
          var W0 = l - t2;
          var x0 = x2 - X0;
          var y0 = y - Y0;
          var z0 = z - Z0;
          var w0 = w - W0;
          var rankx = 0;
          var ranky = 0;
          var rankz = 0;
          var rankw = 0;
          if (x0 > y0)
            rankx++;
          else
            ranky++;
          if (x0 > z0)
            rankx++;
          else
            rankz++;
          if (x0 > w0)
            rankx++;
          else
            rankw++;
          if (y0 > z0)
            ranky++;
          else
            rankz++;
          if (y0 > w0)
            ranky++;
          else
            rankw++;
          if (z0 > w0)
            rankz++;
          else
            rankw++;
          var i1, j1, k1, l1;
          var i22, j2, k2, l2;
          var i3, j3, k3, l3;
          i1 = rankx >= 3 ? 1 : 0;
          j1 = ranky >= 3 ? 1 : 0;
          k1 = rankz >= 3 ? 1 : 0;
          l1 = rankw >= 3 ? 1 : 0;
          i22 = rankx >= 2 ? 1 : 0;
          j2 = ranky >= 2 ? 1 : 0;
          k2 = rankz >= 2 ? 1 : 0;
          l2 = rankw >= 2 ? 1 : 0;
          i3 = rankx >= 1 ? 1 : 0;
          j3 = ranky >= 1 ? 1 : 0;
          k3 = rankz >= 1 ? 1 : 0;
          l3 = rankw >= 1 ? 1 : 0;
          var x1 = x0 - i1 + G4;
          var y1 = y0 - j1 + G4;
          var z1 = z0 - k1 + G4;
          var w1 = w0 - l1 + G4;
          var x22 = x0 - i22 + 2 * G4;
          var y2 = y0 - j2 + 2 * G4;
          var z2 = z0 - k2 + 2 * G4;
          var w2 = w0 - l2 + 2 * G4;
          var x3 = x0 - i3 + 3 * G4;
          var y3 = y0 - j3 + 3 * G4;
          var z3 = z0 - k3 + 3 * G4;
          var w3 = w0 - l3 + 3 * G4;
          var x4 = x0 - 1 + 4 * G4;
          var y4 = y0 - 1 + 4 * G4;
          var z4 = z0 - 1 + 4 * G4;
          var w4 = w0 - 1 + 4 * G4;
          var ii = i2 & 255;
          var jj = j & 255;
          var kk = k & 255;
          var ll = l & 255;
          var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;
          if (t0 < 0)
            n0 = 0;
          else {
            var gi0 = perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32 * 4;
            t0 *= t0;
            n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);
          }
          var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;
          if (t1 < 0)
            n1 = 0;
          else {
            var gi1 = perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32 * 4;
            t1 *= t1;
            n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);
          }
          var t22 = 0.6 - x22 * x22 - y2 * y2 - z2 * z2 - w2 * w2;
          if (t22 < 0)
            n2 = 0;
          else {
            var gi2 = perm[ii + i22 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32 * 4;
            t22 *= t22;
            n2 = t22 * t22 * (grad4[gi2] * x22 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);
          }
          var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;
          if (t3 < 0)
            n3 = 0;
          else {
            var gi3 = perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32 * 4;
            t3 *= t3;
            n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);
          }
          var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;
          if (t4 < 0)
            n4 = 0;
          else {
            var gi4 = perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32 * 4;
            t4 *= t4;
            n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);
          }
          return 27 * (n0 + n1 + n2 + n3 + n4);
        }
      };
      function buildPermutationTable(random9) {
        var i2;
        var p = new Uint8Array(256);
        for (i2 = 0; i2 < 256; i2++) {
          p[i2] = i2;
        }
        for (i2 = 0; i2 < 255; i2++) {
          var r2 = i2 + ~~(random9() * (256 - i2));
          var aux = p[i2];
          p[i2] = p[r2];
          p[r2] = aux;
        }
        return p;
      }
      SimplexNoise._buildPermutationTable = buildPermutationTable;
      function alea() {
        var s0 = 0;
        var s1 = 0;
        var s22 = 0;
        var c = 1;
        var mash = masher();
        s0 = mash(" ");
        s1 = mash(" ");
        s22 = mash(" ");
        for (var i2 = 0; i2 < arguments.length; i2++) {
          s0 -= mash(arguments[i2]);
          if (s0 < 0) {
            s0 += 1;
          }
          s1 -= mash(arguments[i2]);
          if (s1 < 0) {
            s1 += 1;
          }
          s22 -= mash(arguments[i2]);
          if (s22 < 0) {
            s22 += 1;
          }
        }
        mash = null;
        return function() {
          var t2 = 2091639 * s0 + c * 23283064365386963e-26;
          s0 = s1;
          s1 = s22;
          return s22 = t2 - (c = t2 | 0);
        };
      }
      function masher() {
        var n = 4022871197;
        return function(data2) {
          data2 = data2.toString();
          for (var i2 = 0; i2 < data2.length; i2++) {
            n += data2.charCodeAt(i2);
            var h2 = 0.02519603282416938 * n;
            n = h2 >>> 0;
            h2 -= n;
            h2 *= n;
            n = h2 >>> 0;
            h2 -= n;
            n += h2 * 4294967296;
          }
          return (n >>> 0) * 23283064365386963e-26;
        };
      }
      if (typeof define !== "undefined" && define.amd)
        define(function() {
          return SimplexNoise;
        });
      if (typeof exports !== "undefined")
        exports.SimplexNoise = SimplexNoise;
      else if (typeof window !== "undefined")
        window.SimplexNoise = SimplexNoise;
      if (typeof module2 !== "undefined") {
        module2.exports = SimplexNoise;
      }
    })();
  }
});

// node_modules/defined/index.js
var require_defined = __commonJS({
  "node_modules/defined/index.js"(exports, module2) {
    module2.exports = function() {
      for (var i2 = 0; i2 < arguments.length; i2++) {
        if (arguments[i2] !== void 0)
          return arguments[i2];
      }
    };
  }
});

// node_modules/canvas-sketch-util/random.js
var require_random = __commonJS({
  "node_modules/canvas-sketch-util/random.js"(exports, module2) {
    var seedRandom = require_seed_random();
    var SimplexNoise = require_simplex_noise();
    var defined = require_defined();
    function createRandom(defaultSeed) {
      defaultSeed = defined(defaultSeed, null);
      var defaultRandom = Math.random;
      var currentSeed;
      var currentRandom;
      var noiseGenerator;
      var _nextGaussian = null;
      var _hasNextGaussian = false;
      setSeed(defaultSeed);
      return {
        value,
        createRandom: function(defaultSeed2) {
          return createRandom(defaultSeed2);
        },
        setSeed,
        getSeed,
        getRandomSeed,
        valueNonZero,
        permuteNoise,
        noise1D,
        noise2D,
        noise3D,
        noise4D,
        sign,
        boolean,
        chance,
        range,
        rangeFloor,
        pick,
        shuffle,
        onCircle,
        insideCircle,
        onSphere,
        insideSphere,
        quaternion,
        weighted,
        weightedSet,
        weightedSetIndex,
        gaussian
      };
      function setSeed(seed, opt) {
        if (typeof seed === "number" || typeof seed === "string") {
          currentSeed = seed;
          currentRandom = seedRandom(currentSeed, opt);
        } else {
          currentSeed = void 0;
          currentRandom = defaultRandom;
        }
        noiseGenerator = createNoise();
        _nextGaussian = null;
        _hasNextGaussian = false;
      }
      function value() {
        return currentRandom();
      }
      function valueNonZero() {
        var u = 0;
        while (u === 0)
          u = value();
        return u;
      }
      function getSeed() {
        return currentSeed;
      }
      function getRandomSeed() {
        var seed = String(Math.floor(Math.random() * 1e6));
        return seed;
      }
      function createNoise() {
        return new SimplexNoise(currentRandom);
      }
      function permuteNoise() {
        noiseGenerator = createNoise();
      }
      function noise1D(x2, frequency, amplitude) {
        if (!isFinite(x2))
          throw new TypeError("x component for noise() must be finite");
        frequency = defined(frequency, 1);
        amplitude = defined(amplitude, 1);
        return amplitude * noiseGenerator.noise2D(x2 * frequency, 0);
      }
      function noise2D(x2, y, frequency, amplitude) {
        if (!isFinite(x2))
          throw new TypeError("x component for noise() must be finite");
        if (!isFinite(y))
          throw new TypeError("y component for noise() must be finite");
        frequency = defined(frequency, 1);
        amplitude = defined(amplitude, 1);
        return amplitude * noiseGenerator.noise2D(x2 * frequency, y * frequency);
      }
      function noise3D(x2, y, z, frequency, amplitude) {
        if (!isFinite(x2))
          throw new TypeError("x component for noise() must be finite");
        if (!isFinite(y))
          throw new TypeError("y component for noise() must be finite");
        if (!isFinite(z))
          throw new TypeError("z component for noise() must be finite");
        frequency = defined(frequency, 1);
        amplitude = defined(amplitude, 1);
        return amplitude * noiseGenerator.noise3D(x2 * frequency, y * frequency, z * frequency);
      }
      function noise4D(x2, y, z, w, frequency, amplitude) {
        if (!isFinite(x2))
          throw new TypeError("x component for noise() must be finite");
        if (!isFinite(y))
          throw new TypeError("y component for noise() must be finite");
        if (!isFinite(z))
          throw new TypeError("z component for noise() must be finite");
        if (!isFinite(w))
          throw new TypeError("w component for noise() must be finite");
        frequency = defined(frequency, 1);
        amplitude = defined(amplitude, 1);
        return amplitude * noiseGenerator.noise4D(x2 * frequency, y * frequency, z * frequency, w * frequency);
      }
      function sign() {
        return boolean() ? 1 : -1;
      }
      function boolean() {
        return value() > 0.5;
      }
      function chance(n) {
        n = defined(n, 0.5);
        if (typeof n !== "number")
          throw new TypeError("expected n to be a number");
        return value() < n;
      }
      function range(min, max) {
        if (max === void 0) {
          max = min;
          min = 0;
        }
        if (typeof min !== "number" || typeof max !== "number") {
          throw new TypeError("Expected all arguments to be numbers");
        }
        return value() * (max - min) + min;
      }
      function rangeFloor(min, max) {
        if (max === void 0) {
          max = min;
          min = 0;
        }
        if (typeof min !== "number" || typeof max !== "number") {
          throw new TypeError("Expected all arguments to be numbers");
        }
        return Math.floor(range(min, max));
      }
      function pick(array) {
        if (array.length === 0)
          return void 0;
        return array[rangeFloor(0, array.length)];
      }
      function shuffle(arr2) {
        if (!Array.isArray(arr2)) {
          throw new TypeError("Expected Array, got " + typeof arr2);
        }
        var rand;
        var tmp;
        var len = arr2.length;
        var ret = arr2.slice();
        while (len) {
          rand = Math.floor(value() * len--);
          tmp = ret[len];
          ret[len] = ret[rand];
          ret[rand] = tmp;
        }
        return ret;
      }
      function onCircle(radius, out) {
        radius = defined(radius, 1);
        out = out || [];
        var theta = value() * 2 * Math.PI;
        out[0] = radius * Math.cos(theta);
        out[1] = radius * Math.sin(theta);
        return out;
      }
      function insideCircle(radius, out) {
        radius = defined(radius, 1);
        out = out || [];
        onCircle(1, out);
        var r2 = radius * Math.sqrt(value());
        out[0] *= r2;
        out[1] *= r2;
        return out;
      }
      function onSphere(radius, out) {
        radius = defined(radius, 1);
        out = out || [];
        var u = value() * Math.PI * 2;
        var v = value() * 2 - 1;
        var phi = u;
        var theta = Math.acos(v);
        out[0] = radius * Math.sin(theta) * Math.cos(phi);
        out[1] = radius * Math.sin(theta) * Math.sin(phi);
        out[2] = radius * Math.cos(theta);
        return out;
      }
      function insideSphere(radius, out) {
        radius = defined(radius, 1);
        out = out || [];
        var u = value() * Math.PI * 2;
        var v = value() * 2 - 1;
        var k = value();
        var phi = u;
        var theta = Math.acos(v);
        var r2 = radius * Math.cbrt(k);
        out[0] = r2 * Math.sin(theta) * Math.cos(phi);
        out[1] = r2 * Math.sin(theta) * Math.sin(phi);
        out[2] = r2 * Math.cos(theta);
        return out;
      }
      function quaternion(out) {
        out = out || [];
        var u1 = value();
        var u2 = value();
        var u3 = value();
        var sq1 = Math.sqrt(1 - u1);
        var sq2 = Math.sqrt(u1);
        var theta1 = Math.PI * 2 * u2;
        var theta2 = Math.PI * 2 * u3;
        var x2 = Math.sin(theta1) * sq1;
        var y = Math.cos(theta1) * sq1;
        var z = Math.sin(theta2) * sq2;
        var w = Math.cos(theta2) * sq2;
        out[0] = x2;
        out[1] = y;
        out[2] = z;
        out[3] = w;
        return out;
      }
      function weightedSet(set) {
        set = set || [];
        if (set.length === 0)
          return null;
        return set[weightedSetIndex(set)].value;
      }
      function weightedSetIndex(set) {
        set = set || [];
        if (set.length === 0)
          return -1;
        return weighted(set.map(function(s4) {
          return s4.weight;
        }));
      }
      function weighted(weights) {
        weights = weights || [];
        if (weights.length === 0)
          return -1;
        var totalWeight = 0;
        var i2;
        for (i2 = 0; i2 < weights.length; i2++) {
          totalWeight += weights[i2];
        }
        if (totalWeight <= 0)
          throw new Error("Weights must sum to > 0");
        var random9 = value() * totalWeight;
        for (i2 = 0; i2 < weights.length; i2++) {
          if (random9 < weights[i2]) {
            return i2;
          }
          random9 -= weights[i2];
        }
        return 0;
      }
      function gaussian(mean, standardDerivation) {
        mean = defined(mean, 0);
        standardDerivation = defined(standardDerivation, 1);
        if (_hasNextGaussian) {
          _hasNextGaussian = false;
          var result = _nextGaussian;
          _nextGaussian = null;
          return mean + standardDerivation * result;
        } else {
          var v1 = 0;
          var v2 = 0;
          var s4 = 0;
          do {
            v1 = value() * 2 - 1;
            v2 = value() * 2 - 1;
            s4 = v1 * v1 + v2 * v2;
          } while (s4 >= 1 || s4 === 0);
          var multiplier = Math.sqrt(-2 * Math.log(s4) / s4);
          _nextGaussian = v2 * multiplier;
          _hasNextGaussian = true;
          return mean + standardDerivation * (v1 * multiplier);
        }
      }
    }
    module2.exports = createRandom();
  }
});

// .svelte-kit/output/server/entries/pages/metabrain-landing.svelte.js
var metabrain_landing_svelte_exports = {};
__export(metabrain_landing_svelte_exports, {
  default: () => Metabrain_landing
});
var import_random, css9, Metabrain_landing;
var init_metabrain_landing_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/metabrain-landing.svelte.js"() {
    init_index_0300a598();
    import_random = __toModule(require_random());
    init_functions_9959eb37();
    css9 = {
      code: '#mce-responses{position:absolute;display:flex;height:auto;top:0;left:0;width:370px}#mc_embed_signup div.mce_inline_error{background-color:var(--color-rose-400) !important;width:250px;font-size:1.15rem;color:var(--color-winterblues-100) !important;font-weight:500 !important;top:-53px;position:absolute;left:-16px;text-align:left;border-radius:0;height:auto;transition:all 0.25s}#mc_embed_signup div#mce-success-response{background-color:var(--color-gray-900) !important;width:100%;padding:1rem;height:auto;font-size:1rem;color:var(--color-winterblues-100) !important;font-weight:500 !important;top:-53px;position:absolute;left:0;text-align:left;border-radius:0}#mc_embed_signup div#mce-success-response:before{content:"x";position:absolute;left:95%;top:0;width:100%;height:100%;border-radius:0}#mc_embed_signup input.mce_inline_error{border-color:var(--color-rose-400) !important}.statement{font-family:"Montserrat", sans-serif;font-weight:600;line-height:1.25em;background:linear-gradient(black, black) padding-box, linear-gradient(120deg, var(--color-emerald-500) 10%, var(--color-amber-500) 25%, var(--color-rose-500) 50%, var(--color-fuchsia-500) 75%, var(--color-winterblues-400) 90%) border-box;border-radius:0.25rem;border:2px solid transparent}.statement:focus{background-image:linear-gradient(black, black) padding-box, linear-gradient(120deg, var(--color-emerald-500) 10%, var(--color-amber-500) 25%, var(--color-rose-500) 50%, var(--color-fuchsia-500) 75%, var(--color-winterblues-400) 90%) border-box}#mc_embed_signup input:-internal-autofill-selected{background:rgba(0, 0, 0, 0) !important;color:var(--color-winterblues-100) !important}.fadeOut{opacity:0;transition:all 0.25s}input:-webkit-autofill,input:-webkit-autofill:hover,input:-webkit-autofill:focus{-webkit-text-fill-color:var(--color-winterblues-100);-webkit-box-shadow:0 0 0px 1000px #000 inset;transition:background-color 5000s ease-in-out 0.2s;caret-color:var(--color-winterblues-100)}',
      map: null
    };
    Metabrain_landing = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let email = "";
      function fadeMceError() {
        let mceError = document.querySelectorAll(".mce_inline_error");
        console.log(`\u{1F680} ~ file: index.svelte ~ line 30 ~ fadeMceError ~ mceError`, mceError[1]);
        console.log(`\u{1F680} ~ file: index.svelte ~ line 33 ~ fadeMceError ~ email`, email);
        mceError[1].classList.add("fadeOut");
      }
      $$result.css.add(css9);
      {
        email.length > 3 ? fadeMceError() : "";
      }
      {
        console.log(`\u{1F680} ~ file: index.svelte ~ line 28 ~ email`, email);
      }
      return `${``}`;
    });
  }
});

// .svelte-kit/output/server/nodes/3.js
var __exports4 = {};
__export(__exports4, {
  css: () => css10,
  entry: () => entry4,
  js: () => js4,
  module: () => metabrain_landing_svelte_exports
});
var entry4, js4, css10;
var init__4 = __esm({
  ".svelte-kit/output/server/nodes/3.js"() {
    init_metabrain_landing_svelte();
    entry4 = "pages/metabrain-landing.svelte-2de217a5.js";
    js4 = ["pages/metabrain-landing.svelte-2de217a5.js", "chunks/vendor-525e7dbe.js"];
    css10 = ["assets/pages/metabrain-landing.svelte-d8b70d8e.css", "assets/MetabrainCanvas.svelte_svelte_type_style_lang-bfb9ad8f.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/metabrain.svelte.js
var metabrain_svelte_exports = {};
__export(metabrain_svelte_exports, {
  default: () => Metabrain
});
var import_random2, css11, Metabrain;
var init_metabrain_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/metabrain.svelte.js"() {
    init_index_0300a598();
    import_random2 = __toModule(require_random());
    init_functions_9959eb37();
    css11 = {
      code: '#mce-responses{position:absolute;display:flex;height:auto;top:0;left:0;width:370px}#mc_embed_signup div.mce_inline_error{background-color:var(--color-rose-400) !important;width:250px;font-size:1.15rem;color:var(--color-winterblues-100) !important;font-weight:500 !important;top:-53px;position:absolute;left:-16px;text-align:left;border-radius:0;height:auto;transition:all 0.25s}#mc_embed_signup div#mce-success-response{background-color:var(--color-gray-900) !important;width:100%;padding:1rem;height:auto;font-size:1rem;color:var(--color-winterblues-100) !important;font-weight:500 !important;top:-53px;position:absolute;left:0;text-align:left;border-radius:0}#mc_embed_signup div#mce-success-response:before{content:"x";position:absolute;left:95%;top:0;width:100%;height:100%;border-radius:0}#mc_embed_signup input.mce_inline_error{border-color:var(--color-rose-400) !important}.statement{font-family:"Montserrat", sans-serif;font-weight:600;line-height:1.25em;background:linear-gradient(black, black) padding-box, linear-gradient(120deg, var(--color-emerald-500) 10%, var(--color-amber-500) 25%, var(--color-rose-500) 50%, var(--color-fuchsia-500) 75%, var(--color-winterblues-400) 90%) border-box;border-radius:0.25rem;border:2px solid transparent}.statement:focus{background-image:linear-gradient(black, black) padding-box, linear-gradient(120deg, var(--color-emerald-500) 10%, var(--color-amber-500) 25%, var(--color-rose-500) 50%, var(--color-fuchsia-500) 75%, var(--color-winterblues-400) 90%) border-box}#mc_embed_signup input:-internal-autofill-selected{background:rgba(0, 0, 0, 0) !important;color:var(--color-winterblues-100) !important}.fadeOut{opacity:0;transition:all 0.25s}input:-webkit-autofill,input:-webkit-autofill:hover,input:-webkit-autofill:focus{-webkit-text-fill-color:var(--color-winterblues-100);-webkit-box-shadow:0 0 0px 1000px #000 inset;transition:background-color 5000s ease-in-out 0.2s;caret-color:var(--color-winterblues-100)}',
      map: null
    };
    Metabrain = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let email = "";
      function fadeMceError() {
        let mceError = document.querySelectorAll(".mce_inline_error");
        console.log(`\u{1F680} ~ file: index.svelte ~ line 30 ~ fadeMceError ~ mceError`, mceError[1]);
        console.log(`\u{1F680} ~ file: index.svelte ~ line 33 ~ fadeMceError ~ email`, email);
        mceError[1].classList.add("fadeOut");
      }
      $$result.css.add(css11);
      {
        email.length > 3 ? fadeMceError() : "";
      }
      {
        console.log(`\u{1F680} ~ file: index.svelte ~ line 28 ~ email`, email);
      }
      return `${``}`;
    });
  }
});

// .svelte-kit/output/server/nodes/4.js
var __exports5 = {};
__export(__exports5, {
  css: () => css12,
  entry: () => entry5,
  js: () => js5,
  module: () => metabrain_svelte_exports
});
var entry5, js5, css12;
var init__5 = __esm({
  ".svelte-kit/output/server/nodes/4.js"() {
    init_metabrain_svelte();
    entry5 = "pages/metabrain.svelte-b77864c9.js";
    js5 = ["pages/metabrain.svelte-b77864c9.js", "chunks/vendor-525e7dbe.js"];
    css12 = ["assets/pages/metabrain-landing.svelte-d8b70d8e.css", "assets/MetabrainCanvas.svelte_svelte_type_style_lang-bfb9ad8f.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/__layout.svelte.js
var layout_svelte_exports2 = {};
__export(layout_svelte_exports2, {
  default: () => _layout2
});
var css$14, numSketches, SideNav, css13, _layout2;
var init_layout_svelte2 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/__layout.svelte.js"() {
    init_index_0300a598();
    init_functions_9959eb37();
    init_stores_45e3dd62();
    css$14 = {
      code: '.sidebar{grid-area:sidebar;width:10rem}#sideNav.svelte-122dqnj.svelte-122dqnj{display:flex;flex-direction:column;justify-content:start;align-items:flex-start;font-family:"Montserrat", sans-serif}#sideNav.svelte-122dqnj a.svelte-122dqnj{margin:1em;text-decoration:none;font-weight:500}#sideNav.svelte-122dqnj nav.svelte-122dqnj{display:flex;flex-direction:column}#sideNav.svelte-122dqnj nav a.svelte-122dqnj{@apply rounded-lg p-4;}',
      map: null
    };
    numSketches = 10;
    SideNav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let sketches = [];
      for (let i2 = 1; i2 < numSketches + 1; i2++) {
        let url, name2;
        i2 < 10 ? name2 = `Sketch 0${i2}` : name2 = `Sketch ${i2}`;
        i2 < 10 ? url = `/creative/sketch0${i2}` : url = `/creative/sketch${i2}`;
        let sketch = { name: name2, url };
        sketches.push(sketch);
      }
      $$result.css.add(css$14);
      return `<div class="${"sidebar bg-gray-700 pt-5 svelte-122dqnj"}" id="${"sideNav"}"><nav class="${"svelte-122dqnj"}">${each(sketches, (sketch, i2) => {
        return `<a${add_attribute("href", sketch.url, 0)} class="${"bg-indigo-600 hover:bg-indigo-500 svelte-122dqnj"}">${escape2(sketch.name)}</a>`;
      })}</nav>
</div>`;
    });
    css13 = {
      code: '#creative-layout{grid-template-rows:auto 1fr;grid-template-columns:auto 1fr;grid-template-areas:"sidebar title" "sidebar main"}#sketchLayout{display:grid;grid-area:layout-main;grid-template-columns:10rem 1fr;grid-template-areas:"sidebar sketch";max-height:calc(100vh - 80px);max-width:100vw}.sketch{grid-area:sketch;display:grid;grid-template-areas:"canvas controls";grid-template-columns:1fr minmax(20rem, 25rem)}.sidebar.svelte-1mybd37{grid-area:sidebar}',
      map: null
    };
    _layout2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let params;
      let path;
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value) => $page = value);
      $$result.css.add(css13);
      params = $page.params;
      path = $page.url.pathname;
      {
        console.log(`\u{1F680} ~ file: __layout.svelte ~ line 10 ~ path`, path.split("/").length);
      }
      {
        console.log(`\u{1F680} ~ file: __layout.svelte ~ line 9 ~ params`, params);
      }
      $$unsubscribe_page();
      return `${path.split("/").length > 2 ? `<div id="${"sketchLayout"}" class="${"w-full max-w-screen h-full"}">${validate_component(SideNav, "SideNav").$$render($$result, { class: "sidebar" }, {}, {
        default: () => {
          return `${slots.default ? slots.default({ class: "sidebar svelte-1mybd37" }) : ``}`;
        }
      })}
		${slots.default ? slots.default({ class: "sketch" }) : ``}</div>` : `<div id="${"creative-layout"}">${validate_component(SideNav, "SideNav").$$render($$result, { class: "sidebar" }, {}, {
        default: () => {
          return `${slots.default ? slots.default({ class: "sidebar svelte-1mybd37" }) : ``}`;
        }
      })}
		<div class="${"flex w-auto h-full"}">${slots.default ? slots.default({}) : ``}</div></div>`}`;
    });
  }
});

// .svelte-kit/output/server/nodes/5.js
var __exports6 = {};
__export(__exports6, {
  css: () => css14,
  entry: () => entry6,
  js: () => js6,
  module: () => layout_svelte_exports2
});
var entry6, js6, css14;
var init__6 = __esm({
  ".svelte-kit/output/server/nodes/5.js"() {
    init_layout_svelte2();
    entry6 = "pages/creative/__layout.svelte-989c7d35.js";
    js6 = ["pages/creative/__layout.svelte-989c7d35.js", "chunks/vendor-525e7dbe.js", "chunks/stores-1f2db047.js"];
    css14 = ["assets/pages/creative/__layout.svelte-9ecdc79a.css", "assets/Footer.svelte_svelte_type_style_lang-2e9d039a.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/chunks/CanvasSketchEditor-e62a07d7.js
var import_canvas_sketch3, css$15, CanvasSketch, css15, CanvasSketchEditor;
var init_CanvasSketchEditor_e62a07d7 = __esm({
  ".svelte-kit/output/server/chunks/CanvasSketchEditor-e62a07d7.js"() {
    init_index_0300a598();
    import_canvas_sketch3 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    css$15 = {
      code: "canvas.svelte-t8neft{margin:0;display:block;box-shadow:0px 2px 12px -2px rgba(0, 0, 0, 0.15);width:100%;height:auto}",
      map: null
    };
    CanvasSketch = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let canvas;
      let { settings = { dimensions: [250, 205] } } = $$props;
      let { data: data2 = {} } = $$props;
      let { sketch = () => {
      } } = $$props;
      let loader, manager, windowInnerW;
      onDestroy(() => {
        console.log(`\u{1F680} ~ file: CanvasSketch.svelte ~ line 68 ~ onDestroy ~ loader`, loader);
        loader = null;
        manager = null;
      });
      console.log(`\u{1F680} ~ file: CanvasSketch.svelte ~ line 65 ~ manager`, manager);
      function dataChanged(data22) {
        console.log(`\u{1F680} ~ file: CanvasSketch.svelte ~ line 65 ~ dataChanged ~ data`, data22);
        if (manager) {
          Object.assign(manager.props.data, data22);
          manager.render();
        }
      }
      if ($$props.settings === void 0 && $$bindings.settings && settings !== void 0)
        $$bindings.settings(settings);
      if ($$props.data === void 0 && $$bindings.data && data2 !== void 0)
        $$bindings.data(data2);
      if ($$props.sketch === void 0 && $$bindings.sketch && sketch !== void 0)
        $$bindings.sketch(sketch);
      $$result.css.add(css$15);
      {
        console.log(`\u{1F680} ~ file: CanvasSketch.svelte ~ line 53 ~ windowInnerW width`, windowInnerW);
      }
      settings.dimensions[0];
      settings.dimensions[1];
      manager && manager.update(settings);
      {
        dataChanged(data2);
      }
      return `
<canvas class="${"rounded-lg svelte-t8neft"}"${add_attribute("this", canvas, 0)}></canvas>`;
    });
    css15 = {
      code: 'main.svelte-69dtcj{width:auto;height:100%;display:flex;justify-content:center;align-items:center;flex-direction:row;grid-area:main}main.preview.svelte-69dtcj{grid-area:none;width:100%;height:100%;display:grid;grid-template-rows:3rem 16rem;grid-template-areas:"sketch-title" "sketch-canvas";justify-content:center;align-items:center;flex-direction:row}.title.svelte-69dtcj{grid-area:sketch-title}.viewport.svelte-69dtcj{grid-area:sketch-canvas;display:flex;justify-content:center;align-items:flex-start;flex-direction:column;width:100%;height:100%;flex-basis:60%;flex-grow:1;flex-shrink:1}.panel.svelte-69dtcj{padding:20px;box-sizing:border-box;flex-basis:300px;min-width:200px;max-width:400px;flex-grow:1;flex-shrink:1;height:100%;background:#f2f2f2;border-left:1px solid #e6e6e6;overflow-y:scroll}',
      map: null
    };
    CanvasSketchEditor = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let path;
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value) => $page = value);
      let { settings = {} } = $$props;
      let { data: data2 = {} } = $$props;
      let { sketch = () => {
      } } = $$props;
      let { hidePanel = false } = $$props;
      let viewportW;
      let localStorageSupported = (() => {
        try {
          return typeof window.localStorage !== "undefined";
        } catch (err) {
          return false;
        }
      })();
      readData(settings, data2);
      function saveData(settings2, data22) {
        if (localStorageSupported && settings2.localStorage !== false) {
          window.localStorage.setItem(`${data22.TITLE}`, JSON.stringify(data22));
        }
      }
      function readData(settings2, data22) {
        if (localStorageSupported && settings2.localStorage !== false) {
          try {
            const prev = window.localStorage.getItem(`${data22.TITLE}`);
            if (!prev)
              return;
            const newData = JSON.parse(prev);
            Object.assign(data22, newData);
          } catch (err) {
            console.warn(err);
          }
        }
      }
      if ($$props.settings === void 0 && $$bindings.settings && settings !== void 0)
        $$bindings.settings(settings);
      if ($$props.data === void 0 && $$bindings.data && data2 !== void 0)
        $$bindings.data(data2);
      if ($$props.sketch === void 0 && $$bindings.sketch && sketch !== void 0)
        $$bindings.sketch(sketch);
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      $$result.css.add(css15);
      path = $page.url.pathname;
      {
        saveData(settings, data2);
      }
      {
        console.log(`\u{1F680} ~ file: CanvasSketchEditor.svelte ~ line 45 ~ viewportW`, viewportW);
      }
      $$unsubscribe_page();
      return `<main class="${["sketch rounded-lg svelte-69dtcj", path === "/creative" ? "preview" : ""].join(" ").trim()}">${path === "/creative" ? `<div class="${"title flex items-center justify-center flex w-full self-center svelte-69dtcj"}"><h1 class="${"text-2xl text-center text-sky-200 mt-6 w-full self-center"}">${escape2(data2.TITLE)}</h1></div>` : ``}
	<div class="${"viewport rounded-lg svelte-69dtcj"}">${validate_component(CanvasSketch, "CanvasSketch").$$render($$result, { data: data2, settings, sketch }, {}, {})}</div>

	${!hidePanel ? `<div class="${"panel svelte-69dtcj"}">${slots.default ? slots.default({}) : ``}</div>` : ``}
</main>`;
    });
  }
});

// node_modules/canvas-sketch-util/lib/css-color-names.json
var require_css_color_names = __commonJS({
  "node_modules/canvas-sketch-util/lib/css-color-names.json"(exports, module2) {
    module2.exports = {
      aliceblue: "#f0f8ff",
      antiquewhite: "#faebd7",
      aqua: "#00ffff",
      aquamarine: "#7fffd4",
      azure: "#f0ffff",
      beige: "#f5f5dc",
      bisque: "#ffe4c4",
      black: "#000000",
      blanchedalmond: "#ffebcd",
      blue: "#0000ff",
      blueviolet: "#8a2be2",
      brown: "#a52a2a",
      burlywood: "#deb887",
      cadetblue: "#5f9ea0",
      chartreuse: "#7fff00",
      chocolate: "#d2691e",
      coral: "#ff7f50",
      cornflowerblue: "#6495ed",
      cornsilk: "#fff8dc",
      crimson: "#dc143c",
      cyan: "#00ffff",
      darkblue: "#00008b",
      darkcyan: "#008b8b",
      darkgoldenrod: "#b8860b",
      darkgray: "#a9a9a9",
      darkgreen: "#006400",
      darkgrey: "#a9a9a9",
      darkkhaki: "#bdb76b",
      darkmagenta: "#8b008b",
      darkolivegreen: "#556b2f",
      darkorange: "#ff8c00",
      darkorchid: "#9932cc",
      darkred: "#8b0000",
      darksalmon: "#e9967a",
      darkseagreen: "#8fbc8f",
      darkslateblue: "#483d8b",
      darkslategray: "#2f4f4f",
      darkslategrey: "#2f4f4f",
      darkturquoise: "#00ced1",
      darkviolet: "#9400d3",
      deeppink: "#ff1493",
      deepskyblue: "#00bfff",
      dimgray: "#696969",
      dimgrey: "#696969",
      dodgerblue: "#1e90ff",
      firebrick: "#b22222",
      floralwhite: "#fffaf0",
      forestgreen: "#228b22",
      fuchsia: "#ff00ff",
      gainsboro: "#dcdcdc",
      ghostwhite: "#f8f8ff",
      gold: "#ffd700",
      goldenrod: "#daa520",
      gray: "#808080",
      green: "#008000",
      greenyellow: "#adff2f",
      grey: "#808080",
      honeydew: "#f0fff0",
      hotpink: "#ff69b4",
      indianred: "#cd5c5c",
      indigo: "#4b0082",
      ivory: "#fffff0",
      khaki: "#f0e68c",
      lavender: "#e6e6fa",
      lavenderblush: "#fff0f5",
      lawngreen: "#7cfc00",
      lemonchiffon: "#fffacd",
      lightblue: "#add8e6",
      lightcoral: "#f08080",
      lightcyan: "#e0ffff",
      lightgoldenrodyellow: "#fafad2",
      lightgray: "#d3d3d3",
      lightgreen: "#90ee90",
      lightgrey: "#d3d3d3",
      lightpink: "#ffb6c1",
      lightsalmon: "#ffa07a",
      lightseagreen: "#20b2aa",
      lightskyblue: "#87cefa",
      lightslategray: "#778899",
      lightslategrey: "#778899",
      lightsteelblue: "#b0c4de",
      lightyellow: "#ffffe0",
      lime: "#00ff00",
      limegreen: "#32cd32",
      linen: "#faf0e6",
      magenta: "#ff00ff",
      maroon: "#800000",
      mediumaquamarine: "#66cdaa",
      mediumblue: "#0000cd",
      mediumorchid: "#ba55d3",
      mediumpurple: "#9370db",
      mediumseagreen: "#3cb371",
      mediumslateblue: "#7b68ee",
      mediumspringgreen: "#00fa9a",
      mediumturquoise: "#48d1cc",
      mediumvioletred: "#c71585",
      midnightblue: "#191970",
      mintcream: "#f5fffa",
      mistyrose: "#ffe4e1",
      moccasin: "#ffe4b5",
      navajowhite: "#ffdead",
      navy: "#000080",
      oldlace: "#fdf5e6",
      olive: "#808000",
      olivedrab: "#6b8e23",
      orange: "#ffa500",
      orangered: "#ff4500",
      orchid: "#da70d6",
      palegoldenrod: "#eee8aa",
      palegreen: "#98fb98",
      paleturquoise: "#afeeee",
      palevioletred: "#db7093",
      papayawhip: "#ffefd5",
      peachpuff: "#ffdab9",
      peru: "#cd853f",
      pink: "#ffc0cb",
      plum: "#dda0dd",
      powderblue: "#b0e0e6",
      purple: "#800080",
      rebeccapurple: "#663399",
      red: "#ff0000",
      rosybrown: "#bc8f8f",
      royalblue: "#4169e1",
      saddlebrown: "#8b4513",
      salmon: "#fa8072",
      sandybrown: "#f4a460",
      seagreen: "#2e8b57",
      seashell: "#fff5ee",
      sienna: "#a0522d",
      silver: "#c0c0c0",
      skyblue: "#87ceeb",
      slateblue: "#6a5acd",
      slategray: "#708090",
      slategrey: "#708090",
      snow: "#fffafa",
      springgreen: "#00ff7f",
      steelblue: "#4682b4",
      tan: "#d2b48c",
      teal: "#008080",
      thistle: "#d8bfd8",
      tomato: "#ff6347",
      turquoise: "#40e0d0",
      violet: "#ee82ee",
      wheat: "#f5deb3",
      white: "#ffffff",
      whitesmoke: "#f5f5f5",
      yellow: "#ffff00",
      yellowgreen: "#9acd32"
    };
  }
});

// node_modules/float-hsl2rgb/index.js
var require_float_hsl2rgb = __commonJS({
  "node_modules/float-hsl2rgb/index.js"(exports, module2) {
    module2.exports = hsl2rgb;
    function hsl2rgb(hsl) {
      var h2 = hsl[0], s4 = hsl[1], l = hsl[2], t1, t2, t3, rgb, val;
      if (s4 === 0) {
        val = l;
        return [val, val, val];
      }
      if (l < 0.5) {
        t2 = l * (1 + s4);
      } else {
        t2 = l + s4 - l * s4;
      }
      t1 = 2 * l - t2;
      rgb = [0, 0, 0];
      for (var i2 = 0; i2 < 3; i2++) {
        t3 = h2 + 1 / 3 * -(i2 - 1);
        if (t3 < 0) {
          t3++;
        }
        if (t3 > 1) {
          t3--;
        }
        if (6 * t3 < 1) {
          val = t1 + (t2 - t1) * 6 * t3;
        } else if (2 * t3 < 1) {
          val = t2;
        } else if (3 * t3 < 2) {
          val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
        } else {
          val = t1;
        }
        rgb[i2] = val;
      }
      return rgb;
    }
  }
});

// node_modules/float-rgb2hsl/index.js
var require_float_rgb2hsl = __commonJS({
  "node_modules/float-rgb2hsl/index.js"(exports, module2) {
    module2.exports = rgb2hsl;
    function rgb2hsl(rgb) {
      var r2 = rgb[0], g = rgb[1], b = rgb[2], min = Math.min(r2, g, b), max = Math.max(r2, g, b), delta = max - min, h2, s4, l;
      if (max === min) {
        h2 = 0;
      } else if (r2 === max) {
        h2 = (g - b) / delta;
      } else if (g === max) {
        h2 = 2 + (b - r2) / delta;
      } else if (b === max) {
        h2 = 4 + (r2 - g) / delta;
      }
      h2 = Math.min(h2 * 60, 360);
      if (h2 < 0) {
        h2 += 360;
      }
      l = (min + max) / 2;
      if (max === min) {
        s4 = 0;
      } else if (l <= 0.5) {
        s4 = delta / (max + min);
      } else {
        s4 = delta / (2 - max - min);
      }
      return [h2 / 360, s4, l];
    }
  }
});

// node_modules/canvas-sketch-util/lib/wrap.js
var require_wrap = __commonJS({
  "node_modules/canvas-sketch-util/lib/wrap.js"(exports, module2) {
    module2.exports = wrap;
    function wrap(value, from, to) {
      if (typeof from !== "number" || typeof to !== "number") {
        throw new TypeError('Must specify "to" and "from" arguments as numbers');
      }
      if (from > to) {
        var t2 = from;
        from = to;
        to = t2;
      }
      var cycle = to - from;
      if (cycle === 0) {
        return to;
      }
      return value - cycle * Math.floor((value - from) / cycle);
    }
  }
});

// node_modules/canvas-sketch-util/lib/hsl.js
var require_hsl = __commonJS({
  "node_modules/canvas-sketch-util/lib/hsl.js"(exports, module2) {
    var floatHSL2RGB = require_float_hsl2rgb();
    var floatRGB2HSL = require_float_rgb2hsl();
    var wrap = require_wrap();
    module2.exports.RGBAToHSLA = RGBAToHSLA;
    function RGBAToHSLA(rgba) {
      var floatHSL = floatRGB2HSL([rgba[0] / 255, rgba[1] / 255, rgba[2] / 255]);
      return [
        Math.max(0, Math.min(360, Math.round(floatHSL[0] * 360))),
        Math.max(0, Math.min(100, Math.round(floatHSL[1] * 100))),
        Math.max(0, Math.min(100, Math.round(floatHSL[2] * 100))),
        rgba[3]
      ];
    }
    module2.exports.HSLAToRGBA = HSLAToRGBA;
    function HSLAToRGBA(hsla) {
      var hue = wrap(hsla[0], 0, 360);
      var floatRGB = floatHSL2RGB([hue / 360, hsla[1] / 100, hsla[2] / 100]);
      return [
        Math.max(0, Math.min(255, Math.round(floatRGB[0] * 255))),
        Math.max(0, Math.min(255, Math.round(floatRGB[1] * 255))),
        Math.max(0, Math.min(255, Math.round(floatRGB[2] * 255))),
        hsla[3]
      ];
    }
  }
});

// node_modules/canvas-sketch-util/lib/hex-to-rgba.js
var require_hex_to_rgba = __commonJS({
  "node_modules/canvas-sketch-util/lib/hex-to-rgba.js"(exports, module2) {
    module2.exports = hexToRGBA;
    function hexToRGBA(str) {
      if (typeof str !== "string") {
        throw new TypeError("Hex code parsing must be performed on a string parameter");
      }
      str = str.toLowerCase();
      if (!/^#[a-f0-9]+$/.test(str)) {
        return null;
      }
      var hex = str.replace(/^#/, "");
      var alpha2 = 1;
      if (hex.length === 8) {
        alpha2 = parseInt(hex.slice(6, 8), 16) / 255;
        hex = hex.slice(0, 6);
      }
      if (hex.length === 4) {
        alpha2 = parseInt(hex.slice(3, 4).repeat(2), 16) / 255;
        hex = hex.slice(0, 3);
      }
      if (hex.length === 3) {
        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
      }
      var num = parseInt(hex, 16);
      var red2 = num >> 16;
      var green2 = num >> 8 & 255;
      var blue2 = num & 255;
      return [red2, green2, blue2, alpha2];
    }
  }
});

// node_modules/canvas-sketch-util/lib/rgba-to-hex.js
var require_rgba_to_hex = __commonJS({
  "node_modules/canvas-sketch-util/lib/rgba-to-hex.js"(exports, module2) {
    module2.exports = rgbaToHex;
    function rgbaToHex(rgba) {
      if (!rgba || !Array.isArray(rgba)) {
        throw new TypeError("Must specify an array to convert into a hex code");
      }
      var r2 = Math.max(0, Math.min(255, Math.round(rgba[0] || 0)));
      var g = Math.max(0, Math.min(255, Math.round(rgba[1] || 0)));
      var b = Math.max(0, Math.min(255, Math.round(rgba[2] || 0)));
      var alpha2 = rgba[3];
      if (typeof alpha2 === "undefined" || !isFinite(alpha2)) {
        alpha2 = 1;
      }
      var a = Math.max(0, Math.min(255, Math.round(alpha2 * 255)));
      var alphaParam = a === 255 ? "" : (a | 1 << 8).toString(16).slice(1);
      var result = (b | g << 8 | r2 << 16 | 1 << 24).toString(16).slice(1) + alphaParam;
      return "#" + result;
    }
  }
});

// node_modules/canvas-sketch-util/lib/css-color.js
var require_css_color = __commonJS({
  "node_modules/canvas-sketch-util/lib/css-color.js"(exports, module2) {
    var names = require_css_color_names();
    var HSLUtil = require_hsl();
    var hexToRGBA = require_hex_to_rgba();
    var RGBAToHex = require_rgba_to_hex();
    var wrap = require_wrap();
    function parseStyle(str) {
      if (typeof str !== "string") {
        throw new TypeError("Color parsing must be performed on a string parameter");
      }
      str = str.toLowerCase();
      if (str in names) {
        str = names[str];
      } else if (str === "transparent") {
        str = "#00000000";
      }
      var rgba, hsla, hex;
      if (/^#[a-f0-9]+$/.test(str)) {
        rgba = hexToRGBA(str);
        hex = RGBAToHex(rgba);
        hsla = HSLUtil.RGBAToHSLA(rgba);
      } else {
        var match = /^((?:rgb|hsl)a?)\s*\(([^)]*)\)/.exec(str);
        if (!match)
          return null;
        var type = match[1].replace(/a$/, "");
        var parts = match[2].replace(/^\s+|\s+$/g, "").split(/\s*,\s*/).map(function(n, i2) {
          if (i2 <= 2)
            return Math.round(parseFloat(n) || 0);
          else {
            n = parseFloat(n);
            if (typeof n !== "number" || !isFinite(n))
              n = 1;
            return n;
          }
        });
        if (typeof parts[3] === "undefined" || !isFinite(parts[3])) {
          parts[3] = 1;
        }
        if (type === "rgb") {
          hsla = HSLUtil.RGBAToHSLA(parts);
          rgba = parts;
        } else if (type === "hsl") {
          rgba = HSLUtil.HSLAToRGBA(parts);
          parts[0] = wrap(parts[0], 0, 360);
          hsla = parts;
        }
        hex = RGBAToHex(rgba);
      }
      if (!rgba && !hex && !hsla)
        return null;
      var ret = {
        hex,
        alpha: rgba[3],
        rgb: rgba.slice(0, 3),
        rgba,
        hsl: hsla.slice(0, 3),
        hsla
      };
      return ret;
    }
    module2.exports.parse = parseColor;
    function parseColor(color) {
      if (typeof color === "string") {
        return parseStyle(color);
      } else if (Array.isArray(color) && color.length >= 3) {
        var rgbStr = rgbStyle(color[0], color[1], color[2], color[3]);
        return parseStyle(rgbStr);
      } else if (color && typeof color === "object") {
        var str;
        if (color.hex)
          str = color.hex;
        else if (color.rgba)
          str = rgbStyle(color.rgba[0], color.rgba[1], color.rgba[2], color.rgba[3]);
        else if (color.hsla)
          str = hslStyle(color.hsla[0], color.hsla[1], color.hsla[2], color.hsla[3]);
        else if (color.rgb)
          str = rgbStyle(color.rgb[0], color.rgb[1], color.rgb[2]);
        else if (color.hsl)
          str = hslStyle(color.hsl[0], color.hsl[1], color.hsl[2]);
        if (str)
          return parseStyle(str);
      }
      return null;
    }
    module2.exports.style = style;
    function style(color) {
      var result = module2.exports.parse(color);
      if (result) {
        var rgba = result.rgba;
        return rgbStyle(rgba[0], rgba[1], rgba[2], rgba[3]);
      }
      return null;
    }
    function rgbStyle(r2, g, b, a) {
      r2 = Math.max(0, Math.min(255, Math.round(r2)));
      g = Math.max(0, Math.min(255, Math.round(g)));
      b = Math.max(0, Math.min(255, Math.round(b)));
      if (a === 1 || !isFinite(a) || typeof a === "undefined") {
        return "rgb(" + [r2, g, b].join(", ") + ")";
      } else {
        a = Math.max(0, Math.min(1, a));
        return "rgba(" + [r2, g, b, a].join(", ") + ")";
      }
    }
    function hslStyle(h2, s4, l, a) {
      h2 = wrap(h2, 0, 360);
      h2 = Math.max(0, Math.min(360, Math.round(h2)));
      s4 = Math.max(0, Math.min(100, Math.round(s4)));
      l = Math.max(0, Math.min(100, Math.round(l)));
      if (a === 1 || !isFinite(a) || typeof a === "undefined") {
        return "hsl(" + [h2, s4, l].join(", ") + ")";
      } else {
        a = Math.max(0, Math.min(1, a));
        return "hsla(" + [h2, s4, l, a].join(", ") + ")";
      }
    }
  }
});

// node_modules/canvas-sketch-util/lib/relative-luminance.js
var require_relative_luminance = __commonJS({
  "node_modules/canvas-sketch-util/lib/relative-luminance.js"(exports, module2) {
    var rc = 0.2126;
    var gc = 0.7152;
    var bc = 0.0722;
    var lowc = 1 / 12.92;
    function adjustGamma(a) {
      return Math.pow((a + 0.055) / 1.055, 2.4);
    }
    module2.exports = relativeLuminance;
    function relativeLuminance(rgb) {
      var rsrgb = rgb[0] / 255;
      var gsrgb = rgb[1] / 255;
      var bsrgb = rgb[2] / 255;
      var r2 = rsrgb <= 0.03928 ? rsrgb * lowc : adjustGamma(rsrgb);
      var g = gsrgb <= 0.03928 ? gsrgb * lowc : adjustGamma(gsrgb);
      var b = bsrgb <= 0.03928 ? bsrgb * lowc : adjustGamma(bsrgb);
      return r2 * rc + g * gc + b * bc;
    }
  }
});

// node_modules/canvas-sketch-util/color.js
var require_color = __commonJS({
  "node_modules/canvas-sketch-util/color.js"(exports, module2) {
    var cssColor = require_css_color();
    var names = require_css_color_names();
    var rgbLuminance = require_relative_luminance();
    var HSLUtil = require_hsl();
    var hexToRGBA = require_hex_to_rgba();
    var RGBAToHex = require_rgba_to_hex();
    module2.exports.parse = cssColor.parse;
    module2.exports.style = cssColor.style;
    module2.exports.names = names;
    module2.exports.relativeLuminance = function relativeLuminance(color) {
      var result = module2.exports.parse(color);
      if (!result)
        return null;
      return rgbLuminance(result.rgb);
    };
    module2.exports.contrastRatio = function contrastRatio(colorA, colorB) {
      var a = module2.exports.relativeLuminance(colorA);
      var b = module2.exports.relativeLuminance(colorB);
      if (a == null || b == null)
        return null;
      var l1 = Math.max(a, b);
      var l2 = Math.min(a, b);
      return (l1 + 0.05) / (l2 + 0.05);
    };
    module2.exports.offsetHSL = function(color, h2, s4, l) {
      var result = module2.exports.parse(color);
      if (!result)
        return null;
      result.hsla[0] += h2 || 0;
      result.hsla[1] = Math.max(0, Math.min(100, result.hsla[1] + (s4 || 0)));
      result.hsla[2] = Math.max(0, Math.min(100, result.hsla[2] + (l || 0)));
      return module2.exports.parse({ hsla: result.hsla });
    };
    module2.exports.blend = function(background, foreground, opacity) {
      var bg = module2.exports.parse(background);
      var fg = module2.exports.parse(foreground);
      if (bg == null || fg == null)
        return null;
      var c0 = bg.rgba;
      var c1 = fg.rgba;
      opacity = typeof opacity === "number" && isFinite(opacity) ? opacity : 1;
      var alpha2 = opacity * c1[3];
      if (alpha2 >= 1) {
        return fg;
      }
      for (var i2 = 0; i2 < 3; i2++) {
        c1[i2] = c1[i2] * alpha2 + c0[i2] * (c0[3] * (1 - alpha2));
      }
      c1[3] = Math.max(0, Math.min(1, alpha2 + c0[3] * (1 - alpha2)));
      return module2.exports.parse(c1);
    };
    module2.exports.hexToRGBA = hexToRGBA;
    module2.exports.RGBAToHex = RGBAToHex;
    module2.exports.RGBAToHSLA = HSLUtil.RGBAToHSLA;
    module2.exports.HSLAToRGBA = HSLUtil.HSLAToRGBA;
  }
});

// .svelte-kit/output/server/chunks/ColorInput-b139901e.js
var import_color, css16, ColorInput;
var init_ColorInput_b139901e = __esm({
  ".svelte-kit/output/server/chunks/ColorInput-b139901e.js"() {
    init_index_0300a598();
    init_Slider_944f32d0();
    import_color = __toModule(require_color());
    css16 = {
      code: "input.svelte-13o5b0t{cursor:pointer;-webkit-appearance:none;border:none;background:none;border-radius:5px;padding:0;overflow:hidden;width:50px;height:25px;outline:0;box-sizing:border-box;border:1px solid #dcdcdc;padding:0;margin:0}input[type='color'].svelte-13o5b0t::-webkit-color-swatch-wrapper{border:0;padding:0}input[type='color'].svelte-13o5b0t::-webkit-color-swatch{border:none;border:2px solid white;border-radius:5px}",
      map: null
    };
    ColorInput = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      createEventDispatcher();
      let { label: label2 = "" } = $$props;
      let { value = 0 } = $$props;
      let { hsla = "" } = $$props;
      let { opacity = 1 } = $$props;
      if ($$props.label === void 0 && $$bindings.label && label2 !== void 0)
        $$bindings.label(label2);
      if ($$props.value === void 0 && $$bindings.value && value !== void 0)
        $$bindings.value(value);
      if ($$props.hsla === void 0 && $$bindings.hsla && hsla !== void 0)
        $$bindings.hsla(hsla);
      if ($$props.opacity === void 0 && $$bindings.opacity && opacity !== void 0)
        $$bindings.opacity(opacity);
      $$result.css.add(css16);
      return `${validate_component(Param, "Param").$$render($$result, { label: label2 }, {}, {
        default: () => {
          return `<input type="${"color"}" class="${"svelte-13o5b0t"}"${add_attribute("value", value, 0)}>`;
        }
      })}`;
    });
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch02.svelte.js
var sketch02_svelte_exports = {};
__export(sketch02_svelte_exports, {
  default: () => Sketch02
});
var import_random3, import_color2, import_canvas_sketch4, css17, Sketch02;
var init_sketch02_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch02.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    init_Slider_944f32d0();
    init_ColorInput_b139901e();
    init_OptionSelect_4e269dd6();
    init_Checkbox_import_b229c392();
    import_random3 = __toModule(require_random());
    import_color2 = __toModule(require_color());
    import_canvas_sketch4 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    init_index_b00483ad();
    css17 = {
      code: ".input-group-wrapper.svelte-1d7ksxj{@apply flex flex-col items-start justify-center m-0 bg-sky-200 p-3 my-1 rounded-lg;}",
      map: null
    };
    Sketch02 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      const data2 = {
        TITLE: "Sketch02",
        itemHeight: 25,
        itemWidth: 25,
        itemScaleX: 1,
        itemScaleY: 1,
        width: 1e3,
        height: 1e3,
        gap: 15,
        itemsPerColumn: 25,
        itemsPerRow: 25,
        originX: 0,
        originY: 0,
        totalItems: false,
        remainingWidth: 1080,
        remainingHeight: 1080,
        margin: 100,
        offset: 0,
        randomFactor: 0.5,
        opacityMedian: 0.5,
        opacityVariance: 0.25,
        randomStroke: true,
        randomFill: true,
        fill: "hsla(180,50%,50%,0.5)",
        fillHSLA: "hsla(180,50%,50%,0.5)",
        fillOpacity: ".25",
        stroke: "#ffffffaa",
        strokeHSLA: "hsla(60,50%,50%,0.5)",
        strokeOpacity: ".25",
        strokeRandom: "#0033cff",
        strokeRandomHSLA: "hsla(320,50%,50%,0.5)",
        strokeRandomOpacity: ".25",
        background: "00000000",
        outline: true,
        fitToCanvas: true,
        shapes: [{ value: "square", label: "square" }, { value: "circle", label: "circle" }],
        shape: "square",
        startAngle: 0,
        endAngle: 7,
        arclen: 0.5,
        angle: 0,
        radius: 0.33,
        lineWidth: 2,
        lineWidthRandom: 5
      };
      let fill, stroke;
      const settings = {
        scaleToView: true,
        dimensions: [1280, 1280]
      };
      const sketch = ({ context, width: width3, height: height3 }) => {
        data2.width = width3;
        data2.height = height3;
        data2.remainingWidth = width3 - data2.itemsPerRow * data2.gap;
        data2.remainingHeight = height3 - data2.itemsPerColumn * data2.gap;
        data2.itemWidth = data2.remainingWidth / data2.itemsPerRow;
        data2.itemHeight = data2.remainingHeight / data2.itemsPerColumn;
        return ({ context: context2, width: width22, height: height22 }) => {
          context2.clearRect(0, 0, width22, height22);
          context2.fillStyle = data2.background;
          context2.fillRect(0, 0, width22, height22);
          drawGrid(context2);
        };
      };
      function drawGrid(context, width3, height3) {
        for (let j = 0; j < data2.itemsPerColumn; j++) {
          for (let i2 = 0; i2 < data2.itemsPerRow; i2++) {
            let x2 = (data2.itemWidth + data2.gap) * i2;
            let y = (data2.itemHeight + data2.gap) * j;
            stroke = data2.strokeHSLA;
            if (data2.shape == "square") {
              drawRect(context, x2 + data2.margin / 2 + data2.gap / 2, y + data2.margin / 2 + data2.gap / 2, data2.itemWidth, data2.itemHeight, data2.fillHSLA, stroke, data2.lineWidth);
            } else {
              drawArc(context, x2 + data2.margin / 2 + data2.gap / 2, y + data2.margin / 2 + data2.gap / 2, Math.abs(data2.itemWidth), data2.startAngle, data2.endAngle, data2.fillHSLA, stroke, data2.lineWidth);
            }
            if (Math.random() < data2.randomFactor) {
              data2.randomStroke ? stroke = `hsla(${setItemColor(i2, j, data2.totalItems * 0.3)}, 90%, 50%, ${import_random3.default.range(data2.opacityMedian - data2.opacityVariance, data2.opacityMedian + data2.opacityVariance)})` : stroke = data2.strokeRandomHSLA;
              data2.randomFill ? fill = `hsla(${setItemColor(i2, j, data2.totalItems * 0.3)}, 90%, 50%, ${import_random3.default.range(data2.opacityMedian - data2.opacityVariance, data2.opacityMedian + data2.opacityVariance)})` : fill = data2.fillRandomHSLA;
              if (data2.shape == "square") {
                drawRect(context, x2 + data2.margin / 2 + data2.gap / 2 + data2.offset, y + data2.margin / 2 + data2.gap / 2 + data2.offset, data2.itemWidth, data2.itemHeight, fill, stroke, data2.lineWidthRandom);
              } else {
                drawArc(context, x2 + data2.margin / 2 + data2.gap / 2 + data2.offset, y + data2.margin / 2 + data2.gap / 2 + data2.offset, Math.abs(data2.itemWidth), data2.startAngle, data2.endAngle, fill, stroke, data2.lineWidthRandom);
              }
            }
          }
        }
      }
      const drawRect = (context, originX, originY, width3, height3, fill2, stroke2, lineWidth) => {
        context.strokeStyle = stroke2;
        context.beginPath();
        context.rect(originX, originY, width3 * data2.itemScaleX, height3 * data2.itemScaleY);
        context.lineWidth = lineWidth;
        context.stroke();
        context.fillStyle = fill2;
        context.fill();
      };
      const drawArc = (context, originX, originY, radius, startAngle2, endAngle, fill2, stroke2, lineWidth) => {
        context.strokeStyle = stroke2;
        context.beginPath();
        context.arc(originX, originY, radius, startAngle2, endAngle);
        context.lineWidth = lineWidth;
        context.stroke();
        context.fillStyle = fill2;
        context.fill();
      };
      const setItemColor = (i2, j, totalItems) => {
        let hueOffset = 30;
        let variance = Math.random() * 5;
        let currentFactor = (i2 + variance) * (j - variance) * (variance * totalItems);
        let hue = currentFactor + hueOffset;
        return hue;
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      $$result.css.add(css17);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        data2.totalItems = data2.itemsPerColumn * data2.itemsPerRow;
        $$rendered = `${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {
          default: () => {
            return `${validate_component(OptionSelect, "OptionSelect").$$render($$result, { items: data2.shapes, selected: data2.shape }, {
              selected: ($$value) => {
                data2.shape = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              label: "Random fill",
              checked: data2.randomFill
            }, {
              checked: ($$value) => {
                data2.randomFill = $$value;
                $$settled = false;
              }
            }, {})}
	${!data2.randomFill ? `<div class="${"input-group-wrapper svelte-1d7ksxj"}">${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Fill",
              opacity: data2.fillOpacity,
              value: data2.fill,
              hsla: data2.fillHSLA
            }, {
              value: ($$value) => {
                data2.fill = $$value;
                $$settled = false;
              },
              hsla: ($$value) => {
                data2.fillHSLA = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Fill Opacity",
              min: "0",
              max: "1",
              step: ".05",
              value: data2.fillOpacity
            }, {
              value: ($$value) => {
                data2.fillOpacity = $$value;
                $$settled = false;
              }
            }, {})}</div>` : ``}
	
	${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              label: "Random stroke",
              hidePanel,
              checked: data2.randomStroke
            }, {
              checked: ($$value) => {
                data2.randomStroke = $$value;
                $$settled = false;
              }
            }, {})}
	<div class="${"input-group-wrapper svelte-1d7ksxj"}">${validate_component(ColorInput, "ColorInput").$$render($$result, { label: "Stroke", value: data2.stroke }, {
              value: ($$value) => {
                data2.stroke = $$value;
                $$settled = false;
              }
            }, {})}
		${validate_component(Slider, "Slider").$$render($$result, {
              label: "Stroke Opacity",
              min: "0",
              max: "1",
              step: ".05",
              value: data2.strokeOpacity
            }, {
              value: ($$value) => {
                data2.strokeOpacity = $$value;
                $$settled = false;
              }
            }, {})}
		 </div>
	<div class="${"input-group-wrapper svelte-1d7ksxj"}">${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Stroke Random",
              value: data2.strokeRandom,
              hsla: data2.strokeRandomHSLA
            }, {
              value: ($$value) => {
                data2.strokeRandom = $$value;
                $$settled = false;
              },
              hsla: ($$value) => {
                data2.strokeRandomHSLA = $$value;
                $$settled = false;
              }
            }, {})}
		${validate_component(Slider, "Slider").$$render($$result, {
              label: "Stroke Random Opacity",
              min: "0",
              max: "1",
              step: ".05",
              value: data2.strokeRandomOpacity
            }, {
              value: ($$value) => {
                data2.strokeRandomOpacity = $$value;
                $$settled = false;
              }
            }, {})}</div>
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Items per row",
              min: "1",
              max: "300",
              step: "1",
              value: data2.itemsPerRow
            }, {
              value: ($$value) => {
                data2.itemsPerRow = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Items per column",
              min: "1",
              max: "300",
              step: "1",
              value: data2.itemsPerColumn
            }, {
              value: ($$value) => {
                data2.itemsPerColumn = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Scale X",
              min: ".25",
              max: "10",
              step: ".25",
              value: data2.itemScaleX
            }, {
              value: ($$value) => {
                data2.itemScaleX = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Scale Y",
              min: ".25",
              max: "10",
              step: ".25",
              value: data2.itemScaleY
            }, {
              value: ($$value) => {
                data2.itemScaleY = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Gap",
              min: "0",
              max: "100",
              step: "5",
              value: data2.gap
            }, {
              value: ($$value) => {
                data2.gap = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Margin",
              min: "0",
              max: "500",
              step: "10",
              value: data2.margin
            }, {
              value: ($$value) => {
                data2.margin = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Offset",
              min: "0",
              max: "100",
              step: "1",
              value: data2.offset
            }, {
              value: ($$value) => {
                data2.offset = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Random Factor",
              min: "0",
              max: "1",
              step: ".05",
              value: data2.randomFactor
            }, {
              value: ($$value) => {
                data2.randomFactor = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Opacity Median",
              min: "0",
              max: "1",
              step: ".05",
              value: data2.opacityMedian
            }, {
              value: ($$value) => {
                data2.opacityMedian = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Opacity Variance",
              min: "0",
              max: "1",
              step: ".05",
              value: data2.opacityVariance
            }, {
              value: ($$value) => {
                data2.opacityVariance = $$value;
                $$settled = false;
              }
            }, {})}
	
	${validate_component(Checkbox_import, "Checkbox").$$render($$result, { label: "Outline", checked: data2.outline }, {
              checked: ($$value) => {
                data2.outline = $$value;
                $$settled = false;
              }
            }, {})}
	
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Line Width",
              min: "0",
              max: "100",
              value: data2.lineWidth
            }, {
              value: ($$value) => {
                data2.lineWidth = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Line Width Random",
              min: "0",
              max: "100",
              value: data2.lineWidthRandom
            }, {
              value: ($$value) => {
                data2.lineWidthRandom = $$value;
                $$settled = false;
              }
            }, {})}
	
	`;
          }
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// node_modules/canvas-sketch-util/math.js
var require_math = __commonJS({
  "node_modules/canvas-sketch-util/math.js"(exports, module2) {
    var defined = require_defined();
    var wrap = require_wrap();
    var EPSILON = Number.EPSILON;
    function clamp(value, min, max) {
      return min < max ? value < min ? min : value > max ? max : value : value < max ? max : value > min ? min : value;
    }
    function clamp01(v) {
      return clamp(v, 0, 1);
    }
    function lerp(min, max, t2) {
      return min * (1 - t2) + max * t2;
    }
    function inverseLerp(min, max, t2) {
      if (Math.abs(min - max) < EPSILON)
        return 0;
      else
        return (t2 - min) / (max - min);
    }
    function smoothstep(min, max, t2) {
      var x2 = clamp(inverseLerp(min, max, t2), 0, 1);
      return x2 * x2 * (3 - 2 * x2);
    }
    function toFinite(n, defaultValue) {
      defaultValue = defined(defaultValue, 0);
      return typeof n === "number" && isFinite(n) ? n : defaultValue;
    }
    function expandVector(dims) {
      if (typeof dims !== "number")
        throw new TypeError("Expected dims argument");
      return function(p, defaultValue) {
        defaultValue = defined(defaultValue, 0);
        var scalar;
        if (p == null) {
          scalar = defaultValue;
        } else if (typeof p === "number" && isFinite(p)) {
          scalar = p;
        }
        var out = [];
        var i2;
        if (scalar == null) {
          for (i2 = 0; i2 < dims; i2++) {
            out[i2] = toFinite(p[i2], defaultValue);
          }
        } else {
          for (i2 = 0; i2 < dims; i2++) {
            out[i2] = scalar;
          }
        }
        return out;
      };
    }
    function lerpArray(min, max, t2, out) {
      out = out || [];
      if (min.length !== max.length) {
        throw new TypeError("min and max array are expected to have the same length");
      }
      for (var i2 = 0; i2 < min.length; i2++) {
        out[i2] = lerp(min[i2], max[i2], t2);
      }
      return out;
    }
    function newArray(n, initialValue) {
      n = defined(n, 0);
      if (typeof n !== "number")
        throw new TypeError("Expected n argument to be a number");
      var out = [];
      for (var i2 = 0; i2 < n; i2++)
        out.push(initialValue);
      return out;
    }
    function linspace(n, opts) {
      n = defined(n, 0);
      if (typeof n !== "number")
        throw new TypeError("Expected n argument to be a number");
      opts = opts || {};
      if (typeof opts === "boolean") {
        opts = { endpoint: true };
      }
      var offset = defined(opts.offset, 0);
      if (opts.endpoint) {
        return newArray(n).map(function(_, i2) {
          return n <= 1 ? 0 : (i2 + offset) / (n - 1);
        });
      } else {
        return newArray(n).map(function(_, i2) {
          return (i2 + offset) / n;
        });
      }
    }
    function lerpFrames(values, t2, out) {
      t2 = clamp(t2, 0, 1);
      var len = values.length - 1;
      var whole = t2 * len;
      var frame2 = Math.floor(whole);
      var fract2 = whole - frame2;
      var nextFrame = Math.min(frame2 + 1, len);
      var a = values[frame2 % values.length];
      var b = values[nextFrame % values.length];
      if (typeof a === "number" && typeof b === "number") {
        return lerp(a, b, fract2);
      } else if (Array.isArray(a) && Array.isArray(b)) {
        return lerpArray(a, b, fract2, out);
      } else {
        throw new TypeError("Mismatch in value type of two array elements: " + frame2 + " and " + nextFrame);
      }
    }
    function mod(a, b) {
      return (a % b + b) % b;
    }
    function degToRad(n) {
      return n * Math.PI / 180;
    }
    function radToDeg(n) {
      return n * 180 / Math.PI;
    }
    function fract(n) {
      return n - Math.floor(n);
    }
    function sign(n) {
      if (n > 0)
        return 1;
      else if (n < 0)
        return -1;
      else
        return 0;
    }
    function pingPong(t2, length) {
      t2 = mod(t2, length * 2);
      return length - Math.abs(t2 - length);
    }
    function damp(a, b, lambda, dt) {
      return lerp(a, b, 1 - Math.exp(-lambda * dt));
    }
    function dampArray(a, b, lambda, dt, out) {
      out = out || [];
      for (var i2 = 0; i2 < a.length; i2++) {
        out[i2] = damp(a[i2], b[i2], lambda, dt);
      }
      return out;
    }
    function mapRange(value, inputMin, inputMax, outputMin, outputMax, clamp2) {
      if (Math.abs(inputMin - inputMax) < EPSILON) {
        return outputMin;
      } else {
        var outVal = (value - inputMin) / (inputMax - inputMin) * (outputMax - outputMin) + outputMin;
        if (clamp2) {
          if (outputMax < outputMin) {
            if (outVal < outputMax)
              outVal = outputMax;
            else if (outVal > outputMin)
              outVal = outputMin;
          } else {
            if (outVal > outputMax)
              outVal = outputMax;
            else if (outVal < outputMin)
              outVal = outputMin;
          }
        }
        return outVal;
      }
    }
    module2.exports = {
      mod,
      fract,
      sign,
      degToRad,
      radToDeg,
      wrap,
      pingPong,
      linspace,
      lerp,
      lerpArray,
      inverseLerp,
      lerpFrames,
      clamp,
      clamp01,
      smoothstep,
      damp,
      dampArray,
      mapRange,
      expand2D: expandVector(2),
      expand3D: expandVector(3),
      expand4D: expandVector(4)
    };
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch03.svelte.js
var sketch03_svelte_exports = {};
__export(sketch03_svelte_exports, {
  default: () => Sketch03
});
var import_color3, import_random4, import_math, import_canvas_sketch5, width, height, Sketch03;
var init_sketch03_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch03.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    init_Slider_944f32d0();
    init_OptionSelect_4e269dd6();
    import_color3 = __toModule(require_color());
    init_Checkbox_import_b229c392();
    import_random4 = __toModule(require_random());
    import_math = __toModule(require_math());
    import_canvas_sketch5 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    init_index_b00483ad();
    width = 800;
    height = 800;
    Sketch03 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      let context;
      let hexes = [];
      const data2 = {
        TITLE: "Sketch03",
        numNodes: 200,
        range: 200,
        lineCap: "butt",
        lineCaps: [{ value: "butt", label: "butt" }, { value: "round", label: "round" }],
        showNodes: true,
        showLines: true,
        nodeType: "hex",
        nodeTypes: [{ value: "hex", label: "hex" }, { value: "circle", label: "circle" }],
        lineWidth: 2,
        lineWidthMax: 5,
        radiusMin: 10,
        radiusMax: 30,
        animate: true
      };
      const settings = { dimensions: [width, height] };
      class Vector {
        constructor(x2, y) {
          this.x = x2;
          this.y = y;
        }
        getDistance(v) {
          const dx = this.x - v.x;
          const dy = this.y - v.y;
          return Math.sqrt(dx * dx + dy * dy);
        }
      }
      class Agent {
        constructor(x2, y) {
          this.pos = new Vector(x2, y);
          this.vel = new Vector(import_random4.default.range(-1, 1), import_random4.default.range(-1, 1));
          this.radius = import_random4.default.range(data2.radiusMin, data2.radiusMax);
        }
        update() {
          this.pos.x += this.vel.x;
          this.pos.y += this.vel.y;
        }
        bounce(width22, height22) {
          if (this.pos.x <= 0 || this.pos.x >= width22) {
            this.vel.x *= -1;
          }
          if (this.pos.y <= 0 || this.pos.y >= height22) {
            this.vel.y *= -1;
          }
        }
        wrap(width22, height22) {
          this.pos.x = (this.pos.x + width22) % width22;
          this.pos.y = (this.pos.y + height22) % height22;
        }
        drawCircle(context2) {
          context2.save();
          context2.translate(this.pos.x, this.pos.y);
          context2.beginPath();
          context2.arc(0, 0, this.radius, 0, Math.PI * 2);
          context2.fill();
          context2.lineWidth = 4;
          context2.strokeStyle = this.color;
          context2.stroke();
          context2.restore();
        }
      }
      class Hex extends Agent {
        constructor(x2, y, numOfSides = 6, positiveVelSum = 0, color = "hsla(180,50%,50%,1)") {
          super(x2, y);
          this.numOfSides = numOfSides;
          this.positiveVelSum = parseFloat(makePositive(this.vel.x).toFixed(3) + makePositive(this.vel.y).toFixed(3));
          this.color = hsla(this.positiveVelSum * 360 % 360, 50, 50, 1);
        }
        drawHex(context2) {
          context2.save();
          context2.beginPath();
          context2.moveTo(this.pos.x + this.radius * Math.cos(0), this.pos.y + this.radius * Math.sin(0));
          for (let i2 = 0; i2 < this.numOfSides; i2++) {
            let xCoord = this.pos.x + this.radius * Math.cos(i2 * 2 * Math.PI / this.numOfSides);
            let yCoord = this.pos.y + this.radius * Math.sin(i2 * 2 * Math.PI / this.numOfSides);
            context2.lineTo(xCoord, yCoord);
            context2.fillStyle = this.color;
          }
          context2.fill();
          context2.restore();
        }
      }
      const makePositive = (value) => {
        if (value < 0)
          return value * -1;
        return value;
      };
      const hsla = (h2, s4, l, a) => {
        let color = `hsla(${h2},${s4}%,${l}%,${a})`;
        return color;
      };
      const rangeAlpha = (range, dist2) => {
        return import_math.default.mapRange(dist2, 0, range, 1, 0, true);
      };
      const constructNodes = (width22, height22) => {
        if (data2.numNodes > hexes.length) {
          for (let i2 = 0; i2 < data2.numNodes - hexes.length; i2++) {
            let x2 = import_random4.default.range(0, width22);
            let y = import_random4.default.range(0, height22);
            let hex = new Hex(x2, y);
            hexes.push(hex);
          }
        } else {
          for (let i2 = 0; i2 < hexes.length - data2.numNodes; i2++) {
            hexes.pop();
          }
        }
      };
      const sketch = () => {
        constructNodes(width, height);
        for (let i2 = 0; i2 < hexes.length; i2++) {
          const hex = hexes[i2];
          for (let j = i2 + 1; j < hexes.length; j++) {
            const other = hexes[j];
            const dist2 = hex.pos.getDistance(other.pos);
            if (dist2 > data2.range)
              continue;
            context.lineWidth = import_math.default.mapRange(dist2, 0, data2.range, data2.lineWidthMax, 1);
            context.beginPath();
            context.moveTo(hex.pos.x, hex.pos.y);
            data2.showLines ? context.lineTo(other.pos.x, other.pos.y) : 0;
            let a = rangeAlpha(data2.range, dist2);
            let h2 = import_color3.default.parse(hex.color).hsla[0];
            let s4 = import_color3.default.parse(hex.color).hsla[1];
            let l = import_color3.default.parse(hex.color).hsla[2];
            context.strokeStyle = hsla(h2, s4, l, a);
            context.lineCap = data2.lineCap;
            context.stroke();
          }
        }
        return () => {
          context.fillStyle = "black";
          context.fillRect(0, 0, width, height);
          if (data2.numNodes != hexes.length)
            ;
          hexes.forEach((hex) => {
            hex.update();
            if (data2.showNodes) {
              data2.nodeType == "hex" ? hex.drawHex(context) : hex.drawCircle(context);
            }
            hex.wrap(width, height);
          });
          requestAnimationFrame(sketch());
        };
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `


${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {
          default: () => {
            return `${validate_component(Slider, "Slider").$$render($$result, {
              label: "Range",
              min: "10",
              max: "500",
              step: "10",
              value: data2.range
            }, {
              value: ($$value) => {
                data2.range = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Number of nodes",
              min: "10",
              max: "1000",
              step: "10",
              value: data2.numNodes
            }, {
              value: ($$value) => {
                data2.numNodes = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(OptionSelect, "OptionSelect").$$render($$result, {
              items: data2.lineCaps,
              selected: data2.lineCap
            }, {
              selected: ($$value) => {
                data2.lineCap = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(OptionSelect, "OptionSelect").$$render($$result, {
              items: data2.nodeTypes,
              selected: data2.nodeType
            }, {
              selected: ($$value) => {
                data2.nodeType = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              label: "Show nodes",
              checked: data2.showNodes
            }, {
              checked: ($$value) => {
                data2.showNodes = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              label: "Show lines",
              checked: data2.showLines
            }, {
              checked: ($$value) => {
                data2.showLines = $$value;
                $$settled = false;
              }
            }, {})}
	`;
          }
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch04.svelte.js
var sketch04_svelte_exports = {};
__export(sketch04_svelte_exports, {
  default: () => Sketch04
});
function largest(a, b) {
  return a > b ? a : b;
}
var import_color4, import_random5, import_math2, import_canvas_sketch6, width2, height2, Sketch04;
var init_sketch04_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch04.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    init_Slider_944f32d0();
    init_OptionSelect_4e269dd6();
    import_color4 = __toModule(require_color());
    init_Checkbox_import_b229c392();
    import_random5 = __toModule(require_random());
    import_math2 = __toModule(require_math());
    import_canvas_sketch6 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    init_index_b00483ad();
    width2 = 800;
    height2 = 800;
    Sketch04 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      let context;
      let angles = [];
      angles = generateAngles();
      console.log(`\u{1F680} ~ file: sketch04.svelte ~ line 30 ~ onMount ~ angles`, angles);
      let hexes = [];
      function generateAngles() {
        for (let i2 = 0; i2 < 6; i2++) {
          let point = {
            x: Math.cos(i2 * 2 * Math.PI / 6).toFixed(2),
            y: Math.sin(i2 * 2 * Math.PI / 6).toFixed(4)
          };
          angles.push(point);
        }
        return angles;
      }
      const data2 = {
        TITLE: "Sketch03",
        numNodes: 200,
        range: 200,
        lineCap: "butt",
        lineCaps: [{ value: "butt", label: "butt" }, { value: "round", label: "round" }],
        showNodes: true,
        showLines: true,
        nodeType: "hex",
        nodeTypes: [{ value: "hex", label: "hex" }, { value: "circle", label: "circle" }],
        lineWidth: 2,
        lineWidthMax: 5,
        radiusMin: 1,
        radiusMax: 3,
        animate: true
      };
      const settings = { dimensions: [width2, height2] };
      class Vector {
        constructor(x2, y) {
          this.x = x2;
          this.y = y;
        }
        getDistance(v) {
          const dx = this.x - v.x;
          const dy = this.y - v.y;
          return Math.sqrt(dx * dx + dy * dy);
        }
      }
      class Agent {
        constructor(x2, y) {
          this.pos = new Vector(x2, y);
          this.angle = Math.floor(import_random5.default.range(0, 6));
          this.vel = new Vector(parseFloat(angles[this.angle].x), parseFloat(angles[this.angle].y));
          this.radius = import_random5.default.range(data2.radiusMin, data2.radiusMax);
          this.sideLength = 20;
          this.remainingTravel = this.sideLength;
        }
        update(i2) {
          this.pos.x += this.vel.x;
          this.pos.y += this.vel.y;
          this.remainingTravel -= largest(makePositive(this.vel.x), makePositive(this.vel.y));
          if (this.remainingTravel <= 0) {
            this.remainingTravel = this.sideLength;
            let angle = Math.floor(import_random5.default.range(-2, 2));
            this.angle = makePositive(this.angle + angle) % 6;
            this.vel = new Vector(parseFloat(angles[this.angle].x), parseFloat(angles[this.angle].y));
          }
        }
        bounce(width22, height22) {
          if (this.pos.x <= 0 || this.pos.x >= width22) {
            this.vel.x *= -1;
          }
          if (this.pos.y <= 0 || this.pos.y >= height22) {
            this.vel.y *= -1;
          }
        }
        wrap(width22, height22) {
          this.pos.x = (this.pos.x + width22) % width22;
          this.pos.y = (this.pos.y + height22) % height22;
        }
        drawCircle(context2) {
          context2.save();
          context2.translate(this.pos.x, this.pos.y);
          context2.beginPath();
          context2.arc(0, 0, this.radius, 0, Math.PI * 2);
          context2.fill();
          context2.lineWidth = 4;
          context2.strokeStyle = this.color;
          context2.stroke();
          context2.restore();
        }
      }
      class Hex extends Agent {
        constructor(x2, y, numOfSides = 6, positiveVelSum = 0, color = "hsla(180,50%,50%,1)") {
          super(x2, y);
          var _a4, _b;
          this.numOfSides = numOfSides;
          this.positiveVelSum = parseFloat(((_a4 = makePositive(this.vel.x)) == null ? void 0 : _a4.toFixed(3)) + ((_b = makePositive(this.vel.y)) == null ? void 0 : _b.toFixed(3)));
          this.color = hsla(this.positiveVelSum * 360 % 360, 50, 50, 1);
        }
        drawHex(context2) {
          context2.save();
          context2.beginPath();
          context2.moveTo(this.pos.x + this.radius * Math.cos(0), this.pos.y + this.radius * Math.sin(0));
          for (let i2 = 0; i2 < this.numOfSides; i2++) {
            let xCoord = this.pos.x + this.radius * Math.cos(i2 * 2 * Math.PI / this.numOfSides);
            let yCoord = this.pos.y + this.radius * Math.sin(i2 * 2 * Math.PI / this.numOfSides);
            context2.lineTo(xCoord, yCoord);
            context2.fillStyle = this.color;
          }
          context2.fill();
          context2.restore();
        }
      }
      const makePositive = (value) => {
        if (value < 0)
          return value * -1;
        return value;
      };
      const hsla = (h2, s4, l, a) => {
        let color = `hsla(${h2},${s4}%,${l}%,${a})`;
        return color;
      };
      const rangeAlpha = (range, dist2) => {
        return import_math2.default.mapRange(dist2, 0, range, 1, 0, true);
      };
      const constructNodes = (width22, height22) => {
        if (data2.numNodes > hexes.length) {
          for (let i2 = 0; i2 < data2.numNodes - hexes.length; i2++) {
            let x2 = import_random5.default.range(0, width22);
            let y = import_random5.default.range(0, height22);
            let hex = new Hex(x2, y);
            hexes.push(hex);
          }
        } else {
          for (let i2 = 0; i2 < hexes.length - data2.numNodes; i2++) {
            hexes.pop();
          }
        }
      };
      const sketch = () => {
        constructNodes(width2, height2);
        for (let i2 = 0; i2 < hexes.length; i2++) {
          const hex = hexes[i2];
          for (let j = i2 + 1; j < hexes.length; j++) {
            const other = hexes[j];
            const dist2 = hex.pos.getDistance(other.pos);
            if (dist2 > data2.range)
              continue;
            context.lineWidth = import_math2.default.mapRange(dist2, 0, data2.range, data2.lineWidthMax, 1);
            context.beginPath();
            context.moveTo(hex.pos.x, hex.pos.y);
            data2.showLines ? context.lineTo(other.pos.x, other.pos.y) : 0;
            let a = rangeAlpha(data2.range, dist2);
            let h2 = import_color4.default.parse(hex.color).hsla[0];
            let s4 = import_color4.default.parse(hex.color).hsla[1];
            let l = import_color4.default.parse(hex.color).hsla[2];
            context.strokeStyle = hsla(h2, s4, l, a);
            context.lineCap = data2.lineCap;
            context.stroke();
          }
        }
        return () => {
          context.fillStyle = "black";
          context.fillRect(0, 0, width2, height2);
          if (data2.numNodes != hexes.length)
            ;
          hexes.forEach((hex, i2) => {
            hex.update(i2);
            if (data2.showNodes) {
              data2.nodeType == "hex" ? hex.drawHex(context) : hex.drawCircle(context);
            }
            hex.wrap(width2, height2);
          });
          requestAnimationFrame(sketch());
        };
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `


${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {
          default: () => {
            return `${validate_component(Slider, "Slider").$$render($$result, {
              label: "Range",
              min: "10",
              max: "500",
              step: "10",
              value: data2.range
            }, {
              value: ($$value) => {
                data2.range = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Number of nodes",
              min: "10",
              max: "1000",
              step: "10",
              value: data2.numNodes
            }, {
              value: ($$value) => {
                data2.numNodes = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(OptionSelect, "OptionSelect").$$render($$result, {
              items: data2.lineCaps,
              selected: data2.lineCap
            }, {
              selected: ($$value) => {
                data2.lineCap = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(OptionSelect, "OptionSelect").$$render($$result, {
              items: data2.nodeTypes,
              selected: data2.nodeType
            }, {
              selected: ($$value) => {
                data2.nodeType = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              label: "Show nodes",
              checked: data2.showNodes
            }, {
              checked: ($$value) => {
                data2.showNodes = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Checkbox_import, "Checkbox").$$render($$result, {
              label: "Show lines",
              checked: data2.showLines
            }, {
              checked: ($$value) => {
                data2.showLines = $$value;
                $$settled = false;
              }
            }, {})}
	`;
          }
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch01.svelte.js
var sketch01_svelte_exports = {};
__export(sketch01_svelte_exports, {
  default: () => Sketch01
});
var import_canvas_sketch7, import_color5, Sketch01;
var init_sketch01_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch01.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    init_Slider_944f32d0();
    init_ColorInput_b139901e();
    init_Checkbox_import_b229c392();
    import_canvas_sketch7 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    import_color5 = __toModule(require_color());
    init_index_b00483ad();
    Sketch01 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      const data2 = {
        TITLE: "Sketch01",
        outline: true,
        arclen: 0.5,
        angle: 0,
        radius: 0.33,
        background: "#527A9B",
        foreground: "#F4B9A7",
        lineWidth: 20
      };
      const settings = {
        scaleToView: true,
        scaleToFit: true,
        resizeCanvas: true,
        scaleContext: true,
        dimensions: [1280, 1280]
      };
      const sketch = ({}) => {
        return ({ context, width: width3, height: height3 }) => {
          const { background, foreground, radius, arclen, angle, lineWidth, outline, stroke } = data2;
          context.clearRect(0, 0, width3, height3);
          context.fillStyle = background;
          context.fillRect(0, 0, width3, height3);
          const minDim = Math.min(width3, height3);
          context.beginPath();
          context.arc(width3 / 2, height3 / 2, minDim * radius, angle, Math.PI * 2 * arclen + angle);
          context.fillStyle = foreground;
          context.strokeStyle = foreground;
          context.lineWidth = lineWidth;
          if (outline)
            context.stroke();
          else
            context.fill();
        };
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `




${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {
          default: () => {
            return `${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Background",
              value: data2.background
            }, {
              value: ($$value) => {
                data2.background = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Foreground",
              value: data2.foreground
            }, {
              value: ($$value) => {
                data2.foreground = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Arc Length",
              min: "0.05",
              max: "1",
              step: "0.05",
              value: data2.arclen
            }, {
              value: ($$value) => {
                data2.arclen = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Radius",
              min: "0.05",
              max: "1",
              step: "0.05",
              value: data2.radius
            }, {
              value: ($$value) => {
                data2.radius = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Angle",
              min: 0,
              max: Math.PI * 2 + 0.1,
              step: "0.1",
              value: data2.angle
            }, {
              value: ($$value) => {
                data2.angle = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Checkbox_import, "Checkbox").$$render($$result, { label: "Outline", checked: data2.outline }, {
              checked: ($$value) => {
                data2.outline = $$value;
                $$settled = false;
              }
            }, {})}
	${data2.outline ? `${validate_component(Slider, "Slider").$$render($$result, {
              label: "Line Width",
              min: "1",
              max: "100",
              value: data2.lineWidth
            }, {
              value: ($$value) => {
                data2.lineWidth = $$value;
                $$settled = false;
              }
            }, {})}` : ``}`;
          }
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/Checkbox-12fb82f0.js
var createStyle2, css18, Checkbox2;
var init_Checkbox_12fb82f0 = __esm({
  ".svelte-kit/output/server/chunks/Checkbox-12fb82f0.js"() {
    init_index_0300a598();
    init_index_b00483ad();
    createStyle2 = ({
      from = 0,
      to = 1,
      reverse = false,
      duration = 300,
      delay = 0,
      css: css210 = {},
      onChange = () => false,
      onEnd = () => false,
      easing
    }) => {
      const animation = tweened(reverse ? to : from, {
        duration,
        delay,
        easing
      });
      animation.subscribe((t2) => {
        let newStyle = "";
        for (let item in css210) {
          const {
            input,
            output,
            onComplete = () => false,
            beforeStart = () => false
          } = css210[item];
          const inRange = input.filter((i2) => i2 <= t2).reverse()[0];
          const index = input.indexOf(inRange);
          let val;
          if (!inRange && inRange !== 0) {
            val = output[0];
            beforeStart();
          } else {
            if (input.length - 1 === index) {
              val = output[output.length - 1];
              input[input.length - 1] <= t2 && onComplete();
            } else {
              const endRange = input[index + 1];
              const percent = (t2 - inRange) * 100 / (endRange - inRange);
              const firstItem = output[index];
              const lastItem = output[index + 1];
              if (typeof lastItem === "object") {
                val = "";
                lastItem.map((i2) => {
                  val += firstItem + (i2 - firstItem) * percent / 100;
                  val += " ";
                });
              } else {
                val = firstItem + (lastItem - firstItem) * percent / 100;
              }
            }
          }
          newStyle += `${item}: ${val};`;
        }
        onChange(newStyle);
        if (t2 === to || t2 === from) {
          onEnd();
        }
      });
      return {
        play: () => animation.set(to),
        reverse: () => animation.set(from)
      };
    };
    css18 = {
      code: ".checkbox.svelte-1cylru6.svelte-1cylru6{--checkbox-color-primary:#242432;--checkbox-color-secondary:#d8d8ea;--checkbox-border-width:4%;--checkbox-border-width-active:7%;position:relative}.checkbox.svelte-1cylru6 input.svelte-1cylru6{opacity:0;width:100%;height:100%;position:absolute;top:0;right:0;margin:0;padding:0;cursor:pointer}.checkbox__svg.svelte-1cylru6.svelte-1cylru6{width:100%;height:100%}.checkbox__check.svelte-1cylru6.svelte-1cylru6,.checkbox__border.svelte-1cylru6.svelte-1cylru6{stroke-width:var(--checkbox-border-width);fill:none;stroke-linecap:round;stroke-linejoin:round}.checkbox__border.svelte-1cylru6.svelte-1cylru6{width:calc(100% - (var(--checkbox-border-width) * 2));height:calc(100% - (var(--checkbox-border-width) * 2));transform:translate(\r\n          calc(var(--checkbox-border-width) * -1),\r\n          var(--checkbox-border-width)\r\n        )\r\n        rotate(90deg);stroke:var(--checkbox-color-secondary);transition:0.2s;transform-origin:50% 50%}.checkbox__border.-active.svelte-1cylru6.svelte-1cylru6{stroke:var(--checkbox-color-primary);transition:none}.checkbox.svelte-1cylru6:hover .checkbox__border.svelte-1cylru6,.checkbox.-checked.svelte-1cylru6 .checkbox__border.svelte-1cylru6{--checkbox-border-width:var(--checkbox-border-width-active)}.checkbox.-changeBg.svelte-1cylru6 .checkbox__border.svelte-1cylru6{stroke:var(--checkbox-color-primary)}.checkbox__check.svelte-1cylru6.svelte-1cylru6{--checkbox-border-width:var(--checkbox-border-width-active);stroke:var(--checkbox-color-primary)}",
      map: null
    };
    Checkbox2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let self2, canChange = true, changeBg = false, borderStyle, checkStyle;
      let { checked = false, size = "3rem", name: name2 = "", id: id2 = "", labelId = "", duration = 400, primaryColor = "#24ffac", secondaryColor = "#1828ea" } = $$props;
      createEventDispatcher();
      const animationOptions = {
        to: 100,
        duration,
        easing: sineInOut,
        reverse: checked
      };
      createStyle2(__spreadProps(__spreadValues({}, animationOptions), {
        duration,
        css: {
          "stroke-dashoffset": {
            input: [0, 45, 75],
            output: [342, -150, -307],
            onComplete: () => changeBg = true
          },
          "stroke-dasharray": {
            input: [0, 45, 75],
            output: [342, 154, [0, 310]]
          },
          opacity: { input: [0, 5], output: [0, 1] }
        },
        onChange: (style) => borderStyle = style,
        onEnd: () => canChange = true
      }));
      createStyle2(__spreadProps(__spreadValues({}, animationOptions), {
        css: {
          "stroke-dashoffset": {
            input: [65, 100],
            output: [300, 144],
            beforeStart: () => changeBg = false
          },
          "stroke-dasharray": { input: [65, 100], output: [100, 84] }
        },
        onChange: (style) => checkStyle = style
      }));
      if ($$props.checked === void 0 && $$bindings.checked && checked !== void 0)
        $$bindings.checked(checked);
      if ($$props.size === void 0 && $$bindings.size && size !== void 0)
        $$bindings.size(size);
      if ($$props.name === void 0 && $$bindings.name && name2 !== void 0)
        $$bindings.name(name2);
      if ($$props.id === void 0 && $$bindings.id && id2 !== void 0)
        $$bindings.id(id2);
      if ($$props.labelId === void 0 && $$bindings.labelId && labelId !== void 0)
        $$bindings.labelId(labelId);
      if ($$props.duration === void 0 && $$bindings.duration && duration !== void 0)
        $$bindings.duration(duration);
      if ($$props.primaryColor === void 0 && $$bindings.primaryColor && primaryColor !== void 0)
        $$bindings.primaryColor(primaryColor);
      if ($$props.secondaryColor === void 0 && $$bindings.secondaryColor && secondaryColor !== void 0)
        $$bindings.secondaryColor(secondaryColor);
      $$result.css.add(css18);
      return `<div${add_attribute("id", id2, 0)} class="${[
        "checkbox " + escape2($$props.class) + " svelte-1cylru6",
        (changeBg ? "-changeBg" : "") + " " + (checked || !canChange ? "-checked" : "")
      ].join(" ").trim()}" style="${"width: " + escape2(size) + ";height: " + escape2(size) + ";"}"${add_attribute("this", self2, 0)}><input${add_attribute("id", labelId, 0)} type="${"checkbox"}"${add_attribute("name", name2, 0)} class="${"svelte-1cylru6"}">
    <svg class="${"checkbox__svg svelte-1cylru6"}" preserveAspectRatio="${"none"}" viewBox="${"0 0 100 100"}"><rect class="${"checkbox__border svelte-1cylru6"}" rx="${"15%"}"></rect><rect class="${"checkbox__border -active svelte-1cylru6"}"${add_attribute("style", borderStyle, 0)} rx="${"15%"}"></rect><path${add_attribute("style", checkStyle, 0)} class="${"checkbox__check svelte-1cylru6"}" d="${"M 89.5 13 L 46 71 L 28 54"}"></path></svg></div>`;
    });
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch05.svelte.js
var sketch05_svelte_exports = {};
__export(sketch05_svelte_exports, {
  default: () => Sketch05
});
var import_color6, import_random6, import_canvas_sketch8, css19, Sketch05;
var init_sketch05_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch05.svelte.js"() {
    init_index_0300a598();
    init_Slider_944f32d0();
    import_color6 = __toModule(require_color());
    init_Checkbox_12fb82f0();
    init_OptionSelect_4e269dd6();
    import_random6 = __toModule(require_random());
    init_CanvasManager_ef2b843a();
    init_index_b00483ad();
    import_canvas_sketch8 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    css19 = {
      code: ".sketch{grid-area:sketch}.controls{grid-area:controls}",
      map: null
    };
    Sketch05 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      const data2 = {
        TITLE: "Sketch05",
        fps: 60,
        minDist: 20,
        maxDistFactor: 6,
        initialLines: 0,
        maxLines: 100,
        speed: 3,
        minWidth: 1,
        maxWidth: 4,
        lineBirthFactor: 0.25,
        randomColors: false,
        colorFunctions: [
          { value: 0, label: "original" },
          { value: 1, label: "2" },
          { value: 2, label: "3" },
          { value: 3, label: "4" },
          { value: 4, label: "5" },
          { value: 5, label: "6" },
          { value: 6, label: "7" }
        ],
        colorFunctionsIndex: 0
      };
      const settings = {
        scaleToView: true,
        dimensions: [1280, 1280]
      };
      let w, h2;
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      $$result.css.add(css19);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        ({
          x: w / 2,
          y: h2 / 2,
          vx: 1,
          vy: 0.5,
          width: import_random6.default.range(data2.minWidth, data2.maxWidth),
          reverse: false,
          dirIndex: Math.floor(import_random6.default.range(0, 6)),
          randomFactor: import_random6.default.range(0.1, 1)
        });
        data2.minDist * data2.maxDistFactor;
        $$rendered = `<div class="${"flex h-full w-full sketch"}"><div id="${"canvasContainer"}"><canvas id="${"c"}"></canvas></div>
	<div class="${"controls flex flex-col p-4"}" id="${"controlPanel"}">${validate_component(CanvasManager, "CanvasManager").$$render($$result, { settings, data: data2, hidePanel }, {}, {
          default: () => {
            return `${validate_component(Slider, "Slider").$$render($$result, {
              label: "Min Distance",
              min: "4",
              max: "1200",
              step: "4",
              color: "text-sky-400",
              value: data2.minDist
            }, {
              value: ($$value) => {
                data2.minDist = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Number of lines",
              min: "10",
              max: "500",
              step: "10",
              value: data2.maxLines
            }, {
              value: ($$value) => {
                data2.maxLines = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Speed",
              min: ".2",
              max: "20",
              step: ".2",
              value: data2.speed
            }, {
              value: ($$value) => {
                data2.speed = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Line Birth",
              min: ".1",
              max: "1",
              step: ".1",
              value: data2.lineBirthFactor
            }, {
              value: ($$value) => {
                data2.lineBirthFactor = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "FPS",
              min: "1",
              max: "60",
              step: "1",
              value: data2.fps
            }, {
              value: ($$value) => {
                data2.fps = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Maxdist Factor",
              min: "1",
              max: "50",
              step: "1",
              value: data2.maxDistFactor
            }, {
              value: ($$value) => {
                data2.maxDistFactor = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Min Width",
              min: "1",
              max: "100",
              step: "1",
              value: data2.minWidth
            }, {
              value: ($$value) => {
                data2.minWidth = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Max Width",
              min: "1",
              max: "100",
              step: "1",
              value: data2.maxWidth
            }, {
              value: ($$value) => {
                data2.maxWidth = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Checkbox2, "Checkbox").$$render($$result, {
              label: "Random color functions?",
              checked: data2.randomColors
            }, {
              checked: ($$value) => {
                data2.randomColors = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(OptionSelect, "OptionSelect").$$render($$result, {
              items: data2.colorFunctions,
              selected: data2.colorFunctionsIndex
            }, {
              selected: ($$value) => {
                data2.colorFunctionsIndex = $$value;
                $$settled = false;
              }
            }, {})}`;
          }
        })}</div>
</div>`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch06.svelte.js
var sketch06_svelte_exports = {};
__export(sketch06_svelte_exports, {
  default: () => Sketch06
});
var import_color7, import_random7, import_canvas_sketch9, css20, Sketch06;
var init_sketch06_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch06.svelte.js"() {
    init_index_0300a598();
    init_Slider_944f32d0();
    import_color7 = __toModule(require_color());
    import_random7 = __toModule(require_random());
    init_CanvasManager_ef2b843a();
    import_canvas_sketch9 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    css20 = {
      code: ".sketch{grid-area:sketch}.controls{grid-area:controls}",
      map: null
    };
    Sketch06 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      const data2 = {
        TITLE: "Sketch06",
        outline: true,
        arclen: 0.5,
        angle: 0,
        radius: 0.33,
        background: "#527A9B",
        foreground: "#F4B9A7",
        lineWidth: 20,
        minDist: 20,
        maxDistFactor: 6,
        maxLines: 200,
        speed: 1,
        minWidth: 1,
        maxWidth: 10
      };
      const settings = {
        scaleToView: true,
        dimensions: [1280, 1280]
      };
      let w, h2;
      let initialWidth = 1;
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      $$result.css.add(css20);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        data2.minDist * data2.maxDistFactor;
        ({
          x: import_random7.default.range(0, w),
          y: import_random7.default.range(0, h2),
          vx: 0,
          vy: 0,
          width: import_random7.default.range(initialWidth, data2.maxWidth),
          reverse: false,
          dirIndex: 3,
          randomFactor: import_random7.default.range(0.1, 1)
        });
        $$rendered = `<div class="${"flex h-full w-full sketch"}"><div id="${"canvasContainer"}"><canvas id="${"c"}"></canvas></div>
	<div class="${"controls flex flex-col p-4"}" id="${"controlPanel"}">${validate_component(CanvasManager, "CanvasManager").$$render($$result, { settings, data: data2, hidePanel }, {}, {
          default: () => {
            return `${validate_component(Slider, "Slider").$$render($$result, {
              label: "Min Distance",
              min: "1",
              max: "500",
              step: "5",
              color: "text-sky-400",
              value: data2.minDist
            }, {
              value: ($$value) => {
                data2.minDist = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Number of lines",
              min: "1",
              max: "1000",
              step: "1",
              value: data2.maxLines
            }, {
              value: ($$value) => {
                data2.maxLines = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Speed",
              min: "1",
              max: "1000",
              step: "1",
              value: data2.speed
            }, {
              value: ($$value) => {
                data2.speed = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Maxdist Factor",
              min: "1",
              max: "25",
              step: "1",
              value: data2.maxDistFactor
            }, {
              value: ($$value) => {
                data2.maxDistFactor = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Min Width",
              min: "1",
              max: "100",
              step: "1",
              value: data2.minWidth
            }, {
              value: ($$value) => {
                data2.minWidth = $$value;
                $$settled = false;
              }
            }, {})}
			${validate_component(Slider, "Slider").$$render($$result, {
              label: "Max Width",
              min: "1",
              max: "100",
              step: "1",
              value: data2.maxWidth
            }, {
              value: ($$value) => {
                data2.maxWidth = $$value;
                $$settled = false;
              }
            }, {})}`;
          }
        })}</div>
</div>`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch07.svelte.js
var sketch07_svelte_exports = {};
__export(sketch07_svelte_exports, {
  default: () => Sketch07
});
var import_canvas_sketch10, import_color8, Sketch07;
var init_sketch07_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch07.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    init_Slider_944f32d0();
    init_ColorInput_b139901e();
    init_Checkbox_12fb82f0();
    import_canvas_sketch10 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    import_color8 = __toModule(require_color());
    init_index_b00483ad();
    Sketch07 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      const data2 = {
        TITLE: "Sketch07",
        outline: true,
        arclen: 0.5,
        angle: 0,
        radius: 0.33,
        background: "#527A9B",
        foreground: "#F4B9A7",
        lineWidth: 20
      };
      const settings = {
        scaleToView: true,
        dimensions: [1280, 1280]
      };
      const sketch = ({}) => {
        return ({ context, width: width3, height: height3 }) => {
          const { background, foreground, radius, arclen, angle, lineWidth, outline, stroke } = data2;
          context.clearRect(0, 0, width3, height3);
          context.fillStyle = background;
          context.fillRect(0, 0, width3, height3);
          const minDim = Math.min(width3, height3);
          context.beginPath();
          context.arc(width3 / 2, height3 / 2, minDim * radius, angle, Math.PI * 2 * arclen + angle);
          context.fillStyle = foreground;
          context.strokeStyle = foreground;
          context.lineWidth = lineWidth;
          if (outline)
            context.stroke();
          else
            context.fill();
        };
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `



${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {
          default: () => {
            return `${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Background",
              value: data2.background
            }, {
              value: ($$value) => {
                data2.background = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Foreground",
              value: data2.foreground
            }, {
              value: ($$value) => {
                data2.foreground = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, { label: "Arc Length", value: data2.arclen }, {
              value: ($$value) => {
                data2.arclen = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, { label: "Radius", value: data2.radius }, {
              value: ($$value) => {
                data2.radius = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Angle",
              min: -Math.PI,
              max: Math.PI,
              value: data2.angle
            }, {
              value: ($$value) => {
                data2.angle = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Checkbox2, "Checkbox").$$render($$result, { label: "Outline", checked: data2.outline }, {
              checked: ($$value) => {
                data2.outline = $$value;
                $$settled = false;
              }
            }, {})}
	${data2.outline ? `${validate_component(Slider, "Slider").$$render($$result, {
              label: "Line Width",
              min: "1",
              max: "100",
              value: data2.lineWidth
            }, {
              value: ($$value) => {
                data2.lineWidth = $$value;
                $$settled = false;
              }
            }, {})}` : ``}`;
          }
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch08.svelte.js
var sketch08_svelte_exports = {};
__export(sketch08_svelte_exports, {
  default: () => Sketch08
});
var import_canvas_sketch11, import_color9, Sketch08;
var init_sketch08_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch08.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    init_Slider_944f32d0();
    init_ColorInput_b139901e();
    init_Checkbox_12fb82f0();
    import_canvas_sketch11 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    import_color9 = __toModule(require_color());
    init_index_b00483ad();
    Sketch08 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      const data2 = {
        TITLE: "Sketch08",
        outline: true,
        arclen: 0.5,
        angle: 0,
        radius: 0.33,
        background: "#527A9B",
        foreground: "#F4B9A7",
        lineWidth: 20
      };
      const settings = {
        scaleToView: true,
        dimensions: [1280, 1280]
      };
      const sketch = ({}) => {
        return ({ context, width: width3, height: height3 }) => {
          const { background, foreground, radius, arclen, angle, lineWidth, outline, stroke } = data2;
          context.clearRect(0, 0, width3, height3);
          context.fillStyle = background;
          context.fillRect(0, 0, width3, height3);
          const minDim = Math.min(width3, height3);
          context.beginPath();
          context.arc(width3 / 2, height3 / 2, minDim * radius, angle, Math.PI * 2 * arclen + angle);
          context.fillStyle = foreground;
          context.strokeStyle = foreground;
          context.lineWidth = lineWidth;
          if (outline)
            context.stroke();
          else
            context.fill();
        };
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `



${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {
          default: () => {
            return `${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Background",
              value: data2.background
            }, {
              value: ($$value) => {
                data2.background = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Foreground",
              value: data2.foreground
            }, {
              value: ($$value) => {
                data2.foreground = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, { label: "Arc Length", value: data2.arclen }, {
              value: ($$value) => {
                data2.arclen = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, { label: "Radius", value: data2.radius }, {
              value: ($$value) => {
                data2.radius = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Angle",
              min: -Math.PI,
              max: Math.PI,
              value: data2.angle
            }, {
              value: ($$value) => {
                data2.angle = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Checkbox2, "Checkbox").$$render($$result, { label: "Outline", checked: data2.outline }, {
              checked: ($$value) => {
                data2.outline = $$value;
                $$settled = false;
              }
            }, {})}
	${data2.outline ? `${validate_component(Slider, "Slider").$$render($$result, {
              label: "Line Width",
              min: "1",
              max: "100",
              value: data2.lineWidth
            }, {
              value: ($$value) => {
                data2.lineWidth = $$value;
                $$settled = false;
              }
            }, {})}` : ``}`;
          }
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch09.svelte.js
var sketch09_svelte_exports = {};
__export(sketch09_svelte_exports, {
  default: () => Sketch09
});
var import_canvas_sketch12, import_color10, Sketch09;
var init_sketch09_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch09.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    init_Slider_944f32d0();
    init_ColorInput_b139901e();
    init_Checkbox_12fb82f0();
    import_canvas_sketch12 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    import_color10 = __toModule(require_color());
    init_index_b00483ad();
    Sketch09 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      const data2 = {
        TITLE: "Sketch09",
        outline: true,
        arclen: 0.5,
        angle: 0,
        radius: 0.33,
        background: "#527A9B",
        foreground: "#F4B9A7",
        lineWidth: 20
      };
      const settings = {
        scaleToView: true,
        dimensions: [1280, 1280]
      };
      const sketch = ({}) => {
        return ({ context, width: width3, height: height3 }) => {
          const { background, foreground, radius, arclen, angle, lineWidth, outline, stroke } = data2;
          context.clearRect(0, 0, width3, height3);
          context.fillStyle = background;
          context.fillRect(0, 0, width3, height3);
          const minDim = Math.min(width3, height3);
          context.beginPath();
          context.arc(width3 / 2, height3 / 2, minDim * radius, angle, Math.PI * 2 * arclen + angle);
          context.fillStyle = foreground;
          context.strokeStyle = foreground;
          context.lineWidth = lineWidth;
          if (outline)
            context.stroke();
          else
            context.fill();
        };
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `



${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {
          default: () => {
            return `${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Background",
              value: data2.background
            }, {
              value: ($$value) => {
                data2.background = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(ColorInput, "ColorInput").$$render($$result, {
              label: "Foreground",
              value: data2.foreground
            }, {
              value: ($$value) => {
                data2.foreground = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, { label: "Arc Length", value: data2.arclen }, {
              value: ($$value) => {
                data2.arclen = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, { label: "Radius", value: data2.radius }, {
              value: ($$value) => {
                data2.radius = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Slider, "Slider").$$render($$result, {
              label: "Angle",
              min: -Math.PI,
              max: Math.PI,
              value: data2.angle
            }, {
              value: ($$value) => {
                data2.angle = $$value;
                $$settled = false;
              }
            }, {})}
	${validate_component(Checkbox2, "Checkbox").$$render($$result, { label: "Outline", checked: data2.outline }, {
              checked: ($$value) => {
                data2.outline = $$value;
                $$settled = false;
              }
            }, {})}
	${data2.outline ? `${validate_component(Slider, "Slider").$$render($$result, {
              label: "Line Width",
              min: "1",
              max: "100",
              value: data2.lineWidth
            }, {
              value: ($$value) => {
                data2.lineWidth = $$value;
                $$settled = false;
              }
            }, {})}` : ``}`;
          }
        })}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/entries/pages/creative/index.svelte.js
var index_svelte_exports2 = {};
__export(index_svelte_exports2, {
  default: () => Creative
});
var import_canvas_sketch13, import_color11, import_random8, import_math3, css21, Creative;
var init_index_svelte2 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/index.svelte.js"() {
    init_index_0300a598();
    init_sketch02_svelte();
    init_sketch03_svelte();
    init_sketch04_svelte();
    init_sketch01_svelte();
    init_sketch05_svelte();
    init_sketch06_svelte();
    init_sketch07_svelte();
    init_sketch08_svelte();
    init_sketch09_svelte();
    init_CanvasSketchEditor_e62a07d7();
    import_canvas_sketch13 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    init_Slider_944f32d0();
    init_ColorInput_b139901e();
    import_color11 = __toModule(require_color());
    init_OptionSelect_4e269dd6();
    init_Checkbox_import_b229c392();
    init_index_b00483ad();
    import_random8 = __toModule(require_random());
    import_math3 = __toModule(require_math());
    init_Checkbox_12fb82f0();
    init_CanvasManager_ef2b843a();
    css21 = {
      code: ".main.svelte-wk9h2l.svelte-wk9h2l{grid-area:main;display:grid;max-width:100%;grid-template-columns:repeat(auto-fit, minmax(16rem, 1fr))}.main.svelte-wk9h2l a.svelte-wk9h2l{align-self:flex-start}h1.svelte-wk9h2l.svelte-wk9h2l{font-size:3rem;font-weight:800}",
      map: null
    };
    Creative = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { posts } = $$props;
      if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0)
        $$bindings.posts(posts);
      $$result.css.add(css21);
      return `${$$result.head += `${$$result.title = `<title>MetaBrain: Your Life OS</title>`, ""}`, ""}

<div class="${"title flex flex-col items-center p-6"}"><h1 class="${"svelte-wk9h2l"}">Creative coding</h1>
	<p>Sketches and animations</p></div>


<div class="${"main justify-items-center svelte-wk9h2l"}"><a href="${"/creative/sketch01"}" class="${"svelte-wk9h2l"}">${validate_component(Sketch01, "Sketch01").$$render($$result, { hidePanel: "true" }, {}, {})}</a>
	<a href="${"/creative/sketch02"}" class="${"svelte-wk9h2l"}">${validate_component(Sketch02, "Sketch02").$$render($$result, { hidePanel: "true" }, {}, {})}</a>
	<a href="${"/creative/sketch03"}" class="${"svelte-wk9h2l"}">${validate_component(Sketch03, "Sketch03").$$render($$result, { hidePanel: "true" }, {}, {})}</a>
	<a href="${"/creative/sketch04"}" class="${"svelte-wk9h2l"}">${validate_component(Sketch04, "Sketch04").$$render($$result, { hidePanel: "true" }, {}, {})}</a>
	<a href="${"/creative/sketch05"}" class="${"svelte-wk9h2l"}">${validate_component(Sketch05, "Sketch05").$$render($$result, { hidePanel: "true" }, {}, {})}</a>
	<a href="${"/creative/sketch06"}" class="${"svelte-wk9h2l"}">${validate_component(Sketch06, "Sketch06").$$render($$result, { hidePanel: "true" }, {}, {})}</a>
	<a href="${"/creative/sketch07"}" class="${"svelte-wk9h2l"}">${validate_component(Sketch07, "Sketch07").$$render($$result, { hidePanel: "true" }, {}, {})}</a>
	<a href="${"/creative/sketch08"}" class="${"svelte-wk9h2l"}">${validate_component(Sketch08, "Sketch08").$$render($$result, { hidePanel: "true" }, {}, {})}</a>
	<a href="${"/creative/sketch09"}" class="${"svelte-wk9h2l"}">${validate_component(Sketch09, "Sketch09").$$render($$result, { hidePanel: "true" }, {}, {})}</a></div>
`;
    });
  }
});

// .svelte-kit/output/server/nodes/6.js
var __exports7 = {};
__export(__exports7, {
  css: () => css22,
  entry: () => entry7,
  js: () => js7,
  module: () => index_svelte_exports2
});
var entry7, js7, css22;
var init__7 = __esm({
  ".svelte-kit/output/server/nodes/6.js"() {
    init_index_svelte2();
    entry7 = "pages/creative/index.svelte-921824ab.js";
    js7 = ["pages/creative/index.svelte-921824ab.js", "chunks/vendor-525e7dbe.js", "pages/creative/sketch02.svelte-a23f4e19.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js", "chunks/Slider-724e463d.js", "chunks/ColorInput-96c0421c.js", "chunks/OptionSelect-daaabff4.js", "chunks/Checkbox-import-1c0ce484.js", "pages/creative/sketch03.svelte-ecae2de2.js", "pages/creative/sketch04.svelte-8d267db6.js", "pages/creative/sketch01.svelte-44b83a2a.js", "pages/creative/sketch05.svelte-7f5b2104.js", "chunks/Checkbox-5c3c9476.js", "chunks/CanvasManager-bc3a3d50.js", "pages/creative/sketch06.svelte-1aeeacd6.js", "pages/creative/sketch07.svelte-62716fec.js", "pages/creative/sketch08.svelte-70cb8cbe.js", "pages/creative/sketch09.svelte-28a608cc.js"];
    css22 = ["assets/pages/creative/index.svelte-72d16f9b.css", "assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/OptionSelect.svelte_svelte_type_style_lang-f02abe27.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/vendor-e0d31265.css", "assets/pages/creative/sketch02.svelte-3be6b96d.css", "assets/CanvasSketchEditor-dcdb0a89.css", "assets/pages/creative/sketch06.svelte-458316a3.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch01-preview.svelte.js
var sketch01_preview_svelte_exports = {};
__export(sketch01_preview_svelte_exports, {
  default: () => Sketch01_preview
});
var import_color12, import_canvas_sketch14, Sketch01_preview;
var init_sketch01_preview_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch01-preview.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    import_color12 = __toModule(require_color());
    import_canvas_sketch14 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    Sketch01_preview = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = true } = $$props;
      const data2 = {
        TITLE: "Sketch01",
        outline: true,
        arclen: 0.5,
        angle: 0,
        radius: 0.33,
        background: "#527A9B",
        foreground: "#F4B9A7",
        lineWidth: 20
      };
      const settings = {
        scaleToView: true,
        scaleToFit: true,
        resizeCanvas: true,
        scaleContext: true,
        dimensions: [1280, 1280]
      };
      const sketch = ({}) => {
        return ({ context, width: width3, height: height3 }) => {
          const { background, foreground, radius, arclen, angle, lineWidth, outline, stroke } = data2;
          context.clearRect(0, 0, width3, height3);
          context.fillStyle = background;
          context.fillRect(0, 0, width3, height3);
          const minDim = Math.min(width3, height3);
          context.beginPath();
          context.arc(width3 / 2, height3 / 2, minDim * radius, angle, Math.PI * 2 * arclen + angle);
          context.fillStyle = foreground;
          context.strokeStyle = foreground;
          context.lineWidth = lineWidth;
          if (outline)
            context.stroke();
          else
            context.fill();
        };
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      return `




${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {})}`;
    });
  }
});

// .svelte-kit/output/server/nodes/7.js
var __exports8 = {};
__export(__exports8, {
  css: () => css23,
  entry: () => entry8,
  js: () => js8,
  module: () => sketch01_preview_svelte_exports
});
var entry8, js8, css23;
var init__8 = __esm({
  ".svelte-kit/output/server/nodes/7.js"() {
    init_sketch01_preview_svelte();
    entry8 = "pages/creative/sketch01-preview.svelte-b1b65fc1.js";
    js8 = ["pages/creative/sketch01-preview.svelte-b1b65fc1.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js"];
    css23 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch02-preview.svelte.js
var sketch02_preview_svelte_exports = {};
__export(sketch02_preview_svelte_exports, {
  default: () => Sketch02_preview
});
var import_color13, import_random9, import_canvas_sketch15, Sketch02_preview;
var init_sketch02_preview_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch02-preview.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    import_color13 = __toModule(require_color());
    import_random9 = __toModule(require_random());
    import_canvas_sketch15 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    Sketch02_preview = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = true } = $$props;
      const data2 = {
        TITLE: "Sketch02",
        itemHeight: 25,
        itemWidth: 25,
        itemScaleX: 1,
        itemScaleY: 1,
        width: 1e3,
        height: 1e3,
        gap: 15,
        itemsPerColumn: 25,
        itemsPerRow: 25,
        originX: 0,
        originY: 0,
        totalItems: false,
        remainingWidth: 1080,
        remainingHeight: 1080,
        margin: 100,
        offset: 0,
        randomFactor: 0.5,
        opacityMedian: 0.5,
        opacityVariance: 0.25,
        randomStroke: true,
        randomFill: true,
        fill: "hsla(180,50%,50%,0.5)",
        fillHSLA: "hsla(180,50%,50%,0.5)",
        fillOpacity: ".25",
        stroke: "#ffffffaa",
        strokeHSLA: "hsla(60,50%,50%,0.5)",
        strokeOpacity: ".25",
        strokeRandom: "#0033cff",
        strokeRandomHSLA: "hsla(320,50%,50%,0.5)",
        strokeRandomOpacity: ".25",
        background: "00000000",
        outline: true,
        fitToCanvas: true,
        shapes: [{ value: "square", label: "square" }, { value: "circle", label: "circle" }],
        shape: "square",
        startAngle: 0,
        endAngle: 7,
        arclen: 0.5,
        angle: 0,
        radius: 0.33,
        lineWidth: 2,
        lineWidthRandom: 5
      };
      let fill, stroke;
      const settings = {
        scaleToView: true,
        dimensions: [1280, 1280]
      };
      const sketch = ({ context, width: width3, height: height3 }) => {
        data2.width = width3;
        data2.height = height3;
        data2.remainingWidth = width3 - data2.itemsPerRow * data2.gap;
        data2.remainingHeight = height3 - data2.itemsPerColumn * data2.gap;
        data2.itemWidth = data2.remainingWidth / data2.itemsPerRow;
        data2.itemHeight = data2.remainingHeight / data2.itemsPerColumn;
        return ({ context: context2, width: width22, height: height22 }) => {
          context2.clearRect(0, 0, width22, height22);
          context2.fillStyle = data2.background;
          context2.fillRect(0, 0, width22, height22);
          drawGrid(context2);
        };
      };
      function drawGrid(context, width3, height3) {
        for (let j = 0; j < data2.itemsPerColumn; j++) {
          for (let i2 = 0; i2 < data2.itemsPerRow; i2++) {
            let x2 = (data2.itemWidth + data2.gap) * i2;
            let y = (data2.itemHeight + data2.gap) * j;
            stroke = data2.strokeHSLA;
            if (data2.shape == "square") {
              drawRect(context, x2 + data2.margin / 2 + data2.gap / 2, y + data2.margin / 2 + data2.gap / 2, data2.itemWidth, data2.itemHeight, data2.fillHSLA, stroke, data2.lineWidth);
            } else {
              drawArc(context, x2 + data2.margin / 2 + data2.gap / 2, y + data2.margin / 2 + data2.gap / 2, Math.abs(data2.itemWidth), data2.startAngle, data2.endAngle, data2.fillHSLA, stroke, data2.lineWidth);
            }
            if (Math.random() < data2.randomFactor) {
              data2.randomStroke ? stroke = `hsla(${setItemColor(i2, j, data2.totalItems * 0.3)}, 90%, 50%, ${import_random9.default.range(data2.opacityMedian - data2.opacityVariance, data2.opacityMedian + data2.opacityVariance)})` : stroke = data2.strokeRandomHSLA;
              data2.randomFill ? fill = `hsla(${setItemColor(i2, j, data2.totalItems * 0.3)}, 90%, 50%, ${import_random9.default.range(data2.opacityMedian - data2.opacityVariance, data2.opacityMedian + data2.opacityVariance)})` : fill = data2.fillRandomHSLA;
              if (data2.shape == "square") {
                drawRect(context, x2 + data2.margin / 2 + data2.gap / 2 + data2.offset, y + data2.margin / 2 + data2.gap / 2 + data2.offset, data2.itemWidth, data2.itemHeight, fill, stroke, data2.lineWidthRandom);
              } else {
                drawArc(context, x2 + data2.margin / 2 + data2.gap / 2 + data2.offset, y + data2.margin / 2 + data2.gap / 2 + data2.offset, Math.abs(data2.itemWidth), data2.startAngle, data2.endAngle, fill, stroke, data2.lineWidthRandom);
              }
            }
          }
        }
      }
      const drawRect = (context, originX, originY, width3, height3, fill2, stroke2, lineWidth) => {
        context.strokeStyle = stroke2;
        context.beginPath();
        context.rect(originX, originY, width3 * data2.itemScaleX, height3 * data2.itemScaleY);
        context.lineWidth = lineWidth;
        context.stroke();
        context.fillStyle = fill2;
        context.fill();
      };
      const drawArc = (context, originX, originY, radius, startAngle2, endAngle, fill2, stroke2, lineWidth) => {
        context.strokeStyle = stroke2;
        context.beginPath();
        context.arc(originX, originY, radius, startAngle2, endAngle);
        context.lineWidth = lineWidth;
        context.stroke();
        context.fillStyle = fill2;
        context.fill();
      };
      const setItemColor = (i2, j, totalItems) => {
        let hueOffset = 30;
        let variance = Math.random() * 5;
        let currentFactor = (i2 + variance) * (j - variance) * (variance * totalItems);
        let hue = currentFactor + hueOffset;
        return hue;
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      data2.totalItems = data2.itemsPerColumn * data2.itemsPerRow;
      return `${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {})}`;
    });
  }
});

// .svelte-kit/output/server/nodes/8.js
var __exports9 = {};
__export(__exports9, {
  css: () => css24,
  entry: () => entry9,
  js: () => js9,
  module: () => sketch02_preview_svelte_exports
});
var entry9, js9, css24;
var init__9 = __esm({
  ".svelte-kit/output/server/nodes/8.js"() {
    init_sketch02_preview_svelte();
    entry9 = "pages/creative/sketch02-preview.svelte-168daee3.js";
    js9 = ["pages/creative/sketch02-preview.svelte-168daee3.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js"];
    css24 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/OptionSelect.svelte_svelte_type_style_lang-f02abe27.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch03-preview.svelte.js
var sketch03_preview_svelte_exports = {};
__export(sketch03_preview_svelte_exports, {
  default: () => Sketch03_preview
});
var import_color14, import_random10, import_math4, import_canvas_sketch16, Sketch03_preview;
var init_sketch03_preview_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch03-preview.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    import_color14 = __toModule(require_color());
    import_random10 = __toModule(require_random());
    import_math4 = __toModule(require_math());
    import_canvas_sketch16 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    Sketch03_preview = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = true } = $$props;
      let width3;
      let height3;
      let context;
      let hexes = [];
      const data2 = {
        TITLE: "Sketch03-preview",
        numNodes: 50,
        range: 50,
        lineCap: "butt",
        lineCaps: [{ value: "butt", label: "butt" }, { value: "round", label: "round" }],
        showNodes: false,
        showLines: true,
        nodeType: "hex",
        nodeTypes: [{ value: "hex", label: "hex" }, { value: "circle", label: "circle" }],
        lineWidth: 1,
        lineWidthMax: 3,
        radiusMin: 10,
        radiusMax: 30,
        animate: true
      };
      const settings = {
        dimensions: [width3, height3],
        fps: 60,
        scaleContext: true
      };
      class Vector {
        constructor(x2, y) {
          this.x = x2;
          this.y = y;
        }
        getDistance(v) {
          const dx = this.x - v.x;
          const dy = this.y - v.y;
          return Math.sqrt(dx * dx + dy * dy);
        }
      }
      class Agent {
        constructor(x2, y) {
          this.pos = new Vector(x2, y);
          this.vel = new Vector(import_random10.default.range(-1, 1), import_random10.default.range(-1, 1));
          this.radius = import_random10.default.range(data2.radiusMin, data2.radiusMax);
        }
        update() {
          this.pos.x += this.vel.x * 0.2;
          this.pos.y += this.vel.y * 0.2;
        }
        bounce(width22, height22) {
          if (this.pos.x <= 0 || this.pos.x >= width22) {
            this.vel.x *= -1;
          }
          if (this.pos.y <= 0 || this.pos.y >= height22) {
            this.vel.y *= -1;
          }
        }
        wrap(width22, height22) {
          this.pos.x = (this.pos.x + width22) % width22;
          this.pos.y = (this.pos.y + height22) % height22;
        }
        drawCircle(context2) {
          context2.save();
          context2.translate(this.pos.x, this.pos.y);
          context2.beginPath();
          context2.arc(0, 0, this.radius, 0, Math.PI * 2);
          context2.fill();
          context2.lineWidth = 4;
          context2.strokeStyle = this.color;
          context2.stroke();
          context2.restore();
        }
      }
      class Hex extends Agent {
        constructor(x2, y, numOfSides = 6, positiveVelSum = 0, color = "hsla(180,50%,50%,1)") {
          super(x2, y);
          this.numOfSides = numOfSides;
          this.positiveVelSum = parseFloat(makePositive(this.vel.x).toFixed(3) + makePositive(this.vel.y).toFixed(3));
          this.color = hsla(this.positiveVelSum * 360 % 360, 50, 50, 1);
        }
        drawHex(context2) {
          context2.save();
          context2.beginPath();
          context2.moveTo(this.pos.x + this.radius * Math.cos(0), this.pos.y + this.radius * Math.sin(0));
          for (let i2 = 0; i2 < this.numOfSides; i2++) {
            let xCoord = this.pos.x + this.radius * Math.cos(i2 * 2 * Math.PI / this.numOfSides);
            let yCoord = this.pos.y + this.radius * Math.sin(i2 * 2 * Math.PI / this.numOfSides);
            context2.lineTo(xCoord, yCoord);
            context2.fillStyle = this.color;
          }
          context2.fill();
          context2.restore();
        }
      }
      const makePositive = (value) => {
        if (value < 0)
          return value * -1;
        return value;
      };
      const hsla = (h2, s4, l, a) => {
        let color = `hsla(${h2},${s4}%,${l}%,${a})`;
        return color;
      };
      const rangeAlpha = (range, dist2) => {
        return import_math4.default.mapRange(dist2, 0, range, 1, 0, true);
      };
      const constructNodes = (width22, height22) => {
        if (data2.numNodes > hexes.length) {
          for (let i2 = 0; i2 < data2.numNodes - hexes.length; i2++) {
            let x2 = import_random10.default.range(0, width22);
            let y = import_random10.default.range(0, height22);
            let hex = new Hex(x2, y);
            hexes.push(hex);
          }
        } else {
          for (let i2 = 0; i2 < hexes.length - data2.numNodes; i2++) {
            hexes.pop();
          }
        }
      };
      const sketch = () => {
        constructNodes(width3, height3);
        for (let i2 = 0; i2 < hexes.length; i2++) {
          const hex = hexes[i2];
          for (let j = i2 + 1; j < hexes.length; j++) {
            const other = hexes[j];
            const dist2 = hex.pos.getDistance(other.pos);
            if (dist2 > data2.range)
              continue;
            context.lineWidth = import_math4.default.mapRange(dist2, 0, data2.range, data2.lineWidthMax, 1);
            context.beginPath();
            context.moveTo(hex.pos.x, hex.pos.y);
            data2.showLines ? context.lineTo(other.pos.x, other.pos.y) : 0;
            let a = rangeAlpha(data2.range, dist2);
            let h2 = import_color14.default.parse(hex.color).hsla[0];
            let s4 = import_color14.default.parse(hex.color).hsla[1];
            let l = import_color14.default.parse(hex.color).hsla[2];
            context.strokeStyle = hsla(h2, s4, l, a);
            context.lineCap = data2.lineCap;
            context.stroke();
          }
        }
        return () => {
          context.fillStyle = "black";
          context.fillRect(0, 0, width3, height3);
          if (data2.numNodes != hexes.length)
            ;
          hexes.forEach((hex) => {
            hex.update();
            if (data2.showNodes) {
              data2.nodeType == "hex" ? hex.drawHex(context) : hex.drawCircle(context);
            }
            hex.bounce(width3, height3);
          });
          requestAnimationFrame(sketch());
        };
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      settings.dimensions[0] = width3;
      settings.dimensions[1] = height3;
      return `



${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {})}`;
    });
  }
});

// .svelte-kit/output/server/nodes/9.js
var __exports10 = {};
__export(__exports10, {
  css: () => css25,
  entry: () => entry10,
  js: () => js10,
  module: () => sketch03_preview_svelte_exports
});
var entry10, js10, css25;
var init__10 = __esm({
  ".svelte-kit/output/server/nodes/9.js"() {
    init_sketch03_preview_svelte();
    entry10 = "pages/creative/sketch03-preview.svelte-97872bc2.js";
    js10 = ["pages/creative/sketch03-preview.svelte-97872bc2.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js"];
    css25 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/OptionSelect.svelte_svelte_type_style_lang-f02abe27.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch01/noPanel.svelte.js
var noPanel_svelte_exports = {};
__export(noPanel_svelte_exports, {
  default: () => NoPanel
});
var import_color15, import_canvas_sketch17, NoPanel;
var init_noPanel_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch01/noPanel.svelte.js"() {
    init_index_0300a598();
    init_CanvasSketchEditor_e62a07d7();
    import_color15 = __toModule(require_color());
    import_canvas_sketch17 = __toModule(require_canvas_sketch_umd());
    init_stores_45e3dd62();
    NoPanel = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { hidePanel = false } = $$props;
      const data2 = {
        TITLE: "Sketch01",
        outline: true,
        arclen: 0.5,
        angle: 0,
        radius: 0.33,
        background: "#527A9B",
        foreground: "#F4B9A7",
        lineWidth: 20
      };
      const settings = {
        scaleToView: true,
        dimensions: [1280, 1280]
      };
      const sketch = ({}) => {
        return ({ context, width: width3, height: height3 }) => {
          const { background, foreground, radius, arclen, angle, lineWidth, outline, stroke } = data2;
          context.clearRect(0, 0, width3, height3);
          context.fillStyle = background;
          context.fillRect(0, 0, width3, height3);
          const minDim = Math.min(width3, height3);
          context.beginPath();
          context.arc(width3 / 2, height3 / 2, minDim * radius, angle, Math.PI * 2 * arclen + angle);
          context.fillStyle = foreground;
          context.strokeStyle = foreground;
          context.lineWidth = lineWidth;
          if (outline)
            context.stroke();
          else
            context.fill();
        };
      };
      if ($$props.hidePanel === void 0 && $$bindings.hidePanel && hidePanel !== void 0)
        $$bindings.hidePanel(hidePanel);
      return `



${validate_component(CanvasSketchEditor, "CanvasSketchEditor").$$render($$result, { sketch, settings, data: data2, hidePanel }, {}, {})}`;
    });
  }
});

// .svelte-kit/output/server/nodes/10.js
var __exports11 = {};
__export(__exports11, {
  css: () => css26,
  entry: () => entry11,
  js: () => js11,
  module: () => noPanel_svelte_exports
});
var entry11, js11, css26;
var init__11 = __esm({
  ".svelte-kit/output/server/nodes/10.js"() {
    init_noPanel_svelte();
    entry11 = "pages/creative/sketch01/noPanel.svelte-31886da0.js";
    js11 = ["pages/creative/sketch01/noPanel.svelte-31886da0.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js"];
    css26 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/nodes/11.js
var __exports12 = {};
__export(__exports12, {
  css: () => css27,
  entry: () => entry12,
  js: () => js12,
  module: () => sketch01_svelte_exports
});
var entry12, js12, css27;
var init__12 = __esm({
  ".svelte-kit/output/server/nodes/11.js"() {
    init_sketch01_svelte();
    entry12 = "pages/creative/sketch01.svelte-44b83a2a.js";
    js12 = ["pages/creative/sketch01.svelte-44b83a2a.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js", "chunks/Slider-724e463d.js", "chunks/ColorInput-96c0421c.js", "chunks/Checkbox-import-1c0ce484.js"];
    css27 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch02/noPanel.svelte.js
var noPanel_svelte_exports2 = {};
__export(noPanel_svelte_exports2, {
  default: () => NoPanel2
});
var NoPanel2;
var init_noPanel_svelte2 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch02/noPanel.svelte.js"() {
    init_index_0300a598();
    NoPanel2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});

// .svelte-kit/output/server/nodes/12.js
var __exports13 = {};
__export(__exports13, {
  css: () => css28,
  entry: () => entry13,
  js: () => js13,
  module: () => noPanel_svelte_exports2
});
var entry13, js13, css28;
var init__13 = __esm({
  ".svelte-kit/output/server/nodes/12.js"() {
    init_noPanel_svelte2();
    entry13 = "pages/creative/sketch02/noPanel.svelte-f74aedd1.js";
    js13 = ["pages/creative/sketch02/noPanel.svelte-f74aedd1.js", "chunks/vendor-525e7dbe.js"];
    css28 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/nodes/13.js
var __exports14 = {};
__export(__exports14, {
  css: () => css29,
  entry: () => entry14,
  js: () => js14,
  module: () => sketch02_svelte_exports
});
var entry14, js14, css29;
var init__14 = __esm({
  ".svelte-kit/output/server/nodes/13.js"() {
    init_sketch02_svelte();
    entry14 = "pages/creative/sketch02.svelte-a23f4e19.js";
    js14 = ["pages/creative/sketch02.svelte-a23f4e19.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js", "chunks/Slider-724e463d.js", "chunks/ColorInput-96c0421c.js", "chunks/OptionSelect-daaabff4.js", "chunks/Checkbox-import-1c0ce484.js"];
    css29 = ["assets/pages/creative/sketch02.svelte-3be6b96d.css", "assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/OptionSelect.svelte_svelte_type_style_lang-f02abe27.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch03/noPanel.svelte.js
var noPanel_svelte_exports3 = {};
__export(noPanel_svelte_exports3, {
  default: () => NoPanel3
});
var NoPanel3;
var init_noPanel_svelte3 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch03/noPanel.svelte.js"() {
    init_index_0300a598();
    NoPanel3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});

// .svelte-kit/output/server/nodes/14.js
var __exports15 = {};
__export(__exports15, {
  css: () => css30,
  entry: () => entry15,
  js: () => js15,
  module: () => noPanel_svelte_exports3
});
var entry15, js15, css30;
var init__15 = __esm({
  ".svelte-kit/output/server/nodes/14.js"() {
    init_noPanel_svelte3();
    entry15 = "pages/creative/sketch03/noPanel.svelte-73cc2920.js";
    js15 = ["pages/creative/sketch03/noPanel.svelte-73cc2920.js", "chunks/vendor-525e7dbe.js"];
    css30 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/nodes/15.js
var __exports16 = {};
__export(__exports16, {
  css: () => css31,
  entry: () => entry16,
  js: () => js16,
  module: () => sketch03_svelte_exports
});
var entry16, js16, css31;
var init__16 = __esm({
  ".svelte-kit/output/server/nodes/15.js"() {
    init_sketch03_svelte();
    entry16 = "pages/creative/sketch03.svelte-ecae2de2.js";
    js16 = ["pages/creative/sketch03.svelte-ecae2de2.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js", "chunks/Slider-724e463d.js", "chunks/OptionSelect-daaabff4.js", "chunks/Checkbox-import-1c0ce484.js"];
    css31 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/OptionSelect.svelte_svelte_type_style_lang-f02abe27.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch04/noPanel.svelte.js
var noPanel_svelte_exports4 = {};
__export(noPanel_svelte_exports4, {
  default: () => NoPanel4
});
var NoPanel4;
var init_noPanel_svelte4 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch04/noPanel.svelte.js"() {
    init_index_0300a598();
    NoPanel4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});

// .svelte-kit/output/server/nodes/16.js
var __exports17 = {};
__export(__exports17, {
  css: () => css32,
  entry: () => entry17,
  js: () => js17,
  module: () => noPanel_svelte_exports4
});
var entry17, js17, css32;
var init__17 = __esm({
  ".svelte-kit/output/server/nodes/16.js"() {
    init_noPanel_svelte4();
    entry17 = "pages/creative/sketch04/noPanel.svelte-7a7fc8b1.js";
    js17 = ["pages/creative/sketch04/noPanel.svelte-7a7fc8b1.js", "chunks/vendor-525e7dbe.js"];
    css32 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/nodes/17.js
var __exports18 = {};
__export(__exports18, {
  css: () => css33,
  entry: () => entry18,
  js: () => js18,
  module: () => sketch04_svelte_exports
});
var entry18, js18, css33;
var init__18 = __esm({
  ".svelte-kit/output/server/nodes/17.js"() {
    init_sketch04_svelte();
    entry18 = "pages/creative/sketch04.svelte-8d267db6.js";
    js18 = ["pages/creative/sketch04.svelte-8d267db6.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js", "chunks/Slider-724e463d.js", "chunks/OptionSelect-daaabff4.js", "chunks/Checkbox-import-1c0ce484.js"];
    css33 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/OptionSelect.svelte_svelte_type_style_lang-f02abe27.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch05/noPanel.svelte.js
var noPanel_svelte_exports5 = {};
__export(noPanel_svelte_exports5, {
  default: () => NoPanel5
});
var NoPanel5;
var init_noPanel_svelte5 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch05/noPanel.svelte.js"() {
    init_index_0300a598();
    NoPanel5 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});

// .svelte-kit/output/server/nodes/18.js
var __exports19 = {};
__export(__exports19, {
  css: () => css34,
  entry: () => entry19,
  js: () => js19,
  module: () => noPanel_svelte_exports5
});
var entry19, js19, css34;
var init__19 = __esm({
  ".svelte-kit/output/server/nodes/18.js"() {
    init_noPanel_svelte5();
    entry19 = "pages/creative/sketch05/noPanel.svelte-5ad49758.js";
    js19 = ["pages/creative/sketch05/noPanel.svelte-5ad49758.js", "chunks/vendor-525e7dbe.js"];
    css34 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/nodes/19.js
var __exports20 = {};
__export(__exports20, {
  css: () => css35,
  entry: () => entry20,
  js: () => js20,
  module: () => sketch05_svelte_exports
});
var entry20, js20, css35;
var init__20 = __esm({
  ".svelte-kit/output/server/nodes/19.js"() {
    init_sketch05_svelte();
    entry20 = "pages/creative/sketch05.svelte-7f5b2104.js";
    js20 = ["pages/creative/sketch05.svelte-7f5b2104.js", "chunks/vendor-525e7dbe.js", "chunks/Slider-724e463d.js", "chunks/Checkbox-5c3c9476.js", "chunks/OptionSelect-daaabff4.js", "chunks/CanvasManager-bc3a3d50.js", "chunks/stores-1f2db047.js"];
    css35 = ["assets/pages/creative/sketch06.svelte-458316a3.css", "assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/OptionSelect.svelte_svelte_type_style_lang-f02abe27.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch06/noPanel.svelte.js
var noPanel_svelte_exports6 = {};
__export(noPanel_svelte_exports6, {
  default: () => NoPanel6
});
var NoPanel6;
var init_noPanel_svelte6 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch06/noPanel.svelte.js"() {
    init_index_0300a598();
    NoPanel6 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});

// .svelte-kit/output/server/nodes/20.js
var __exports21 = {};
__export(__exports21, {
  css: () => css36,
  entry: () => entry21,
  js: () => js21,
  module: () => noPanel_svelte_exports6
});
var entry21, js21, css36;
var init__21 = __esm({
  ".svelte-kit/output/server/nodes/20.js"() {
    init_noPanel_svelte6();
    entry21 = "pages/creative/sketch06/noPanel.svelte-85305f0f.js";
    js21 = ["pages/creative/sketch06/noPanel.svelte-85305f0f.js", "chunks/vendor-525e7dbe.js"];
    css36 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/nodes/21.js
var __exports22 = {};
__export(__exports22, {
  css: () => css37,
  entry: () => entry22,
  js: () => js22,
  module: () => sketch06_svelte_exports
});
var entry22, js22, css37;
var init__22 = __esm({
  ".svelte-kit/output/server/nodes/21.js"() {
    init_sketch06_svelte();
    entry22 = "pages/creative/sketch06.svelte-1aeeacd6.js";
    js22 = ["pages/creative/sketch06.svelte-1aeeacd6.js", "chunks/vendor-525e7dbe.js", "chunks/Slider-724e463d.js", "chunks/CanvasManager-bc3a3d50.js", "chunks/stores-1f2db047.js"];
    css37 = ["assets/pages/creative/sketch06.svelte-458316a3.css", "assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch07/noPanel.svelte.js
var noPanel_svelte_exports7 = {};
__export(noPanel_svelte_exports7, {
  default: () => NoPanel7
});
var NoPanel7;
var init_noPanel_svelte7 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch07/noPanel.svelte.js"() {
    init_index_0300a598();
    NoPanel7 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});

// .svelte-kit/output/server/nodes/22.js
var __exports23 = {};
__export(__exports23, {
  css: () => css38,
  entry: () => entry23,
  js: () => js23,
  module: () => noPanel_svelte_exports7
});
var entry23, js23, css38;
var init__23 = __esm({
  ".svelte-kit/output/server/nodes/22.js"() {
    init_noPanel_svelte7();
    entry23 = "pages/creative/sketch07/noPanel.svelte-004373e6.js";
    js23 = ["pages/creative/sketch07/noPanel.svelte-004373e6.js", "chunks/vendor-525e7dbe.js"];
    css38 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/nodes/23.js
var __exports24 = {};
__export(__exports24, {
  css: () => css39,
  entry: () => entry24,
  js: () => js24,
  module: () => sketch07_svelte_exports
});
var entry24, js24, css39;
var init__24 = __esm({
  ".svelte-kit/output/server/nodes/23.js"() {
    init_sketch07_svelte();
    entry24 = "pages/creative/sketch07.svelte-62716fec.js";
    js24 = ["pages/creative/sketch07.svelte-62716fec.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js", "chunks/Slider-724e463d.js", "chunks/ColorInput-96c0421c.js", "chunks/Checkbox-5c3c9476.js"];
    css39 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch08/noPanel.svelte.js
var noPanel_svelte_exports8 = {};
__export(noPanel_svelte_exports8, {
  default: () => NoPanel8
});
var NoPanel8;
var init_noPanel_svelte8 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch08/noPanel.svelte.js"() {
    init_index_0300a598();
    NoPanel8 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});

// .svelte-kit/output/server/nodes/24.js
var __exports25 = {};
__export(__exports25, {
  css: () => css40,
  entry: () => entry25,
  js: () => js25,
  module: () => noPanel_svelte_exports8
});
var entry25, js25, css40;
var init__25 = __esm({
  ".svelte-kit/output/server/nodes/24.js"() {
    init_noPanel_svelte8();
    entry25 = "pages/creative/sketch08/noPanel.svelte-095fb6f0.js";
    js25 = ["pages/creative/sketch08/noPanel.svelte-095fb6f0.js", "chunks/vendor-525e7dbe.js"];
    css40 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/nodes/25.js
var __exports26 = {};
__export(__exports26, {
  css: () => css41,
  entry: () => entry26,
  js: () => js26,
  module: () => sketch08_svelte_exports
});
var entry26, js26, css41;
var init__26 = __esm({
  ".svelte-kit/output/server/nodes/25.js"() {
    init_sketch08_svelte();
    entry26 = "pages/creative/sketch08.svelte-70cb8cbe.js";
    js26 = ["pages/creative/sketch08.svelte-70cb8cbe.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js", "chunks/Slider-724e463d.js", "chunks/ColorInput-96c0421c.js", "chunks/Checkbox-5c3c9476.js"];
    css41 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/creative/sketch09/noPanel.svelte.js
var noPanel_svelte_exports9 = {};
__export(noPanel_svelte_exports9, {
  default: () => NoPanel9
});
var NoPanel9;
var init_noPanel_svelte9 = __esm({
  ".svelte-kit/output/server/entries/pages/creative/sketch09/noPanel.svelte.js"() {
    init_index_0300a598();
    NoPanel9 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});

// .svelte-kit/output/server/nodes/26.js
var __exports27 = {};
__export(__exports27, {
  css: () => css42,
  entry: () => entry27,
  js: () => js27,
  module: () => noPanel_svelte_exports9
});
var entry27, js27, css42;
var init__27 = __esm({
  ".svelte-kit/output/server/nodes/26.js"() {
    init_noPanel_svelte9();
    entry27 = "pages/creative/sketch09/noPanel.svelte-28e7569e.js";
    js27 = ["pages/creative/sketch09/noPanel.svelte-28e7569e.js", "chunks/vendor-525e7dbe.js"];
    css42 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/nodes/27.js
var __exports28 = {};
__export(__exports28, {
  css: () => css43,
  entry: () => entry28,
  js: () => js28,
  module: () => sketch09_svelte_exports
});
var entry28, js28, css43;
var init__28 = __esm({
  ".svelte-kit/output/server/nodes/27.js"() {
    init_sketch09_svelte();
    entry28 = "pages/creative/sketch09.svelte-28a608cc.js";
    js28 = ["pages/creative/sketch09.svelte-28a608cc.js", "chunks/vendor-525e7dbe.js", "chunks/CanvasSketchEditor-f0666a80.js", "chunks/stores-1f2db047.js", "chunks/Slider-724e463d.js", "chunks/ColorInput-96c0421c.js", "chunks/Checkbox-5c3c9476.js"];
    css43 = ["assets/Slider.svelte_svelte_type_style_lang-025e2ff4.css", "assets/ColorInput.svelte_svelte_type_style_lang-c661f8e9.css", "assets/Checkbox.svelte_svelte_type_style_lang-aa68b5f1.css", "assets/vendor-e0d31265.css", "assets/CanvasSketchEditor-dcdb0a89.css"];
  }
});

// .svelte-kit/output/server/entries/pages/sketch05.svelte.js
var sketch05_svelte_exports2 = {};
__export(sketch05_svelte_exports2, {
  default: () => Sketch052
});
var import_random11, css44, Sketch052;
var init_sketch05_svelte2 = __esm({
  ".svelte-kit/output/server/entries/pages/sketch05.svelte.js"() {
    init_index_0300a598();
    import_random11 = __toModule(require_random());
    css44 = {
      code: ".sketch{grid-area:sketch}.controls{grid-area:controls}",
      map: null
    };
    Sketch052 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const data2 = {
        TITLE: "Sketch05",
        fps: 60,
        minDist: 20,
        maxDistFactor: 6,
        initialLines: 0,
        maxLines: 100,
        speed: 3,
        minWidth: 1,
        maxWidth: 4,
        lineBirthFactor: 0.25,
        randomColors: false,
        colorFunctions: [
          { value: 0, label: "original" },
          { value: 1, label: "2" },
          { value: 2, label: "3" },
          { value: 3, label: "4" },
          { value: 4, label: "5" },
          { value: 5, label: "6" },
          { value: 6, label: "7" }
        ],
        colorFunctionsIndex: 0
      };
      let w, h2;
      w = h2 = 1080;
      let evenX, evenY = 50;
      $$result.css.add(css44);
      ({
        x: w / 2,
        y: h2 / 2,
        vx: 1,
        vy: 0.5,
        width: import_random11.default.range(data2.minWidth, data2.maxWidth),
        reverse: false,
        dirIndex: Math.floor(import_random11.default.range(0, 6)),
        randomFactor: import_random11.default.range(0.1, 1)
      });
      data2.minDist * data2.maxDistFactor;
      evenX = Math.floor(w / data2.minDist);
      {
        console.log(`\u{1F680} ~ file: sketch05.svelte ~ line 73 ~ data.minDist`, data2.minDist);
      }
      {
        console.log(`\u{1F680} ~ file: sketch05.svelte ~ line 73 ~ data - `, data2);
      }
      {
        console.log(`\u{1F680} ~ file: sketch05.svelte ~ line 73 ~ evenX`, evenX);
      }
      evenY = Math.floor(h2 / data2.minDist);
      Array.from(Array(evenX), (x2, i2) => i2 * data2.minDist);
      Array.from(Array(evenY), (x2, i2) => i2 * data2.minDist);
      return `<div class="${"flex h-full w-screen sketch"}"><div id="${"canvasContainer"}" class="${"w-full"}"><canvas id="${"c"}"></canvas></div>
</div>`;
    });
  }
});

// .svelte-kit/output/server/nodes/28.js
var __exports29 = {};
__export(__exports29, {
  css: () => css45,
  entry: () => entry29,
  js: () => js29,
  module: () => sketch05_svelte_exports2
});
var entry29, js29, css45;
var init__29 = __esm({
  ".svelte-kit/output/server/nodes/28.js"() {
    init_sketch05_svelte2();
    entry29 = "pages/sketch05.svelte-cc23bd23.js";
    js29 = ["pages/sketch05.svelte-cc23bd23.js", "chunks/vendor-525e7dbe.js"];
    css45 = ["assets/pages/creative/sketch06.svelte-458316a3.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/favicon.svelte.js
var favicon_svelte_exports = {};
__export(favicon_svelte_exports, {
  default: () => Favicon
});
var css46, Favicon;
var init_favicon_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/favicon.svelte.js"() {
    init_index_0300a598();
    css46 = {
      code: ".box.svelte-14675si{border:1px solid #ccc;background:white}.favicon.svelte-14675si{font-size:20rem;font-weight:700;display:flex;background-image:linear-gradient(120deg, var(--color-winterblues-900) 22%, var(--color-amber-700) 36%, var(--color-rose-700) 49%, var(--color-fuchsia-700) 58%, var(--color-winterblues-900) 75%);-webkit-background-clip:text;-webkit-text-fill-color:transparent;-moz-background-clip:text;-moz-text-fill-color:transparent;background-clip:text;-webkit-text-stroke:12px black}",
      map: null
    };
    Favicon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css46);
      return `<div class="${"box w-[400px] h-[400px] flex items-center justify-center svelte-14675si"}"><div class="${"favicon font-montserrat flex items-center justify-center svelte-14675si"}">M</div>
</div>`;
    });
  }
});

// .svelte-kit/output/server/nodes/29.js
var __exports30 = {};
__export(__exports30, {
  css: () => css47,
  entry: () => entry30,
  js: () => js30,
  module: () => favicon_svelte_exports
});
var entry30, js30, css47;
var init__30 = __esm({
  ".svelte-kit/output/server/nodes/29.js"() {
    init_favicon_svelte();
    entry30 = "pages/favicon.svelte-80ff002c.js";
    js30 = ["pages/favicon.svelte-80ff002c.js", "chunks/vendor-525e7dbe.js"];
    css47 = ["assets/pages/favicon.svelte-6d4a9a7e.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/pokemon.svelte.js
var pokemon_svelte_exports = {};
__export(pokemon_svelte_exports, {
  default: () => Pokemon,
  load: () => load2
});
async function load2({ params }) {
  console.log(`running fetchPokemon API call`);
  const url = "https://pokeapi.co/api/v2/pokemon?limit=898/";
  const res = await fetch(url);
  const data2 = await res.json();
  const loadedPokemon = data2.results.map((data22, index) => {
    return {
      name: data22.name,
      id: index + 1,
      image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`
    };
  });
  return { props: { pokemon: loadedPokemon } };
}
var css$16, PokemonCard, css48, Pokemon;
var init_pokemon_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/pokemon.svelte.js"() {
    init_index_0300a598();
    css$16 = {
      code: ".pokemon.svelte-4j24xz{margin:0.5rem;padding:0.5rem;background:rgba(0, 0, 0, 0.1)}",
      map: null
    };
    PokemonCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { poke } = $$props;
      if ($$props.poke === void 0 && $$bindings.poke && poke !== void 0)
        $$bindings.poke(poke);
      $$result.css.add(css$16);
      return `<a${add_attribute("href", `/pokemon/${poke.id}`, 0)}><div class="${"pokemon hover:drop-shadow-lg svelte-4j24xz"}"><h2 class="${"uppercase text-1xl"}">${escape2(poke.id)}. ${escape2(poke.name)}</h2>
		<img${add_attribute("src", poke.image, 0)} alt="${""}" class="${"w-30 h-30"}"></div>
</a>`;
    });
    css48 = {
      code: "h1.svelte-3z7ye9{font-size:3rem;font-weight:800;background:-webkit-linear-gradient(0deg, #480024 0%, #097979 25%, #79799b 50%, #790979 75%, #02004c 100%);-webkit-background-clip:text;-webkit-text-fill-color:transparent}",
      map: null
    };
    Pokemon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { pokemon } = $$props;
      let searchTerm = "";
      let filteredPokemon = [];
      if ($$props.pokemon === void 0 && $$bindings.pokemon && pokemon !== void 0)
        $$bindings.pokemon(pokemon);
      $$result.css.add(css48);
      {
        {
          {
            filteredPokemon = [...pokemon];
          }
        }
      }
      return `${$$result.head += `${$$result.title = `<title>Pokemon are cool</title>`, ""}`, ""}
<div class="${"main"}"><h1 class="${"svelte-3z7ye9"}">Pokedex Listing</h1>
	<input type="${"text"}" placeholder="${"Search Pokemon"}" class="${"w-5/6 rounded-md text-lg p-4 border-2 border-grey-200"}"${add_attribute("value", searchTerm, 0)}>
	
	<div class="${"grid gap-2 md:grid-cols-8 grid-cols-4"}">${each(filteredPokemon, (poke) => {
        return `${validate_component(PokemonCard, "PokemonCard").$$render($$result, { poke }, {}, {})}`;
      })}</div>
</div>`;
    });
  }
});

// .svelte-kit/output/server/nodes/30.js
var __exports31 = {};
__export(__exports31, {
  css: () => css49,
  entry: () => entry31,
  js: () => js31,
  module: () => pokemon_svelte_exports
});
var entry31, js31, css49;
var init__31 = __esm({
  ".svelte-kit/output/server/nodes/30.js"() {
    init_pokemon_svelte();
    entry31 = "pages/pokemon.svelte-a6fdfe3e.js";
    js31 = ["pages/pokemon.svelte-a6fdfe3e.js", "chunks/vendor-525e7dbe.js"];
    css49 = ["assets/pages/pokemon.svelte-a2cfab55.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/about.svelte.js
var about_svelte_exports = {};
__export(about_svelte_exports, {
  default: () => About
});
var css50, About;
var init_about_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/about.svelte.js"() {
    init_index_0300a598();
    css50 = {
      code: ".main.svelte-1lfi820{display:flex;flex-direction:column;justify-content:center;align-items:center;font-family:'Montserrat', sans-serif;margin-top:5rem}h1.svelte-1lfi820{font-size:3rem;font-weight:900;background:-webkit-linear-gradient(0deg, rgba(72,0,36,1) 0%,rgba(9,121,121,1) 25%, rgba(56,121,255,1) 50%, rgba(121,9,121,1) 75%, rgba(2,0,76,1) 100%);-webkit-background-clip:text;-webkit-text-fill-color:transparent}",
      map: null
    };
    About = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css50);
      return `${$$result.head += `${$$result.title = `<title>About MetaBrain</title>`, ""}`, ""}
<div class="${"main p-12 inset-0 bg-gradient-to-r from-cyan-400 to-purple-500 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl svelte-1lfi820"}"><h1 class="${"svelte-1lfi820"}">About Me</h1>
    <h2 class="${"cyan-500 text-3xl"}">I&#39;m colorful</h2></div>
<div class="${"flex flex-col pt-10"}"><h2>There are links to click. If you want.</h2>
</div>`;
    });
  }
});

// .svelte-kit/output/server/nodes/31.js
var __exports32 = {};
__export(__exports32, {
  css: () => css51,
  entry: () => entry32,
  js: () => js32,
  module: () => about_svelte_exports
});
var entry32, js32, css51;
var init__32 = __esm({
  ".svelte-kit/output/server/nodes/31.js"() {
    init_about_svelte();
    entry32 = "pages/about.svelte-d1403929.js";
    js32 = ["pages/about.svelte-d1403929.js", "chunks/vendor-525e7dbe.js"];
    css51 = ["assets/pages/about.svelte-744ef577.css", "assets/vendor-e0d31265.css"];
  }
});

// node_modules/chroma-js/chroma.js
var require_chroma = __commonJS({
  "node_modules/chroma-js/chroma.js"(exports, module2) {
    (function() {
      var Color5, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier2, blend, blend_f, brewer, burn, chroma2, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each2, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m2, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb, slice = [].slice;
      type = function() {
        var classToType, len, name2, o2, ref;
        classToType = {};
        ref = "Boolean Number String Function Array Date RegExp Undefined Null".split(" ");
        for (o2 = 0, len = ref.length; o2 < len; o2++) {
          name2 = ref[o2];
          classToType["[object " + name2 + "]"] = name2.toLowerCase();
        }
        return function(obj) {
          var strType;
          strType = Object.prototype.toString.call(obj);
          return classToType[strType] || "object";
        };
      }();
      limit = function(x2, min, max2) {
        if (min == null) {
          min = 0;
        }
        if (max2 == null) {
          max2 = 1;
        }
        if (x2 < min) {
          x2 = min;
        }
        if (x2 > max2) {
          x2 = max2;
        }
        return x2;
      };
      unpack = function(args) {
        if (args.length >= 3) {
          return Array.prototype.slice.call(args);
        } else {
          return args[0];
        }
      };
      clip_rgb = function(rgb) {
        var i2, o2;
        rgb._clipped = false;
        rgb._unclipped = rgb.slice(0);
        for (i2 = o2 = 0; o2 < 3; i2 = ++o2) {
          if (i2 < 3) {
            if (rgb[i2] < 0 || rgb[i2] > 255) {
              rgb._clipped = true;
            }
            if (rgb[i2] < 0) {
              rgb[i2] = 0;
            }
            if (rgb[i2] > 255) {
              rgb[i2] = 255;
            }
          } else if (i2 === 3) {
            if (rgb[i2] < 0) {
              rgb[i2] = 0;
            }
            if (rgb[i2] > 1) {
              rgb[i2] = 1;
            }
          }
        }
        if (!rgb._clipped) {
          delete rgb._unclipped;
        }
        return rgb;
      };
      PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;
      TWOPI = PI * 2;
      PITHIRD = PI / 3;
      DEG2RAD = PI / 180;
      RAD2DEG = 180 / PI;
      chroma2 = function() {
        if (arguments[0] instanceof Color5) {
          return arguments[0];
        }
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, arguments, function() {
        });
      };
      chroma2["default"] = chroma2;
      _interpolators = [];
      if (typeof module2 !== "undefined" && module2 !== null && module2.exports != null) {
        module2.exports = chroma2;
      }
      if (typeof define === "function" && define.amd) {
        define([], function() {
          return chroma2;
        });
      } else {
        root = typeof exports !== "undefined" && exports !== null ? exports : this;
        root.chroma = chroma2;
      }
      chroma2.version = "1.4.1";
      _input = {};
      _guess_formats = [];
      _guess_formats_sorted = false;
      Color5 = function() {
        function Color6() {
          var arg, args, chk, len, len1, me, mode, o2, w;
          me = this;
          args = [];
          for (o2 = 0, len = arguments.length; o2 < len; o2++) {
            arg = arguments[o2];
            if (arg != null) {
              args.push(arg);
            }
          }
          if (args.length > 1) {
            mode = args[args.length - 1];
          }
          if (_input[mode] != null) {
            me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));
          } else {
            if (!_guess_formats_sorted) {
              _guess_formats = _guess_formats.sort(function(a, b) {
                return b.p - a.p;
              });
              _guess_formats_sorted = true;
            }
            for (w = 0, len1 = _guess_formats.length; w < len1; w++) {
              chk = _guess_formats[w];
              mode = chk.test.apply(chk, args);
              if (mode) {
                break;
              }
            }
            if (mode) {
              me._rgb = clip_rgb(_input[mode].apply(_input, args));
            }
          }
          if (me._rgb == null) {
            console.warn("unknown format: " + args);
          }
          if (me._rgb == null) {
            me._rgb = [0, 0, 0];
          }
          if (me._rgb.length === 3) {
            me._rgb.push(1);
          }
        }
        Color6.prototype.toString = function() {
          return this.hex();
        };
        return Color6;
      }();
      chroma2._input = _input;
      chroma2.brewer = brewer = {
        OrRd: ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#b30000", "#7f0000"],
        PuBu: ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#045a8d", "#023858"],
        BuPu: ["#f7fcfd", "#e0ecf4", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#810f7c", "#4d004b"],
        Oranges: ["#fff5eb", "#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#a63603", "#7f2704"],
        BuGn: ["#f7fcfd", "#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#006d2c", "#00441b"],
        YlOrBr: ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#993404", "#662506"],
        YlGn: ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#006837", "#004529"],
        Reds: ["#fff5f0", "#fee0d2", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#a50f15", "#67000d"],
        RdPu: ["#fff7f3", "#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177", "#49006a"],
        Greens: ["#f7fcf5", "#e5f5e0", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#006d2c", "#00441b"],
        YlGnBu: ["#ffffd9", "#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#253494", "#081d58"],
        Purples: ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#54278f", "#3f007d"],
        GnBu: ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#0868ac", "#084081"],
        Greys: ["#ffffff", "#f0f0f0", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525", "#000000"],
        YlOrRd: ["#ffffcc", "#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#bd0026", "#800026"],
        PuRd: ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#980043", "#67001f"],
        Blues: ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#08519c", "#08306b"],
        PuBuGn: ["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016c59", "#014636"],
        Viridis: ["#440154", "#482777", "#3f4a8a", "#31678e", "#26838f", "#1f9d8a", "#6cce5a", "#b6de2b", "#fee825"],
        Spectral: ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"],
        RdYlGn: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", "#006837"],
        RdBu: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", "#053061"],
        PiYG: ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"],
        PRGn: ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", "#00441b"],
        RdYlBu: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", "#313695"],
        BrBG: ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e", "#003c30"],
        RdGy: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"],
        PuOr: ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788", "#2d004b"],
        Set2: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", "#b3b3b3"],
        Accent: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17", "#666666"],
        Set1: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"],
        Set3: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd", "#ccebc5", "#ffed6f"],
        Dark2: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#666666"],
        Paired: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a", "#ffff99", "#b15928"],
        Pastel2: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae", "#f1e2cc", "#cccccc"],
        Pastel1: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2"]
      };
      (function() {
        var key, results;
        results = [];
        for (key in brewer) {
          results.push(brewer[key.toLowerCase()] = brewer[key]);
        }
        return results;
      })();
      w3cx11 = {
        aliceblue: "#f0f8ff",
        antiquewhite: "#faebd7",
        aqua: "#00ffff",
        aquamarine: "#7fffd4",
        azure: "#f0ffff",
        beige: "#f5f5dc",
        bisque: "#ffe4c4",
        black: "#000000",
        blanchedalmond: "#ffebcd",
        blue: "#0000ff",
        blueviolet: "#8a2be2",
        brown: "#a52a2a",
        burlywood: "#deb887",
        cadetblue: "#5f9ea0",
        chartreuse: "#7fff00",
        chocolate: "#d2691e",
        coral: "#ff7f50",
        cornflower: "#6495ed",
        cornflowerblue: "#6495ed",
        cornsilk: "#fff8dc",
        crimson: "#dc143c",
        cyan: "#00ffff",
        darkblue: "#00008b",
        darkcyan: "#008b8b",
        darkgoldenrod: "#b8860b",
        darkgray: "#a9a9a9",
        darkgreen: "#006400",
        darkgrey: "#a9a9a9",
        darkkhaki: "#bdb76b",
        darkmagenta: "#8b008b",
        darkolivegreen: "#556b2f",
        darkorange: "#ff8c00",
        darkorchid: "#9932cc",
        darkred: "#8b0000",
        darksalmon: "#e9967a",
        darkseagreen: "#8fbc8f",
        darkslateblue: "#483d8b",
        darkslategray: "#2f4f4f",
        darkslategrey: "#2f4f4f",
        darkturquoise: "#00ced1",
        darkviolet: "#9400d3",
        deeppink: "#ff1493",
        deepskyblue: "#00bfff",
        dimgray: "#696969",
        dimgrey: "#696969",
        dodgerblue: "#1e90ff",
        firebrick: "#b22222",
        floralwhite: "#fffaf0",
        forestgreen: "#228b22",
        fuchsia: "#ff00ff",
        gainsboro: "#dcdcdc",
        ghostwhite: "#f8f8ff",
        gold: "#ffd700",
        goldenrod: "#daa520",
        gray: "#808080",
        green: "#008000",
        greenyellow: "#adff2f",
        grey: "#808080",
        honeydew: "#f0fff0",
        hotpink: "#ff69b4",
        indianred: "#cd5c5c",
        indigo: "#4b0082",
        ivory: "#fffff0",
        khaki: "#f0e68c",
        laserlemon: "#ffff54",
        lavender: "#e6e6fa",
        lavenderblush: "#fff0f5",
        lawngreen: "#7cfc00",
        lemonchiffon: "#fffacd",
        lightblue: "#add8e6",
        lightcoral: "#f08080",
        lightcyan: "#e0ffff",
        lightgoldenrod: "#fafad2",
        lightgoldenrodyellow: "#fafad2",
        lightgray: "#d3d3d3",
        lightgreen: "#90ee90",
        lightgrey: "#d3d3d3",
        lightpink: "#ffb6c1",
        lightsalmon: "#ffa07a",
        lightseagreen: "#20b2aa",
        lightskyblue: "#87cefa",
        lightslategray: "#778899",
        lightslategrey: "#778899",
        lightsteelblue: "#b0c4de",
        lightyellow: "#ffffe0",
        lime: "#00ff00",
        limegreen: "#32cd32",
        linen: "#faf0e6",
        magenta: "#ff00ff",
        maroon: "#800000",
        maroon2: "#7f0000",
        maroon3: "#b03060",
        mediumaquamarine: "#66cdaa",
        mediumblue: "#0000cd",
        mediumorchid: "#ba55d3",
        mediumpurple: "#9370db",
        mediumseagreen: "#3cb371",
        mediumslateblue: "#7b68ee",
        mediumspringgreen: "#00fa9a",
        mediumturquoise: "#48d1cc",
        mediumvioletred: "#c71585",
        midnightblue: "#191970",
        mintcream: "#f5fffa",
        mistyrose: "#ffe4e1",
        moccasin: "#ffe4b5",
        navajowhite: "#ffdead",
        navy: "#000080",
        oldlace: "#fdf5e6",
        olive: "#808000",
        olivedrab: "#6b8e23",
        orange: "#ffa500",
        orangered: "#ff4500",
        orchid: "#da70d6",
        palegoldenrod: "#eee8aa",
        palegreen: "#98fb98",
        paleturquoise: "#afeeee",
        palevioletred: "#db7093",
        papayawhip: "#ffefd5",
        peachpuff: "#ffdab9",
        peru: "#cd853f",
        pink: "#ffc0cb",
        plum: "#dda0dd",
        powderblue: "#b0e0e6",
        purple: "#800080",
        purple2: "#7f007f",
        purple3: "#a020f0",
        rebeccapurple: "#663399",
        red: "#ff0000",
        rosybrown: "#bc8f8f",
        royalblue: "#4169e1",
        saddlebrown: "#8b4513",
        salmon: "#fa8072",
        sandybrown: "#f4a460",
        seagreen: "#2e8b57",
        seashell: "#fff5ee",
        sienna: "#a0522d",
        silver: "#c0c0c0",
        skyblue: "#87ceeb",
        slateblue: "#6a5acd",
        slategray: "#708090",
        slategrey: "#708090",
        snow: "#fffafa",
        springgreen: "#00ff7f",
        steelblue: "#4682b4",
        tan: "#d2b48c",
        teal: "#008080",
        thistle: "#d8bfd8",
        tomato: "#ff6347",
        turquoise: "#40e0d0",
        violet: "#ee82ee",
        wheat: "#f5deb3",
        white: "#ffffff",
        whitesmoke: "#f5f5f5",
        yellow: "#ffff00",
        yellowgreen: "#9acd32"
      };
      chroma2.colors = colors = w3cx11;
      lab2rgb = function() {
        var a, args, b, g, l, r2, x2, y, z;
        args = unpack(arguments);
        l = args[0], a = args[1], b = args[2];
        y = (l + 16) / 116;
        x2 = isNaN(a) ? y : y + a / 500;
        z = isNaN(b) ? y : y - b / 200;
        y = LAB_CONSTANTS.Yn * lab_xyz(y);
        x2 = LAB_CONSTANTS.Xn * lab_xyz(x2);
        z = LAB_CONSTANTS.Zn * lab_xyz(z);
        r2 = xyz_rgb(3.2404542 * x2 - 1.5371385 * y - 0.4985314 * z);
        g = xyz_rgb(-0.969266 * x2 + 1.8760108 * y + 0.041556 * z);
        b = xyz_rgb(0.0556434 * x2 - 0.2040259 * y + 1.0572252 * z);
        return [r2, g, b, args.length > 3 ? args[3] : 1];
      };
      xyz_rgb = function(r2) {
        return 255 * (r2 <= 304e-5 ? 12.92 * r2 : 1.055 * pow(r2, 1 / 2.4) - 0.055);
      };
      lab_xyz = function(t2) {
        if (t2 > LAB_CONSTANTS.t1) {
          return t2 * t2 * t2;
        } else {
          return LAB_CONSTANTS.t2 * (t2 - LAB_CONSTANTS.t0);
        }
      };
      LAB_CONSTANTS = {
        Kn: 18,
        Xn: 0.95047,
        Yn: 1,
        Zn: 1.08883,
        t0: 0.137931034,
        t1: 0.206896552,
        t2: 0.12841855,
        t3: 8856452e-9
      };
      rgb2lab = function() {
        var b, g, r2, ref, ref1, x2, y, z;
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        ref1 = rgb2xyz(r2, g, b), x2 = ref1[0], y = ref1[1], z = ref1[2];
        return [116 * y - 16, 500 * (x2 - y), 200 * (y - z)];
      };
      rgb_xyz = function(r2) {
        if ((r2 /= 255) <= 0.04045) {
          return r2 / 12.92;
        } else {
          return pow((r2 + 0.055) / 1.055, 2.4);
        }
      };
      xyz_lab = function(t2) {
        if (t2 > LAB_CONSTANTS.t3) {
          return pow(t2, 1 / 3);
        } else {
          return t2 / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;
        }
      };
      rgb2xyz = function() {
        var b, g, r2, ref, x2, y, z;
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        r2 = rgb_xyz(r2);
        g = rgb_xyz(g);
        b = rgb_xyz(b);
        x2 = xyz_lab((0.4124564 * r2 + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);
        y = xyz_lab((0.2126729 * r2 + 0.7151522 * g + 0.072175 * b) / LAB_CONSTANTS.Yn);
        z = xyz_lab((0.0193339 * r2 + 0.119192 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);
        return [x2, y, z];
      };
      chroma2.lab = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["lab"]), function() {
        });
      };
      _input.lab = lab2rgb;
      Color5.prototype.lab = function() {
        return rgb2lab(this._rgb);
      };
      bezier2 = function(colors2) {
        var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;
        colors2 = function() {
          var len, o2, results;
          results = [];
          for (o2 = 0, len = colors2.length; o2 < len; o2++) {
            c = colors2[o2];
            results.push(chroma2(c));
          }
          return results;
        }();
        if (colors2.length === 2) {
          ref = function() {
            var len, o2, results;
            results = [];
            for (o2 = 0, len = colors2.length; o2 < len; o2++) {
              c = colors2[o2];
              results.push(c.lab());
            }
            return results;
          }(), lab0 = ref[0], lab1 = ref[1];
          I = function(t2) {
            var i2, lab;
            lab = function() {
              var o2, results;
              results = [];
              for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
                results.push(lab0[i2] + t2 * (lab1[i2] - lab0[i2]));
              }
              return results;
            }();
            return chroma2.lab.apply(chroma2, lab);
          };
        } else if (colors2.length === 3) {
          ref1 = function() {
            var len, o2, results;
            results = [];
            for (o2 = 0, len = colors2.length; o2 < len; o2++) {
              c = colors2[o2];
              results.push(c.lab());
            }
            return results;
          }(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];
          I = function(t2) {
            var i2, lab;
            lab = function() {
              var o2, results;
              results = [];
              for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
                results.push((1 - t2) * (1 - t2) * lab0[i2] + 2 * (1 - t2) * t2 * lab1[i2] + t2 * t2 * lab2[i2]);
              }
              return results;
            }();
            return chroma2.lab.apply(chroma2, lab);
          };
        } else if (colors2.length === 4) {
          ref2 = function() {
            var len, o2, results;
            results = [];
            for (o2 = 0, len = colors2.length; o2 < len; o2++) {
              c = colors2[o2];
              results.push(c.lab());
            }
            return results;
          }(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];
          I = function(t2) {
            var i2, lab;
            lab = function() {
              var o2, results;
              results = [];
              for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
                results.push((1 - t2) * (1 - t2) * (1 - t2) * lab0[i2] + 3 * (1 - t2) * (1 - t2) * t2 * lab1[i2] + 3 * (1 - t2) * t2 * t2 * lab2[i2] + t2 * t2 * t2 * lab3[i2]);
              }
              return results;
            }();
            return chroma2.lab.apply(chroma2, lab);
          };
        } else if (colors2.length === 5) {
          I0 = bezier2(colors2.slice(0, 3));
          I1 = bezier2(colors2.slice(2, 5));
          I = function(t2) {
            if (t2 < 0.5) {
              return I0(t2 * 2);
            } else {
              return I1((t2 - 0.5) * 2);
            }
          };
        }
        return I;
      };
      chroma2.bezier = function(colors2) {
        var f3;
        f3 = bezier2(colors2);
        f3.scale = function() {
          return chroma2.scale(f3);
        };
        return f3;
      };
      chroma2.cubehelix = function(start, rotations, hue, gamma, lightness) {
        var dh, dl, f3;
        if (start == null) {
          start = 300;
        }
        if (rotations == null) {
          rotations = -1.5;
        }
        if (hue == null) {
          hue = 1;
        }
        if (gamma == null) {
          gamma = 1;
        }
        if (lightness == null) {
          lightness = [0, 1];
        }
        dh = 0;
        if (type(lightness) === "array") {
          dl = lightness[1] - lightness[0];
        } else {
          dl = 0;
          lightness = [lightness, lightness];
        }
        f3 = function(fract) {
          var a, amp, b, cos_a, g, h2, l, r2, sin_a;
          a = TWOPI * ((start + 120) / 360 + rotations * fract);
          l = pow(lightness[0] + dl * fract, gamma);
          h2 = dh !== 0 ? hue[0] + fract * dh : hue;
          amp = h2 * l * (1 - l) / 2;
          cos_a = cos(a);
          sin_a = sin(a);
          r2 = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);
          g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);
          b = l + amp * (1.97294 * cos_a);
          return chroma2(clip_rgb([r2 * 255, g * 255, b * 255, 1]));
        };
        f3.start = function(s4) {
          if (s4 == null) {
            return start;
          }
          start = s4;
          return f3;
        };
        f3.rotations = function(r2) {
          if (r2 == null) {
            return rotations;
          }
          rotations = r2;
          return f3;
        };
        f3.gamma = function(g) {
          if (g == null) {
            return gamma;
          }
          gamma = g;
          return f3;
        };
        f3.hue = function(h2) {
          if (h2 == null) {
            return hue;
          }
          hue = h2;
          if (type(hue) === "array") {
            dh = hue[1] - hue[0];
            if (dh === 0) {
              hue = hue[1];
            }
          } else {
            dh = 0;
          }
          return f3;
        };
        f3.lightness = function(h2) {
          if (h2 == null) {
            return lightness;
          }
          if (type(h2) === "array") {
            lightness = h2;
            dl = h2[1] - h2[0];
          } else {
            lightness = [h2, h2];
            dl = 0;
          }
          return f3;
        };
        f3.scale = function() {
          return chroma2.scale(f3);
        };
        f3.hue(hue);
        return f3;
      };
      chroma2.random = function() {
        var code, digits, i2, o2;
        digits = "0123456789abcdef";
        code = "#";
        for (i2 = o2 = 0; o2 < 6; i2 = ++o2) {
          code += digits.charAt(floor(Math.random() * 16));
        }
        return new Color5(code);
      };
      _interpolators = [];
      interpolate = function(col1, col2, f3, m3) {
        var interpol, len, o2, res;
        if (f3 == null) {
          f3 = 0.5;
        }
        if (m3 == null) {
          m3 = "rgb";
        }
        if (type(col1) !== "object") {
          col1 = chroma2(col1);
        }
        if (type(col2) !== "object") {
          col2 = chroma2(col2);
        }
        for (o2 = 0, len = _interpolators.length; o2 < len; o2++) {
          interpol = _interpolators[o2];
          if (m3 === interpol[0]) {
            res = interpol[1](col1, col2, f3, m3);
            break;
          }
        }
        if (res == null) {
          throw "color mode " + m3 + " is not supported";
        }
        return res.alpha(col1.alpha() + f3 * (col2.alpha() - col1.alpha()));
      };
      chroma2.interpolate = interpolate;
      Color5.prototype.interpolate = function(col2, f3, m3) {
        return interpolate(this, col2, f3, m3);
      };
      chroma2.mix = interpolate;
      Color5.prototype.mix = Color5.prototype.interpolate;
      _input.rgb = function() {
        var k, ref, results, v;
        ref = unpack(arguments);
        results = [];
        for (k in ref) {
          v = ref[k];
          results.push(v);
        }
        return results;
      };
      chroma2.rgb = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["rgb"]), function() {
        });
      };
      Color5.prototype.rgb = function(round2) {
        if (round2 == null) {
          round2 = true;
        }
        if (round2) {
          return this._rgb.map(Math.round).slice(0, 3);
        } else {
          return this._rgb.slice(0, 3);
        }
      };
      Color5.prototype.rgba = function(round2) {
        if (round2 == null) {
          round2 = true;
        }
        if (!round2) {
          return this._rgb.slice(0);
        }
        return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];
      };
      _guess_formats.push({
        p: 3,
        test: function(n) {
          var a;
          a = unpack(arguments);
          if (type(a) === "array" && a.length === 3) {
            return "rgb";
          }
          if (a.length === 4 && type(a[3]) === "number" && a[3] >= 0 && a[3] <= 1) {
            return "rgb";
          }
        }
      });
      _input.lrgb = _input.rgb;
      interpolate_lrgb = function(col1, col2, f3, m3) {
        var xyz0, xyz1;
        xyz0 = col1._rgb;
        xyz1 = col2._rgb;
        return new Color5(sqrt(pow(xyz0[0], 2) * (1 - f3) + pow(xyz1[0], 2) * f3), sqrt(pow(xyz0[1], 2) * (1 - f3) + pow(xyz1[1], 2) * f3), sqrt(pow(xyz0[2], 2) * (1 - f3) + pow(xyz1[2], 2) * f3), m3);
      };
      _average_lrgb = function(colors2) {
        var col, f3, len, o2, rgb, xyz;
        f3 = 1 / colors2.length;
        xyz = [0, 0, 0, 0];
        for (o2 = 0, len = colors2.length; o2 < len; o2++) {
          col = colors2[o2];
          rgb = col._rgb;
          xyz[0] += pow(rgb[0], 2) * f3;
          xyz[1] += pow(rgb[1], 2) * f3;
          xyz[2] += pow(rgb[2], 2) * f3;
          xyz[3] += rgb[3] * f3;
        }
        xyz[0] = sqrt(xyz[0]);
        xyz[1] = sqrt(xyz[1]);
        xyz[2] = sqrt(xyz[2]);
        if (xyz[3] > 1) {
          xyz[3] = 1;
        }
        return new Color5(clip_rgb(xyz));
      };
      _interpolators.push(["lrgb", interpolate_lrgb]);
      chroma2.average = function(colors2, mode) {
        var A2, alpha2, c, cnt, dx, dy, first, i2, l, len, o2, xyz, xyz2;
        if (mode == null) {
          mode = "rgb";
        }
        l = colors2.length;
        colors2 = colors2.map(function(c2) {
          return chroma2(c2);
        });
        first = colors2.splice(0, 1)[0];
        if (mode === "lrgb") {
          return _average_lrgb(colors2);
        }
        xyz = first.get(mode);
        cnt = [];
        dx = 0;
        dy = 0;
        for (i2 in xyz) {
          xyz[i2] = xyz[i2] || 0;
          cnt.push(isNaN(xyz[i2]) ? 0 : 1);
          if (mode.charAt(i2) === "h" && !isNaN(xyz[i2])) {
            A2 = xyz[i2] / 180 * PI;
            dx += cos(A2);
            dy += sin(A2);
          }
        }
        alpha2 = first.alpha();
        for (o2 = 0, len = colors2.length; o2 < len; o2++) {
          c = colors2[o2];
          xyz2 = c.get(mode);
          alpha2 += c.alpha();
          for (i2 in xyz) {
            if (!isNaN(xyz2[i2])) {
              cnt[i2] += 1;
              if (mode.charAt(i2) === "h") {
                A2 = xyz2[i2] / 180 * PI;
                dx += cos(A2);
                dy += sin(A2);
              } else {
                xyz[i2] += xyz2[i2];
              }
            }
          }
        }
        for (i2 in xyz) {
          if (mode.charAt(i2) === "h") {
            A2 = atan2(dy / cnt[i2], dx / cnt[i2]) / PI * 180;
            while (A2 < 0) {
              A2 += 360;
            }
            while (A2 >= 360) {
              A2 -= 360;
            }
            xyz[i2] = A2;
          } else {
            xyz[i2] = xyz[i2] / cnt[i2];
          }
        }
        return chroma2(xyz, mode).alpha(alpha2 / l);
      };
      hex2rgb = function(hex) {
        var a, b, g, r2, rgb, u;
        if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {
          if (hex.length === 4 || hex.length === 7) {
            hex = hex.substr(1);
          }
          if (hex.length === 3) {
            hex = hex.split("");
            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
          }
          u = parseInt(hex, 16);
          r2 = u >> 16;
          g = u >> 8 & 255;
          b = u & 255;
          return [r2, g, b, 1];
        }
        if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {
          if (hex.length === 9) {
            hex = hex.substr(1);
          }
          u = parseInt(hex, 16);
          r2 = u >> 24 & 255;
          g = u >> 16 & 255;
          b = u >> 8 & 255;
          a = round((u & 255) / 255 * 100) / 100;
          return [r2, g, b, a];
        }
        if (_input.css != null && (rgb = _input.css(hex))) {
          return rgb;
        }
        throw "unknown color: " + hex;
      };
      rgb2hex = function(channels, mode) {
        var a, b, g, hxa, r2, str, u;
        if (mode == null) {
          mode = "auto";
        }
        r2 = channels[0], g = channels[1], b = channels[2], a = channels[3];
        if (mode === "auto") {
          mode = a < 1 ? "rgba" : "rgb";
        }
        r2 = Math.round(r2);
        g = Math.round(g);
        b = Math.round(b);
        u = r2 << 16 | g << 8 | b;
        str = "000000" + u.toString(16);
        str = str.substr(str.length - 6);
        hxa = "0" + round(a * 255).toString(16);
        hxa = hxa.substr(hxa.length - 2);
        return "#" + function() {
          switch (mode.toLowerCase()) {
            case "rgba":
              return str + hxa;
            case "argb":
              return hxa + str;
            default:
              return str;
          }
        }();
      };
      _input.hex = function(h2) {
        return hex2rgb(h2);
      };
      chroma2.hex = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["hex"]), function() {
        });
      };
      Color5.prototype.hex = function(mode) {
        if (mode == null) {
          mode = "auto";
        }
        return rgb2hex(this._rgb, mode);
      };
      _guess_formats.push({
        p: 4,
        test: function(n) {
          if (arguments.length === 1 && type(n) === "string") {
            return "hex";
          }
        }
      });
      hsl2rgb = function() {
        var args, b, c, g, h2, i2, l, o2, r2, ref, s4, t1, t2, t3;
        args = unpack(arguments);
        h2 = args[0], s4 = args[1], l = args[2];
        if (s4 === 0) {
          r2 = g = b = l * 255;
        } else {
          t3 = [0, 0, 0];
          c = [0, 0, 0];
          t2 = l < 0.5 ? l * (1 + s4) : l + s4 - l * s4;
          t1 = 2 * l - t2;
          h2 /= 360;
          t3[0] = h2 + 1 / 3;
          t3[1] = h2;
          t3[2] = h2 - 1 / 3;
          for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
            if (t3[i2] < 0) {
              t3[i2] += 1;
            }
            if (t3[i2] > 1) {
              t3[i2] -= 1;
            }
            if (6 * t3[i2] < 1) {
              c[i2] = t1 + (t2 - t1) * 6 * t3[i2];
            } else if (2 * t3[i2] < 1) {
              c[i2] = t2;
            } else if (3 * t3[i2] < 2) {
              c[i2] = t1 + (t2 - t1) * (2 / 3 - t3[i2]) * 6;
            } else {
              c[i2] = t1;
            }
          }
          ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r2 = ref[0], g = ref[1], b = ref[2];
        }
        if (args.length > 3) {
          return [r2, g, b, args[3]];
        } else {
          return [r2, g, b];
        }
      };
      rgb2hsl = function(r2, g, b) {
        var h2, l, min, ref, s4;
        if (r2 !== void 0 && r2.length >= 3) {
          ref = r2, r2 = ref[0], g = ref[1], b = ref[2];
        }
        r2 /= 255;
        g /= 255;
        b /= 255;
        min = Math.min(r2, g, b);
        max = Math.max(r2, g, b);
        l = (max + min) / 2;
        if (max === min) {
          s4 = 0;
          h2 = Number.NaN;
        } else {
          s4 = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);
        }
        if (r2 === max) {
          h2 = (g - b) / (max - min);
        } else if (g === max) {
          h2 = 2 + (b - r2) / (max - min);
        } else if (b === max) {
          h2 = 4 + (r2 - g) / (max - min);
        }
        h2 *= 60;
        if (h2 < 0) {
          h2 += 360;
        }
        return [h2, s4, l];
      };
      chroma2.hsl = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["hsl"]), function() {
        });
      };
      _input.hsl = hsl2rgb;
      Color5.prototype.hsl = function() {
        return rgb2hsl(this._rgb);
      };
      hsv2rgb = function() {
        var args, b, f3, g, h2, i2, p, q, r2, ref, ref1, ref2, ref3, ref4, ref5, s4, t2, v;
        args = unpack(arguments);
        h2 = args[0], s4 = args[1], v = args[2];
        v *= 255;
        if (s4 === 0) {
          r2 = g = b = v;
        } else {
          if (h2 === 360) {
            h2 = 0;
          }
          if (h2 > 360) {
            h2 -= 360;
          }
          if (h2 < 0) {
            h2 += 360;
          }
          h2 /= 60;
          i2 = floor(h2);
          f3 = h2 - i2;
          p = v * (1 - s4);
          q = v * (1 - s4 * f3);
          t2 = v * (1 - s4 * (1 - f3));
          switch (i2) {
            case 0:
              ref = [v, t2, p], r2 = ref[0], g = ref[1], b = ref[2];
              break;
            case 1:
              ref1 = [q, v, p], r2 = ref1[0], g = ref1[1], b = ref1[2];
              break;
            case 2:
              ref2 = [p, v, t2], r2 = ref2[0], g = ref2[1], b = ref2[2];
              break;
            case 3:
              ref3 = [p, q, v], r2 = ref3[0], g = ref3[1], b = ref3[2];
              break;
            case 4:
              ref4 = [t2, p, v], r2 = ref4[0], g = ref4[1], b = ref4[2];
              break;
            case 5:
              ref5 = [v, p, q], r2 = ref5[0], g = ref5[1], b = ref5[2];
          }
        }
        return [r2, g, b, args.length > 3 ? args[3] : 1];
      };
      rgb2hsv = function() {
        var b, delta, g, h2, min, r2, ref, s4, v;
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        min = Math.min(r2, g, b);
        max = Math.max(r2, g, b);
        delta = max - min;
        v = max / 255;
        if (max === 0) {
          h2 = Number.NaN;
          s4 = 0;
        } else {
          s4 = delta / max;
          if (r2 === max) {
            h2 = (g - b) / delta;
          }
          if (g === max) {
            h2 = 2 + (b - r2) / delta;
          }
          if (b === max) {
            h2 = 4 + (r2 - g) / delta;
          }
          h2 *= 60;
          if (h2 < 0) {
            h2 += 360;
          }
        }
        return [h2, s4, v];
      };
      chroma2.hsv = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["hsv"]), function() {
        });
      };
      _input.hsv = hsv2rgb;
      Color5.prototype.hsv = function() {
        return rgb2hsv(this._rgb);
      };
      num2rgb = function(num) {
        var b, g, r2;
        if (type(num) === "number" && num >= 0 && num <= 16777215) {
          r2 = num >> 16;
          g = num >> 8 & 255;
          b = num & 255;
          return [r2, g, b, 1];
        }
        console.warn("unknown num color: " + num);
        return [0, 0, 0, 1];
      };
      rgb2num = function() {
        var b, g, r2, ref;
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        return (r2 << 16) + (g << 8) + b;
      };
      chroma2.num = function(num) {
        return new Color5(num, "num");
      };
      Color5.prototype.num = function(mode) {
        if (mode == null) {
          mode = "rgb";
        }
        return rgb2num(this._rgb, mode);
      };
      _input.num = num2rgb;
      _guess_formats.push({
        p: 1,
        test: function(n) {
          if (arguments.length === 1 && type(n) === "number" && n >= 0 && n <= 16777215) {
            return "num";
          }
        }
      });
      hcg2rgb = function() {
        var _c, _g, args, b, c, f3, g, h2, i2, p, q, r2, ref, ref1, ref2, ref3, ref4, ref5, t2, v;
        args = unpack(arguments);
        h2 = args[0], c = args[1], _g = args[2];
        c = c / 100;
        g = g / 100 * 255;
        _c = c * 255;
        if (c === 0) {
          r2 = g = b = _g;
        } else {
          if (h2 === 360) {
            h2 = 0;
          }
          if (h2 > 360) {
            h2 -= 360;
          }
          if (h2 < 0) {
            h2 += 360;
          }
          h2 /= 60;
          i2 = floor(h2);
          f3 = h2 - i2;
          p = _g * (1 - c);
          q = p + _c * (1 - f3);
          t2 = p + _c * f3;
          v = p + _c;
          switch (i2) {
            case 0:
              ref = [v, t2, p], r2 = ref[0], g = ref[1], b = ref[2];
              break;
            case 1:
              ref1 = [q, v, p], r2 = ref1[0], g = ref1[1], b = ref1[2];
              break;
            case 2:
              ref2 = [p, v, t2], r2 = ref2[0], g = ref2[1], b = ref2[2];
              break;
            case 3:
              ref3 = [p, q, v], r2 = ref3[0], g = ref3[1], b = ref3[2];
              break;
            case 4:
              ref4 = [t2, p, v], r2 = ref4[0], g = ref4[1], b = ref4[2];
              break;
            case 5:
              ref5 = [v, p, q], r2 = ref5[0], g = ref5[1], b = ref5[2];
          }
        }
        return [r2, g, b, args.length > 3 ? args[3] : 1];
      };
      rgb2hcg = function() {
        var _g, b, c, delta, g, h2, min, r2, ref;
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        min = Math.min(r2, g, b);
        max = Math.max(r2, g, b);
        delta = max - min;
        c = delta * 100 / 255;
        _g = min / (255 - delta) * 100;
        if (delta === 0) {
          h2 = Number.NaN;
        } else {
          if (r2 === max) {
            h2 = (g - b) / delta;
          }
          if (g === max) {
            h2 = 2 + (b - r2) / delta;
          }
          if (b === max) {
            h2 = 4 + (r2 - g) / delta;
          }
          h2 *= 60;
          if (h2 < 0) {
            h2 += 360;
          }
        }
        return [h2, c, _g];
      };
      chroma2.hcg = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["hcg"]), function() {
        });
      };
      _input.hcg = hcg2rgb;
      Color5.prototype.hcg = function() {
        return rgb2hcg(this._rgb);
      };
      css2rgb = function(css57) {
        var aa, ab, hsl, i2, m3, o2, rgb, w;
        css57 = css57.toLowerCase();
        if (chroma2.colors != null && chroma2.colors[css57]) {
          return hex2rgb(chroma2.colors[css57]);
        }
        if (m3 = css57.match(/rgb\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*\)/)) {
          rgb = m3.slice(1, 4);
          for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
            rgb[i2] = +rgb[i2];
          }
          rgb[3] = 1;
        } else if (m3 = css57.match(/rgba\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*,\s*([01]|[01]?\.\d+)\)/)) {
          rgb = m3.slice(1, 5);
          for (i2 = w = 0; w <= 3; i2 = ++w) {
            rgb[i2] = +rgb[i2];
          }
        } else if (m3 = css57.match(/rgb\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)) {
          rgb = m3.slice(1, 4);
          for (i2 = aa = 0; aa <= 2; i2 = ++aa) {
            rgb[i2] = round(rgb[i2] * 2.55);
          }
          rgb[3] = 1;
        } else if (m3 = css57.match(/rgba\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)) {
          rgb = m3.slice(1, 5);
          for (i2 = ab = 0; ab <= 2; i2 = ++ab) {
            rgb[i2] = round(rgb[i2] * 2.55);
          }
          rgb[3] = +rgb[3];
        } else if (m3 = css57.match(/hsl\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)) {
          hsl = m3.slice(1, 4);
          hsl[1] *= 0.01;
          hsl[2] *= 0.01;
          rgb = hsl2rgb(hsl);
          rgb[3] = 1;
        } else if (m3 = css57.match(/hsla\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)) {
          hsl = m3.slice(1, 4);
          hsl[1] *= 0.01;
          hsl[2] *= 0.01;
          rgb = hsl2rgb(hsl);
          rgb[3] = +m3[4];
        }
        return rgb;
      };
      rgb2css = function(rgba) {
        var mode;
        mode = rgba[3] < 1 ? "rgba" : "rgb";
        if (mode === "rgb") {
          return mode + "(" + rgba.slice(0, 3).map(round).join(",") + ")";
        } else if (mode === "rgba") {
          return mode + "(" + rgba.slice(0, 3).map(round).join(",") + "," + rgba[3] + ")";
        } else {
        }
      };
      rnd = function(a) {
        return round(a * 100) / 100;
      };
      hsl2css = function(hsl, alpha2) {
        var mode;
        mode = alpha2 < 1 ? "hsla" : "hsl";
        hsl[0] = rnd(hsl[0] || 0);
        hsl[1] = rnd(hsl[1] * 100) + "%";
        hsl[2] = rnd(hsl[2] * 100) + "%";
        if (mode === "hsla") {
          hsl[3] = alpha2;
        }
        return mode + "(" + hsl.join(",") + ")";
      };
      _input.css = function(h2) {
        return css2rgb(h2);
      };
      chroma2.css = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["css"]), function() {
        });
      };
      Color5.prototype.css = function(mode) {
        if (mode == null) {
          mode = "rgb";
        }
        if (mode.slice(0, 3) === "rgb") {
          return rgb2css(this._rgb);
        } else if (mode.slice(0, 3) === "hsl") {
          return hsl2css(this.hsl(), this.alpha());
        }
      };
      _input.named = function(name2) {
        return hex2rgb(w3cx11[name2]);
      };
      _guess_formats.push({
        p: 5,
        test: function(n) {
          if (arguments.length === 1 && w3cx11[n] != null) {
            return "named";
          }
        }
      });
      Color5.prototype.name = function(n) {
        var h2, k;
        if (arguments.length) {
          if (w3cx11[n]) {
            this._rgb = hex2rgb(w3cx11[n]);
          }
          this._rgb[3] = 1;
          this;
        }
        h2 = this.hex("rgb");
        for (k in w3cx11) {
          if (h2 === w3cx11[k]) {
            return k;
          }
        }
        return h2;
      };
      lch2lab = function() {
        var c, h2, l, ref;
        ref = unpack(arguments), l = ref[0], c = ref[1], h2 = ref[2];
        h2 = h2 * DEG2RAD;
        return [l, cos(h2) * c, sin(h2) * c];
      };
      lch2rgb = function() {
        var L, a, args, b, c, g, h2, l, r2, ref, ref1;
        args = unpack(arguments);
        l = args[0], c = args[1], h2 = args[2];
        ref = lch2lab(l, c, h2), L = ref[0], a = ref[1], b = ref[2];
        ref1 = lab2rgb(L, a, b), r2 = ref1[0], g = ref1[1], b = ref1[2];
        return [r2, g, b, args.length > 3 ? args[3] : 1];
      };
      lab2lch = function() {
        var a, b, c, h2, l, ref;
        ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];
        c = sqrt(a * a + b * b);
        h2 = (atan2(b, a) * RAD2DEG + 360) % 360;
        if (round(c * 1e4) === 0) {
          h2 = Number.NaN;
        }
        return [l, c, h2];
      };
      rgb2lch = function() {
        var a, b, g, l, r2, ref, ref1;
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        ref1 = rgb2lab(r2, g, b), l = ref1[0], a = ref1[1], b = ref1[2];
        return lab2lch(l, a, b);
      };
      chroma2.lch = function() {
        var args;
        args = unpack(arguments);
        return new Color5(args, "lch");
      };
      chroma2.hcl = function() {
        var args;
        args = unpack(arguments);
        return new Color5(args, "hcl");
      };
      _input.lch = lch2rgb;
      _input.hcl = function() {
        var c, h2, l, ref;
        ref = unpack(arguments), h2 = ref[0], c = ref[1], l = ref[2];
        return lch2rgb([l, c, h2]);
      };
      Color5.prototype.lch = function() {
        return rgb2lch(this._rgb);
      };
      Color5.prototype.hcl = function() {
        return rgb2lch(this._rgb).reverse();
      };
      rgb2cmyk = function(mode) {
        var b, c, f3, g, k, m3, r2, ref, y;
        if (mode == null) {
          mode = "rgb";
        }
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        r2 = r2 / 255;
        g = g / 255;
        b = b / 255;
        k = 1 - Math.max(r2, Math.max(g, b));
        f3 = k < 1 ? 1 / (1 - k) : 0;
        c = (1 - r2 - k) * f3;
        m3 = (1 - g - k) * f3;
        y = (1 - b - k) * f3;
        return [c, m3, y, k];
      };
      cmyk2rgb = function() {
        var alpha2, args, b, c, g, k, m3, r2, y;
        args = unpack(arguments);
        c = args[0], m3 = args[1], y = args[2], k = args[3];
        alpha2 = args.length > 4 ? args[4] : 1;
        if (k === 1) {
          return [0, 0, 0, alpha2];
        }
        r2 = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);
        g = m3 >= 1 ? 0 : 255 * (1 - m3) * (1 - k);
        b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);
        return [r2, g, b, alpha2];
      };
      _input.cmyk = function() {
        return cmyk2rgb(unpack(arguments));
      };
      chroma2.cmyk = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["cmyk"]), function() {
        });
      };
      Color5.prototype.cmyk = function() {
        return rgb2cmyk(this._rgb);
      };
      _input.gl = function() {
        var i2, k, o2, rgb, v;
        rgb = function() {
          var ref, results;
          ref = unpack(arguments);
          results = [];
          for (k in ref) {
            v = ref[k];
            results.push(v);
          }
          return results;
        }.apply(this, arguments);
        for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
          rgb[i2] *= 255;
        }
        return rgb;
      };
      chroma2.gl = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["gl"]), function() {
        });
      };
      Color5.prototype.gl = function() {
        var rgb;
        rgb = this._rgb;
        return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];
      };
      rgb2luminance = function(r2, g, b) {
        var ref;
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        r2 = luminance_x(r2);
        g = luminance_x(g);
        b = luminance_x(b);
        return 0.2126 * r2 + 0.7152 * g + 0.0722 * b;
      };
      luminance_x = function(x2) {
        x2 /= 255;
        if (x2 <= 0.03928) {
          return x2 / 12.92;
        } else {
          return pow((x2 + 0.055) / 1.055, 2.4);
        }
      };
      interpolate_rgb = function(col1, col2, f3, m3) {
        var xyz0, xyz1;
        xyz0 = col1._rgb;
        xyz1 = col2._rgb;
        return new Color5(xyz0[0] + f3 * (xyz1[0] - xyz0[0]), xyz0[1] + f3 * (xyz1[1] - xyz0[1]), xyz0[2] + f3 * (xyz1[2] - xyz0[2]), m3);
      };
      _interpolators.push(["rgb", interpolate_rgb]);
      Color5.prototype.luminance = function(lum, mode) {
        var cur_lum, eps, max_iter, rgba, test;
        if (mode == null) {
          mode = "rgb";
        }
        if (!arguments.length) {
          return rgb2luminance(this._rgb);
        }
        rgba = this._rgb;
        if (lum === 0) {
          rgba = [0, 0, 0, this._rgb[3]];
        } else if (lum === 1) {
          rgba = [255, 255, 255, this[3]];
        } else {
          cur_lum = rgb2luminance(this._rgb);
          eps = 1e-7;
          max_iter = 20;
          test = function(l, h2) {
            var lm, m3;
            m3 = l.interpolate(h2, 0.5, mode);
            lm = m3.luminance();
            if (Math.abs(lum - lm) < eps || !max_iter--) {
              return m3;
            }
            if (lm > lum) {
              return test(l, m3);
            }
            return test(m3, h2);
          };
          if (cur_lum > lum) {
            rgba = test(chroma2("black"), this).rgba();
          } else {
            rgba = test(this, chroma2("white")).rgba();
          }
        }
        return chroma2(rgba).alpha(this.alpha());
      };
      temperature2rgb = function(kelvin) {
        var b, g, r2, temp;
        temp = kelvin / 100;
        if (temp < 66) {
          r2 = 255;
          g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);
          b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);
        } else {
          r2 = 351.97690566805693 + 0.114206453784165 * (r2 = temp - 55) - 40.25366309332127 * log(r2);
          g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);
          b = 255;
        }
        return [r2, g, b];
      };
      rgb2temperature = function() {
        var b, eps, g, maxTemp, minTemp, r2, ref, rgb, temp;
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        minTemp = 1e3;
        maxTemp = 4e4;
        eps = 0.4;
        while (maxTemp - minTemp > eps) {
          temp = (maxTemp + minTemp) * 0.5;
          rgb = temperature2rgb(temp);
          if (rgb[2] / rgb[0] >= b / r2) {
            maxTemp = temp;
          } else {
            minTemp = temp;
          }
        }
        return round(temp);
      };
      chroma2.temperature = chroma2.kelvin = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["temperature"]), function() {
        });
      };
      _input.temperature = _input.kelvin = _input.K = temperature2rgb;
      Color5.prototype.temperature = function() {
        return rgb2temperature(this._rgb);
      };
      Color5.prototype.kelvin = Color5.prototype.temperature;
      chroma2.contrast = function(a, b) {
        var l1, l2, ref, ref1;
        if ((ref = type(a)) === "string" || ref === "number") {
          a = new Color5(a);
        }
        if ((ref1 = type(b)) === "string" || ref1 === "number") {
          b = new Color5(b);
        }
        l1 = a.luminance();
        l2 = b.luminance();
        if (l1 > l2) {
          return (l1 + 0.05) / (l2 + 0.05);
        } else {
          return (l2 + 0.05) / (l1 + 0.05);
        }
      };
      chroma2.distance = function(a, b, mode) {
        var d, i2, l1, l2, ref, ref1, sum_sq;
        if (mode == null) {
          mode = "lab";
        }
        if ((ref = type(a)) === "string" || ref === "number") {
          a = new Color5(a);
        }
        if ((ref1 = type(b)) === "string" || ref1 === "number") {
          b = new Color5(b);
        }
        l1 = a.get(mode);
        l2 = b.get(mode);
        sum_sq = 0;
        for (i2 in l1) {
          d = (l1[i2] || 0) - (l2[i2] || 0);
          sum_sq += d * d;
        }
        return Math.sqrt(sum_sq);
      };
      chroma2.deltaE = function(a, b, L, C) {
        var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f3, h1, ref, ref1, ref2, ref3, sc, sh, sl, t2, v1, v2, v3;
        if (L == null) {
          L = 1;
        }
        if (C == null) {
          C = 1;
        }
        if ((ref = type(a)) === "string" || ref === "number") {
          a = new Color5(a);
        }
        if ((ref1 = type(b)) === "string" || ref1 === "number") {
          b = new Color5(b);
        }
        ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];
        ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];
        c1 = sqrt(a1 * a1 + b1 * b1);
        c2 = sqrt(a2 * a2 + b2 * b2);
        sl = L1 < 16 ? 0.511 : 0.040975 * L1 / (1 + 0.01765 * L1);
        sc = 0.0638 * c1 / (1 + 0.0131 * c1) + 0.638;
        h1 = c1 < 1e-6 ? 0 : atan2(b1, a1) * 180 / PI;
        while (h1 < 0) {
          h1 += 360;
        }
        while (h1 >= 360) {
          h1 -= 360;
        }
        t2 = h1 >= 164 && h1 <= 345 ? 0.56 + abs(0.2 * cos(PI * (h1 + 168) / 180)) : 0.36 + abs(0.4 * cos(PI * (h1 + 35) / 180));
        c4 = c1 * c1 * c1 * c1;
        f3 = sqrt(c4 / (c4 + 1900));
        sh = sc * (f3 * t2 + 1 - f3);
        delL = L1 - L2;
        delC = c1 - c2;
        delA = a1 - a2;
        delB = b1 - b2;
        dH2 = delA * delA + delB * delB - delC * delC;
        v1 = delL / (L * sl);
        v2 = delC / (C * sc);
        v3 = sh;
        return sqrt(v1 * v1 + v2 * v2 + dH2 / (v3 * v3));
      };
      Color5.prototype.get = function(modechan) {
        var channel, i2, me, mode, ref, src;
        me = this;
        ref = modechan.split("."), mode = ref[0], channel = ref[1];
        src = me[mode]();
        if (channel) {
          i2 = mode.indexOf(channel);
          if (i2 > -1) {
            return src[i2];
          } else {
            return console.warn("unknown channel " + channel + " in mode " + mode);
          }
        } else {
          return src;
        }
      };
      Color5.prototype.set = function(modechan, value) {
        var channel, i2, me, mode, ref, src;
        me = this;
        ref = modechan.split("."), mode = ref[0], channel = ref[1];
        if (channel) {
          src = me[mode]();
          i2 = mode.indexOf(channel);
          if (i2 > -1) {
            if (type(value) === "string") {
              switch (value.charAt(0)) {
                case "+":
                  src[i2] += +value;
                  break;
                case "-":
                  src[i2] += +value;
                  break;
                case "*":
                  src[i2] *= +value.substr(1);
                  break;
                case "/":
                  src[i2] /= +value.substr(1);
                  break;
                default:
                  src[i2] = +value;
              }
            } else {
              src[i2] = value;
            }
          } else {
            console.warn("unknown channel " + channel + " in mode " + mode);
          }
        } else {
          src = value;
        }
        return chroma2(src, mode).alpha(me.alpha());
      };
      Color5.prototype.clipped = function() {
        return this._rgb._clipped || false;
      };
      Color5.prototype.alpha = function(a) {
        if (arguments.length) {
          return chroma2.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);
        }
        return this._rgb[3];
      };
      Color5.prototype.darken = function(amount) {
        var lab, me;
        if (amount == null) {
          amount = 1;
        }
        me = this;
        lab = me.lab();
        lab[0] -= LAB_CONSTANTS.Kn * amount;
        return chroma2.lab(lab).alpha(me.alpha());
      };
      Color5.prototype.brighten = function(amount) {
        if (amount == null) {
          amount = 1;
        }
        return this.darken(-amount);
      };
      Color5.prototype.darker = Color5.prototype.darken;
      Color5.prototype.brighter = Color5.prototype.brighten;
      Color5.prototype.saturate = function(amount) {
        var lch, me;
        if (amount == null) {
          amount = 1;
        }
        me = this;
        lch = me.lch();
        lch[1] += amount * LAB_CONSTANTS.Kn;
        if (lch[1] < 0) {
          lch[1] = 0;
        }
        return chroma2.lch(lch).alpha(me.alpha());
      };
      Color5.prototype.desaturate = function(amount) {
        if (amount == null) {
          amount = 1;
        }
        return this.saturate(-amount);
      };
      Color5.prototype.premultiply = function() {
        var a, rgb;
        rgb = this.rgb();
        a = this.alpha();
        return chroma2(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);
      };
      blend = function(bottom, top, mode) {
        if (!blend[mode]) {
          throw "unknown blend mode " + mode;
        }
        return blend[mode](bottom, top);
      };
      blend_f = function(f3) {
        return function(bottom, top) {
          var c0, c1;
          c0 = chroma2(top).rgb();
          c1 = chroma2(bottom).rgb();
          return chroma2(f3(c0, c1), "rgb");
        };
      };
      each2 = function(f3) {
        return function(c0, c1) {
          var i2, o2, out;
          out = [];
          for (i2 = o2 = 0; o2 <= 3; i2 = ++o2) {
            out[i2] = f3(c0[i2], c1[i2]);
          }
          return out;
        };
      };
      normal = function(a, b) {
        return a;
      };
      multiply = function(a, b) {
        return a * b / 255;
      };
      darken = function(a, b) {
        if (a > b) {
          return b;
        } else {
          return a;
        }
      };
      lighten = function(a, b) {
        if (a > b) {
          return a;
        } else {
          return b;
        }
      };
      screen = function(a, b) {
        return 255 * (1 - (1 - a / 255) * (1 - b / 255));
      };
      overlay = function(a, b) {
        if (b < 128) {
          return 2 * a * b / 255;
        } else {
          return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));
        }
      };
      burn = function(a, b) {
        return 255 * (1 - (1 - b / 255) / (a / 255));
      };
      dodge = function(a, b) {
        if (a === 255) {
          return 255;
        }
        a = 255 * (b / 255) / (1 - a / 255);
        if (a > 255) {
          return 255;
        } else {
          return a;
        }
      };
      blend.normal = blend_f(each2(normal));
      blend.multiply = blend_f(each2(multiply));
      blend.screen = blend_f(each2(screen));
      blend.overlay = blend_f(each2(overlay));
      blend.darken = blend_f(each2(darken));
      blend.lighten = blend_f(each2(lighten));
      blend.dodge = blend_f(each2(dodge));
      blend.burn = blend_f(each2(burn));
      chroma2.blend = blend;
      chroma2.analyze = function(data2) {
        var len, o2, r2, val;
        r2 = {
          min: Number.MAX_VALUE,
          max: Number.MAX_VALUE * -1,
          sum: 0,
          values: [],
          count: 0
        };
        for (o2 = 0, len = data2.length; o2 < len; o2++) {
          val = data2[o2];
          if (val != null && !isNaN(val)) {
            r2.values.push(val);
            r2.sum += val;
            if (val < r2.min) {
              r2.min = val;
            }
            if (val > r2.max) {
              r2.max = val;
            }
            r2.count += 1;
          }
        }
        r2.domain = [r2.min, r2.max];
        r2.limits = function(mode, num) {
          return chroma2.limits(r2, mode, num);
        };
        return r2;
      };
      chroma2.scale = function(colors2, positions) {
        var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f3, getClass, getColor, resetCache, setColors, tmap;
        _mode = "rgb";
        _nacol = chroma2("#ccc");
        _spread = 0;
        _fixed = false;
        _domain = [0, 1];
        _pos = [];
        _padding = [0, 0];
        _classes = false;
        _colors = [];
        _out = false;
        _min = 0;
        _max = 1;
        _correctLightness = false;
        _colorCache = {};
        _useCache = true;
        _gamma = 1;
        setColors = function(colors3) {
          var c, col, o2, ref, ref1, w;
          if (colors3 == null) {
            colors3 = ["#fff", "#000"];
          }
          if (colors3 != null && type(colors3) === "string" && chroma2.brewer != null) {
            colors3 = chroma2.brewer[colors3] || chroma2.brewer[colors3.toLowerCase()] || colors3;
          }
          if (type(colors3) === "array") {
            if (colors3.length === 1) {
              colors3 = [colors3[0], colors3[0]];
            }
            colors3 = colors3.slice(0);
            for (c = o2 = 0, ref = colors3.length - 1; 0 <= ref ? o2 <= ref : o2 >= ref; c = 0 <= ref ? ++o2 : --o2) {
              col = colors3[c];
              if (type(col) === "string") {
                colors3[c] = chroma2(col);
              }
            }
            _pos.length = 0;
            for (c = w = 0, ref1 = colors3.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {
              _pos.push(c / (colors3.length - 1));
            }
          }
          resetCache();
          return _colors = colors3;
        };
        getClass = function(value) {
          var i2, n;
          if (_classes != null) {
            n = _classes.length - 1;
            i2 = 0;
            while (i2 < n && value >= _classes[i2]) {
              i2++;
            }
            return i2 - 1;
          }
          return 0;
        };
        tmap = function(t2) {
          return t2;
        };
        classifyValue = function(value) {
          var i2, maxc, minc, n, val;
          val = value;
          if (_classes.length > 2) {
            n = _classes.length - 1;
            i2 = getClass(value);
            minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);
            maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);
            val = _min + (_classes[i2] + (_classes[i2 + 1] - _classes[i2]) * 0.5 - minc) / (maxc - minc) * (_max - _min);
          }
          return val;
        };
        getColor = function(val, bypassMap) {
          var c, col, i2, k, o2, p, ref, t2;
          if (bypassMap == null) {
            bypassMap = false;
          }
          if (isNaN(val) || val === null) {
            return _nacol;
          }
          if (!bypassMap) {
            if (_classes && _classes.length > 2) {
              c = getClass(val);
              t2 = c / (_classes.length - 2);
            } else if (_max !== _min) {
              t2 = (val - _min) / (_max - _min);
            } else {
              t2 = 1;
            }
          } else {
            t2 = val;
          }
          if (!bypassMap) {
            t2 = tmap(t2);
          }
          if (_gamma !== 1) {
            t2 = pow(t2, _gamma);
          }
          t2 = _padding[0] + t2 * (1 - _padding[0] - _padding[1]);
          t2 = Math.min(1, Math.max(0, t2));
          k = Math.floor(t2 * 1e4);
          if (_useCache && _colorCache[k]) {
            col = _colorCache[k];
          } else {
            if (type(_colors) === "array") {
              for (i2 = o2 = 0, ref = _pos.length - 1; 0 <= ref ? o2 <= ref : o2 >= ref; i2 = 0 <= ref ? ++o2 : --o2) {
                p = _pos[i2];
                if (t2 <= p) {
                  col = _colors[i2];
                  break;
                }
                if (t2 >= p && i2 === _pos.length - 1) {
                  col = _colors[i2];
                  break;
                }
                if (t2 > p && t2 < _pos[i2 + 1]) {
                  t2 = (t2 - p) / (_pos[i2 + 1] - p);
                  col = chroma2.interpolate(_colors[i2], _colors[i2 + 1], t2, _mode);
                  break;
                }
              }
            } else if (type(_colors) === "function") {
              col = _colors(t2);
            }
            if (_useCache) {
              _colorCache[k] = col;
            }
          }
          return col;
        };
        resetCache = function() {
          return _colorCache = {};
        };
        setColors(colors2);
        f3 = function(v) {
          var c;
          c = chroma2(getColor(v));
          if (_out && c[_out]) {
            return c[_out]();
          } else {
            return c;
          }
        };
        f3.classes = function(classes) {
          var d;
          if (classes != null) {
            if (type(classes) === "array") {
              _classes = classes;
              _domain = [classes[0], classes[classes.length - 1]];
            } else {
              d = chroma2.analyze(_domain);
              if (classes === 0) {
                _classes = [d.min, d.max];
              } else {
                _classes = chroma2.limits(d, "e", classes);
              }
            }
            return f3;
          }
          return _classes;
        };
        f3.domain = function(domain) {
          var c, d, k, len, o2, ref, w;
          if (!arguments.length) {
            return _domain;
          }
          _min = domain[0];
          _max = domain[domain.length - 1];
          _pos = [];
          k = _colors.length;
          if (domain.length === k && _min !== _max) {
            for (o2 = 0, len = domain.length; o2 < len; o2++) {
              d = domain[o2];
              _pos.push((d - _min) / (_max - _min));
            }
          } else {
            for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {
              _pos.push(c / (k - 1));
            }
          }
          _domain = [_min, _max];
          return f3;
        };
        f3.mode = function(_m) {
          if (!arguments.length) {
            return _mode;
          }
          _mode = _m;
          resetCache();
          return f3;
        };
        f3.range = function(colors3, _pos2) {
          setColors(colors3, _pos2);
          return f3;
        };
        f3.out = function(_o) {
          _out = _o;
          return f3;
        };
        f3.spread = function(val) {
          if (!arguments.length) {
            return _spread;
          }
          _spread = val;
          return f3;
        };
        f3.correctLightness = function(v) {
          if (v == null) {
            v = true;
          }
          _correctLightness = v;
          resetCache();
          if (_correctLightness) {
            tmap = function(t2) {
              var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;
              L0 = getColor(0, true).lab()[0];
              L1 = getColor(1, true).lab()[0];
              pol = L0 > L1;
              L_actual = getColor(t2, true).lab()[0];
              L_ideal = L0 + (L1 - L0) * t2;
              L_diff = L_actual - L_ideal;
              t0 = 0;
              t1 = 1;
              max_iter = 20;
              while (Math.abs(L_diff) > 0.01 && max_iter-- > 0) {
                (function() {
                  if (pol) {
                    L_diff *= -1;
                  }
                  if (L_diff < 0) {
                    t0 = t2;
                    t2 += (t1 - t2) * 0.5;
                  } else {
                    t1 = t2;
                    t2 += (t0 - t2) * 0.5;
                  }
                  L_actual = getColor(t2, true).lab()[0];
                  return L_diff = L_actual - L_ideal;
                })();
              }
              return t2;
            };
          } else {
            tmap = function(t2) {
              return t2;
            };
          }
          return f3;
        };
        f3.padding = function(p) {
          if (p != null) {
            if (type(p) === "number") {
              p = [p, p];
            }
            _padding = p;
            return f3;
          } else {
            return _padding;
          }
        };
        f3.colors = function(numColors2, out) {
          var dd, dm, i2, o2, ref, result, results, samples, w;
          if (arguments.length < 2) {
            out = "hex";
          }
          result = [];
          if (arguments.length === 0) {
            result = _colors.slice(0);
          } else if (numColors2 === 1) {
            result = [f3(0.5)];
          } else if (numColors2 > 1) {
            dm = _domain[0];
            dd = _domain[1] - dm;
            result = function() {
              results = [];
              for (var o3 = 0; 0 <= numColors2 ? o3 < numColors2 : o3 > numColors2; 0 <= numColors2 ? o3++ : o3--) {
                results.push(o3);
              }
              return results;
            }.apply(this).map(function(i3) {
              return f3(dm + i3 / (numColors2 - 1) * dd);
            });
          } else {
            colors2 = [];
            samples = [];
            if (_classes && _classes.length > 2) {
              for (i2 = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i2 = 1 <= ref ? ++w : --w) {
                samples.push((_classes[i2 - 1] + _classes[i2]) * 0.5);
              }
            } else {
              samples = _domain;
            }
            result = samples.map(function(v) {
              return f3(v);
            });
          }
          if (chroma2[out]) {
            result = result.map(function(c) {
              return c[out]();
            });
          }
          return result;
        };
        f3.cache = function(c) {
          if (c != null) {
            _useCache = c;
            return f3;
          } else {
            return _useCache;
          }
        };
        f3.gamma = function(g) {
          if (g != null) {
            _gamma = g;
            return f3;
          } else {
            return _gamma;
          }
        };
        f3.nodata = function(d) {
          if (d != null) {
            _nacol = chroma2(d);
            return f3;
          } else {
            return _nacol;
          }
        };
        return f3;
      };
      if (chroma2.scales == null) {
        chroma2.scales = {};
      }
      chroma2.scales.cool = function() {
        return chroma2.scale([chroma2.hsl(180, 1, 0.9), chroma2.hsl(250, 0.7, 0.4)]);
      };
      chroma2.scales.hot = function() {
        return chroma2.scale(["#000", "#f00", "#ff0", "#fff"], [0, 0.25, 0.75, 1]).mode("rgb");
      };
      chroma2.analyze = function(data2, key, filter) {
        var add, k, len, o2, r2, val, visit;
        r2 = {
          min: Number.MAX_VALUE,
          max: Number.MAX_VALUE * -1,
          sum: 0,
          values: [],
          count: 0
        };
        if (filter == null) {
          filter = function() {
            return true;
          };
        }
        add = function(val2) {
          if (val2 != null && !isNaN(val2)) {
            r2.values.push(val2);
            r2.sum += val2;
            if (val2 < r2.min) {
              r2.min = val2;
            }
            if (val2 > r2.max) {
              r2.max = val2;
            }
            r2.count += 1;
          }
        };
        visit = function(val2, k2) {
          if (filter(val2, k2)) {
            if (key != null && type(key) === "function") {
              return add(key(val2));
            } else if (key != null && type(key) === "string" || type(key) === "number") {
              return add(val2[key]);
            } else {
              return add(val2);
            }
          }
        };
        if (type(data2) === "array") {
          for (o2 = 0, len = data2.length; o2 < len; o2++) {
            val = data2[o2];
            visit(val);
          }
        } else {
          for (k in data2) {
            val = data2[k];
            visit(val, k);
          }
        }
        r2.domain = [r2.min, r2.max];
        r2.limits = function(mode, num) {
          return chroma2.limits(r2, mode, num);
        };
        return r2;
      };
      chroma2.limits = function(data2, mode, num) {
        var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist2, i2, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o2, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;
        if (mode == null) {
          mode = "equal";
        }
        if (num == null) {
          num = 7;
        }
        if (type(data2) === "array") {
          data2 = chroma2.analyze(data2);
        }
        min = data2.min;
        max = data2.max;
        sum = data2.sum;
        values = data2.values.sort(function(a, b) {
          return a - b;
        });
        if (num === 1) {
          return [min, max];
        }
        limits = [];
        if (mode.substr(0, 1) === "c") {
          limits.push(min);
          limits.push(max);
        }
        if (mode.substr(0, 1) === "e") {
          limits.push(min);
          for (i2 = o2 = 1, ref = num - 1; 1 <= ref ? o2 <= ref : o2 >= ref; i2 = 1 <= ref ? ++o2 : --o2) {
            limits.push(min + i2 / num * (max - min));
          }
          limits.push(max);
        } else if (mode.substr(0, 1) === "l") {
          if (min <= 0) {
            throw "Logarithmic scales are only possible for values > 0";
          }
          min_log = Math.LOG10E * log(min);
          max_log = Math.LOG10E * log(max);
          limits.push(min);
          for (i2 = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i2 = 1 <= ref1 ? ++w : --w) {
            limits.push(pow(10, min_log + i2 / num * (max_log - min_log)));
          }
          limits.push(max);
        } else if (mode.substr(0, 1) === "q") {
          limits.push(min);
          for (i2 = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i2 = 1 <= ref2 ? ++aa : --aa) {
            p = (values.length - 1) * i2 / num;
            pb = floor(p);
            if (pb === p) {
              limits.push(values[pb]);
            } else {
              pr = p - pb;
              limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);
            }
          }
          limits.push(max);
        } else if (mode.substr(0, 1) === "k") {
          n = values.length;
          assignments = new Array(n);
          clusterSizes = new Array(num);
          repeat = true;
          nb_iters = 0;
          centroids = null;
          centroids = [];
          centroids.push(min);
          for (i2 = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i2 = 1 <= ref3 ? ++ab : --ab) {
            centroids.push(min + i2 / num * (max - min));
          }
          centroids.push(max);
          while (repeat) {
            for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {
              clusterSizes[j] = 0;
            }
            for (i2 = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i2 = 0 <= ref5 ? ++ad : --ad) {
              value = values[i2];
              mindist = Number.MAX_VALUE;
              for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {
                dist2 = abs(centroids[j] - value);
                if (dist2 < mindist) {
                  mindist = dist2;
                  best = j;
                }
              }
              clusterSizes[best]++;
              assignments[i2] = best;
            }
            newCentroids = new Array(num);
            for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {
              newCentroids[j] = null;
            }
            for (i2 = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i2 = 0 <= ref8 ? ++ag : --ag) {
              cluster = assignments[i2];
              if (newCentroids[cluster] === null) {
                newCentroids[cluster] = values[i2];
              } else {
                newCentroids[cluster] += values[i2];
              }
            }
            for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {
              newCentroids[j] *= 1 / clusterSizes[j];
            }
            repeat = false;
            for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {
              if (newCentroids[j] !== centroids[i2]) {
                repeat = true;
                break;
              }
            }
            centroids = newCentroids;
            nb_iters++;
            if (nb_iters > 200) {
              repeat = false;
            }
          }
          kClusters = {};
          for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {
            kClusters[j] = [];
          }
          for (i2 = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i2 = 0 <= ref12 ? ++ak : --ak) {
            cluster = assignments[i2];
            kClusters[cluster].push(values[i2]);
          }
          tmpKMeansBreaks = [];
          for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {
            tmpKMeansBreaks.push(kClusters[j][0]);
            tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);
          }
          tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {
            return a - b;
          });
          limits.push(tmpKMeansBreaks[0]);
          for (i2 = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i2 = am += 2) {
            v = tmpKMeansBreaks[i2];
            if (!isNaN(v) && limits.indexOf(v) === -1) {
              limits.push(v);
            }
          }
        }
        return limits;
      };
      hsi2rgb = function(h2, s4, i2) {
        var args, b, g, r2;
        args = unpack(arguments);
        h2 = args[0], s4 = args[1], i2 = args[2];
        if (isNaN(h2)) {
          h2 = 0;
        }
        h2 /= 360;
        if (h2 < 1 / 3) {
          b = (1 - s4) / 3;
          r2 = (1 + s4 * cos(TWOPI * h2) / cos(PITHIRD - TWOPI * h2)) / 3;
          g = 1 - (b + r2);
        } else if (h2 < 2 / 3) {
          h2 -= 1 / 3;
          r2 = (1 - s4) / 3;
          g = (1 + s4 * cos(TWOPI * h2) / cos(PITHIRD - TWOPI * h2)) / 3;
          b = 1 - (r2 + g);
        } else {
          h2 -= 2 / 3;
          g = (1 - s4) / 3;
          b = (1 + s4 * cos(TWOPI * h2) / cos(PITHIRD - TWOPI * h2)) / 3;
          r2 = 1 - (g + b);
        }
        r2 = limit(i2 * r2 * 3);
        g = limit(i2 * g * 3);
        b = limit(i2 * b * 3);
        return [r2 * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];
      };
      rgb2hsi = function() {
        var b, g, h2, i2, min, r2, ref, s4;
        ref = unpack(arguments), r2 = ref[0], g = ref[1], b = ref[2];
        TWOPI = Math.PI * 2;
        r2 /= 255;
        g /= 255;
        b /= 255;
        min = Math.min(r2, g, b);
        i2 = (r2 + g + b) / 3;
        s4 = 1 - min / i2;
        if (s4 === 0) {
          h2 = 0;
        } else {
          h2 = (r2 - g + (r2 - b)) / 2;
          h2 /= Math.sqrt((r2 - g) * (r2 - g) + (r2 - b) * (g - b));
          h2 = Math.acos(h2);
          if (b > g) {
            h2 = TWOPI - h2;
          }
          h2 /= TWOPI;
        }
        return [h2 * 360, s4, i2];
      };
      chroma2.hsi = function() {
        return function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor(), result = func.apply(child, args);
          return Object(result) === result ? result : child;
        }(Color5, slice.call(arguments).concat(["hsi"]), function() {
        });
      };
      _input.hsi = hsi2rgb;
      Color5.prototype.hsi = function() {
        return rgb2hsi(this._rgb);
      };
      interpolate_hsx = function(col1, col2, f3, m3) {
        var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;
        if (m3 === "hsl") {
          xyz0 = col1.hsl();
          xyz1 = col2.hsl();
        } else if (m3 === "hsv") {
          xyz0 = col1.hsv();
          xyz1 = col2.hsv();
        } else if (m3 === "hcg") {
          xyz0 = col1.hcg();
          xyz1 = col2.hcg();
        } else if (m3 === "hsi") {
          xyz0 = col1.hsi();
          xyz1 = col2.hsi();
        } else if (m3 === "lch" || m3 === "hcl") {
          m3 = "hcl";
          xyz0 = col1.hcl();
          xyz1 = col2.hcl();
        }
        if (m3.substr(0, 1) === "h") {
          hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];
          hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];
        }
        if (!isNaN(hue0) && !isNaN(hue1)) {
          if (hue1 > hue0 && hue1 - hue0 > 180) {
            dh = hue1 - (hue0 + 360);
          } else if (hue1 < hue0 && hue0 - hue1 > 180) {
            dh = hue1 + 360 - hue0;
          } else {
            dh = hue1 - hue0;
          }
          hue = hue0 + f3 * dh;
        } else if (!isNaN(hue0)) {
          hue = hue0;
          if ((lbv1 === 1 || lbv1 === 0) && m3 !== "hsv") {
            sat = sat0;
          }
        } else if (!isNaN(hue1)) {
          hue = hue1;
          if ((lbv0 === 1 || lbv0 === 0) && m3 !== "hsv") {
            sat = sat1;
          }
        } else {
          hue = Number.NaN;
        }
        if (sat == null) {
          sat = sat0 + f3 * (sat1 - sat0);
        }
        lbv = lbv0 + f3 * (lbv1 - lbv0);
        return res = chroma2[m3](hue, sat, lbv);
      };
      _interpolators = _interpolators.concat(function() {
        var len, o2, ref, results;
        ref = ["hsv", "hsl", "hsi", "hcl", "lch", "hcg"];
        results = [];
        for (o2 = 0, len = ref.length; o2 < len; o2++) {
          m2 = ref[o2];
          results.push([m2, interpolate_hsx]);
        }
        return results;
      }());
      interpolate_num = function(col1, col2, f3, m3) {
        var n1, n2;
        n1 = col1.num();
        n2 = col2.num();
        return chroma2.num(n1 + (n2 - n1) * f3, "num");
      };
      _interpolators.push(["num", interpolate_num]);
      interpolate_lab = function(col1, col2, f3, m3) {
        var res, xyz0, xyz1;
        xyz0 = col1.lab();
        xyz1 = col2.lab();
        return res = new Color5(xyz0[0] + f3 * (xyz1[0] - xyz0[0]), xyz0[1] + f3 * (xyz1[1] - xyz0[1]), xyz0[2] + f3 * (xyz1[2] - xyz0[2]), m3);
      };
      _interpolators.push(["lab", interpolate_lab]);
    }).call(exports);
  }
});

// node_modules/bezier-easing/src/index.js
var require_src = __commonJS({
  "node_modules/bezier-easing/src/index.js"(exports, module2) {
    var NEWTON_ITERATIONS = 4;
    var NEWTON_MIN_SLOPE = 1e-3;
    var SUBDIVISION_PRECISION = 1e-7;
    var SUBDIVISION_MAX_ITERATIONS = 10;
    var kSplineTableSize = 11;
    var kSampleStepSize = 1 / (kSplineTableSize - 1);
    var float32ArraySupported = typeof Float32Array === "function";
    function A2(aA1, aA2) {
      return 1 - 3 * aA2 + 3 * aA1;
    }
    function B(aA1, aA2) {
      return 3 * aA2 - 6 * aA1;
    }
    function C(aA1) {
      return 3 * aA1;
    }
    function calcBezier(aT, aA1, aA2) {
      return ((A2(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
    }
    function getSlope(aT, aA1, aA2) {
      return 3 * A2(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1);
    }
    function binarySubdivide(aX, aA, aB, mX1, mX2) {
      var currentX, currentT, i2 = 0;
      do {
        currentT = aA + (aB - aA) / 2;
        currentX = calcBezier(currentT, mX1, mX2) - aX;
        if (currentX > 0) {
          aB = currentT;
        } else {
          aA = currentT;
        }
      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i2 < SUBDIVISION_MAX_ITERATIONS);
      return currentT;
    }
    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
      for (var i2 = 0; i2 < NEWTON_ITERATIONS; ++i2) {
        var currentSlope = getSlope(aGuessT, mX1, mX2);
        if (currentSlope === 0) {
          return aGuessT;
        }
        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
        aGuessT -= currentX / currentSlope;
      }
      return aGuessT;
    }
    function LinearEasing(x2) {
      return x2;
    }
    module2.exports = function bezier2(mX1, mY1, mX2, mY2) {
      if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {
        throw new Error("bezier x values must be in [0, 1] range");
      }
      if (mX1 === mY1 && mX2 === mY2) {
        return LinearEasing;
      }
      var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
      for (var i2 = 0; i2 < kSplineTableSize; ++i2) {
        sampleValues[i2] = calcBezier(i2 * kSampleStepSize, mX1, mX2);
      }
      function getTForX(aX) {
        var intervalStart = 0;
        var currentSample = 1;
        var lastSample = kSplineTableSize - 1;
        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
          intervalStart += kSampleStepSize;
        }
        --currentSample;
        var dist2 = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
        var guessForT = intervalStart + dist2 * kSampleStepSize;
        var initialSlope = getSlope(guessForT, mX1, mX2);
        if (initialSlope >= NEWTON_MIN_SLOPE) {
          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
        } else if (initialSlope === 0) {
          return guessForT;
        } else {
          return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
        }
      }
      return function BezierEasing(x2) {
        if (x2 === 0) {
          return 0;
        }
        if (x2 === 1) {
          return 1;
        }
        return calcBezier(getTForX(x2), mY1, mY2);
      };
    };
  }
});

// .svelte-kit/output/server/entries/pages/color.svelte.js
var color_svelte_exports = {};
__export(color_svelte_exports, {
  default: () => Color4
});
function distribute(value, rangeA, rangeB) {
  const [fromLow, fromHigh] = Array.from(rangeA);
  const [toLow, toHigh] = Array.from(rangeB);
  const result = toLow + (value - fromLow) / (fromHigh - fromLow) * (toHigh - toLow);
  if (toLow < toHigh) {
    if (result < toLow) {
      return toLow;
    }
    if (result > toHigh) {
      return toHigh;
    }
  } else {
    if (result > toLow) {
      return toLow;
    }
    if (result < toHigh) {
      return toHigh;
    }
  }
  return result;
}
function generate({ specs }) {
  function generateNumberOfSteps(curve, steps) {
    var array = [];
    for (var step in Array.from(Array(steps).keys())) {
      const value = curve(step / (steps - 1));
      array.push(value);
    }
    array.reverse();
    return array;
  }
  var lum_array = generateNumberOfSteps(Curves[specs.lum_curve], specs.steps);
  var sat_array = generateNumberOfSteps(Curves[specs.sat_curve], specs.steps);
  var hue_array = generateNumberOfSteps(Curves[specs.hue_curve], specs.steps);
  var lum_array_adjusted = [];
  var sat_array_adjusted = [];
  var hue_array_adjusted = [];
  for (var index in lum_array) {
    const step = lum_array[index];
    lum_array_adjusted.push(distribute(step, [0, 1], [specs.lum_end * 0.01, specs.lum_start * 0.01]));
  }
  for (var index in sat_array) {
    const step = sat_array[index];
    var sat_step = distribute(step, [0, 1], [specs.sat_start * 0.01, specs.sat_end * 0.01]);
    sat_step = sat_step * (specs.sat_rate * 0.01);
    sat_array_adjusted.push(sat_step);
  }
  for (var index in hue_array) {
    const step = hue_array[index];
    hue_array_adjusted.push(distribute(step, [0, 1], [specs.hue_start, specs.hue_end]));
  }
  sat_array_adjusted.reverse();
  hue_array_adjusted.reverse();
  lum_array = lum_array_adjusted;
  sat_array = sat_array_adjusted;
  hue_array = hue_array_adjusted;
  var colorMap = [];
  for (var index in lum_array) {
    lum_array[index];
    var params = {
      hue: hue_array[index],
      saturation: sat_array[index],
      luminosity: lum_array[index]
    };
    if (params.saturation > 1) {
      params.saturation = 1;
    }
    var hex = (0, import_chroma_js.default)(import_chroma_js.default.hsv([params.hue, params.saturation, params.luminosity]));
    (0, import_chroma_js.default)(import_chroma_js.default.hsv([params.hue, params.saturation, params.luminosity])).rgb();
    const contrastWhite = import_chroma_js.default.contrast(hex, "white").toFixed(2);
    const contrastBlack = import_chroma_js.default.contrast(hex, "black").toFixed(2);
    var displayColor = "";
    if (contrastWhite >= 4.5) {
      displayColor = "white";
    } else {
      displayColor = "black";
    }
    var colorObj = {
      hex: (0, import_chroma_js.default)(hex).hex(),
      hue: (0, import_chroma_js.default)(hex).hsv()[0],
      sat: (0, import_chroma_js.default)(hex).hsv()[1],
      lum: (0, import_chroma_js.default)(hex).hsv()[2],
      hsv: (0, import_chroma_js.default)(hex).hsv(),
      hsl: (0, import_chroma_js.default)(hex).hsl(),
      rgb: (0, import_chroma_js.default)(hex).rgb(),
      hueRange: [specs.hue_start, specs.hue_end],
      steps: specs.steps,
      label: specs.modifier * index,
      contrastBlack,
      contrastWhite,
      displayColor
    };
    colorMap.push(colorObj);
  }
  return colorMap;
}
var import_chroma_js, import_bezier_easing, linear, easeInCubic, easeOutCubic, easeInOutCubic, easeInSine, easeOutSine, easeInOutSine, easeInQuad, easeOutQuad, easeInOutQuad, easeInQuart, easeOutQuart, easeInOutQuart, easeInCirc, easeOutCirc, easeInOutCirc, easeInQuint, easeOutQuint, easeInOutQuint, easeInExpo, easeOutExpo, easeInOutExpo, easeInBack, easeOutBack, easeInOutBack, Curves, css52, numColors, Color4;
var init_color_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/color.svelte.js"() {
    init_index_0300a598();
    import_chroma_js = __toModule(require_chroma());
    import_bezier_easing = __toModule(require_src());
    linear = (0, import_bezier_easing.default)(0.5, 0.5, 0.5, 0.5);
    easeInCubic = (0, import_bezier_easing.default)(0.55, 0.055, 0.675, 0.19);
    easeOutCubic = (0, import_bezier_easing.default)(0.215, 0.61, 0.355, 1);
    easeInOutCubic = (0, import_bezier_easing.default)(0.645, 0.045, 0.355, 1);
    easeInSine = (0, import_bezier_easing.default)(0.47, 0, 0.745, 0.715);
    easeOutSine = (0, import_bezier_easing.default)(0.39, 0.575, 0.565, 1);
    easeInOutSine = (0, import_bezier_easing.default)(0.445, 0.05, 0.55, 0.95);
    easeInQuad = (0, import_bezier_easing.default)(0.55, 0.085, 0.68, 0.53);
    easeOutQuad = (0, import_bezier_easing.default)(0.25, 0.46, 0.45, 0.94);
    easeInOutQuad = (0, import_bezier_easing.default)(0.455, 0.03, 0.515, 0.955);
    easeInQuart = (0, import_bezier_easing.default)(0.895, 0.03, 0.685, 0.22);
    easeOutQuart = (0, import_bezier_easing.default)(0.165, 0.84, 0.44, 1);
    easeInOutQuart = (0, import_bezier_easing.default)(0.77, 0, 0.175, 1);
    easeInCirc = (0, import_bezier_easing.default)(0.6, 0.04, 0.98, 0.335);
    easeOutCirc = (0, import_bezier_easing.default)(0.075, 0.82, 0.165, 1);
    easeInOutCirc = (0, import_bezier_easing.default)(0.785, 0.135, 0.15, 0.86);
    easeInQuint = (0, import_bezier_easing.default)(0.755, 0.05, 0.855, 0.06);
    easeOutQuint = (0, import_bezier_easing.default)(0.23, 1, 0.32, 1);
    easeInOutQuint = (0, import_bezier_easing.default)(0.86, 0, 0.07, 1);
    easeInExpo = (0, import_bezier_easing.default)(0.95, 0.05, 0.795, 0.035);
    easeOutExpo = (0, import_bezier_easing.default)(0.19, 1, 0.22, 1);
    easeInOutExpo = (0, import_bezier_easing.default)(1, 0, 0, 1);
    easeInBack = (0, import_bezier_easing.default)(0.6, -0.28, 0.735, 0.045);
    easeOutBack = (0, import_bezier_easing.default)(0.175, 0.885, 0.32, 1.275);
    easeInOutBack = (0, import_bezier_easing.default)(0.68, -0.55, 0.265, 1.55);
    Curves = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      [Symbol.toStringTag]: "Module",
      linear,
      easeInCubic,
      easeOutCubic,
      easeInOutCubic,
      easeInSine,
      easeOutSine,
      easeInOutSine,
      easeInQuad,
      easeOutQuad,
      easeInOutQuad,
      easeInQuart,
      easeOutQuart,
      easeInOutQuart,
      easeInCirc,
      easeOutCirc,
      easeInOutCirc,
      easeInQuint,
      easeOutQuint,
      easeInOutQuint,
      easeInExpo,
      easeOutExpo,
      easeInOutExpo,
      easeInBack,
      easeOutBack,
      easeInOutBack
    });
    css52 = {
      code: ":root{--grid-tracks:24;--min-w:calc(90vw / var(--grid-tracks));--min-h:calc(90vh / var(--grid-tracks))}.grid-col.svelte-1g200cd{grid-template-columns:repeat(var(--grid-tracks), minmax(var(--min-h), 1fr))}.grid-row.svelte-1g200cd{grid-template-rows:repeat(var(--grid-tracks), minmax(3rem, 1fr))}",
      map: null
    };
    numColors = 36;
    Color4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let i2 = 0;
      let hueInc = 360 / numColors;
      let params = {
        specs: {
          steps: 10,
          hue_start: hueInc * i2,
          hue_end: hueInc * 1,
          hue_curve: "easeInQuad",
          sat_start: 10,
          sat_end: 100,
          sat_curve: "easeOutQuad",
          sat_rate: 100,
          lum_start: 100,
          lum_end: 10,
          lum_curve: "easeOutQuad",
          modifier: 10
        }
      };
      let hexarray_deepReds = [
        "370617",
        "6a040f",
        "9d0208",
        "d00000",
        "dc2f02",
        "e85d04",
        "f48c06",
        "faa307",
        "ffba08"
      ];
      let hexarray_winterBlues = [
        "03045e",
        "023e8a",
        "0077b6",
        "0096c7",
        "00b4d8",
        "48cae4",
        "90e0ef",
        "ade8f4",
        "caf0f8"
      ];
      let hexarray_limeGreens = [
        "002411",
        "004b23",
        "006400",
        "007200",
        "008000",
        "38b000",
        "70e000",
        "9ef01a",
        "ccff33"
      ];
      function outputTailwindColorObjects() {
        let outputArray = [];
        for (let j = 0; j < colorSets.length; j++) {
          const set = colorSets[j];
          let obj = {};
          for (let z = 0; z < 9; z++) {
            obj[`${(z + 1) * 100}`] = set[z];
          }
          outputArray.push(obj);
        }
        console.log(`\u{1F680} ~ file: color.svelte ~ line 83 ~ outputTailwindColorObjects ~ outputArray`, outputArray);
      }
      let colorSets = [];
      colorSets = [hexarray_deepReds, hexarray_winterBlues, hexarray_limeGreens];
      colorSets = colorSets.map((arr2) => arr2.map((color) => `#${color}`));
      let colors = generate(params);
      colors = colors.map((c) => c.hex);
      colorSets.push(colors);
      console.log(`\u{1F680} ~ file: color.svelte ~ line 64 ~ colorSets`, colorSets);
      console.log(`\u{1F680} ~ file: color.svelte ~ line 24 ~ colors `, colors);
      outputTailwindColorObjects();
      $$result.css.add(css52);
      return `${$$result.head += `${$$result.title = `<title>Color Palette Generator</title>`, ""}`, ""}

<div class="${"grid grid-row svelte-1g200cd"}">${each(colorSets, (colorsArray) => {
        return `<div class="${"grid grid-col svelte-1g200cd"}">${each(colorsArray, (color) => {
          return `<div class="${"grid-item p-1 w-auto h-auto rounded-none"}" style="${"background: " + escape2(color) + ";"}"></div>`;
        })}
		</div>`;
      })}
</div>`;
    });
  }
});

// .svelte-kit/output/server/nodes/32.js
var __exports33 = {};
__export(__exports33, {
  css: () => css53,
  entry: () => entry33,
  js: () => js33,
  module: () => color_svelte_exports
});
var entry33, js33, css53;
var init__33 = __esm({
  ".svelte-kit/output/server/nodes/32.js"() {
    init_color_svelte();
    entry33 = "pages/color.svelte-5b2dcfb2.js";
    js33 = ["pages/color.svelte-5b2dcfb2.js", "chunks/vendor-525e7dbe.js"];
    css53 = ["assets/pages/color.svelte-b033c319.css", "assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/zimjs/index.svelte.js
var index_svelte_exports3 = {};
__export(index_svelte_exports3, {
  default: () => Zimjs
});
var Zimjs;
var init_index_svelte3 = __esm({
  ".svelte-kit/output/server/entries/pages/zimjs/index.svelte.js"() {
    init_index_0300a598();
    Zimjs = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${$$result.head += `<script src="${"https://zimjs.org/cdn/nft/01/zim.js"}" data-svelte="svelte-nbiihu"><\/script>`, ""}

<h1>ZIM</h1>`;
    });
  }
});

// .svelte-kit/output/server/nodes/33.js
var __exports34 = {};
__export(__exports34, {
  css: () => css54,
  entry: () => entry34,
  js: () => js34,
  module: () => index_svelte_exports3
});
var entry34, js34, css54;
var init__34 = __esm({
  ".svelte-kit/output/server/nodes/33.js"() {
    init_index_svelte3();
    entry34 = "pages/zimjs/index.svelte-adc9504a.js";
    js34 = ["pages/zimjs/index.svelte-adc9504a.js", "chunks/vendor-525e7dbe.js"];
    css54 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/zimjs/1/index.svelte.js
var index_svelte_exports4 = {};
__export(index_svelte_exports4, {
  default: () => _1
});
var _1;
var init_index_svelte4 = __esm({
  ".svelte-kit/output/server/entries/pages/zimjs/1/index.svelte.js"() {
    init_index_0300a598();
    _1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${$$result.head += `<script src="${"https://zimjs.org/cdn/nft/01/zim.js"}" data-svelte="svelte-nbiihu"><\/script>`, ""}

<h1>ZIM</h1>`;
    });
  }
});

// .svelte-kit/output/server/nodes/34.js
var __exports35 = {};
__export(__exports35, {
  css: () => css55,
  entry: () => entry35,
  js: () => js35,
  module: () => index_svelte_exports4
});
var entry35, js35, css55;
var init__35 = __esm({
  ".svelte-kit/output/server/nodes/34.js"() {
    init_index_svelte4();
    entry35 = "pages/zimjs/1/index.svelte-77119356.js";
    js35 = ["pages/zimjs/1/index.svelte-77119356.js", "chunks/vendor-525e7dbe.js"];
    css55 = ["assets/vendor-e0d31265.css"];
  }
});

// .svelte-kit/output/server/entries/pages/_fallback_/index.svelte.js
var index_svelte_exports5 = {};
__export(index_svelte_exports5, {
  default: () => U5Bfallbacku5D
});
var U5Bfallbacku5D;
var init_index_svelte5 = __esm({
  ".svelte-kit/output/server/entries/pages/_fallback_/index.svelte.js"() {
    init_index_0300a598();
    U5Bfallbacku5D = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `You found the fallback page for unknown routes.`;
    });
  }
});

// .svelte-kit/output/server/nodes/35.js
var __exports36 = {};
__export(__exports36, {
  css: () => css56,
  entry: () => entry36,
  js: () => js36,
  module: () => index_svelte_exports5
});
var entry36, js36, css56;
var init__36 = __esm({
  ".svelte-kit/output/server/nodes/35.js"() {
    init_index_svelte5();
    entry36 = "pages/_fallback_/index.svelte-d45f15fe.js";
    js36 = ["pages/_fallback_/index.svelte-d45f15fe.js", "chunks/vendor-525e7dbe.js"];
    css56 = ["assets/vendor-e0d31265.css"];
  }
});

// node_modules/@danzen/createjs/create.js
var require_create = __commonJS({
  "node_modules/@danzen/createjs/create.js"(exports, module2) {
    var createjs = createjs || {};
    createjs.stageTransformable = true, createjs.extend = function(t2, e2) {
      "use strict";
      function i2() {
        this.constructor = t2;
      }
      return i2.prototype = e2.prototype, t2.prototype = new i2();
    }, createjs.promote = function(t2, e2) {
      "use strict";
      var i2 = t2.prototype, s4 = Object.getPrototypeOf && Object.getPrototypeOf(i2) || i2.__proto__;
      if (s4)
        for (var r2 in i2[(e2 += "_") + "constructor"] = s4.constructor, s4)
          i2.hasOwnProperty(r2) && typeof s4[r2] == "function" && (i2[e2 + r2] = s4[r2]);
      return t2;
    }, createjs.indexOf = function(t2, e2) {
      "use strict";
      for (var i2 = 0, s4 = t2.length; i2 < s4; i2++)
        if (e2 === t2[i2])
          return i2;
      return -1;
    }, function() {
      "use strict";
      function t2() {
        throw "UID cannot be instantiated";
      }
      t2._nextID = 0, t2.get = function() {
        return t2._nextID++;
      }, createjs.UID = t2;
    }(), createjs.deprecate = function(e2, i2) {
      "use strict";
      return function() {
        var t2 = "Deprecated property or method '" + i2 + "'. See docs for info.";
        return console && (console.warn ? console.warn(t2) : console.log(t2)), e2 && e2.apply(this, arguments);
      };
    }, function() {
      "use strict";
      function t2(t3, e3, i2) {
        this.type = t3, this.target = null, this.currentTarget = null, this.eventPhase = 0, this.bubbles = !!e3, this.cancelable = !!i2, this.timeStamp = new Date().getTime(), this.defaultPrevented = false, this.propagationStopped = false, this.immediatePropagationStopped = false, this.removed = false;
      }
      var e2 = t2.prototype;
      e2.preventDefault = function() {
        this.defaultPrevented = this.cancelable && true;
      }, e2.stopPropagation = function() {
        this.propagationStopped = true;
      }, e2.stopImmediatePropagation = function() {
        this.immediatePropagationStopped = this.propagationStopped = true;
      }, e2.remove = function() {
        this.removed = true;
      }, e2.clone = function() {
        return new t2(this.type, this.bubbles, this.cancelable);
      }, e2.set = function(t3) {
        for (var e3 in t3)
          this[e3] = t3[e3];
        return this;
      }, e2.toString = function() {
        return "[Event (type=" + this.type + ")]";
      }, createjs.Event = t2;
    }(), function() {
      "use strict";
      function t2() {
        this._listeners = null, this._captureListeners = null;
      }
      var e2 = t2.prototype;
      t2.initialize = function(t3) {
        t3.addEventListener = e2.addEventListener, t3.on = e2.on, t3.removeEventListener = t3.off = e2.removeEventListener, t3.removeAllEventListeners = e2.removeAllEventListeners, t3.hasEventListener = e2.hasEventListener, t3.dispatchEvent = e2.dispatchEvent, t3._dispatchEvent = e2._dispatchEvent, t3.willTrigger = e2.willTrigger;
      }, e2.addEventListener = function(t3, e3, i2) {
        var s4 = i2 ? this._captureListeners = this._captureListeners || {} : this._listeners = this._listeners || {}, r2 = s4[t3];
        return r2 && this.removeEventListener(t3, e3, i2), (r2 = s4[t3]) ? r2.push(e3) : s4[t3] = [e3], e3;
      }, e2.on = function(t3, e3, i2, s4, r2, n) {
        return e3.handleEvent && (i2 = i2 || e3, e3 = e3.handleEvent), i2 = i2 || this, this.addEventListener(t3, function(t4) {
          e3.call(i2, t4, r2), s4 && t4.remove();
        }, n);
      }, e2.removeEventListener = function(t3, e3, i2) {
        var s4 = i2 ? this._captureListeners : this._listeners;
        if (s4) {
          var r2 = s4[t3];
          if (r2) {
            for (var n = 0, a = r2.length; n < a; n++)
              if (r2[n] == e3) {
                a == 1 ? delete s4[t3] : r2.splice(n, 1);
                break;
              }
          }
        }
      }, e2.off = e2.removeEventListener, e2.removeAllEventListeners = function(t3) {
        t3 ? (this._listeners && delete this._listeners[t3], this._captureListeners && delete this._captureListeners[t3]) : this._listeners = this._captureListeners = null;
      }, e2.dispatchEvent = function(t3, e3, i2) {
        if (typeof t3 == "string") {
          var s4 = this._listeners;
          if (!(e3 || s4 && s4[t3]))
            return true;
          t3 = new createjs.Event(t3, e3, i2);
        } else
          t3.target && t3.clone && (t3 = t3.clone());
        try {
          t3.target = this;
        } catch (t4) {
        }
        if (t3.bubbles && this.parent) {
          for (var r2 = this, n = [r2]; r2.parent; )
            n.push(r2 = r2.parent);
          for (var a = n.length, o2 = a - 1; 0 <= o2 && !t3.propagationStopped; o2--)
            n[o2]._dispatchEvent(t3, 1 + (o2 == 0));
          for (o2 = 1; o2 < a && !t3.propagationStopped; o2++)
            n[o2]._dispatchEvent(t3, 3);
        } else
          this._dispatchEvent(t3, 2);
        return !t3.defaultPrevented;
      }, e2.hasEventListener = function(t3) {
        var e3 = this._listeners, i2 = this._captureListeners;
        return !!(e3 && e3[t3] || i2 && i2[t3]);
      }, e2.willTrigger = function(t3) {
        for (var e3 = this; e3; ) {
          if (e3.hasEventListener(t3))
            return true;
          e3 = e3.parent;
        }
        return false;
      }, e2.toString = function() {
        return "[EventDispatcher]";
      }, e2._dispatchEvent = function(t3, e3) {
        var i2, s4, r2 = e3 <= 2 ? this._captureListeners : this._listeners;
        if (t3 && r2 && (s4 = r2[t3.type]) && (i2 = s4.length)) {
          try {
            t3.currentTarget = this;
          } catch (t4) {
          }
          try {
            t3.eventPhase = 0 | e3;
          } catch (t4) {
          }
          t3.removed = false, s4 = s4.slice();
          for (var n = 0; n < i2 && !t3.immediatePropagationStopped; n++) {
            var a = s4[n];
            a.handleEvent ? a.handleEvent(t3) : a(t3), t3.removed && (this.off(t3.type, a, e3 == 1), t3.removed = false);
          }
        }
        e3 === 2 && this._dispatchEvent(t3, 2.1);
      }, createjs.EventDispatcher = t2;
    }(), function() {
      "use strict";
      function n() {
        throw "Ticker cannot be instantiated.";
      }
      n.RAF_SYNCHED = "synched", n.RAF = "raf", n.TIMEOUT = "timeout", n.timingMode = null, n.maxDelta = 0, n.paused = false, n.removeEventListener = null, n.removeAllEventListeners = null, n.dispatchEvent = null, n.hasEventListener = null, n._listeners = null, createjs.EventDispatcher.initialize(n), n._addEventListener = n.addEventListener, n.addEventListener = function() {
        return n._inited || n.init(), n._addEventListener.apply(n, arguments);
      }, n._inited = false, n._startTime = 0, n._pausedTime = 0, n._ticks = 0, n._pausedTicks = 0, n._interval = 50, n._lastTime = 0, n._times = null, n._tickTimes = null, n._timerId = null, n._raf = true, n._setInterval = function(t3) {
        n._interval = t3, n._inited && n._setupTick();
      }, n.setInterval = createjs.deprecate(n._setInterval, "Ticker.setInterval"), n._getInterval = function() {
        return n._interval;
      }, n.getInterval = createjs.deprecate(n._getInterval, "Ticker.getInterval"), n._setFPS = function(t3) {
        n._setInterval(1e3 / t3);
      }, n.setFPS = createjs.deprecate(n._setFPS, "Ticker.setFPS"), n._getFPS = function() {
        return 1e3 / n._interval;
      }, n.getFPS = createjs.deprecate(n._getFPS, "Ticker.getFPS");
      try {
        Object.defineProperties(n, { interval: { get: n._getInterval, set: n._setInterval }, framerate: { get: n._getFPS, set: n._setFPS } });
      } catch (t3) {
        console.log(t3);
      }
      n.init = function() {
        n._inited || (n._inited = true, n._times = [], n._tickTimes = [], n._startTime = n._getTime(), n._times.push(n._lastTime = 0), n.interval = n._interval);
      }, n.reset = function() {
        var t3;
        n._raf ? (t3 = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame) && t3(n._timerId) : clearTimeout(n._timerId), n.removeAllEventListeners("tick"), n._timerId = n._times = n._tickTimes = null, n._startTime = n._lastTime = n._ticks = n._pausedTime = 0, n._inited = false;
      }, n.getMeasuredTickTime = function(t3) {
        var e3 = 0, i2 = n._tickTimes;
        if (!i2 || i2.length < 1)
          return -1;
        t3 = Math.min(i2.length, t3 || 0 | n._getFPS());
        for (var s4 = 0; s4 < t3; s4++)
          e3 += i2[s4];
        return e3 / t3;
      }, n.getMeasuredFPS = function(t3) {
        var e3 = n._times;
        return !e3 || e3.length < 2 ? -1 : (t3 = Math.min(e3.length - 1, t3 || 0 | n._getFPS()), 1e3 / ((e3[0] - e3[t3]) / t3));
      }, n.getTime = function(t3) {
        return n._startTime ? n._getTime() - (t3 ? n._pausedTime : 0) : -1;
      }, n.getEventTime = function(t3) {
        return n._startTime ? (n._lastTime || n._startTime) - (t3 ? n._pausedTime : 0) : -1;
      }, n.getTicks = function(t3) {
        return n._ticks - (t3 ? n._pausedTicks : 0);
      }, n._handleSynch = function() {
        n._timerId = null, n._setupTick(), n._getTime() - n._lastTime >= 0.97 * (n._interval - 1) && n._tick();
      }, n._handleRAF = function() {
        n._timerId = null, n._setupTick(), n._tick();
      }, n._handleTimeout = function() {
        n._timerId = null, n._setupTick(), n._tick();
      }, n._setupTick = function() {
        if (n._timerId == null) {
          var t3 = n.timingMode;
          if (t3 == n.RAF_SYNCHED || t3 == n.RAF) {
            var e3 = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
            if (e3)
              return n._timerId = e3(t3 == n.RAF ? n._handleRAF : n._handleSynch), void (n._raf = true);
          }
          n._raf = false, n._timerId = setTimeout(n._handleTimeout, n._interval);
        }
      }, n._tick = function() {
        var t3, e3, i2 = n.paused, s4 = n._getTime(), r2 = s4 - n._lastTime;
        for (n._lastTime = s4, n._ticks++, i2 && (n._pausedTicks++, n._pausedTime += r2), n.hasEventListener("tick") && (t3 = new createjs.Event("tick"), e3 = n.maxDelta, t3.delta = e3 && e3 < r2 ? e3 : r2, t3.paused = i2, t3.time = s4, t3.runTime = s4 - n._pausedTime, n.dispatchEvent(t3)), n._tickTimes.unshift(n._getTime() - s4); 100 < n._tickTimes.length; )
          n._tickTimes.pop();
        for (n._times.unshift(s4); 100 < n._times.length; )
          n._times.pop();
      };
      var t2 = window, e2 = t2.performance.now || t2.performance.mozNow || t2.performance.msNow || t2.performance.oNow || t2.performance.webkitNow;
      n._getTime = function() {
        return (e2 && e2.call(t2.performance) || new Date().getTime()) - n._startTime;
      }, createjs.Ticker = n;
    }(), function() {
      "use strict";
      function t2(t3) {
        this.readyState = t3.readyState, this._video = t3, this._canvas = null, this._lastTime = -1, this.readyState < 2 && t3.addEventListener("canplaythrough", this._videoReady.bind(this));
      }
      var e2 = t2.prototype;
      e2.getImage = function() {
        if (!(this.readyState < 2)) {
          var t3, e3 = this._canvas, i2 = this._video;
          return e3 || ((e3 = this._canvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")).width = i2.videoWidth, e3.height = i2.videoHeight), 2 <= i2.readyState && i2.currentTime !== this._lastTime && ((t3 = e3.getContext("2d")).clearRect(0, 0, e3.width, e3.height), t3.drawImage(i2, 0, 0, e3.width, e3.height), this._lastTime = i2.currentTime), e3;
        }
      }, e2._videoReady = function() {
        this.readyState = 2;
      }, createjs.VideoBuffer = t2;
    }(), function() {
      "use strict";
      function t2(t3, e3, i2, s4, r2, n, a, o2, h2, c, u) {
        this.Event_constructor(t3, e3, i2), this.stageX = s4, this.stageY = r2, this.rawX = h2 == null ? s4 : h2, this.rawY = c == null ? r2 : c, this.nativeEvent = n, this.pointerID = a, this.primary = !!o2, this.relatedTarget = u;
      }
      var e2 = createjs.extend(t2, createjs.Event);
      e2._get_localX = function() {
        return this.currentTarget.globalToLocal(this.rawX, this.rawY).x;
      }, e2._get_localY = function() {
        return this.currentTarget.globalToLocal(this.rawX, this.rawY).y;
      }, e2._get_isTouch = function() {
        return this.pointerID !== -1;
      };
      try {
        Object.defineProperties(e2, { localX: { get: e2._get_localX }, localY: { get: e2._get_localY }, isTouch: { get: e2._get_isTouch } });
      } catch (t3) {
      }
      e2.clone = function() {
        return new t2(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);
      }, e2.toString = function() {
        return "[MouseEvent (type=" + this.type + " stageX=" + this.stageX + " stageY=" + this.stageY + ")]";
      }, createjs.MouseEvent = createjs.promote(t2, "Event");
    }(), function() {
      "use strict";
      function l(t3, e2, i2, s4, r2, n) {
        this.setValues(t3, e2, i2, s4, r2, n);
      }
      var t2 = l.prototype;
      l.DEG_TO_RAD = Math.PI / 180, l.identity = null, t2.setValues = function(t3, e2, i2, s4, r2, n) {
        return this.a = t3 == null ? 1 : t3, this.b = e2 || 0, this.c = i2 || 0, this.d = s4 == null ? 1 : s4, this.tx = r2 || 0, this.ty = n || 0, this;
      }, t2.append = function(t3, e2, i2, s4, r2, n) {
        var a = this.a, o2 = this.b, h2 = this.c, c = this.d;
        return t3 == 1 && e2 == 0 && i2 == 0 && s4 == 1 || (this.a = a * t3 + h2 * e2, this.b = o2 * t3 + c * e2, this.c = a * i2 + h2 * s4, this.d = o2 * i2 + c * s4), this.tx = a * r2 + h2 * n + this.tx, this.ty = o2 * r2 + c * n + this.ty, this;
      }, t2.prepend = function(t3, e2, i2, s4, r2, n) {
        var a = this.a, o2 = this.c, h2 = this.tx;
        return this.a = t3 * a + i2 * this.b, this.b = e2 * a + s4 * this.b, this.c = t3 * o2 + i2 * this.d, this.d = e2 * o2 + s4 * this.d, this.tx = t3 * h2 + i2 * this.ty + r2, this.ty = e2 * h2 + s4 * this.ty + n, this;
      }, t2.appendMatrix = function(t3) {
        return this.append(t3.a, t3.b, t3.c, t3.d, t3.tx, t3.ty);
      }, t2.prependMatrix = function(t3) {
        return this.prepend(t3.a, t3.b, t3.c, t3.d, t3.tx, t3.ty);
      }, t2.appendTransform = function(t3, e2, i2, s4, r2, n, a, o2, h2) {
        var c, u = r2 % 360 ? (u = r2 * l.DEG_TO_RAD, c = Math.cos(u), Math.sin(u)) : (c = 1, 0);
        return n || a ? (n *= l.DEG_TO_RAD, a *= l.DEG_TO_RAD, this.append(Math.cos(a), Math.sin(a), -Math.sin(n), Math.cos(n), t3, e2), this.append(c * i2, u * i2, -u * s4, c * s4, 0, 0)) : this.append(c * i2, u * i2, -u * s4, c * s4, t3, e2), (o2 || h2) && (this.tx -= o2 * this.a + h2 * this.c, this.ty -= o2 * this.b + h2 * this.d), this;
      }, t2.prependTransform = function(t3, e2, i2, s4, r2, n, a, o2, h2) {
        var c, u = r2 % 360 ? (u = r2 * l.DEG_TO_RAD, c = Math.cos(u), Math.sin(u)) : (c = 1, 0);
        return (o2 || h2) && (this.tx -= o2, this.ty -= h2), n || a ? (n *= l.DEG_TO_RAD, a *= l.DEG_TO_RAD, this.prepend(c * i2, u * i2, -u * s4, c * s4, 0, 0), this.prepend(Math.cos(a), Math.sin(a), -Math.sin(n), Math.cos(n), t3, e2)) : this.prepend(c * i2, u * i2, -u * s4, c * s4, t3, e2), this;
      }, t2.rotate = function(t3) {
        t3 *= l.DEG_TO_RAD;
        var e2 = Math.cos(t3), i2 = Math.sin(t3), s4 = this.a, t3 = this.b;
        return this.a = s4 * e2 + this.c * i2, this.b = t3 * e2 + this.d * i2, this.c = -s4 * i2 + this.c * e2, this.d = -t3 * i2 + this.d * e2, this;
      }, t2.skew = function(t3, e2) {
        return t3 *= l.DEG_TO_RAD, e2 *= l.DEG_TO_RAD, this.append(Math.cos(e2), Math.sin(e2), -Math.sin(t3), Math.cos(t3), 0, 0), this;
      }, t2.scale = function(t3, e2) {
        return this.a *= t3, this.b *= t3, this.c *= e2, this.d *= e2, this;
      }, t2.translate = function(t3, e2) {
        return this.tx += this.a * t3 + this.c * e2, this.ty += this.b * t3 + this.d * e2, this;
      }, t2.identity = function() {
        return this.a = this.d = 1, this.b = this.c = this.tx = this.ty = 0, this;
      }, t2.invert = function() {
        var t3 = this.a, e2 = this.b, i2 = this.c, s4 = this.d, r2 = this.tx, n = t3 * s4 - e2 * i2;
        return this.a = s4 / n, this.b = -e2 / n, this.c = -i2 / n, this.d = t3 / n, this.tx = (i2 * this.ty - s4 * r2) / n, this.ty = -(t3 * this.ty - e2 * r2) / n, this;
      }, t2.isIdentity = function() {
        return this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;
      }, t2.equals = function(t3) {
        return this.tx === t3.tx && this.ty === t3.ty && this.a === t3.a && this.b === t3.b && this.c === t3.c && this.d === t3.d;
      }, t2.transformPoint = function(t3, e2, i2) {
        return (i2 = i2 || {}).x = t3 * this.a + e2 * this.c + this.tx, i2.y = t3 * this.b + e2 * this.d + this.ty, i2;
      }, t2.decompose = function(t3) {
        t3 == null && (t3 = {}), t3.x = this.tx, t3.y = this.ty, t3.scaleX = Math.sqrt(this.a * this.a + this.b * this.b), t3.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);
        var e2 = Math.atan2(-this.c, this.d), i2 = Math.atan2(this.b, this.a);
        return Math.abs(1 - e2 / i2) < 1e-5 ? (t3.rotation = i2 / l.DEG_TO_RAD, this.a < 0 && 0 <= this.d && (t3.rotation += t3.rotation <= 0 ? 180 : -180), t3.skewX = t3.skewY = 0) : (t3.skewX = e2 / l.DEG_TO_RAD, t3.skewY = i2 / l.DEG_TO_RAD), t3;
      }, t2.copy = function(t3) {
        return this.setValues(t3.a, t3.b, t3.c, t3.d, t3.tx, t3.ty);
      }, t2.clone = function() {
        return new l(this.a, this.b, this.c, this.d, this.tx, this.ty);
      }, t2.toString = function() {
        return "[Matrix2D (a=" + this.a + " b=" + this.b + " c=" + this.c + " d=" + this.d + " tx=" + this.tx + " ty=" + this.ty + ")]";
      }, l.identity = new l(), createjs.Matrix2D = l;
    }(), function() {
      "use strict";
      function t2(t3, e3, i2, s4, r2) {
        this.setValues(t3, e3, i2, s4, r2);
      }
      var e2 = t2.prototype;
      e2.setValues = function(t3, e3, i2, s4, r2) {
        return this.visible = t3 == null || !!t3, this.alpha = e3 == null ? 1 : e3, this.shadow = i2, this.compositeOperation = s4, this.matrix = r2 || this.matrix && this.matrix.identity() || new createjs.Matrix2D(), this;
      }, e2.append = function(t3, e3, i2, s4, r2) {
        return this.alpha *= e3, this.shadow = i2 || this.shadow, this.compositeOperation = s4 || this.compositeOperation, this.visible = this.visible && t3, r2 && this.matrix.appendMatrix(r2), this;
      }, e2.prepend = function(t3, e3, i2, s4, r2) {
        return this.alpha *= e3, this.shadow = this.shadow || i2, this.compositeOperation = this.compositeOperation || s4, this.visible = this.visible && t3, r2 && this.matrix.prependMatrix(r2), this;
      }, e2.identity = function() {
        return this.visible = true, this.alpha = 1, this.shadow = this.compositeOperation = null, this.matrix.identity(), this;
      }, e2.clone = function() {
        return new t2(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());
      }, createjs.DisplayProps = t2;
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.setValues(t3, e3);
      }
      var e2 = t2.prototype;
      e2.setValues = function(t3, e3) {
        return this.x = t3 || 0, this.y = e3 || 0, this;
      }, e2.copy = function(t3) {
        return this.x = t3.x, this.y = t3.y, this;
      }, e2.clone = function() {
        return new t2(this.x, this.y);
      }, e2.toString = function() {
        return "[Point (x=" + this.x + " y=" + this.y + ")]";
      }, createjs.Point = t2;
    }(), function() {
      "use strict";
      function r2(t3, e2, i2, s4) {
        this.setValues(t3, e2, i2, s4);
      }
      var t2 = r2.prototype;
      t2.setValues = function(t3, e2, i2, s4) {
        return this.x = t3 || 0, this.y = e2 || 0, this.width = i2 || 0, this.height = s4 || 0, this;
      }, t2.extend = function(t3, e2, i2, s4) {
        return s4 = s4 || 0, t3 + (i2 = i2 || 0) > this.x + this.width && (this.width = t3 + i2 - this.x), e2 + s4 > this.y + this.height && (this.height = e2 + s4 - this.y), t3 < this.x && (this.width += this.x - t3, this.x = t3), e2 < this.y && (this.height += this.y - e2, this.y = e2), this;
      }, t2.pad = function(t3, e2, i2, s4) {
        return this.x -= e2, this.y -= t3, this.width += e2 + s4, this.height += t3 + i2, this;
      }, t2.copy = function(t3) {
        return this.setValues(t3.x, t3.y, t3.width, t3.height);
      }, t2.contains = function(t3, e2, i2, s4) {
        return i2 = i2 || 0, s4 = s4 || 0, t3 >= this.x && t3 + i2 <= this.x + this.width && e2 >= this.y && e2 + s4 <= this.y + this.height;
      }, t2.union = function(t3) {
        return this.clone().extend(t3.x, t3.y, t3.width, t3.height);
      }, t2.intersection = function(t3) {
        var e2 = t3.x, i2 = t3.y, s4 = e2 + t3.width, t3 = i2 + t3.height;
        return this.x > e2 && (e2 = this.x), this.y > i2 && (i2 = this.y), this.x + this.width < s4 && (s4 = this.x + this.width), this.y + this.height < t3 && (t3 = this.y + this.height), s4 <= e2 || t3 <= i2 ? null : new r2(e2, i2, s4 - e2, t3 - i2);
      }, t2.intersects = function(t3) {
        return t3.x <= this.x + this.width && this.x <= t3.x + t3.width && t3.y <= this.y + this.height && this.y <= t3.y + t3.height;
      }, t2.isEmpty = function() {
        return this.width <= 0 || this.height <= 0;
      }, t2.clone = function() {
        return new r2(this.x, this.y, this.width, this.height);
      }, t2.toString = function() {
        return "[Rectangle (x=" + this.x + " y=" + this.y + " width=" + this.width + " height=" + this.height + ")]";
      }, createjs.Rectangle = r2;
    }(), function() {
      "use strict";
      function t2(t3, e3, i2, s4, r2, n, a) {
        t3.addEventListener && (this.target = t3, this.overLabel = i2 == null ? "over" : i2, this.outLabel = e3 == null ? "out" : e3, this.downLabel = s4 == null ? "down" : s4, this.play = r2, this._isPressed = false, this._isOver = false, this._enabled = false, t3.mouseChildren = false, this.enabled = true, this.handleEvent({}), n && (a && (n.actionsEnabled = false, n.gotoAndStop && n.gotoAndStop(a)), t3.hitArea = n));
      }
      var e2 = t2.prototype;
      e2._setEnabled = function(t3) {
        var e3;
        t3 != this._enabled && (e3 = this.target, (this._enabled = t3) ? (e3.cursor = "pointer", e3.addEventListener("rollover", this), e3.addEventListener("rollout", this), e3.addEventListener("mousedown", this), e3.addEventListener("pressup", this), e3._reset && (e3.__reset = e3._reset, e3._reset = this._reset)) : (e3.cursor = null, e3.removeEventListener("rollover", this), e3.removeEventListener("rollout", this), e3.removeEventListener("mousedown", this), e3.removeEventListener("pressup", this), e3.__reset && (e3._reset = e3.__reset, delete e3.__reset)));
      }, e2.setEnabled = createjs.deprecate(e2._setEnabled, "ButtonHelper.setEnabled"), e2._getEnabled = function() {
        return this._enabled;
      }, e2.getEnabled = createjs.deprecate(e2._getEnabled, "ButtonHelper.getEnabled");
      try {
        Object.defineProperties(e2, { enabled: { get: e2._getEnabled, set: e2._setEnabled } });
      } catch (t3) {
      }
      e2.toString = function() {
        return "[ButtonHelper]";
      }, e2.handleEvent = function(t3) {
        var e3 = this.target, t3 = t3.type, t3 = t3 == "mousedown" ? (this._isPressed = true, this.downLabel) : t3 == "pressup" ? (this._isPressed = false, this._isOver ? this.overLabel : this.outLabel) : t3 == "rollover" ? (this._isOver = true, this._isPressed ? this.downLabel : this.overLabel) : (this._isOver = false, this._isPressed ? this.overLabel : this.outLabel);
        this.play ? e3.gotoAndPlay && e3.gotoAndPlay(t3) : e3.gotoAndStop && e3.gotoAndStop(t3);
      }, e2._reset = function() {
        var t3 = this.paused;
        this.__reset(), this.paused = t3;
      }, createjs.ButtonHelper = t2;
    }(), function() {
      "use strict";
      function t2(t3, e3, i2, s4) {
        this.color = t3 || "black", this.offsetX = e3 || 0, this.offsetY = i2 || 0, this.blur = s4 || 0;
      }
      var e2 = t2.prototype;
      t2.identity = new t2("transparent", 0, 0, 0), e2.toString = function() {
        return "[Shadow]";
      }, e2.clone = function() {
        return new t2(this.color, this.offsetX, this.offsetY, this.blur);
      }, createjs.Shadow = t2;
    }(), function() {
      "use strict";
      function t2(t3) {
        this.EventDispatcher_constructor(), this.complete = true, this.framerate = 0, this._animations = null, this._frames = null, this._images = null, this._data = null, this._loadCount = 0, this._frameHeight = 0, this._frameWidth = 0, this._numFrames = 0, this._regX = 0, this._regY = 0, this._spacing = 0, this._margin = 0, this._parseData(t3);
      }
      var e2 = createjs.extend(t2, createjs.EventDispatcher);
      e2._getAnimations = function() {
        return this._animations.slice();
      }, e2.getAnimations = createjs.deprecate(e2._getAnimations, "SpriteSheet.getAnimations");
      try {
        Object.defineProperties(e2, { animations: { get: e2._getAnimations } });
      } catch (t3) {
      }
      e2.getNumFrames = function(t3) {
        if (t3 == null)
          return this._frames ? this._frames.length : this._numFrames || 0;
        t3 = this._data[t3];
        return t3 == null ? 0 : t3.frames.length;
      }, e2.getAnimation = function(t3) {
        return this._data[t3];
      }, e2.getFrame = function(t3) {
        var e3;
        return this._frames && (e3 = this._frames[t3]) ? e3 : null;
      }, e2.getFrameBounds = function(t3, e3) {
        t3 = this.getFrame(t3);
        return t3 ? (e3 || new createjs.Rectangle()).setValues(-t3.regX, -t3.regY, t3.rect.width, t3.rect.height) : null;
      }, e2.toString = function() {
        return "[SpriteSheet]";
      }, e2.clone = function() {
        throw "SpriteSheet cannot be cloned.";
      }, e2._parseData = function(t3) {
        var e3, i2, s4, r2;
        if (t3 != null) {
          if (this.framerate = t3.framerate || 0, t3.images && 0 < (i2 = t3.images.length))
            for (l = this._images = [], e3 = 0; e3 < i2; e3++) {
              var n, a = t3.images[e3];
              typeof a == "string" && (n = a, (a = document.createElement("img")).src = n), l.push(a), a.getContext || a.naturalWidth || (this._loadCount++, this.complete = false, function(t4, e4) {
                a.onload = function() {
                  t4._handleImageLoad(e4);
                };
              }(this, n), function(t4, e4) {
                a.onerror = function() {
                  t4._handleImageError(e4);
                };
              }(this, n));
            }
          if (t3.frames != null)
            if (Array.isArray(t3.frames))
              for (this._frames = [], e3 = 0, i2 = (l = t3.frames).length; e3 < i2; e3++) {
                var o2 = l[e3];
                this._frames.push({ image: this._images[o2[4] || 0], rect: new createjs.Rectangle(o2[0], o2[1], o2[2], o2[3]), regX: o2[5] || 0, regY: o2[6] || 0 });
              }
            else
              s4 = t3.frames, this._frameWidth = s4.width, this._frameHeight = s4.height, this._regX = s4.regX || 0, this._regY = s4.regY || 0, this._spacing = s4.spacing || 0, this._margin = s4.margin || 0, this._numFrames = s4.count, this._loadCount == 0 && this._calculateFrames();
          if (this._animations = [], (s4 = t3.animations) != null)
            for (r2 in this._data = {}, s4) {
              var h2 = { name: r2 }, c = s4[r2];
              if (typeof c == "number")
                l = h2.frames = [c];
              else if (Array.isArray(c))
                if (c.length == 1)
                  h2.frames = [c[0]];
                else
                  for (h2.speed = c[3], h2.next = c[2], l = h2.frames = [], e3 = c[0]; e3 <= c[1]; e3++)
                    l.push(e3);
              else {
                h2.speed = c.speed, h2.next = c.next;
                var u = c.frames, l = h2.frames = typeof u == "number" ? [u] : u.slice(0);
              }
              h2.next !== true && h2.next !== void 0 || (h2.next = r2), (h2.next === false || l.length < 2 && h2.next == r2) && (h2.next = null), h2.speed || (h2.speed = 1), this._animations.push(r2), this._data[r2] = h2;
            }
        }
      }, e2._handleImageLoad = function(t3) {
        --this._loadCount == 0 && (this._calculateFrames(), this.complete = true, this.dispatchEvent("complete"));
      }, e2._handleImageError = function(t3) {
        var e3 = new createjs.Event("error");
        e3.src = t3, this.dispatchEvent(e3), --this._loadCount == 0 && this.dispatchEvent("complete");
      }, e2._calculateFrames = function() {
        if (!this._frames && this._frameWidth != 0) {
          this._frames = [];
          var t3 = this._numFrames || 1e5, e3 = 0, i2 = this._frameWidth, s4 = this._frameHeight, r2 = this._spacing, n = this._margin;
          t:
            for (var a = 0, o2 = this._images; a < o2.length; a++)
              for (var h2 = o2[a], c = h2.width || h2.naturalWidth, u = h2.height || h2.naturalHeight, l = n; l <= u - n - s4; ) {
                for (var d = n; d <= c - n - i2; ) {
                  if (t3 <= e3)
                    break t;
                  e3++, this._frames.push({ image: h2, rect: new createjs.Rectangle(d, l, i2, s4), regX: this._regX, regY: this._regY }), d += i2 + r2;
                }
                l += s4 + r2;
              }
          this._numFrames = e3;
        }
      }, createjs.SpriteSheet = createjs.promote(t2, "EventDispatcher");
    }(), function() {
      "use strict";
      function v() {
        this.command = null, this._stroke = null, this._strokeStyle = null, this._oldStrokeStyle = null, this._strokeDash = null, this._oldStrokeDash = null, this._strokeIgnoreScale = false, this._fill = null, this._instructions = [], this._commitIndex = 0, this._activeInstructions = [], this._dirty = false, this._storeIndex = 0, this.clear();
      }
      var t2 = v.prototype, h2 = v;
      v.getRGB = function(t3, e3, i2, s4) {
        return t3 != null && i2 == null && (s4 = e3, i2 = 255 & t3, e3 = t3 >> 8 & 255, t3 = t3 >> 16 & 255), s4 == null ? "rgb(" + t3 + "," + e3 + "," + i2 + ")" : "rgba(" + t3 + "," + e3 + "," + i2 + "," + s4 + ")";
      }, v.getHSL = function(t3, e3, i2, s4) {
        return s4 == null ? "hsl(" + t3 % 360 + "," + e3 + "%," + i2 + "%)" : "hsla(" + t3 % 360 + "," + e3 + "%," + i2 + "%," + s4 + ")";
      }, v.BASE_64 = { A: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6, H: 7, I: 8, J: 9, K: 10, L: 11, M: 12, N: 13, O: 14, P: 15, Q: 16, R: 17, S: 18, T: 19, U: 20, V: 21, W: 22, X: 23, Y: 24, Z: 25, a: 26, b: 27, c: 28, d: 29, e: 30, f: 31, g: 32, h: 33, i: 34, j: 35, k: 36, l: 37, m: 38, n: 39, o: 40, p: 41, q: 42, r: 43, s: 44, t: 45, u: 46, v: 47, w: 48, x: 49, y: 50, z: 51, 0: 52, 1: 53, 2: 54, 3: 55, 4: 56, 5: 57, 6: 58, 7: 59, 8: 60, 9: 61, "+": 62, "/": 63 }, v.STROKE_CAPS_MAP = ["butt", "round", "square"], v.STROKE_JOINTS_MAP = ["miter", "round", "bevel"];
      var e2 = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
      e2.getContext && (v._ctx = e2.getContext("2d"), e2.width = e2.height = 1), t2._getInstructions = function() {
        return this._updateInstructions(), this._instructions;
      }, t2.getInstructions = createjs.deprecate(t2._getInstructions, "Graphics.getInstructions");
      try {
        Object.defineProperties(t2, { instructions: { get: t2._getInstructions } });
      } catch (t3) {
      }
      t2.isEmpty = function() {
        return !(this._instructions.length || this._activeInstructions.length);
      }, t2.draw = function(t3, e3) {
        this._updateInstructions();
        for (var i2 = this._instructions, s4 = this._storeIndex, r2 = i2.length; s4 < r2; s4++)
          i2[s4].exec(t3, e3);
      }, t2.drawAsPath = function(t3) {
        this._updateInstructions();
        for (var e3, i2 = this._instructions, s4 = this._storeIndex, r2 = i2.length; s4 < r2; s4++)
          (e3 = i2[s4]).path !== false && e3.exec(t3);
      }, t2.moveTo = function(t3, e3) {
        return this.append(new h2.MoveTo(t3, e3), true);
      }, t2.lineTo = function(t3, e3) {
        return this.append(new h2.LineTo(t3, e3));
      }, t2.arcTo = function(t3, e3, i2, s4, r2) {
        return this.append(new h2.ArcTo(t3, e3, i2, s4, r2));
      }, t2.arc = function(t3, e3, i2, s4, r2, n) {
        return this.append(new h2.Arc(t3, e3, i2, s4, r2, n));
      }, t2.quadraticCurveTo = function(t3, e3, i2, s4) {
        return this.append(new h2.QuadraticCurveTo(t3, e3, i2, s4));
      }, t2.bezierCurveTo = function(t3, e3, i2, s4, r2, n) {
        return this.append(new h2.BezierCurveTo(t3, e3, i2, s4, r2, n));
      }, t2.rect = function(t3, e3, i2, s4) {
        return this.append(new h2.Rect(t3, e3, i2, s4));
      }, t2.closePath = function() {
        return this._activeInstructions.length ? this.append(new h2.ClosePath()) : this;
      }, t2.clear = function() {
        return this._instructions.length = this._activeInstructions.length = this._commitIndex = 0, this._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null, this._dirty = this._strokeIgnoreScale = false, this;
      }, t2.beginFill = function(t3) {
        return this._setFill(t3 ? new h2.Fill(t3) : null);
      }, t2.beginLinearGradientFill = function(t3, e3, i2, s4, r2, n) {
        return this._setFill(new h2.Fill().linearGradient(t3, e3, i2, s4, r2, n));
      }, t2.beginRadialGradientFill = function(t3, e3, i2, s4, r2, n, a, o2) {
        return this._setFill(new h2.Fill().radialGradient(t3, e3, i2, s4, r2, n, a, o2));
      }, t2.beginBitmapFill = function(t3, e3, i2) {
        return this._setFill(new h2.Fill(null, i2).bitmap(t3, e3));
      }, t2.endFill = function() {
        return this.beginFill();
      }, t2.setStrokeStyle = function(t3, e3, i2, s4, r2) {
        return this._updateInstructions(true), this._strokeStyle = this.command = new h2.StrokeStyle(t3, e3, i2, s4, r2), this._stroke && (this._stroke.ignoreScale = r2), this._strokeIgnoreScale = r2, this;
      }, t2.setStrokeDash = function(t3, e3) {
        return this._updateInstructions(true), this._strokeDash = this.command = new h2.StrokeDash(t3, e3), this;
      }, t2.beginStroke = function(t3) {
        return this._setStroke(t3 ? new h2.Stroke(t3) : null);
      }, t2.beginLinearGradientStroke = function(t3, e3, i2, s4, r2, n) {
        return this._setStroke(new h2.Stroke().linearGradient(t3, e3, i2, s4, r2, n));
      }, t2.beginRadialGradientStroke = function(t3, e3, i2, s4, r2, n, a, o2) {
        return this._setStroke(new h2.Stroke().radialGradient(t3, e3, i2, s4, r2, n, a, o2));
      }, t2.beginBitmapStroke = function(t3, e3) {
        return this._setStroke(new h2.Stroke().bitmap(t3, e3));
      }, t2.endStroke = function() {
        return this.beginStroke();
      }, t2.curveTo = t2.quadraticCurveTo, t2.drawRect = t2.rect, t2.drawRoundRect = function(t3, e3, i2, s4, r2) {
        return this.drawRoundRectComplex(t3, e3, i2, s4, r2, r2, r2, r2);
      }, t2.drawRoundRectComplex = function(t3, e3, i2, s4, r2, n, a, o2) {
        return this.append(new h2.RoundRect(t3, e3, i2, s4, r2, n, a, o2));
      }, t2.drawCircle = function(t3, e3, i2) {
        return this.append(new h2.Circle(t3, e3, i2));
      }, t2.drawEllipse = function(t3, e3, i2, s4) {
        return this.append(new h2.Ellipse(t3, e3, i2, s4));
      }, t2.drawPolyStar = function(t3, e3, i2, s4, r2, n) {
        return this.append(new h2.PolyStar(t3, e3, i2, s4, r2, n));
      }, t2.drawPolygon = function(t3, e3) {
        return this.append(new h2.Polygon(t3, e3));
      }, t2.append = function(t3, e3) {
        return this._activeInstructions.push(t3), this.command = t3, e3 || (this._dirty = true), this;
      }, t2.decodePath = function(t3) {
        for (var e3 = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath], i2 = [2, 2, 4, 6, 0], s4 = 0, r2 = t3.length, n = [], a = 0, o2 = 0, h3 = v.BASE_64; s4 < r2; ) {
          var c = t3.charAt(s4), u = h3[c], l = u >> 3, d = e3[l];
          if (!d || 3 & u)
            throw "bad path data (@" + s4 + "): " + c;
          var _ = i2[l];
          l || (a = o2 = 0), s4++;
          for (var p = 2 + (u >> 2 & 1), f3 = n.length = 0; f3 < _; f3++) {
            var g = (m2 = h3[t3.charAt(s4)]) >> 5 ? -1 : 1, m2 = (31 & m2) << 6 | h3[t3.charAt(s4 + 1)];
            p == 3 && (m2 = m2 << 6 | h3[t3.charAt(s4 + 2)]), m2 = g * m2 / 10, f3 % 2 ? a = m2 += a : o2 = m2 += o2, n[f3] = m2, s4 += p;
          }
          d.apply(this, n);
        }
        return this;
      }, t2.store = function() {
        return this._updateInstructions(true), this._storeIndex = this._instructions.length, this;
      }, t2.unstore = function() {
        return this._storeIndex = 0, this;
      }, t2.clone = function() {
        var t3 = new v();
        return t3.command = this.command, t3._stroke = this._stroke, t3._strokeStyle = this._strokeStyle, t3._strokeDash = this._strokeDash, t3._strokeIgnoreScale = this._strokeIgnoreScale, t3._fill = this._fill, t3._instructions = this._instructions.slice(), t3._commitIndex = this._commitIndex, t3._activeInstructions = this._activeInstructions.slice(), t3._dirty = this._dirty, t3._storeIndex = this._storeIndex, t3;
      }, t2.toString = function() {
        return "[Graphics]";
      }, t2.mt = t2.moveTo, t2.lt = t2.lineTo, t2.at = t2.arcTo, t2.bt = t2.bezierCurveTo, t2.qt = t2.quadraticCurveTo, t2.a = t2.arc, t2.r = t2.rect, t2.cp = t2.closePath, t2.c = t2.clear, t2.f = t2.beginFill, t2.lf = t2.beginLinearGradientFill, t2.rf = t2.beginRadialGradientFill, t2.bf = t2.beginBitmapFill, t2.ef = t2.endFill, t2.ss = t2.setStrokeStyle, t2.sd = t2.setStrokeDash, t2.s = t2.beginStroke, t2.ls = t2.beginLinearGradientStroke, t2.rs = t2.beginRadialGradientStroke, t2.bs = t2.beginBitmapStroke, t2.es = t2.endStroke, t2.dr = t2.drawRect, t2.rr = t2.drawRoundRect, t2.rc = t2.drawRoundRectComplex, t2.dc = t2.drawCircle, t2.de = t2.drawEllipse, t2.dp = t2.drawPolyStar, t2.pg = t2.drawPolygon, t2.p = t2.decodePath, t2._updateInstructions = function(t3) {
        var e3 = this._instructions, i2 = this._activeInstructions, s4 = this._commitIndex;
        if (this._dirty && i2.length) {
          e3.length = s4, e3.push(v.beginCmd);
          var r2 = i2.length, n = e3.length;
          e3.length = n + r2;
          for (var a = 0; a < r2; a++)
            e3[a + n] = i2[a];
          this._fill && e3.push(this._fill), this._stroke && (this._strokeDash !== this._oldStrokeDash && e3.push(this._strokeDash), this._strokeStyle !== this._oldStrokeStyle && e3.push(this._strokeStyle), t3 && (this._oldStrokeStyle = this._strokeStyle, this._oldStrokeDash = this._strokeDash), e3.push(this._stroke)), this._dirty = false;
        }
        t3 && (i2.length = 0, this._commitIndex = e3.length);
      }, t2._setFill = function(t3) {
        return this._updateInstructions(true), this.command = this._fill = t3, this;
      }, t2._setStroke = function(t3) {
        return this._updateInstructions(true), (this.command = this._stroke = t3) && (t3.ignoreScale = this._strokeIgnoreScale), this;
      }, (h2.LineTo = function(t3, e3) {
        this.x = t3, this.y = e3;
      }).prototype.exec = function(t3) {
        t3.lineTo(this.x, this.y);
      }, (h2.MoveTo = function(t3, e3) {
        this.x = t3, this.y = e3;
      }).prototype.exec = function(t3) {
        t3.moveTo(this.x, this.y);
      }, (h2.ArcTo = function(t3, e3, i2, s4, r2) {
        this.x1 = t3, this.y1 = e3, this.x2 = i2, this.y2 = s4, this.radius = r2;
      }).prototype.exec = function(t3) {
        t3.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);
      }, (h2.Arc = function(t3, e3, i2, s4, r2, n) {
        this.x = t3, this.y = e3, this.radius = i2, this.startAngle = s4, this.endAngle = r2, this.anticlockwise = !!n;
      }).prototype.exec = function(t3) {
        t3.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);
      }, (h2.QuadraticCurveTo = function(t3, e3, i2, s4) {
        this.cpx = t3, this.cpy = e3, this.x = i2, this.y = s4;
      }).prototype.exec = function(t3) {
        t3.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);
      }, (h2.BezierCurveTo = function(t3, e3, i2, s4, r2, n) {
        this.cp1x = t3, this.cp1y = e3, this.cp2x = i2, this.cp2y = s4, this.x = r2, this.y = n;
      }).prototype.exec = function(t3) {
        t3.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);
      }, (h2.Rect = function(t3, e3, i2, s4) {
        this.x = t3, this.y = e3, this.w = i2, this.h = s4;
      }).prototype.exec = function(t3) {
        t3.rect(this.x, this.y, this.w, this.h);
      }, (h2.ClosePath = function() {
      }).prototype.exec = function(t3) {
        t3.closePath();
      }, (h2.BeginPath = function() {
      }).prototype.exec = function(t3) {
        t3.beginPath();
      }, (t2 = (h2.Fill = function(t3, e3) {
        this.style = t3, this.matrix = e3;
      }).prototype).exec = function(t3) {
        var e3;
        this.style && (t3.fillStyle = this.style, (e3 = this.matrix) && (t3.save(), t3.transform(e3.a, e3.b, e3.c, e3.d, e3.tx, e3.ty)), t3.fill(), e3 && t3.restore());
      }, t2.linearGradient = function(t3, e3, i2, s4, r2, n) {
        for (var a = this.style = v._ctx.createLinearGradient(i2, s4, r2, n), o2 = 0, h3 = t3.length; o2 < h3; o2++)
          a.addColorStop(e3[o2], t3[o2]);
        return a.props = { colors: t3, ratios: e3, x0: i2, y0: s4, x1: r2, y1: n, type: "linear" }, this;
      }, t2.radialGradient = function(t3, e3, i2, s4, r2, n, a, o2) {
        for (var h3 = this.style = v._ctx.createRadialGradient(i2, s4, r2, n, a, o2), c = 0, u = t3.length; c < u; c++)
          h3.addColorStop(e3[c], t3[c]);
        return h3.props = { colors: t3, ratios: e3, x0: i2, y0: s4, r0: r2, x1: n, y1: a, r1: o2, type: "radial" }, this;
      }, t2.bitmap = function(t3, e3, i2) {
        return i2 && (this.matrix = i2), (t3.naturalWidth || t3.getContext || 2 <= t3.readyState) && ((this.style = v._ctx.createPattern(t3, e3 || "")).props = { image: t3, repetition: e3, type: "bitmap" }), this;
      }, t2.path = false, (t2 = (h2.Stroke = function(t3, e3) {
        this.style = t3, this.ignoreScale = e3;
      }).prototype).exec = function(t3) {
        this.style && (t3.strokeStyle = this.style, this.ignoreScale && (t3.save(), t3.setTransform(1, 0, 0, 1, 0, 0)), t3.stroke(), this.ignoreScale && t3.restore());
      }, t2.linearGradient = h2.Fill.prototype.linearGradient, t2.radialGradient = h2.Fill.prototype.radialGradient, t2.bitmap = h2.Fill.prototype.bitmap, t2.path = false, (t2 = (h2.StrokeStyle = function(t3, e3, i2, s4, r2) {
        this.width = t3, this.caps = e3, this.joints = i2, this.miterLimit = s4, this.ignoreScale = r2;
      }).prototype).exec = function(t3) {
        t3.lineWidth = this.width == null ? "1" : this.width, t3.lineCap = this.caps == null ? "butt" : isNaN(this.caps) ? this.caps : v.STROKE_CAPS_MAP[this.caps], t3.lineJoin = this.joints == null ? "miter" : isNaN(this.joints) ? this.joints : v.STROKE_JOINTS_MAP[this.joints], t3.miterLimit = this.miterLimit == null ? "10" : this.miterLimit, t3.ignoreScale = this.ignoreScale != null && this.ignoreScale;
      }, t2.path = false, (h2.StrokeDash = function(t3, e3) {
        this.segments = t3, this.offset = e3 || 0;
      }).prototype.exec = function(t3) {
        t3.setLineDash && (t3.setLineDash(this.segments || h2.StrokeDash.EMPTY_SEGMENTS), t3.lineDashOffset = this.offset || 0);
      }, h2.StrokeDash.EMPTY_SEGMENTS = [], (h2.RoundRect = function(t3, e3, i2, s4, r2, n, a, o2) {
        this.x = t3, this.y = e3, this.w = i2, this.h = s4, this.radiusTL = r2, this.radiusTR = n, this.radiusBR = a, this.radiusBL = o2;
      }).prototype.exec = function(t3) {
        var e3 = (h3 < c ? h3 : c) / 2, i2 = 0, s4 = 0, r2 = 0, n = 0, a = this.x, o2 = this.y, h3 = this.w, c = this.h, u = this.radiusTL, l = this.radiusTR, d = this.radiusBR, _ = this.radiusBL;
        u < 0 && (u *= i2 = -1), e3 < u && (u = e3), l < 0 && (l *= s4 = -1), e3 < l && (l = e3), d < 0 && (d *= r2 = -1), e3 < d && (d = e3), _ < 0 && (_ *= n = -1), e3 < _ && (_ = e3), t3.moveTo(a + h3 - l, o2), t3.arcTo(a + h3 + l * s4, o2 - l * s4, a + h3, o2 + l, l), t3.lineTo(a + h3, o2 + c - d), t3.arcTo(a + h3 + d * r2, o2 + c + d * r2, a + h3 - d, o2 + c, d), t3.lineTo(a + _, o2 + c), t3.arcTo(a - _ * n, o2 + c + _ * n, a, o2 + c - _, _), t3.lineTo(a, o2 + u), t3.arcTo(a - u * i2, o2 - u * i2, a + u, o2, u), t3.closePath();
      }, (h2.Circle = function(t3, e3, i2) {
        this.x = t3, this.y = e3, this.radius = i2;
      }).prototype.exec = function(t3) {
        t3.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);
      }, (h2.Ellipse = function(t3, e3, i2, s4) {
        this.x = t3, this.y = e3, this.w = i2, this.h = s4;
      }).prototype.exec = function(t3) {
        var e3 = this.x, i2 = this.y, s4 = this.w, r2 = this.h, n = s4 / 2 * 0.5522848, a = r2 / 2 * 0.5522848, o2 = e3 + s4, h3 = i2 + r2, s4 = e3 + s4 / 2, r2 = i2 + r2 / 2;
        t3.moveTo(e3, r2), t3.bezierCurveTo(e3, r2 - a, s4 - n, i2, s4, i2), t3.bezierCurveTo(s4 + n, i2, o2, r2 - a, o2, r2), t3.bezierCurveTo(o2, r2 + a, s4 + n, h3, s4, h3), t3.bezierCurveTo(s4 - n, h3, e3, r2 + a, e3, r2);
      }, (h2.PolyStar = function(t3, e3, i2, s4, r2, n) {
        this.x = t3, this.y = e3, this.radius = i2, this.sides = s4, this.pointSize = r2, this.angle = n;
      }).prototype.exec = function(t3) {
        var e3 = this.x, i2 = this.y, s4 = this.radius, r2 = (this.angle || 0) / 180 * Math.PI, n = this.sides, a = 1 - (this.pointSize || 0), o2 = Math.PI / n;
        t3.moveTo(e3 + Math.cos(r2) * s4, i2 + Math.sin(r2) * s4);
        for (var h3 = 0; h3 < n + 1 && (r2 += o2, a == 1 || (t3.lineTo(e3 + Math.cos(r2) * s4 * a, i2 + Math.sin(r2) * s4 * a), h3 != n)); h3++)
          r2 += o2, t3.lineTo(e3 + Math.cos(r2) * s4, i2 + Math.sin(r2) * s4);
        t3.closePath();
      }, (h2.Polygon = function(t3, e3) {
        this.points = t3, e3 == null && (e3 = true), this.close = e3;
      }).prototype.exec = function(t3) {
        var e3, i2, s4 = this.points, r2 = this.close, n = s4[0];
        t3.moveTo(n[0], n[1]);
        for (var a = 1; a < s4.length; a++)
          e3 = s4[a], a == 1 && (i2 = [e3[0], e3[1]]), t3.lineTo(e3[0], e3[1]);
        r2 && (t3.lineTo(n[0], n[1]), t3.lineTo(i2[0], i2[1])), t3.closePath();
      }, v.beginCmd = new h2.BeginPath(), createjs.Graphics = v;
    }(), function() {
      "use strict";
      function n() {
        this.EventDispatcher_constructor(), this.alpha = 1, this.cacheCanvas = null, this.bitmapCache = null, this.id = createjs.UID.get(), this.mouseEnabled = true, this.tickEnabled = true, this.name = null, this.parent = null, this.regX = 0, this.regY = 0, this.rotation = 0, this.scaleX = 1, this.scaleY = 1, this.skewX = 0, this.skewY = 0, this.shadow = null, this.visible = true, this.x = 0, this.y = 0, this.transformMatrix = null, this.compositeOperation = null, this.snapToPixel = true, this.filters = null, this.mask = null, this.hitArea = null, this.cursor = null, this._props = new createjs.DisplayProps(), this._rectangle = new createjs.Rectangle(), this._bounds = null, this._webGLRenderStyle = n._StageGL_NONE;
      }
      var t2 = createjs.extend(n, createjs.EventDispatcher);
      n._MOUSE_EVENTS = ["click", "dblclick", "mousedown", "mouseout", "mouseover", "pressmove", "pressup", "rollout", "rollover"], n.suppressCrossDomainErrors = false, n._snapToPixelEnabled = false, n._StageGL_NONE = 0, n._StageGL_SPRITE = 1, n._StageGL_BITMAP = 2;
      var e2 = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
      e2.getContext && (n._hitTestCanvas = e2, n._hitTestContext = e2.getContext("2d"), e2.width = e2.height = 1), t2._getStage = function() {
        for (var t3 = this, e3 = createjs.Stage; t3.parent; )
          t3 = t3.parent;
        return t3 instanceof e3 ? t3 : null;
      }, t2.getStage = createjs.deprecate(t2._getStage, "DisplayObject.getStage");
      try {
        Object.defineProperties(t2, { stage: { get: t2._getStage }, cacheID: { get: function() {
          return this.bitmapCache && this.bitmapCache.cacheID;
        }, set: function(t3) {
          this.bitmapCache && (this.bitmapCache.cacheID = t3);
        } }, scale: { get: function() {
          return this.scaleX;
        }, set: function(t3) {
          this.scaleX = this.scaleY = t3;
        } } });
      } catch (t3) {
      }
      t2.isVisible = function() {
        return !!(this.visible && 0 < this.alpha && this.scaleX != 0 && this.scaleY != 0);
      }, t2.draw = function(t3, e3) {
        var i2 = this.bitmapCache;
        return !(!i2 || e3) && i2.draw(t3);
      }, t2.updateContext = function(t3) {
        var e3 = this, i2 = e3.mask, s4 = e3._props.matrix;
        i2 && i2.graphics && !i2.graphics.isEmpty() && (i2.getMatrix(s4), t3.transform(s4.a, s4.b, s4.c, s4.d, s4.tx, s4.ty), i2.graphics.drawAsPath(t3), t3.clip(), s4.invert(), t3.transform(s4.a, s4.b, s4.c, s4.d, s4.tx, s4.ty)), this.getMatrix(s4);
        var r2 = s4.tx, i2 = s4.ty;
        n._snapToPixelEnabled && e3.snapToPixel && (r2 = r2 + (r2 < 0 ? -0.5 : 0.5) | 0, i2 = i2 + (i2 < 0 ? -0.5 : 0.5) | 0), t3.transform(s4.a, s4.b, s4.c, s4.d, r2, i2), t3.globalAlpha *= e3.alpha, e3.compositeOperation && (t3.globalCompositeOperation = e3.compositeOperation), e3.shadow && this._applyShadow(t3, e3.shadow);
      }, t2.cache = function(t3, e3, i2, s4, r2, n2) {
        this.bitmapCache || (this.bitmapCache = new createjs.BitmapCache()), this.bitmapCache.define(this, t3, e3, i2, s4, r2, n2);
      }, t2.updateCache = function(t3) {
        if (!this.bitmapCache)
          throw "cache() must be called before updateCache()";
        this.bitmapCache.update(t3);
      }, t2.uncache = function() {
        this.bitmapCache && (this.bitmapCache.release(), this.bitmapCache = void 0);
      }, t2.getCacheDataURL = function() {
        return this.bitmapCache ? this.bitmapCache.getCacheDataURL() : null;
      }, t2.localToGlobal = function(t3, e3, i2) {
        i2 = this.getConcatenatedMatrix(this._props.matrix).transformPoint(t3, e3, i2 || new createjs.Point());
        return this.stage && createjs.stageTransformable && (i2 = this.stage.getConcatenatedMatrix(this._mtx).invert().transformPoint(i2.x, i2.y)), i2;
      }, t2.globalToLocal = function(t3, e3, i2) {
        var s4;
        return this.stage && createjs.stageTransformable && (t3 = (s4 = this.stage.getConcatenatedMatrix(this._mtx).transformPoint(t3, e3)).x, e3 = s4.y), this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(t3, e3, i2 || new createjs.Point());
      }, t2.localToLocal = function(t3, e3, i2, s4) {
        return s4 = this.localToGlobal(t3, e3, s4), i2.globalToLocal(s4.x, s4.y, s4);
      }, t2.setTransform = function(t3, e3, i2, s4, r2, n2, a, o2, h2) {
        return this.x = t3 || 0, this.y = e3 || 0, this.scaleX = i2 == null ? 1 : i2, this.scaleY = s4 == null ? 1 : s4, this.rotation = r2 || 0, this.skewX = n2 || 0, this.skewY = a || 0, this.regX = o2 || 0, this.regY = h2 || 0, this;
      }, t2.getMatrix = function(t3) {
        var e3 = this, t3 = t3 && t3.identity() || new createjs.Matrix2D();
        return e3.transformMatrix ? t3.copy(e3.transformMatrix) : t3.appendTransform(e3.x, e3.y, e3.scaleX, e3.scaleY, e3.rotation, e3.skewX, e3.skewY, e3.regX, e3.regY);
      }, t2.getConcatenatedMatrix = function(t3) {
        for (var e3 = this, i2 = this.getMatrix(t3); e3 = e3.parent; )
          i2.prependMatrix(e3.getMatrix(e3._props.matrix));
        return i2;
      }, t2.getConcatenatedDisplayProps = function(t3) {
        t3 = t3 ? t3.identity() : new createjs.DisplayProps();
        for (var e3 = this, i2 = e3.getMatrix(t3.matrix); t3.prepend(e3.visible, e3.alpha, e3.shadow, e3.compositeOperation), e3 != this && i2.prependMatrix(e3.getMatrix(e3._props.matrix)), e3 = e3.parent; )
          ;
        return t3;
      }, t2.hitTest = function(t3, e3) {
        var i2 = n._hitTestContext;
        i2.setTransform(1, 0, 0, 1, -t3, -e3), this.draw(i2);
        e3 = this._testHit(i2);
        return i2.setTransform(1, 0, 0, 1, 0, 0), i2.clearRect(0, 0, 2, 2), e3;
      }, t2.set = function(t3) {
        for (var e3 in t3)
          this[e3] = t3[e3];
        return this;
      }, t2.getBounds = function() {
        if (this._bounds)
          return this._rectangle.copy(this._bounds);
        var t3 = this.cacheCanvas;
        if (t3) {
          var e3 = this._cacheScale;
          return this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, t3.width / e3, t3.height / e3);
        }
        return null;
      }, t2.getTransformedBounds = function() {
        return this._getBounds();
      }, t2.setBounds = function(t3, e3, i2, s4) {
        this._bounds = t3 != null ? (this._bounds || new createjs.Rectangle()).setValues(t3, e3, i2, s4) : t3;
      }, t2.clone = function() {
        return this._cloneProps(new n());
      }, t2.toString = function() {
        return "[DisplayObject (name=" + this.name + ")]";
      }, t2._updateState = null, t2._cloneProps = function(t3) {
        return t3.alpha = this.alpha, t3.mouseEnabled = this.mouseEnabled, t3.tickEnabled = this.tickEnabled, t3.name = this.name, t3.regX = this.regX, t3.regY = this.regY, t3.rotation = this.rotation, t3.scaleX = this.scaleX, t3.scaleY = this.scaleY, t3.shadow = this.shadow, t3.skewX = this.skewX, t3.skewY = this.skewY, t3.visible = this.visible, t3.x = this.x, t3.y = this.y, t3.compositeOperation = this.compositeOperation, t3.snapToPixel = this.snapToPixel, t3.filters = this.filters == null ? null : this.filters.slice(0), t3.mask = this.mask, t3.hitArea = this.hitArea, t3.cursor = this.cursor, t3._bounds = this._bounds, t3;
      }, t2._applyShadow = function(t3, e3) {
        e3 = e3 || Shadow.identity, t3.shadowColor = e3.color, t3.shadowOffsetX = e3.offsetX, t3.shadowOffsetY = e3.offsetY, t3.shadowBlur = e3.blur;
      }, t2._tick = function(t3) {
        var e3 = this._listeners;
        e3 && e3.tick && (t3.target = null, t3.propagationStopped = t3.immediatePropagationStopped = false, this.dispatchEvent(t3));
      }, t2._testHit = function(t3) {
        try {
          var e3 = 1 < t3.getImageData(0, 0, 1, 1).data[3];
        } catch (t4) {
          if (!n.suppressCrossDomainErrors)
            throw "An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.";
        }
        return e3;
      }, t2._getBounds = function(t3, e3) {
        return this._transformBounds(this.getBounds(), t3, e3);
      }, t2._transformBounds = function(t3, e3, i2) {
        if (!t3)
          return t3;
        var s4 = t3.x, r2 = t3.y, n2 = t3.width, a = t3.height, o2 = this._props.matrix, o2 = i2 ? o2.identity() : this.getMatrix(o2);
        (s4 || r2) && o2.appendTransform(0, 0, 1, 1, 0, 0, 0, -s4, -r2), e3 && o2.prependMatrix(e3);
        var h2 = n2 * o2.a, c = n2 * o2.b, u = a * o2.c, l = a * o2.d, d = o2.tx, i2 = o2.ty, e3 = d, n2 = d, a = i2, o2 = i2;
        return (s4 = h2 + d) < e3 ? e3 = s4 : n2 < s4 && (n2 = s4), (s4 = h2 + u + d) < e3 ? e3 = s4 : n2 < s4 && (n2 = s4), (s4 = u + d) < e3 ? e3 = s4 : n2 < s4 && (n2 = s4), (r2 = c + i2) < a ? a = r2 : o2 < r2 && (o2 = r2), (r2 = c + l + i2) < a ? a = r2 : o2 < r2 && (o2 = r2), (r2 = l + i2) < a ? a = r2 : o2 < r2 && (o2 = r2), t3.setValues(e3, a, n2 - e3, o2 - a);
      }, t2._hasMouseEventListener = function() {
        for (var t3 = n._MOUSE_EVENTS, e3 = 0, i2 = t3.length; e3 < i2; e3++)
          if (this.hasEventListener(t3[e3]))
            return true;
        return !!this.cursor;
      }, createjs.DisplayObject = createjs.promote(n, "EventDispatcher");
    }(), function() {
      "use strict";
      function g() {
        this.DisplayObject_constructor(), this.children = [], this.mouseChildren = true, this.tickChildren = true;
      }
      var t2 = createjs.extend(g, createjs.DisplayObject);
      t2._getNumChildren = function() {
        return this.children.length;
      }, t2.getNumChildren = createjs.deprecate(t2._getNumChildren, "Container.getNumChildren");
      try {
        Object.defineProperties(t2, { numChildren: { get: t2._getNumChildren } });
      } catch (t3) {
      }
      t2.initialize = g, t2.isVisible = function() {
        var t3 = this.cacheCanvas || this.children.length;
        return !!(this.visible && 0 < this.alpha && this.scaleX != 0 && this.scaleY != 0 && t3);
      }, t2.draw = function(t3, e2) {
        if (this.DisplayObject_draw(t3, e2))
          return true;
        for (var i2 = this.children.slice(), s4 = 0, r2 = i2.length; s4 < r2; s4++) {
          var n = i2[s4];
          n.isVisible() && (t3.save(), n.updateContext(t3), n.draw(t3), t3.restore());
        }
        return true;
      }, t2.addChild = function(t3) {
        if (t3 == null)
          return t3;
        var e2 = arguments.length;
        if (1 < e2) {
          for (var i2 = 0; i2 < e2; i2++)
            this.addChild(arguments[i2]);
          return arguments[e2 - 1];
        }
        var s4 = t3.parent, r2 = s4 === this;
        return s4 && s4._removeChildAt(createjs.indexOf(s4.children, t3), r2), (t3.parent = this).children.push(t3), r2 || t3.dispatchEvent("added"), t3;
      }, t2.addChildAt = function(t3, e2) {
        var i2 = arguments.length, s4 = arguments[i2 - 1];
        if (s4 < 0 || s4 > this.children.length)
          return arguments[i2 - 2];
        if (2 < i2) {
          for (var r2 = 0; r2 < i2 - 1; r2++)
            this.addChildAt(arguments[r2], s4 + r2);
          return arguments[i2 - 2];
        }
        var n = t3.parent, a = n === this;
        return n && n._removeChildAt(createjs.indexOf(n.children, t3), a), (t3.parent = this).children.splice(e2, 0, t3), a || t3.dispatchEvent("added"), t3;
      }, t2.removeChild = function(t3) {
        var e2 = arguments.length;
        if (1 < e2) {
          for (var i2 = true, s4 = 0; s4 < e2; s4++)
            i2 = i2 && this.removeChild(arguments[s4]);
          return i2;
        }
        return this._removeChildAt(createjs.indexOf(this.children, t3));
      }, t2.removeChildAt = function(t3) {
        var e2 = arguments.length;
        if (1 < e2) {
          for (var i2 = [], s4 = 0; s4 < e2; s4++)
            i2[s4] = arguments[s4];
          i2.sort(function(t4, e3) {
            return e3 - t4;
          });
          for (var r2 = true, s4 = 0; s4 < e2; s4++)
            r2 = r2 && this._removeChildAt(i2[s4]);
          return r2;
        }
        return this._removeChildAt(t3);
      }, t2.removeAllChildren = function() {
        for (var t3 = this.children; t3.length; )
          this._removeChildAt(0);
      }, t2.getChildAt = function(t3) {
        return this.children[t3];
      }, t2.getChildByName = function(t3) {
        for (var e2 = this.children, i2 = 0, s4 = e2.length; i2 < s4; i2++)
          if (e2[i2].name == t3)
            return e2[i2];
        return null;
      }, t2.sortChildren = function(t3) {
        this.children.sort(t3);
      }, t2.getChildIndex = function(t3) {
        return createjs.indexOf(this.children, t3);
      }, t2.swapChildrenAt = function(t3, e2) {
        var i2 = this.children, s4 = i2[t3], r2 = i2[e2];
        s4 && r2 && (i2[t3] = r2, i2[e2] = s4);
      }, t2.swapChildren = function(t3, e2) {
        for (var i2, s4, r2 = this.children, n = 0, a = r2.length; n < a && (r2[n] == t3 && (i2 = n), r2[n] == e2 && (s4 = n), i2 == null || s4 == null); n++)
          ;
        n != a && (r2[i2] = e2, r2[s4] = t3);
      }, t2.setChildIndex = function(t3, e2) {
        var i2 = this.children, s4 = i2.length;
        if (!(t3.parent != this || e2 < 0 || s4 <= e2)) {
          for (var r2 = 0; r2 < s4 && i2[r2] != t3; r2++)
            ;
          r2 != s4 && r2 != e2 && (i2.splice(r2, 1), i2.splice(e2, 0, t3));
        }
      }, t2.contains = function(t3) {
        for (; t3; ) {
          if (t3 == this)
            return true;
          t3 = t3.parent;
        }
        return false;
      }, t2.hitTest = function(t3, e2) {
        return this.getObjectUnderPoint(t3, e2) != null;
      }, t2.getObjectsUnderPoint = function(t3, e2, i2) {
        var s4 = [], e2 = this.localToGlobal(t3, e2);
        return this._getObjectsUnderPoint(e2.x, e2.y, s4, 0 < i2, i2 == 1), s4;
      }, t2.getObjectUnderPoint = function(t3, e2, i2) {
        e2 = this.localToGlobal(t3, e2);
        return this._getObjectsUnderPoint(e2.x, e2.y, null, 0 < i2, i2 == 1);
      }, t2.getBounds = function() {
        return this._getBounds(null, true);
      }, t2.getTransformedBounds = function() {
        return this._getBounds();
      }, t2.clone = function(t3) {
        var e2 = this._cloneProps(new g());
        return t3 && this._cloneChildren(e2), e2;
      }, t2.toString = function() {
        return "[Container (name=" + this.name + ")]";
      }, t2._tick = function(t3) {
        if (this.tickChildren)
          for (var e2 = this.children.length - 1; 0 <= e2; e2--) {
            var i2 = this.children[e2];
            i2.tickEnabled && i2._tick && i2._tick(t3);
          }
        this.DisplayObject__tick(t3);
      }, t2._cloneChildren = function(t3) {
        t3.children.length && t3.removeAllChildren();
        for (var e2 = t3.children, i2 = 0, s4 = this.children.length; i2 < s4; i2++) {
          var r2 = this.children[i2].clone(true);
          r2.parent = t3, e2.push(r2);
        }
      }, t2._removeChildAt = function(t3, e2) {
        if (t3 < 0 || t3 > this.children.length - 1)
          return false;
        var i2 = this.children[t3];
        return i2 && (i2.parent = null), this.children.splice(t3, 1), e2 || i2.dispatchEvent("removed"), true;
      }, t2._getObjectsUnderPoint = function(t3, e2, i2, s4, r2, n) {
        var a, o2, h2;
        if (this.stage && createjs.stageTransformable && (a = t3, o2 = e2, t3 = (h2 = this.stage.getConcatenatedMatrix(this._mtx).transformPoint(t3, e2)).x, e2 = h2.y), !(n = n || 0) && !this._testMask(this, t3, e2))
          return null;
        var c = createjs.DisplayObject._hitTestContext;
        r2 = r2 || s4 && this._hasMouseEventListener();
        for (var u = this.children, l = u.length - 1; 0 <= l; l--) {
          var d = u[l], _ = d.hitArea;
          if (d.visible && (_ || d.isVisible()) && (!s4 || d.mouseEnabled) && (_ || this._testMask(d, t3, e2))) {
            if (!_ && d instanceof g) {
              var p = d._getObjectsUnderPoint(a != null ? a : t3, o2 != null ? o2 : e2, i2, s4, r2, n + 1);
              if (!i2 && p)
                return s4 && !this.mouseChildren ? this : p;
            } else if (!s4 || r2 || d._hasMouseEventListener()) {
              var f3 = d.getConcatenatedDisplayProps(d._props), p = f3.matrix;
              if (_ && (p.appendMatrix(_.getMatrix(_._props.matrix)), f3.alpha = _.alpha), c.globalAlpha = f3.alpha, c.setTransform(p.a, p.b, p.c, p.d, p.tx - t3, p.ty - e2), (_ || d).draw(c), this._testHit(c)) {
                if (c.setTransform(1, 0, 0, 1, 0, 0), c.clearRect(0, 0, 2, 2), !i2)
                  return s4 && !this.mouseChildren ? this : d;
                i2.push(d);
              }
            }
          }
        }
        return null;
      }, t2._testMask = function(t3, e2, i2) {
        var s4 = t3.mask;
        if (!s4 || !s4.graphics || s4.graphics.isEmpty())
          return true;
        var r2 = this._props.matrix, t3 = t3.parent, r2 = t3 ? t3.getConcatenatedMatrix(r2) : r2.identity();
        r2 = s4.getMatrix(s4._props.matrix).prependMatrix(r2);
        t3 = createjs.DisplayObject._hitTestContext;
        return t3.setTransform(r2.a, r2.b, r2.c, r2.d, r2.tx - e2, r2.ty - i2), s4.graphics.drawAsPath(t3), t3.fillStyle = "#000", t3.fill(), !!this._testHit(t3) && (t3.setTransform(1, 0, 0, 1, 0, 0), t3.clearRect(0, 0, 2, 2), true);
      }, t2._getBounds = function(t3, e2) {
        var i2 = this.DisplayObject_getBounds();
        if (i2)
          return this._transformBounds(i2, t3, e2);
        var s4 = this._props.matrix, s4 = e2 ? s4.identity() : this.getMatrix(s4);
        t3 && s4.prependMatrix(t3);
        for (var r2 = this.children.length, n = null, a = 0; a < r2; a++) {
          var o2 = this.children[a];
          o2.visible && (i2 = o2._getBounds(s4)) && (n ? n.extend(i2.x, i2.y, i2.width, i2.height) : n = i2.clone());
        }
        return n;
      }, createjs.Container = createjs.promote(g, "DisplayObject");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.Container_constructor(), this.autoClear = true, this.canvas = typeof t3 == "string" ? document.getElementById(t3) : t3, this.mouseX = 0, this.mouseY = 0, this.drawRect = null, this.snapToPixelEnabled = false, this.mouseInBounds = false, this.tickOnUpdate = true, this.mouseMoveOutside = false, this.preventSelection = true, this._pointerData = {}, this._pointerCount = 0, this._primaryPointerID = null, this._mouseOverIntervalID = null, this._nextStage = null, this._prevStage = null, this.enableDOMEvents(true);
      }
      var e2 = createjs.extend(t2, createjs.Container);
      e2._get_nextStage = function() {
        return this._nextStage;
      }, e2._set_nextStage = function(t3) {
        this._nextStage && (this._nextStage._prevStage = null), t3 && (t3._prevStage = this), this._nextStage = t3;
      };
      try {
        Object.defineProperties(e2, { nextStage: { get: e2._get_nextStage, set: e2._set_nextStage } });
      } catch (t3) {
      }
      e2.update = function(t3) {
        var e3;
        this.canvas && (this.tickOnUpdate && this.tick(t3), this.dispatchEvent("drawstart", false, true) !== false && (createjs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled, e3 = this.drawRect, (t3 = this.canvas.getContext("2d")).setTransform(1, 0, 0, 1, 0, 0), this.autoClear && (e3 ? t3.clearRect(e3.x, e3.y, e3.width, e3.height) : t3.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1)), t3.save(), this.drawRect && (t3.beginPath(), t3.rect(e3.x, e3.y, e3.width, e3.height), t3.clip()), this.updateContext(t3), this.draw(t3, false), t3.restore(), this.dispatchEvent("drawend")));
      }, e2.tick = function(t3) {
        if (this.tickEnabled && this.dispatchEvent("tickstart", false, true) !== false) {
          var e3 = new createjs.Event("tick");
          if (t3)
            for (var i2 in t3)
              t3.hasOwnProperty(i2) && (e3[i2] = t3[i2]);
          this._tick(e3), this.dispatchEvent("tickend");
        }
      }, e2.handleEvent = function(t3) {
        t3.type == "tick" && this.update(t3);
      }, e2.clear = function() {
        var t3;
        this.canvas && ((t3 = this.canvas.getContext("2d")).setTransform(1, 0, 0, 1, 0, 0), t3.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1));
      }, e2.toDataURL = function(t3, e3) {
        var i2, s4, r2 = this.canvas.getContext("2d"), n = this.canvas.width, a = this.canvas.height;
        t3 && (i2 = r2.getImageData(0, 0, n, a), s4 = r2.globalCompositeOperation, r2.globalCompositeOperation = "destination-over", r2.fillStyle = t3, r2.fillRect(0, 0, n, a));
        e3 = this.canvas.toDataURL(e3 || "image/png");
        return t3 && (r2.putImageData(i2, 0, 0), r2.globalCompositeOperation = s4), e3;
      }, e2.enableMouseOver = function(t3) {
        if (this._mouseOverIntervalID && (clearInterval(this._mouseOverIntervalID), this._mouseOverIntervalID = null, t3 == 0 && this._testMouseOver(true)), t3 == null)
          t3 = 20;
        else if (t3 <= 0)
          return;
        var e3 = this;
        this._mouseOverIntervalID = setInterval(function() {
          e3._testMouseOver();
        }, 1e3 / Math.min(50, t3));
      }, e2.enableDOMEvents = function(t3) {
        t3 == null && (t3 = true);
        var e3, i2, s4 = this._eventListeners;
        if (!t3 && s4) {
          for (e3 in s4)
            (i2 = s4[e3]).t.removeEventListener(e3, i2.f, false);
          this._eventListeners = null;
        } else if (t3 && !s4 && this.canvas) {
          var t3 = window.addEventListener ? window : document, r2 = this;
          for (e3 in (s4 = this._eventListeners = {}).mouseup = { t: t3, f: function(t4) {
            r2._handleMouseUp(t4);
          } }, s4.mousemove = { t: t3, f: function(t4) {
            r2._handleMouseMove(t4);
          } }, s4.dblclick = { t: this.canvas, f: function(t4) {
            r2._handleDoubleClick(t4);
          } }, s4.mousedown = { t: this.canvas, f: function(t4) {
            r2._handleMouseDown(t4);
          } }, s4)
            (i2 = s4[e3]).t.addEventListener(e3, i2.f, false);
        }
      }, e2.clone = function() {
        throw "Stage cannot be cloned.";
      }, e2.toString = function() {
        return "[Stage (name=" + this.name + ")]";
      }, e2._getElementRect = function(e3) {
        var i2;
        try {
          i2 = e3.getBoundingClientRect();
        } catch (t4) {
          i2 = { top: e3.offsetTop, left: e3.offsetLeft, width: e3.offsetWidth, height: e3.offsetHeight };
        }
        var t3 = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0), s4 = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0), r2 = window.getComputedStyle ? getComputedStyle(e3, null) : e3.currentStyle, n = parseInt(r2.paddingLeft) + parseInt(r2.borderLeftWidth), a = parseInt(r2.paddingTop) + parseInt(r2.borderTopWidth), o2 = parseInt(r2.paddingRight) + parseInt(r2.borderRightWidth), r2 = parseInt(r2.paddingBottom) + parseInt(r2.borderBottomWidth);
        return { left: i2.left + t3 + n, right: i2.right + t3 - o2, top: i2.top + s4 + a, bottom: i2.bottom + s4 - r2 };
      }, e2._getPointerData = function(t3) {
        return this._pointerData[t3] || (this._pointerData[t3] = { x: 0, y: 0 });
      }, e2._handleMouseMove = function(t3) {
        t3 = t3 || window.event, this._handlePointerMove(-1, t3, t3.pageX, t3.pageY);
      }, e2._handlePointerMove = function(t3, e3, i2, s4, r2) {
        var n, a;
        this._prevStage && r2 === void 0 || this.canvas && (n = this._nextStage, r2 = (a = this._getPointerData(t3)).inBounds, this._updatePointerPosition(t3, e3, i2, s4), (r2 || a.inBounds || this.mouseMoveOutside) && (t3 === -1 && a.inBounds == !r2 && this._dispatchMouseEvent(this, r2 ? "mouseleave" : "mouseenter", false, t3, a, e3), this._dispatchMouseEvent(this, "stagemousemove", false, t3, a, e3), this._dispatchMouseEvent(a.target, "pressmove", true, t3, a, e3)), n && n._handlePointerMove(t3, e3, i2, s4, null));
      }, e2._updatePointerPosition = function(t3, e3, i2, s4) {
        var r2 = this._getElementRect(this.canvas);
        i2 -= r2.left, s4 -= r2.top;
        var n = this.canvas.width, a = this.canvas.height;
        i2 /= (r2.right - r2.left) / n, s4 /= (r2.bottom - r2.top) / a;
        var o2, r2 = this._getPointerData(t3);
        createjs.stageTransformable ? (this._mtx = this.getConcatenatedMatrix(this._mtx).invert(), (r2.inBounds = 0 <= i2 && 0 <= s4 && i2 <= n - 1 && s4 <= a - 1) ? (r2.x = i2, r2.y = s4, o2 = this._mtx.transformPoint(r2.x, r2.y), r2.x = o2.x, r2.y = o2.y) : this.mouseMoveOutside && (r2.x = i2 < 0 ? 0 : n - 1 < i2 ? n - 1 : i2, r2.y = s4 < 0 ? 0 : a - 1 < s4 ? a - 1 : s4, o2 = this._mtx.transformPoint(r2.x, r2.y), r2.x = o2.x, r2.y = o2.y), r2.rawX = i2, r2.rawY = s4, o2 = this._mtx.transformPoint(r2.rawX, r2.rawY), r2.rawX = o2.x, r2.rawY = o2.y) : ((r2.inBounds = 0 <= i2 && 0 <= s4 && i2 <= n - 1 && s4 <= a - 1) ? (r2.x = i2, r2.y = s4) : this.mouseMoveOutside && (r2.x = i2 < 0 ? 0 : n - 1 < i2 ? n - 1 : i2, r2.y = s4 < 0 ? 0 : a - 1 < s4 ? a - 1 : s4), r2.rawX = i2, r2.rawY = s4), r2.posEvtObj = e3, t3 !== this._primaryPointerID && t3 !== -1 || (this.mouseX = r2.x, this.mouseY = r2.y, this.mouseInBounds = r2.inBounds);
      }, e2._handleMouseUp = function(t3) {
        this._handlePointerUp(-1, t3, false);
      }, e2._handlePointerUp = function(t3, e3, i2, s4) {
        var r2, n, a = this._nextStage, o2 = this._getPointerData(t3);
        this._prevStage && s4 === void 0 || (r2 = null, n = o2.target, s4 || !n && !a || (r2 = this._getObjectsUnderPoint(o2.x, o2.y, null, true)), o2.down && (this._dispatchMouseEvent(this, "stagemouseup", false, t3, o2, e3, r2), o2.down = false), r2 == n && this._dispatchMouseEvent(n, "click", true, t3, o2, e3), this._dispatchMouseEvent(n, "pressup", true, t3, o2, e3), i2 ? (t3 == this._primaryPointerID && (this._primaryPointerID = null), delete this._pointerData[t3]) : o2.target = null, a && a._handlePointerUp(t3, e3, i2, s4 || r2 && this));
      }, e2._handleMouseDown = function(t3) {
        this._handlePointerDown(-1, t3, t3.pageX, t3.pageY);
      }, e2._handlePointerDown = function(t3, e3, i2, s4, r2) {
        this.preventSelection && e3.preventDefault(), this._primaryPointerID != null && t3 !== -1 || (this._primaryPointerID = t3), s4 != null && this._updatePointerPosition(t3, e3, i2, s4);
        var n = null, a = this._nextStage, o2 = this._getPointerData(t3);
        r2 || (n = o2.target = this._getObjectsUnderPoint(o2.x, o2.y, null, true)), o2.inBounds && (this._dispatchMouseEvent(this, "stagemousedown", false, t3, o2, e3, n), o2.down = true), this._dispatchMouseEvent(n, "mousedown", true, t3, o2, e3), a && a._handlePointerDown(t3, e3, i2, s4, r2 || n && this);
      }, e2._testMouseOver = function(t3, e3, i2) {
        if (!this._prevStage || e3 !== void 0) {
          var s4 = this._nextStage;
          if (this._mouseOverIntervalID) {
            var r2 = this._getPointerData(-1);
            if (r2 && (t3 || this.mouseX != this._mouseOverX || this.mouseY != this._mouseOverY || !this.mouseInBounds)) {
              var n, a, o2 = r2.posEvtObj, h2 = i2 || o2 && o2.target == this.canvas, c = null, u = -1, l = "";
              !e3 && (t3 || this.mouseInBounds && h2) && (c = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true), this._mouseOverX = this.mouseX, this._mouseOverY = this.mouseY);
              for (var d = this._mouseOverTarget || [], _ = d[d.length - 1], p = this._mouseOverTarget = [], f3 = c; f3; )
                p.unshift(f3), l = l || f3.cursor, f3 = f3.parent;
              for (this.canvas.style.cursor = l, !e3 && i2 && (i2.canvas.style.cursor = l), n = 0, a = p.length; n < a && p[n] == d[n]; n++)
                u = n;
              for (_ != c && this._dispatchMouseEvent(_, "mouseout", true, -1, r2, o2, c), n = d.length - 1; u < n; n--)
                this._dispatchMouseEvent(d[n], "rollout", false, -1, r2, o2, c);
              for (n = p.length - 1; u < n; n--)
                this._dispatchMouseEvent(p[n], "rollover", false, -1, r2, o2, _);
              _ != c && this._dispatchMouseEvent(c, "mouseover", true, -1, r2, o2, _), s4 && s4._testMouseOver(t3, e3 || c && this, i2 || h2 && this);
            }
          } else
            s4 && s4._testMouseOver(t3, e3, i2);
        }
      }, e2._handleDoubleClick = function(t3, e3) {
        var i2 = null, s4 = this._nextStage, r2 = this._getPointerData(-1);
        e3 || (i2 = this._getObjectsUnderPoint(r2.x, r2.y, null, true), this._dispatchMouseEvent(i2, "dblclick", true, -1, r2, t3)), s4 && s4._handleDoubleClick(t3, e3 || i2 && this);
      }, e2._dispatchMouseEvent = function(t3, e3, i2, s4, r2, n, a) {
        t3 && (i2 || t3.hasEventListener(e3)) && (a = new createjs.MouseEvent(e3, i2, false, r2.x, r2.y, n, s4, s4 === this._primaryPointerID || s4 === -1, r2.rawX, r2.rawY, a), t3.dispatchEvent(a));
      }, createjs.Stage = createjs.promote(t2, "Container");
    }(), function() {
      "use strict";
      function R(t3, e2) {
        if (this.Stage_constructor(t3), e2 !== void 0) {
          if (typeof e2 != "object")
            throw "Invalid options object";
          var i2 = e2.premultiply, s4 = e2.transparent, r2 = e2.antialias, n = e2.preserveBuffer, a = e2.autoPurge;
        }
        this.vocalDebug = false, this._preserveBuffer = n || false, this._antialias = r2 || false, this._transparent = s4 || false, this._premultiply = i2 || false, this._autoPurge = void 0, this.autoPurge = a, this._viewportWidth = 0, this._viewportHeight = 0, this._projectionMatrix = null, this._webGLContext = null, this._clearColor = { r: 0.5, g: 0.5, b: 0.5, a: 0 }, this._maxCardsPerBatch = R.DEFAULT_MAX_BATCH_SIZE, this._activeShader = null, this._vertices = null, this._vertexPositionBuffer = null, this._uvs = null, this._uvPositionBuffer = null, this._indices = null, this._textureIndexBuffer = null, this._alphas = null, this._alphaBuffer = null, this._textureDictionary = [], this._textureIDs = {}, this._batchTextures = [], this._baseTextures = [], this._batchTextureCount = 8, this._lastTextureInsert = -1, this._batchID = 0, this._drawID = 0, this._slotBlacklist = [], this._isDrawing = 0, this._lastTrackedCanvas = 0, this.isCacheControlled = false, this._cacheContainer = new createjs.Container(), this._initializeWebGL();
      }
      var t2 = createjs.extend(R, createjs.Stage);
      R.buildUVRects = function(t3, e2, i2) {
        if (!t3 || !t3._frames)
          return null;
        e2 === void 0 && (e2 = -1), i2 === void 0 && (i2 = false);
        for (var s4 = e2 != -1 && i2 ? e2 : 0, r2 = e2 != -1 && i2 ? e2 + 1 : t3._frames.length, n = s4; n < r2; n++) {
          var a, o2 = t3._frames[n];
          o2.uvRect || o2.image.width <= 0 || o2.image.height <= 0 || (a = o2.rect, o2.uvRect = { t: a.y / o2.image.height, l: a.x / o2.image.width, b: (a.y + a.height) / o2.image.height, r: (a.x + a.width) / o2.image.width });
        }
        return t3._frames[e2 != -1 ? e2 : 0].uvRect || { t: 0, l: 0, b: 1, r: 1 };
      }, R.isWebGLActive = function(t3) {
        return t3 && t3 instanceof WebGLRenderingContext && typeof WebGLRenderingContext != "undefined";
      }, R.VERTEX_PROPERTY_COUNT = 6, R.INDICIES_PER_CARD = 6, R.DEFAULT_MAX_BATCH_SIZE = 1e4, R.WEBGL_MAX_INDEX_NUM = Math.pow(2, 16), R.UV_RECT = { t: 0, l: 0, b: 1, r: 1 };
      try {
        R.COVER_VERT = new Float32Array([-1, 1, 1, 1, -1, -1, 1, 1, 1, -1, -1, -1]), R.COVER_UV = new Float32Array([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1]), R.COVER_UV_FLIP = new Float32Array([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]);
      } catch (t3) {
      }
      R.REGULAR_VERTEX_HEADER = (R.REGULAR_VARYING_HEADER = "precision mediump float;varying vec2 vTextureCoord;varying lowp float indexPicker;varying lowp float alphaValue;") + "attribute vec2 vertexPosition;attribute vec2 uvPosition;attribute lowp float textureIndex;attribute lowp float objectAlpha;uniform mat4 pMatrix;", R.REGULAR_FRAGMENT_HEADER = R.REGULAR_VARYING_HEADER + "uniform sampler2D uSampler[{{count}}];", R.REGULAR_VERTEX_BODY = "void main(void) {gl_Position = vec4((vertexPosition.x * pMatrix[0][0]) + pMatrix[3][0],(vertexPosition.y * pMatrix[1][1]) + pMatrix[3][1],pMatrix[3][2],1.0);alphaValue = objectAlpha;indexPicker = textureIndex;vTextureCoord = uvPosition;}", R.REGULAR_FRAGMENT_BODY = "void main(void) {vec4 color = vec4(1.0, 0.0, 0.0, 1.0);if (indexPicker <= 0.5) {color = texture2D(uSampler[0], vTextureCoord);{{alternates}}}{{fragColor}}}", R.REGULAR_FRAG_COLOR_NORMAL = "gl_FragColor = vec4(color.rgb, color.a * alphaValue);", R.REGULAR_FRAG_COLOR_PREMULTIPLY = "if(color.a > 0.0035) {gl_FragColor = vec4(color.rgb/color.a, color.a * alphaValue);} else {gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);}", R.PARTICLE_VERTEX_BODY = R.REGULAR_VERTEX_BODY, R.PARTICLE_FRAGMENT_BODY = R.REGULAR_FRAGMENT_BODY, R.COVER_VERTEX_HEADER = (R.COVER_VARYING_HEADER = "precision mediump float;varying highp vec2 vRenderCoord;varying highp vec2 vTextureCoord;") + "attribute vec2 vertexPosition;attribute vec2 uvPosition;uniform float uUpright;", R.COVER_FRAGMENT_HEADER = R.COVER_VARYING_HEADER + "uniform sampler2D uSampler;", R.COVER_VERTEX_BODY = "void main(void) {gl_Position = vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);vRenderCoord = uvPosition;vTextureCoord = vec2(uvPosition.x, abs(uUpright - uvPosition.y));}", R.COVER_FRAGMENT_BODY = "void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);gl_FragColor = color;}", t2._get_isWebGL = function() {
        return !!this._webGLContext;
      }, t2._set_autoPurge = function(t3) {
        (t3 = isNaN(t3) ? 1200 : t3) != -1 && (t3 = t3 < 10 ? 10 : t3), this._autoPurge = t3;
      }, t2._get_autoPurge = function() {
        return Number(this._autoPurge);
      };
      try {
        Object.defineProperties(t2, { isWebGL: { get: t2._get_isWebGL }, autoPurge: { get: t2._get_autoPurge, set: t2._set_autoPurge } });
      } catch (t3) {
      }
      t2._initializeWebGL = function() {
        if (this.canvas) {
          if (!this._webGLContext || this._webGLContext.canvas !== this.canvas) {
            var t3 = { depth: false, alpha: this._transparent, stencil: true, antialias: this._antialias, premultipliedAlpha: this._premultiply, preserveDrawingBuffer: this._preserveBuffer }, t3 = this._webGLContext = this._fetchWebGLContext(this.canvas, t3);
            if (!t3)
              return null;
            this.updateSimultaneousTextureCount(t3.getParameter(t3.MAX_TEXTURE_IMAGE_UNITS)), this._maxTextureSlots = t3.getParameter(t3.MAX_COMBINED_TEXTURE_IMAGE_UNITS), this._createBuffers(t3), this._initTextures(t3), t3.disable(t3.DEPTH_TEST), t3.enable(t3.BLEND), t3.blendFuncSeparate(t3.SRC_ALPHA, t3.ONE_MINUS_SRC_ALPHA, t3.ONE, t3.ONE_MINUS_SRC_ALPHA), t3.pixelStorei(t3.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiply), this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a), this.updateViewport(this._viewportWidth || this.canvas.width, this._viewportHeight || this.canvas.height);
          }
        } else
          this._webGLContext = null;
        return this._webGLContext;
      }, t2.update = function(t3) {
        this.canvas && (this.tickOnUpdate && this.tick(t3), this.dispatchEvent("drawstart"), this.autoClear && this.clear(), this._webGLContext ? (this._batchDraw(this, this._webGLContext), this._autoPurge == -1 || this._drawID % (this._autoPurge / 2 | 0) || this.purgeTextures(this._autoPurge)) : ((t3 = this.canvas.getContext("2d")).save(), this.updateContext(t3), this.draw(t3, false), t3.restore()), this.dispatchEvent("drawend"));
      }, t2.clear = function() {
        var t3, e2, i2;
        this.canvas && (R.isWebGLActive(this._webGLContext) ? (t3 = this._webGLContext, e2 = this._clearColor, i2 = this._transparent ? e2.a : 1, this._webGLContext.clearColor(e2.r * i2, e2.g * i2, e2.b * i2, i2), t3.clear(t3.COLOR_BUFFER_BIT), this._webGLContext.clearColor(e2.r, e2.g, e2.b, e2.a)) : this.Stage_clear());
      }, t2.draw = function(t3, e2) {
        if (t3 === this._webGLContext && R.isWebGLActive(this._webGLContext)) {
          var i2 = this._webGLContext;
          return this._batchDraw(this, i2, e2), true;
        }
        return this.Stage_draw(t3, e2);
      }, t2.cacheDraw = function(t3, e2, i2) {
        if (R.isWebGLActive(this._webGLContext)) {
          var s4 = this._webGLContext;
          return this._cacheDraw(s4, t3, e2, i2), true;
        }
        return false;
      }, t2.protectTextureSlot = function(t3, e2) {
        if (t3 > this._maxTextureSlots || t3 < 0)
          throw "Slot outside of acceptable range";
        this._slotBlacklist[t3] = !!e2;
      }, t2.getTargetRenderTexture = function(t3, e2, i2) {
        var s4 = false, r2 = this._webGLContext;
        if (t3.__lastRT !== void 0 && t3.__lastRT === t3.__rtA && (s4 = true), !(r2 = s4 ? (t3.__rtB === void 0 ? t3.__rtB = this.getRenderBufferTexture(e2, i2) : (e2 == t3.__rtB._width && i2 == t3.__rtB._height || this.resizeTexture(t3.__rtB, e2, i2), this.setTextureParams(r2)), t3.__rtB) : (t3.__rtA === void 0 ? t3.__rtA = this.getRenderBufferTexture(e2, i2) : (e2 == t3.__rtA._width && i2 == t3.__rtA._height || this.resizeTexture(t3.__rtA, e2, i2), this.setTextureParams(r2)), t3.__rtA)))
          throw "Problems creating render textures, known causes include using too much VRAM by not releasing WebGL texture instances";
        return t3.__lastRT = r2;
      }, t2.releaseTexture = function(t3) {
        var e2, i2;
        if (t3) {
          if (t3.children)
            for (e2 = 0, i2 = t3.children.length; e2 < i2; e2++)
              this.releaseTexture(t3.children[e2]);
          t3.cacheCanvas && t3.uncache();
          var s4 = void 0;
          if (t3._storeID !== void 0) {
            if (t3 === this._textureDictionary[t3._storeID])
              return this._killTextureObject(t3), void (t3._storeID = void 0);
            s4 = t3;
          } else if (t3._webGLRenderStyle === 2)
            s4 = t3.image;
          else if (t3._webGLRenderStyle === 1) {
            for (e2 = 0, i2 = t3.spriteSheet._images.length; e2 < i2; e2++)
              this.releaseTexture(t3.spriteSheet._images[e2]);
            return;
          }
          s4 !== void 0 ? (this._killTextureObject(this._textureDictionary[s4._storeID]), s4._storeID = void 0) : this.vocalDebug && console.log("No associated texture found on release");
        }
      }, t2.purgeTextures = function(t3) {
        t3 == null && (t3 = 100);
        for (var e2 = this._textureDictionary, i2 = e2.length, s4 = 0; s4 < i2; s4++) {
          var r2 = e2[s4];
          r2 && r2._drawID + t3 <= this._drawID && this._killTextureObject(r2);
        }
      }, t2.updateSimultaneousTextureCount = function(t3) {
        var e2 = this._webGLContext, i2 = false;
        for ((t3 < 1 || isNaN(t3)) && (t3 = 1), this._batchTextureCount = t3; !i2; )
          try {
            this._activeShader = this._fetchShaderProgram(e2), i2 = true;
          } catch (t4) {
            if (this._batchTextureCount == 1)
              throw "Cannot compile shader " + t4;
            this._batchTextureCount -= 4, this._batchTextureCount < 1 && (this._batchTextureCount = 1), this.vocalDebug && console.log("Reducing desired texture count due to errors: " + this._batchTextureCount);
          }
      }, t2.updateViewport = function(t3, e2) {
        this._viewportWidth = 0 | t3, this._viewportHeight = 0 | e2;
        e2 = this._webGLContext;
        e2 && (e2.viewport(0, 0, this._viewportWidth, this._viewportHeight), this._projectionMatrix = new Float32Array([2 / this._viewportWidth, 0, 0, 0, 0, -2 / this._viewportHeight, 1, 0, 0, 0, 1, 0, -1, 1, 0.1, 0]), this._projectionMatrixFlip = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), this._projectionMatrixFlip.set(this._projectionMatrix), this._projectionMatrixFlip[5] *= -1, this._projectionMatrixFlip[13] *= -1);
      }, t2.getFilterShader = function(t3) {
        t3 = t3 || this;
        var e2 = this._webGLContext, i2 = this._activeShader;
        if (t3._builtShader)
          i2 = t3._builtShader, t3.shaderParamSetup && (e2.useProgram(i2), t3.shaderParamSetup(e2, this, i2));
        else
          try {
            i2 = this._fetchShaderProgram(e2, "filter", t3.VTX_SHADER_BODY, t3.FRAG_SHADER_BODY, t3.shaderParamSetup && t3.shaderParamSetup.bind(t3)), (t3._builtShader = i2)._name = t3.toString();
          } catch (t4) {
            console && console.log("SHADER SWITCH FAILURE", t4);
          }
        return i2;
      }, t2.getBaseTexture = function(t3, e2) {
        var i2 = Math.ceil(0 < t3 ? t3 : 1) || 1, s4 = Math.ceil(0 < e2 ? e2 : 1) || 1, t3 = this._webGLContext, e2 = t3.createTexture();
        return this.resizeTexture(e2, i2, s4), this.setTextureParams(t3, false), e2;
      }, t2.resizeTexture = function(t3, e2, i2) {
        var s4 = this._webGLContext;
        s4.bindTexture(s4.TEXTURE_2D, t3), s4.texImage2D(s4.TEXTURE_2D, 0, s4.RGBA, e2, i2, 0, s4.RGBA, s4.UNSIGNED_BYTE, null), t3.width = e2, t3.height = i2;
      }, t2.getRenderBufferTexture = function(t3, e2) {
        var i2 = this._webGLContext, s4 = this.getBaseTexture(t3, e2);
        if (!s4)
          return null;
        var r2 = i2.createFramebuffer();
        return r2 ? (s4.width = t3, s4.height = e2, i2.bindFramebuffer(i2.FRAMEBUFFER, r2), i2.framebufferTexture2D(i2.FRAMEBUFFER, i2.COLOR_ATTACHMENT0, i2.TEXTURE_2D, s4, 0), (r2._renderTexture = s4)._frameBuffer = r2, s4._storeID = this._textureDictionary.length, this._textureDictionary[s4._storeID] = s4, i2.bindFramebuffer(i2.FRAMEBUFFER, null), s4) : null;
      }, t2.setTextureParams = function(t3, e2) {
        e2 && this._antialias ? (t3.texParameteri(t3.TEXTURE_2D, t3.TEXTURE_MIN_FILTER, t3.LINEAR), t3.texParameteri(t3.TEXTURE_2D, t3.TEXTURE_MAG_FILTER, t3.LINEAR)) : (t3.texParameteri(t3.TEXTURE_2D, t3.TEXTURE_MIN_FILTER, t3.NEAREST), t3.texParameteri(t3.TEXTURE_2D, t3.TEXTURE_MAG_FILTER, t3.NEAREST)), t3.texParameteri(t3.TEXTURE_2D, t3.TEXTURE_WRAP_S, t3.CLAMP_TO_EDGE), t3.texParameteri(t3.TEXTURE_2D, t3.TEXTURE_WRAP_T, t3.CLAMP_TO_EDGE);
      }, t2.setClearColor = function(t3) {
        var e2, i2, s4, r2, n;
        typeof t3 == "string" ? t3.indexOf("#") == 0 ? (t3.length == 4 && (t3 = "#" + t3.charAt(1) + t3.charAt(1) + t3.charAt(2) + t3.charAt(2) + t3.charAt(3) + t3.charAt(3)), e2 = Number("0x" + t3.slice(1, 3)) / 255, i2 = Number("0x" + t3.slice(3, 5)) / 255, s4 = Number("0x" + t3.slice(5, 7)) / 255, r2 = Number("0x" + t3.slice(7, 9)) / 255) : t3.indexOf("rgba(") == 0 && (n = t3.slice(5, -1).split(","), e2 = Number(n[0]) / 255, i2 = Number(n[1]) / 255, s4 = Number(n[2]) / 255, r2 = Number(n[3])) : (e2 = ((4278190080 & t3) >>> 24) / 255, i2 = ((16711680 & t3) >>> 16) / 255, s4 = ((65280 & t3) >>> 8) / 255, r2 = (255 & t3) / 255), this._clearColor.r = e2 || 0, this._clearColor.g = i2 || 0, this._clearColor.b = s4 || 0, this._clearColor.a = r2 || 0, this._webGLContext && this._webGLContext.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearColor.a);
      }, t2.toString = function() {
        return "[StageGL (name=" + this.name + ")]";
      }, t2._fetchWebGLContext = function(t3, e2) {
        var i2, s4;
        try {
          i2 = t3.getContext("webgl", e2) || t3.getContext("experimental-webgl", e2);
        } catch (t4) {
        }
        return i2 ? (i2.viewportWidth = t3.width, i2.viewportHeight = t3.height) : (s4 = "Could not initialize WebGL", console.error ? console.error(s4) : console.log(s4)), i2;
      }, t2._fetchShaderProgram = function(t3, e2, i2, s4, r2) {
        var n, a;
        switch (t3.useProgram(null), e2) {
          case "filter":
            a = R.COVER_VERTEX_HEADER + (i2 || R.COVER_VERTEX_BODY), n = R.COVER_FRAGMENT_HEADER + (s4 || R.COVER_FRAGMENT_BODY);
            break;
          case "particle":
            a = R.REGULAR_VERTEX_HEADER + R.PARTICLE_VERTEX_BODY, n = R.REGULAR_FRAGMENT_HEADER + R.PARTICLE_FRAGMENT_BODY;
            break;
          case "override":
            a = R.REGULAR_VERTEX_HEADER + (i2 || R.REGULAR_VERTEX_BODY), n = R.REGULAR_FRAGMENT_HEADER + (s4 || R.REGULAR_FRAGMENT_BODY);
            break;
          case "regular":
          default:
            a = R.REGULAR_VERTEX_HEADER + R.REGULAR_VERTEX_BODY, n = R.REGULAR_FRAGMENT_HEADER + R.REGULAR_FRAGMENT_BODY;
        }
        var o2 = this._createShader(t3, t3.VERTEX_SHADER, a), h2 = this._createShader(t3, t3.FRAGMENT_SHADER, n), c = t3.createProgram();
        if (t3.attachShader(c, o2), t3.attachShader(c, h2), t3.linkProgram(c), c._type = e2, !t3.getProgramParameter(c, t3.LINK_STATUS))
          throw t3.useProgram(this._activeShader), t3.getProgramInfoLog(c);
        switch (t3.useProgram(c), e2) {
          case "filter":
            c.vertexPositionAttribute = t3.getAttribLocation(c, "vertexPosition"), t3.enableVertexAttribArray(c.vertexPositionAttribute), c.uvPositionAttribute = t3.getAttribLocation(c, "uvPosition"), t3.enableVertexAttribArray(c.uvPositionAttribute), c.samplerUniform = t3.getUniformLocation(c, "uSampler"), t3.uniform1i(c.samplerUniform, 0), c.uprightUniform = t3.getUniformLocation(c, "uUpright"), t3.uniform1f(c.uprightUniform, 0), r2 && r2(t3, this, c);
            break;
          case "override":
          case "particle":
          case "regular":
          default:
            c.vertexPositionAttribute = t3.getAttribLocation(c, "vertexPosition"), t3.enableVertexAttribArray(c.vertexPositionAttribute), c.uvPositionAttribute = t3.getAttribLocation(c, "uvPosition"), t3.enableVertexAttribArray(c.uvPositionAttribute), c.textureIndexAttribute = t3.getAttribLocation(c, "textureIndex"), t3.enableVertexAttribArray(c.textureIndexAttribute), c.alphaAttribute = t3.getAttribLocation(c, "objectAlpha"), t3.enableVertexAttribArray(c.alphaAttribute);
            for (var u = [], l = 0; l < this._batchTextureCount; l++)
              u[l] = l;
            c.samplerData = u, c.samplerUniform = t3.getUniformLocation(c, "uSampler"), t3.uniform1iv(c.samplerUniform, u), c.pMatrixUniform = t3.getUniformLocation(c, "pMatrix");
        }
        return t3.useProgram(this._activeShader), c;
      }, t2._createShader = function(t3, e2, i2) {
        i2 = i2.replace(/{{count}}/g, this._batchTextureCount);
        for (var s4 = "", r2 = 1; r2 < this._batchTextureCount; r2++)
          s4 += "} else if (indexPicker <= " + r2 + ".5) { color = texture2D(uSampler[" + r2 + "], vTextureCoord);";
        i2 = (i2 = i2.replace(/{{alternates}}/g, s4)).replace(/{{fragColor}}/g, this._premultiply ? R.REGULAR_FRAG_COLOR_PREMULTIPLY : R.REGULAR_FRAG_COLOR_NORMAL);
        e2 = t3.createShader(e2);
        if (t3.shaderSource(e2, i2), t3.compileShader(e2), !t3.getShaderParameter(e2, t3.COMPILE_STATUS))
          throw t3.getShaderInfoLog(e2);
        return e2;
      }, t2._createBuffers = function(t3) {
        var e2, i2 = this._maxCardsPerBatch * R.INDICIES_PER_CARD, s4 = this._vertexPositionBuffer = t3.createBuffer();
        t3.bindBuffer(t3.ARRAY_BUFFER, s4), e2 = 2;
        for (var r2 = this._vertices = new Float32Array(i2 * e2), n = 0, a = r2.length; n < a; n += e2)
          r2[n] = r2[n + 1] = 0;
        t3.bufferData(t3.ARRAY_BUFFER, r2, t3.DYNAMIC_DRAW), s4.itemSize = e2, s4.numItems = i2;
        s4 = this._uvPositionBuffer = t3.createBuffer();
        t3.bindBuffer(t3.ARRAY_BUFFER, s4), e2 = 2;
        var o2 = this._uvs = new Float32Array(i2 * e2);
        for (n = 0, a = o2.length; n < a; n += e2)
          o2[n] = o2[n + 1] = 0;
        t3.bufferData(t3.ARRAY_BUFFER, o2, t3.DYNAMIC_DRAW), s4.itemSize = e2, s4.numItems = i2;
        s4 = this._textureIndexBuffer = t3.createBuffer();
        t3.bindBuffer(t3.ARRAY_BUFFER, s4), e2 = 1;
        var h2 = this._indices = new Float32Array(i2 * e2);
        for (n = 0, a = h2.length; n < a; n++)
          h2[n] = 0;
        t3.bufferData(t3.ARRAY_BUFFER, h2, t3.DYNAMIC_DRAW), s4.itemSize = e2, s4.numItems = i2;
        s4 = this._alphaBuffer = t3.createBuffer();
        t3.bindBuffer(t3.ARRAY_BUFFER, s4), e2 = 1;
        var c = this._alphas = new Float32Array(i2 * e2);
        for (n = 0, a = c.length; n < a; n++)
          c[n] = 1;
        t3.bufferData(t3.ARRAY_BUFFER, c, t3.DYNAMIC_DRAW), s4.itemSize = e2, s4.numItems = i2;
      }, t2._initTextures = function() {
        this._lastTextureInsert = -1, this._textureDictionary = [], this._textureIDs = {}, this._baseTextures = [], this._batchTextures = [];
        for (var t3 = 0; t3 < this._batchTextureCount; t3++) {
          var e2 = this.getBaseTexture();
          if (!(this._baseTextures[t3] = this._batchTextures[t3] = e2))
            throw "Problems creating basic textures, known causes include using too much VRAM by not releasing WebGL texture instances";
        }
      }, t2._loadTextureImage = function(t3, e2) {
        var i2 = e2.src;
        i2 || (e2._isCanvas = true, i2 = e2.src = "canvas_" + this._lastTrackedCanvas++);
        var s4 = this._textureIDs[i2];
        s4 === void 0 && (s4 = this._textureIDs[i2] = this._textureDictionary.length), this._textureDictionary[s4] === void 0 && (this._textureDictionary[s4] = this.getBaseTexture());
        i2 = this._textureDictionary[s4];
        return i2 ? (i2._batchID = this._batchID, i2._storeID = s4, i2._imageData = e2, this._insertTextureInBatch(t3, i2), e2._storeID = s4, e2.complete || e2.naturalWidth || e2._isCanvas ? this._updateTextureImageData(t3, e2) : e2.addEventListener("load", this._updateTextureImageData.bind(this, t3, e2))) : (e2 = "Problem creating desired texture, known causes include using too much VRAM by not releasing WebGL texture instances", console.error && console.error(e2) || console.log(e2), (i2 = this._baseTextures[0])._batchID = this._batchID, i2._storeID = -1, i2._imageData = i2, this._insertTextureInBatch(t3, i2)), i2;
      }, t2._updateTextureImageData = function(t3, e2) {
        var i2 = e2.width & e2.width - 1 || e2.height & e2.height - 1, s4 = this._textureDictionary[e2._storeID];
        t3.activeTexture(t3.TEXTURE0 + s4._activeIndex), t3.bindTexture(t3.TEXTURE_2D, s4), s4.isPOT = !i2, this.setTextureParams(t3, s4.isPOT);
        try {
          t3.texImage2D(t3.TEXTURE_2D, 0, t3.RGBA, t3.RGBA, t3.UNSIGNED_BYTE, e2);
        } catch (t4) {
          var r2 = "\nAn error has occurred. This is most likely due to security restrictions on WebGL images with local or cross-domain origins";
          console.error ? (console.error(r2), console.error(t4)) : console && (console.log(r2), console.log(t4));
        }
        e2._invalid = false, s4._w = e2.width, s4._h = e2.height, this.vocalDebug && (i2 && console.warn("NPOT(Non Power of Two) Texture: " + e2.src), (e2.width > t3.MAX_TEXTURE_SIZE || e2.height > t3.MAX_TEXTURE_SIZE) && console && console.error("Oversized Texture: " + e2.width + "x" + e2.height + " vs " + t3.MAX_TEXTURE_SIZE + "max"));
      }, t2._insertTextureInBatch = function(t3, e2) {
        if (this._batchTextures[e2._activeIndex] !== e2) {
          var i2 = -1, s4 = (this._lastTextureInsert + 1) % this._batchTextureCount, r2 = s4;
          do {
            if (this._batchTextures[r2]._batchID != this._batchID && !this._slotBlacklist[r2]) {
              i2 = r2;
              break;
            }
          } while ((r2 = (r2 + 1) % this._batchTextureCount) !== s4);
          i2 === -1 && (this.batchReason = "textureOverflow", this._drawBuffers(t3), this.batchCardCount = 0, i2 = s4), (this._batchTextures[i2] = e2)._activeIndex = i2, (n = e2._imageData) && n._invalid && e2._drawID !== void 0 ? this._updateTextureImageData(t3, n) : (t3.activeTexture(t3.TEXTURE0 + i2), t3.bindTexture(t3.TEXTURE_2D, e2), this.setTextureParams(t3)), this._lastTextureInsert = i2;
        } else {
          var n = e2._imageData;
          e2._storeID != null && n && n._invalid && this._updateTextureImageData(t3, n);
        }
        e2._drawID = this._drawID, e2._batchID = this._batchID;
      }, t2._killTextureObject = function(t3) {
        if (t3) {
          var e2 = this._webGLContext;
          if (t3._storeID !== void 0 && 0 <= t3._storeID) {
            for (var i2 in this._textureDictionary[t3._storeID] = void 0, this._textureIDs)
              this._textureIDs[i2] == t3._storeID && delete this._textureIDs[i2];
            t3._imageData && (t3._imageData._storeID = void 0), t3._imageData = t3._storeID = void 0;
          }
          t3._activeIndex !== void 0 && this._batchTextures[t3._activeIndex] === t3 && (this._batchTextures[t3._activeIndex] = this._baseTextures[t3._activeIndex]);
          try {
            t3._frameBuffer && e2.deleteFramebuffer(t3._frameBuffer), t3._frameBuffer = void 0;
          } catch (t4) {
            this.vocalDebug && console.log(t4);
          }
          try {
            e2.deleteTexture(t3);
          } catch (t4) {
            this.vocalDebug && console.log(t4);
          }
        }
      }, t2._backupBatchTextures = function(t3, e2) {
        var i2 = this._webGLContext;
        this._backupTextures || (this._backupTextures = []), e2 === void 0 && (e2 = this._backupTextures);
        for (var s4 = 0; s4 < this._batchTextureCount; s4++)
          i2.activeTexture(i2.TEXTURE0 + s4), t3 ? this._batchTextures[s4] = e2[s4] : (e2[s4] = this._batchTextures[s4], this._batchTextures[s4] = this._baseTextures[s4]), i2.bindTexture(i2.TEXTURE_2D, this._batchTextures[s4]), this.setTextureParams(i2, this._batchTextures[s4].isPOT);
        t3 && e2 === this._backupTextures && (this._backupTextures = []);
      }, t2._batchDraw = function(t3, e2, i2) {
        0 < this._isDrawing && this._drawBuffers(e2), this._isDrawing++, this._drawID++, this.batchCardCount = 0, this.depth = 0, this._appendToBatchGroup(t3, e2, new createjs.Matrix2D(), this.alpha, i2), this.batchReason = "drawFinish", this._drawBuffers(e2), this._isDrawing--;
      }, t2._cacheDraw = function(t3, e2, i2, s4) {
        var r2 = this._activeShader, n = this._slotBlacklist, a = this._maxTextureSlots - 1, o2 = this._viewportWidth, h2 = this._viewportHeight;
        this.protectTextureSlot(a, true);
        var c = e2.getMatrix();
        (c = c.clone()).scale(1 / s4.scale, 1 / s4.scale), (c = c.invert()).translate(-s4.offX / s4.scale * e2.scaleX, -s4.offY / s4.scale * e2.scaleY);
        var u = this._cacheContainer;
        u.children = [e2], u.transformMatrix = c, this._backupBatchTextures(false), i2 && i2.length ? this._drawFilters(e2, i2, s4) : this.isCacheControlled ? (t3.clear(t3.COLOR_BUFFER_BIT), this._batchDraw(u, t3, true)) : (t3.activeTexture(t3.TEXTURE0 + a), e2.cacheCanvas = this.getTargetRenderTexture(e2, s4._drawWidth, s4._drawHeight), e2 = e2.cacheCanvas, t3.bindFramebuffer(t3.FRAMEBUFFER, e2._frameBuffer), this.updateViewport(s4._drawWidth, s4._drawHeight), this._projectionMatrix = this._projectionMatrixFlip, t3.clear(t3.COLOR_BUFFER_BIT), this._batchDraw(u, t3, true), t3.bindFramebuffer(t3.FRAMEBUFFER, null), this.updateViewport(o2, h2)), this._backupBatchTextures(true), this.protectTextureSlot(a, false), this._activeShader = r2, this._slotBlacklist = n;
      }, t2._drawFilters = function(t3, e2, i2) {
        var s4, r2 = this._webGLContext, n = this._maxTextureSlots - 1, a = this._viewportWidth, o2 = this._viewportHeight, h2 = this._cacheContainer, c = e2.length;
        r2.activeTexture(r2.TEXTURE0 + n), s4 = this.getTargetRenderTexture(t3, i2._drawWidth, i2._drawHeight), r2.bindFramebuffer(r2.FRAMEBUFFER, s4._frameBuffer), this.updateViewport(i2._drawWidth, i2._drawHeight), r2.clear(r2.COLOR_BUFFER_BIT), this._batchDraw(h2, r2, true), r2.activeTexture(r2.TEXTURE0), r2.bindTexture(r2.TEXTURE_2D, s4), this.setTextureParams(r2);
        for (var u = false, l = 0, d = e2[l]; this._activeShader = this.getFilterShader(d), this._activeShader && (r2.activeTexture(r2.TEXTURE0 + n), s4 = this.getTargetRenderTexture(t3, i2._drawWidth, i2._drawHeight), r2.bindFramebuffer(r2.FRAMEBUFFER, s4._frameBuffer), r2.viewport(0, 0, i2._drawWidth, i2._drawHeight), r2.clear(r2.COLOR_BUFFER_BIT), this._drawCover(r2, u), r2.activeTexture(r2.TEXTURE0), r2.bindTexture(r2.TEXTURE_2D, s4), this.setTextureParams(r2), (1 < c || e2[0]._multiPass) && (u = !u), d = d._multiPass !== null ? d._multiPass : e2[++l]), d; )
          ;
        this.isCacheControlled ? (r2.bindFramebuffer(r2.FRAMEBUFFER, null), this.updateViewport(a, o2), this._activeShader = this.getFilterShader(this), r2.clear(r2.COLOR_BUFFER_BIT), this._drawCover(r2, u)) : (u && (r2.activeTexture(r2.TEXTURE0 + n), s4 = this.getTargetRenderTexture(t3, i2._drawWidth, i2._drawHeight), r2.bindFramebuffer(r2.FRAMEBUFFER, s4._frameBuffer), this._activeShader = this.getFilterShader(this), r2.viewport(0, 0, i2._drawWidth, i2._drawHeight), r2.clear(r2.COLOR_BUFFER_BIT), this._drawCover(r2, !u)), r2.bindFramebuffer(r2.FRAMEBUFFER, null), this.updateViewport(a, o2), t3.cacheCanvas = s4);
      }, t2._appendToBatchGroup = function(t3, e2, i2, s4, r2) {
        t3._glMtx || (t3._glMtx = new createjs.Matrix2D());
        var n, a, o2, h2, c = t3._glMtx;
        c.copy(i2), t3.transformMatrix ? c.appendMatrix(t3.transformMatrix) : c.appendTransform(t3.x, t3.y, t3.scaleX, t3.scaleY, t3.rotation, t3.skewX, t3.skewY, t3.regX, t3.regY);
        for (var u = t3.children.length, l = 0; l < u; l++) {
          var d = t3.children[l];
          if (d.visible && s4)
            if (d.cacheCanvas && !r2 || (d._updateState && d._updateState(), !d.children)) {
              this.batchCardCount + 1 > this._maxCardsPerBatch && (this.batchReason = "vertexOverflow", this._drawBuffers(e2), this.batchCardCount = 0), d._glMtx || (d._glMtx = new createjs.Matrix2D());
              var _, p, f3, g, m2 = d._glMtx;
              m2.copy(c), d.transformMatrix ? m2.appendMatrix(d.transformMatrix) : m2.appendTransform(d.x, d.y, d.scaleX, d.scaleY, d.rotation, d.skewX, d.skewY, d.regX, d.regY);
              var v = d.cacheCanvas && !r2;
              if (d._webGLRenderStyle === 2 || v)
                _ = !r2 && d.cacheCanvas || d.image;
              else {
                if (d._webGLRenderStyle !== 1)
                  continue;
                if ((p = d.spriteSheet.getFrame(d.currentFrame)) === null)
                  continue;
                _ = p.image;
              }
              var T = this._uvs, b = this._vertices, E = this._indices, y = this._alphas;
              if (_) {
                if (_._storeID === void 0)
                  f3 = this._loadTextureImage(e2, _), this._insertTextureInBatch(e2, f3);
                else {
                  if (!(f3 = this._textureDictionary[_._storeID])) {
                    this.vocalDebug && console.log("Texture should not be looked up while not being stored.");
                    continue;
                  }
                  f3._batchID !== this._batchID && this._insertTextureInBatch(e2, f3);
                }
                var x2, S2 = f3._activeIndex;
                d._webGLRenderStyle === 2 || v ? h2 = !v && d.sourceRect ? (d._uvRect || (d._uvRect = {}), g = d.sourceRect, (x2 = d._uvRect).t = g.y / _.height, x2.l = g.x / _.width, x2.b = (g.y + g.height) / _.height, x2.r = (g.x + g.width) / _.width, a = n = 0, o2 = g.width + n, g.height + a) : (x2 = R.UV_RECT, v ? (n = (g = d.bitmapCache).x + g._filterOffX / g.scale, a = g.y + g._filterOffY / g.scale, o2 = g._drawWidth / g.scale + n, g._drawHeight / g.scale + a) : (a = n = 0, o2 = _.width + n, _.height + a)) : d._webGLRenderStyle === 1 && (w = p.rect, x2 = (x2 = p.uvRect) || R.buildUVRects(d.spriteSheet, d.currentFrame, false), n = -p.regX, a = -p.regY, o2 = w.width - p.regX, h2 = w.height - p.regY);
                var v = this.batchCardCount * R.INDICIES_PER_CARD, w = 2 * v;
                b[w] = n * m2.a + a * m2.c + m2.tx, b[1 + w] = n * m2.b + a * m2.d + m2.ty, b[2 + w] = n * m2.a + h2 * m2.c + m2.tx, b[3 + w] = n * m2.b + h2 * m2.d + m2.ty, b[4 + w] = o2 * m2.a + a * m2.c + m2.tx, b[5 + w] = o2 * m2.b + a * m2.d + m2.ty, b[6 + w] = b[2 + w], b[7 + w] = b[3 + w], b[8 + w] = b[4 + w], b[9 + w] = b[5 + w], b[10 + w] = o2 * m2.a + h2 * m2.c + m2.tx, b[11 + w] = o2 * m2.b + h2 * m2.d + m2.ty, T[w] = x2.l, T[1 + w] = x2.t, T[2 + w] = x2.l, T[3 + w] = x2.b, T[4 + w] = x2.r, T[5 + w] = x2.t, T[6 + w] = x2.l, T[7 + w] = x2.b, T[8 + w] = x2.r, T[9 + w] = x2.t, T[10 + w] = x2.r, T[11 + w] = x2.b, E[v] = E[1 + v] = E[2 + v] = E[3 + v] = E[4 + v] = E[5 + v] = S2, y[v] = y[1 + v] = y[2 + v] = y[3 + v] = y[4 + v] = y[5 + v] = d.alpha * s4, this.batchCardCount++;
              }
            } else
              this._appendToBatchGroup(d, e2, c, d.alpha * s4);
        }
      }, t2._drawBuffers = function(t3) {
        if (!(this.batchCardCount <= 0)) {
          this.vocalDebug && console.log("Draw[" + this._drawID + ":" + this._batchID + "] : " + this.batchReason);
          var e2 = this._activeShader, i2 = this._vertexPositionBuffer, s4 = this._textureIndexBuffer, r2 = this._uvPositionBuffer, n = this._alphaBuffer;
          t3.useProgram(e2), t3.bindBuffer(t3.ARRAY_BUFFER, i2), t3.vertexAttribPointer(e2.vertexPositionAttribute, i2.itemSize, t3.FLOAT, false, 0, 0), t3.bufferSubData(t3.ARRAY_BUFFER, 0, this._vertices), t3.bindBuffer(t3.ARRAY_BUFFER, s4), t3.vertexAttribPointer(e2.textureIndexAttribute, s4.itemSize, t3.FLOAT, false, 0, 0), t3.bufferSubData(t3.ARRAY_BUFFER, 0, this._indices), t3.bindBuffer(t3.ARRAY_BUFFER, r2), t3.vertexAttribPointer(e2.uvPositionAttribute, r2.itemSize, t3.FLOAT, false, 0, 0), t3.bufferSubData(t3.ARRAY_BUFFER, 0, this._uvs), t3.bindBuffer(t3.ARRAY_BUFFER, n), t3.vertexAttribPointer(e2.alphaAttribute, n.itemSize, t3.FLOAT, false, 0, 0), t3.bufferSubData(t3.ARRAY_BUFFER, 0, this._alphas), t3.uniformMatrix4fv(e2.pMatrixUniform, t3.FALSE, this._projectionMatrix);
          for (var a = 0; a < this._batchTextureCount; a++) {
            var o2 = this._batchTextures[a];
            t3.activeTexture(t3.TEXTURE0 + a), t3.bindTexture(t3.TEXTURE_2D, o2), this.setTextureParams(t3, o2.isPOT);
          }
          t3.drawArrays(t3.TRIANGLES, 0, this.batchCardCount * R.INDICIES_PER_CARD), this._batchID++;
        }
      }, t2._drawCover = function(t3, e2) {
        0 < this._isDrawing && this._drawBuffers(t3), this.vocalDebug && console.log("Draw[" + this._drawID + ":" + this._batchID + "] : Cover");
        var i2 = this._activeShader, s4 = this._vertexPositionBuffer, r2 = this._uvPositionBuffer;
        t3.clear(t3.COLOR_BUFFER_BIT), t3.useProgram(i2), t3.bindBuffer(t3.ARRAY_BUFFER, s4), t3.vertexAttribPointer(i2.vertexPositionAttribute, s4.itemSize, t3.FLOAT, false, 0, 0), t3.bufferSubData(t3.ARRAY_BUFFER, 0, R.COVER_VERT), t3.bindBuffer(t3.ARRAY_BUFFER, r2), t3.vertexAttribPointer(i2.uvPositionAttribute, r2.itemSize, t3.FLOAT, false, 0, 0), t3.bufferSubData(t3.ARRAY_BUFFER, 0, e2 ? R.COVER_UV_FLIP : R.COVER_UV), t3.uniform1i(i2.samplerUniform, 0), t3.uniform1f(i2.uprightUniform, e2 ? 0 : 1), t3.drawArrays(t3.TRIANGLES, 0, R.INDICIES_PER_CARD);
      }, createjs.StageGL = createjs.promote(R, "Stage");
    }(), function() {
      function i2(t3) {
        this.DisplayObject_constructor(), typeof t3 == "string" ? (this.image = document.createElement("img"), this.image.src = t3) : this.image = t3, this.sourceRect = null, this._webGLRenderStyle = createjs.DisplayObject._StageGL_BITMAP;
      }
      var t2 = createjs.extend(i2, createjs.DisplayObject);
      t2.initialize = i2, t2.isVisible = function() {
        var t3 = this.image, t3 = this.cacheCanvas || t3 && (t3.naturalWidth || t3.getContext || 2 <= t3.readyState);
        return !!(this.visible && 0 < this.alpha && this.scaleX != 0 && this.scaleY != 0 && t3);
      }, t2.draw = function(t3, e2) {
        if (this.DisplayObject_draw(t3, e2))
          return true;
        var i3, s4, r2, n, a, o2 = this.image, h2 = this.sourceRect;
        return o2.getImage && (o2 = o2.getImage()), o2 && (h2 ? (i3 = h2.x, s4 = h2.y, r2 = i3 + h2.width, n = s4 + h2.height, i3 < (e2 = a = 0) && (a -= i3, i3 = 0), (h2 = o2.width) < r2 && (r2 = h2), s4 < 0 && (e2 -= s4, s4 = 0), (h2 = o2.height) < n && (n = h2), t3.drawImage(o2, i3, s4, r2 - i3, n - s4, a, e2, r2 - i3, n - s4)) : t3.drawImage(o2, 0, 0)), true;
      }, t2.cache = function(t3, e2, i3, s4, r2, n) {
        this.bitmapCache || (this.bitmapCache = new createjs.BitmapCache()), this.bitmapCache.define(this, t3, e2, i3, s4, r2, n);
      }, t2.updateCache = function(t3) {
        if (!this.bitmapCache)
          throw "cache() must be called before updateCache()";
        this.bitmapCache.update(t3);
      }, t2.uncache = function() {
        this.bitmapCache && (this.bitmapCache.release(), this.bitmapCache = void 0);
      }, t2.getCacheDataURL = function() {
        return this.bitmapCache ? this.bitmapCache.getDataURL() : null;
      }, t2.getBounds = function() {
        var t3 = this.DisplayObject_getBounds();
        if (t3)
          return t3;
        var e2 = this.image, t3 = this.sourceRect || e2;
        return e2 && (e2.naturalWidth || e2.getContext || 2 <= e2.readyState) ? this._rectangle.setValues(0, 0, t3.width, t3.height) : null;
      }, t2.clone = function(t3) {
        var e2 = this.image;
        e2 && t3 && (e2 = e2.cloneNode());
        e2 = new i2(e2);
        return this.sourceRect && (e2.sourceRect = this.sourceRect.clone()), this._cloneProps(e2), e2;
      }, t2.toString = function() {
        return "[Bitmap (name=" + this.name + ")]";
      }, createjs.Bitmap = createjs.promote(i2, "DisplayObject");
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.DisplayObject_constructor(), this.currentFrame = 0, this.currentAnimation = null, this.paused = true, this.spriteSheet = t3, this.currentAnimationFrame = 0, this.framerate = 0, this._animation = null, this._currentFrame = null, this._skipAdvance = false, this._webGLRenderStyle = createjs.DisplayObject._StageGL_SPRITE, e3 != null && this.gotoAndPlay(e3);
      }
      var e2 = createjs.extend(t2, createjs.DisplayObject);
      e2.initialize = t2, e2.isVisible = function() {
        var t3 = this.cacheCanvas || this.spriteSheet.complete;
        return !!(this.visible && 0 < this.alpha && this.scaleX != 0 && this.scaleY != 0 && t3);
      }, e2.draw = function(t3, e3) {
        if (this.DisplayObject_draw(t3, e3))
          return true;
        this._normalizeFrame();
        var i2 = this.spriteSheet.getFrame(0 | this._currentFrame);
        if (!i2)
          return false;
        e3 = i2.rect;
        return e3.width && e3.height && t3.drawImage(i2.image, e3.x, e3.y, e3.width, e3.height, -i2.regX, -i2.regY, e3.width, e3.height), true;
      }, e2.play = function() {
        this.paused = false;
      }, e2.stop = function() {
        this.paused = true;
      }, e2.gotoAndPlay = function(t3) {
        this.paused = false, this._skipAdvance = true, this._goto(t3);
      }, e2.gotoAndStop = function(t3) {
        this.paused = true, this._goto(t3);
      }, e2.advance = function(t3) {
        var e3 = this.framerate || this.spriteSheet.framerate, e3 = e3 && t3 != null ? t3 / (1e3 / e3) : 1;
        this._normalizeFrame(e3);
      }, e2.getBounds = function() {
        return this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);
      }, e2.clone = function() {
        return this._cloneProps(new t2(this.spriteSheet));
      }, e2.toString = function() {
        return "[Sprite (name=" + this.name + ")]";
      }, e2._cloneProps = function(t3) {
        return this.DisplayObject__cloneProps(t3), t3.currentFrame = this.currentFrame, t3.currentAnimation = this.currentAnimation, t3.paused = this.paused, t3.currentAnimationFrame = this.currentAnimationFrame, t3.framerate = this.framerate, t3._animation = this._animation, t3._currentFrame = this._currentFrame, t3._skipAdvance = this._skipAdvance, t3;
      }, e2._tick = function(t3) {
        this.paused || (this._skipAdvance || this.advance(t3 && t3.delta), this._skipAdvance = false), this.DisplayObject__tick(t3);
      }, e2._normalizeFrame = function(t3) {
        t3 = t3 || 0;
        var e3 = this._animation, i2 = this.paused, s4 = this._currentFrame;
        if (e3) {
          var r2, n = e3.speed || 1, a = this.currentAnimationFrame;
          if ((r2 = e3.frames.length) <= a + t3 * n) {
            var o2 = e3.next;
            if (this._dispatchAnimationEnd(e3, s4, i2, o2, r2 - 1))
              return;
            if (o2)
              return this._goto(o2, t3 - (r2 - a) / n);
            this.paused = true, a = e3.frames.length - 1;
          } else
            a += t3 * n;
          this.currentAnimationFrame = a, this._currentFrame = e3.frames[0 | a];
        } else if (s4 = this._currentFrame += t3, r2 = this.spriteSheet.getNumFrames(), r2 <= s4 && 0 < r2 && !this._dispatchAnimationEnd(e3, s4, i2, r2 - 1) && (this._currentFrame -= r2) >= r2)
          return this._normalizeFrame();
        s4 = 0 | this._currentFrame, this.currentFrame != s4 && (this.currentFrame = s4, this.dispatchEvent("change"));
      }, e2._dispatchAnimationEnd = function(t3, e3, i2, s4, r2) {
        var n, a = t3 ? t3.name : null;
        this.hasEventListener("animationend") && ((n = new createjs.Event("animationend")).name = a, n.next = s4, this.dispatchEvent(n));
        e3 = this._animation != t3 || this._currentFrame != e3;
        return e3 || i2 || !this.paused || (this.currentAnimationFrame = r2, e3 = true), e3;
      }, e2._goto = function(t3, e3) {
        var i2;
        this.currentAnimationFrame = 0, isNaN(t3) ? (i2 = this.spriteSheet.getAnimation(t3)) && (this._animation = i2, this.currentAnimation = t3, this._normalizeFrame(e3)) : (this.currentAnimation = this._animation = null, this._currentFrame = t3, this._normalizeFrame());
      }, createjs.Sprite = createjs.promote(t2, "DisplayObject");
    }(), function() {
      "use strict";
      function e2(t3) {
        this.DisplayObject_constructor(), this.graphics = t3 || new createjs.Graphics();
      }
      var t2 = createjs.extend(e2, createjs.DisplayObject);
      t2.isVisible = function() {
        var t3 = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();
        return !!(this.visible && 0 < this.alpha && this.scaleX != 0 && this.scaleY != 0 && t3);
      }, t2.draw = function(t3, e3) {
        return this.DisplayObject_draw(t3, e3) || this.graphics.draw(t3, this), true;
      }, t2.clone = function(t3) {
        t3 = t3 && this.graphics ? this.graphics.clone() : this.graphics;
        return this._cloneProps(new e2(t3));
      }, t2.toString = function() {
        return "[Shape (name=" + this.name + ")]";
      }, createjs.Shape = createjs.promote(e2, "DisplayObject");
    }(), function() {
      "use strict";
      function g(t3, e3, i2) {
        this.DisplayObject_constructor(), this.text = t3, this.font = e3, this.color = i2, this.textAlign = "left", this.textBaseline = "top", this.maxWidth = null, this.outline = 0, this.lineHeight = 0, this.lineWidth = null;
      }
      var t2 = createjs.extend(g, createjs.DisplayObject), e2 = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
      e2.getContext && (g._workingContext = e2.getContext("2d"), e2.width = e2.height = 1), g.H_OFFSETS = { start: 0, left: 0, center: -0.5, end: -1, right: -1 }, g.V_OFFSETS = { top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1 }, t2.isVisible = function() {
        var t3 = this.cacheCanvas || this.text != null && this.text !== "";
        return !!(this.visible && 0 < this.alpha && this.scaleX != 0 && this.scaleY != 0 && t3);
      }, t2.draw = function(t3, e3) {
        if (this.DisplayObject_draw(t3, e3))
          return true;
        e3 = this.color || "#000";
        return this.outline ? (t3.strokeStyle = e3, t3.lineWidth = +this.outline) : t3.fillStyle = e3, this._drawText(this._prepContext(t3)), true;
      }, t2.getMeasuredWidth = function() {
        return this._getMeasuredWidth(this.text);
      }, t2.getMeasuredLineHeight = function() {
        return 1.2 * this._getMeasuredWidth("M");
      }, t2.getMeasuredHeight = function() {
        return this._drawText(null, {}).height;
      }, t2.getBounds = function() {
        var t3 = this.DisplayObject_getBounds();
        if (t3)
          return t3;
        if (this.text == null || this.text === "")
          return null;
        var e3 = this._drawText(null, {}), i2 = this.maxWidth && this.maxWidth < e3.width ? this.maxWidth : e3.width, s4 = i2 * g.H_OFFSETS[this.textAlign || "left"], t3 = (this.lineHeight || this.getMeasuredLineHeight()) * g.V_OFFSETS[this.textBaseline || "top"];
        return this._rectangle.setValues(s4, t3, i2, e3.height);
      }, t2.getMetrics = function() {
        var t3 = { lines: [] };
        return t3.lineHeight = this.lineHeight || this.getMeasuredLineHeight(), t3.vOffset = t3.lineHeight * g.V_OFFSETS[this.textBaseline || "top"], this._drawText(null, t3, t3.lines);
      }, t2.clone = function() {
        return this._cloneProps(new g(this.text, this.font, this.color));
      }, t2.toString = function() {
        return "[Text (text=" + (20 < this.text.length ? this.text.substr(0, 17) + "..." : this.text) + ")]";
      }, t2._cloneProps = function(t3) {
        return this.DisplayObject__cloneProps(t3), t3.textAlign = this.textAlign, t3.textBaseline = this.textBaseline, t3.maxWidth = this.maxWidth, t3.outline = this.outline, t3.lineHeight = this.lineHeight, t3.lineWidth = this.lineWidth, t3;
      }, t2._prepContext = function(t3) {
        return t3.font = this.font || "10px sans-serif", t3.textAlign = this.textAlign || "left", t3.textBaseline = this.textBaseline || "top", t3.lineJoin = "miter", t3.miterLimit = 2.5, t3;
      }, t2._drawText = function(t3, e3, i2) {
        var s4 = !!t3;
        s4 || ((t3 = g._workingContext).save(), this._prepContext(t3));
        for (var r2 = this.lineHeight || this.getMeasuredLineHeight(), n = 0, a = 0, o2 = String(this.text).split(/(?:\r\n|\r|\n)/), h2 = 0, c = o2.length; h2 < c; h2++) {
          var u = o2[h2], l = null;
          if (this.lineWidth != null && (l = t3.measureText(u).width) > this.lineWidth)
            for (var d = u.split(/(\s)/), u = d[0], l = t3.measureText(u).width, _ = 1, p = d.length; _ < p; _ += 2) {
              var f3 = t3.measureText(d[_] + d[_ + 1]).width;
              l + f3 > this.lineWidth ? (s4 && this._drawTextLine(t3, u, a * r2), i2 && i2.push(u), n < l && (n = l), u = d[_ + 1], l = t3.measureText(u).width, a++) : (u += d[_] + d[_ + 1], l += f3);
            }
          s4 && this._drawTextLine(t3, u, a * r2), i2 && i2.push(u), e3 && l == null && (l = t3.measureText(u).width), n < l && (n = l), a++;
        }
        return e3 && (e3.width = n, e3.height = a * r2), s4 || t3.restore(), e3;
      }, t2._drawTextLine = function(t3, e3, i2) {
        this.outline ? t3.strokeText(e3, 0, i2, this.maxWidth || 65535) : t3.fillText(e3, 0, i2, this.maxWidth || 65535);
      }, t2._getMeasuredWidth = function(t3) {
        var e3 = g._workingContext;
        e3.save();
        t3 = this._prepContext(e3).measureText(t3).width;
        return e3.restore(), t3;
      }, createjs.Text = createjs.promote(g, "DisplayObject");
    }(), function() {
      "use strict";
      function v(t3, e2) {
        this.Container_constructor(), this.text = t3 || "", this.spriteSheet = e2, this.lineHeight = 0, this.letterSpacing = 0, this.spaceWidth = 0, this._oldProps = { text: 0, spriteSheet: 0, lineHeight: 0, letterSpacing: 0, spaceWidth: 0 }, this._oldStage = null, this._drawAction = null;
      }
      var t2 = createjs.extend(v, createjs.Container);
      v.maxPoolSize = 100, v._spritePool = [], t2.draw = function(t3, e2) {
        this.DisplayObject_draw(t3, e2) || (this._updateState(), this.Container_draw(t3, e2));
      }, t2.getBounds = function() {
        return this._updateText(), this.Container_getBounds();
      }, t2.isVisible = function() {
        var t3 = this.cacheCanvas || this.spriteSheet && this.spriteSheet.complete && this.text;
        return !!(this.visible && 0 < this.alpha && this.scaleX !== 0 && this.scaleY !== 0 && t3);
      }, t2.clone = function() {
        return this._cloneProps(new v(this.text, this.spriteSheet));
      }, t2.addChild = t2.addChildAt = t2.removeChild = t2.removeChildAt = t2.removeAllChildren = function() {
      }, t2._updateState = function() {
        this._updateText();
      }, t2._cloneProps = function(t3) {
        return this.Container__cloneProps(t3), t3.lineHeight = this.lineHeight, t3.letterSpacing = this.letterSpacing, t3.spaceWidth = this.spaceWidth, t3;
      }, t2._getFrameIndex = function(t3, e2) {
        var i2, s4 = e2.getAnimation(t3);
        return s4 || (t3 != (i2 = t3.toUpperCase()) || t3 != (i2 = t3.toLowerCase()) || (i2 = null), i2 && (s4 = e2.getAnimation(i2))), s4 && s4.frames[0];
      }, t2._getFrame = function(t3, e2) {
        t3 = this._getFrameIndex(t3, e2);
        return t3 == null ? t3 : e2.getFrame(t3);
      }, t2._getLineHeight = function(t3) {
        t3 = this._getFrame("1", t3) || this._getFrame("T", t3) || this._getFrame("L", t3) || t3.getFrame(0);
        return t3 ? t3.rect.height : 1;
      }, t2._getSpaceWidth = function(t3) {
        t3 = this._getFrame("1", t3) || this._getFrame("l", t3) || this._getFrame("e", t3) || this._getFrame("a", t3) || t3.getFrame(0);
        return t3 ? t3.rect.width : 1;
      }, t2._updateText = function() {
        var t3, e2, i2 = 0, s4 = 0, r2 = this._oldProps, n = false, a = this.spaceWidth, o2 = this.lineHeight, h2 = this.spriteSheet, c = v._spritePool, u = this.children, l = 0, d = u.length;
        for (e2 in r2)
          r2[e2] != this[e2] && (r2[e2] = this[e2], n = true);
        if (n) {
          var _ = !!this._getFrame(" ", h2);
          _ || a || (a = this._getSpaceWidth(h2)), o2 = o2 || this._getLineHeight(h2);
          for (var p = 0, f3 = this.text.length; p < f3; p++) {
            var g, m2 = this.text.charAt(p);
            m2 != " " || _ ? m2 != "\n" && m2 != "\r" ? (g = this._getFrameIndex(m2, h2)) != null && (l < d ? t3 = u[l] : (u.push(t3 = c.length ? c.pop() : new createjs.Sprite()), t3.parent = this, d++), t3.spriteSheet = h2, t3.gotoAndStop(g), t3.x = i2, t3.y = s4, l++, i2 += t3.getBounds().width + this.letterSpacing) : (m2 == "\r" && this.text.charAt(p + 1) == "\n" && p++, i2 = 0, s4 += o2) : i2 += a;
          }
          for (; l < d; )
            c.push(t3 = u.pop()), t3.parent = null, d--;
          c.length > v.maxPoolSize && (c.length = v.maxPoolSize);
        }
      }, createjs.BitmapText = createjs.promote(v, "Container");
    }(), function() {
      "use strict";
      function n(t3) {
        var e2, i2, s5, r2;
        this.Container_constructor(), n.inited || n.init(), t3 instanceof String || 1 < arguments.length ? (e2 = t3, i2 = arguments[1], s5 = arguments[2], r2 = arguments[3], s5 == null && (s5 = -1), t3 = null) : t3 && (e2 = t3.mode, i2 = t3.startPosition, s5 = t3.loop, r2 = t3.labels), t3 = t3 || { labels: r2 }, this.mode = e2 || n.INDEPENDENT, this.startPosition = i2 || 0, this.loop = s5 === true ? -1 : s5 || 0, this.currentFrame = 0, this.paused = t3.paused || false, this.actionsEnabled = true, this.autoReset = true, this.frameBounds = this.frameBounds || t3.frameBounds, this.framerate = null, t3.useTicks = t3.paused = true, this.timeline = new createjs.Timeline(t3), this._synchOffset = 0, this._rawPosition = -1, this._bound_resolveState = this._resolveState.bind(this), this._t = 0, this._managed = {};
      }
      var t2 = createjs.extend(n, createjs.Container);
      n.INDEPENDENT = "independent", n.SINGLE_FRAME = "single", n.SYNCHED = "synched", n.inited = false, n.init = function() {
        n.inited || (s4.install(), n.inited = true);
      }, t2._getLabels = function() {
        return this.timeline.getLabels();
      }, t2.getLabels = createjs.deprecate(t2._getLabels, "MovieClip.getLabels"), t2._getCurrentLabel = function() {
        return this.timeline.currentLabel;
      }, t2.getCurrentLabel = createjs.deprecate(t2._getCurrentLabel, "MovieClip.getCurrentLabel"), t2._getDuration = function() {
        return this.timeline.duration;
      }, t2.getDuration = createjs.deprecate(t2._getDuration, "MovieClip.getDuration");
      try {
        Object.defineProperties(t2, { labels: { get: t2._getLabels }, currentLabel: { get: t2._getCurrentLabel }, totalFrames: { get: t2._getDuration }, duration: { get: t2._getDuration } });
      } catch (t3) {
      }
      function s4() {
        throw "MovieClipPlugin cannot be instantiated.";
      }
      t2.initialize = n, t2.isVisible = function() {
        return !!(this.visible && 0 < this.alpha && this.scaleX != 0 && this.scaleY != 0);
      }, t2.draw = function(t3, e2) {
        return this.DisplayObject_draw(t3, e2) || (this._updateState(), this.Container_draw(t3, e2)), true;
      }, t2.play = function() {
        this.paused = false;
      }, t2.stop = function() {
        this.paused = true;
      }, t2.gotoAndPlay = function(t3) {
        this.paused = false, this._goto(t3);
      }, t2.gotoAndStop = function(t3) {
        this.paused = true, this._goto(t3);
      }, t2.advance = function(t3) {
        var e2 = n.INDEPENDENT;
        if (this.mode === e2) {
          for (var i2 = this, s5 = i2.framerate; (i2 = i2.parent) && s5 === null; )
            i2.mode === e2 && (s5 = i2._framerate);
          if (this._framerate = s5, !(this.totalFrames <= 1)) {
            var t3 = s5 !== null && s5 !== -1 && t3 !== null ? t3 / (1e3 / s5) + this._t : 1, r2 = 0 | t3;
            for (this._t = t3 - r2; !this.paused && r2--; )
              this._updateTimeline(this._rawPosition + 1, false);
          }
        }
      }, t2.clone = function() {
        throw "MovieClip cannot be cloned.";
      }, t2.toString = function() {
        return "[MovieClip (name=" + this.name + ")]";
      }, t2._updateState = function() {
        this._rawPosition !== -1 && this.mode === n.INDEPENDENT || this._updateTimeline(-1);
      }, t2._tick = function(t3) {
        this.advance(t3 && t3.delta), this.Container__tick(t3);
      }, t2._goto = function(t3) {
        t3 = this.timeline.resolve(t3);
        t3 != null && (this._t = 0, this._updateTimeline(t3, true));
      }, t2._reset = function() {
        this._rawPosition = -1, this._t = this.currentFrame = 0, this.paused = false;
      }, t2._updateTimeline = function(t3, e2) {
        var i2 = this.mode !== n.INDEPENDENT, s5 = this.timeline;
        i2 && (t3 = this.startPosition + (this.mode === n.SINGLE_FRAME ? 0 : this._synchOffset)), t3 < 0 && (t3 = 0), this._rawPosition === t3 && !i2 || (this._rawPosition = t3, s5.loop = this.loop, s5.setPosition(t3, i2 || !this.actionsEnabled, e2, this._bound_resolveState));
      }, t2._renderFirstFrame = function() {
        var t3 = this.timeline, e2 = t3.rawPosition;
        t3.setPosition(0, true, true, this._bound_resolveState), t3.rawPosition = e2;
      }, t2._resolveState = function() {
        var t3, e2 = this.timeline;
        for (t3 in this.currentFrame = e2.position, this._managed)
          this._managed[t3] = 1;
        for (var i2 = e2.tweens, s5 = 0, r2 = i2.length; s5 < r2; s5++) {
          var n2 = i2[s5], a = n2.target;
          a === this || n2.passive || (n2 = n2._stepPosition, a instanceof createjs.DisplayObject ? this._addManagedChild(a, n2) : this._setState(a.state, n2));
        }
        for (var o2 = this.children, s5 = o2.length - 1; 0 <= s5; s5--) {
          var h2 = o2[s5].id;
          this._managed[h2] === 1 && (this.removeChildAt(s5), delete this._managed[h2]);
        }
      }, t2._setState = function(t3, e2) {
        if (t3)
          for (var i2 = t3.length - 1; 0 <= i2; i2--) {
            var s5, r2 = t3[i2], n2 = r2.t, a = r2.p;
            for (s5 in a)
              n2[s5] = a[s5];
            this._addManagedChild(n2, e2);
          }
      }, t2._addManagedChild = function(t3, e2) {
        t3._off || (this.addChildAt(t3, 0), t3 instanceof n && (t3._synchOffset = e2, t3.mode === n.INDEPENDENT && t3.autoReset && !this._managed[t3.id] && t3._reset()), this._managed[t3.id] = 2);
      }, t2._getBounds = function(t3, e2) {
        var i2 = this.DisplayObject_getBounds();
        return i2 || this.frameBounds && (i2 = this._rectangle.copy(this.frameBounds[this.currentFrame])), i2 ? this._transformBounds(i2, t3, e2) : this.Container__getBounds(t3, e2);
      }, createjs.MovieClip = createjs.promote(n, "Container"), s4.priority = 100, s4.ID = "MovieClip", s4.install = function() {
        createjs.Tween._installPlugin(s4);
      }, s4.init = function(t3, e2, i2) {
        e2 === "startPosition" && t3.target instanceof n && t3._addPlugin(s4);
      }, s4.step = function(t3, e2, i2) {
      }, s4.change = function(t3, e2, i2, s5, r2, n2) {
        if (i2 === "startPosition")
          return (r2 === 1 ? e2 : e2.prev).props[i2];
      };
    }(), function() {
      "use strict";
      function x2() {
        throw "SpriteSheetUtils cannot be instantiated";
      }
      var t2 = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
      t2.getContext && (x2._workingCanvas = t2, x2._workingContext = t2.getContext("2d"), t2.width = t2.height = 1), x2.extractFrame = function(t3, e2) {
        isNaN(e2) && (e2 = t3.getAnimation(e2).frames[0]);
        var i2 = t3.getFrame(e2);
        if (!i2)
          return null;
        t3 = i2.rect, e2 = x2._workingCanvas;
        e2.width = t3.width, e2.height = t3.height, x2._workingContext.drawImage(i2.image, t3.x, t3.y, t3.width, t3.height, 0, 0, t3.width, t3.height);
        t3 = document.createElement("img");
        return t3.src = e2.toDataURL("image/png"), t3;
      }, x2.addFlippedFrames = createjs.deprecate(null, "SpriteSheetUtils.addFlippedFrames"), x2.mergeAlpha = createjs.deprecate(null, "SpriteSheetUtils.mergeAlpha"), x2._flip = function(t3, e2, i2, s4) {
        for (var r2 = t3._images, n = x2._workingCanvas, a = x2._workingContext, o2 = r2.length / e2, h2 = 0; h2 < o2; h2++) {
          var c = r2[h2];
          c.__tmp = h2, a.setTransform(1, 0, 0, 1, 0, 0), a.clearRect(0, 0, n.width + 1, n.height + 1), n.width = c.width, n.height = c.height, a.setTransform(i2 ? -1 : 1, 0, 0, s4 ? -1 : 1, i2 ? c.width : 0, s4 ? c.height : 0), a.drawImage(c, 0, 0);
          var u = document.createElement("img");
          u.src = n.toDataURL("image/png"), u.width = c.width || c.naturalWidth, u.height = c.height || c.naturalHeight, r2.push(u);
        }
        for (var l = t3._frames, d = l.length / e2, h2 = 0; h2 < d; h2++) {
          var _ = (c = l[h2]).rect.clone(), p = { image: u = r2[c.image.__tmp + o2 * e2], rect: _, regX: c.regX, regY: c.regY };
          i2 && (_.x = (u.width || u.naturalWidth) - _.x - _.width, p.regX = _.width - c.regX), s4 && (_.y = (u.height || u.naturalHeight) - _.y - _.height, p.regY = _.height - c.regY), l.push(p);
        }
        var f3 = "_" + (i2 ? "h" : "") + (s4 ? "v" : ""), g = t3._animations, m2 = t3._data, v = g.length / e2;
        for (h2 = 0; h2 < v; h2++) {
          var T = g[h2], b = { name: T + f3, speed: (c = m2[T]).speed, next: c.next, frames: [] };
          c.next && (b.next += f3);
          for (var E = 0, y = (l = c.frames).length; E < y; E++)
            b.frames.push(l[E] + d * e2);
          m2[b.name] = b, g.push(b.name);
        }
      }, createjs.SpriteSheetUtils = x2;
    }(), function() {
      "use strict";
      function E(t3) {
        this.EventDispatcher_constructor(), this.maxWidth = 2048, this.maxHeight = 2048, this.spriteSheet = null, this.scale = 1, this.padding = 1, this.timeSlice = 0.3, this.progress = -1, this.framerate = t3 || 0, this._frames = [], this._animations = {}, this._data = null, this._nextFrameIndex = 0, this._index = 0, this._timerID = null, this._scale = 1;
      }
      var t2 = createjs.extend(E, createjs.EventDispatcher);
      E.ERR_DIMENSIONS = "frame dimensions exceed max spritesheet dimensions", E.ERR_RUNNING = "a build is already running", t2.addFrame = function(t3, e2, i2, s4, r2) {
        if (this._data)
          throw E.ERR_RUNNING;
        e2 = e2 || t3.bounds || t3.nominalBounds;
        return !e2 && t3.getBounds && (e2 = t3.getBounds()), e2 ? (i2 = i2 || 1, this._frames.push({ source: t3, sourceRect: e2, scale: i2, funct: s4, data: r2, index: this._frames.length, height: e2.height * i2 }) - 1) : null;
      }, t2.addAnimation = function(t3, e2, i2, s4) {
        if (this._data)
          throw E.ERR_RUNNING;
        this._animations[t3] = { frames: e2, next: i2, speed: s4 };
      }, t2.addMovieClip = function(t3, e2, i2, s4, r2, n) {
        if (this._data)
          throw E.ERR_RUNNING;
        var a = t3.frameBounds, o2 = e2 || t3.bounds || t3.nominalBounds;
        if (!o2 && t3.getBounds && (o2 = t3.getBounds()), o2 || a) {
          for (var h2, c = this._frames.length, u = t3.timeline.duration, l = 0; l < u; l++) {
            var d = a && a[l] ? a[l] : o2;
            this.addFrame(t3, d, i2, this._setupMovieClipFrame, { i: l, f: s4, d: r2 });
          }
          var _, p = t3.timeline._labels, f3 = [];
          for (_ in p)
            f3.push({ index: p[_], label: _ });
          if (f3.length)
            for (f3.sort(function(t4, e3) {
              return t4.index - e3.index;
            }), l = 0, h2 = f3.length; l < h2; l++) {
              for (var g = f3[l].label, m2 = c + f3[l].index, v = c + (l == h2 - 1 ? u : f3[l + 1].index), T = [], b = m2; b < v; b++)
                T.push(b);
              n && !(g = n(g, t3, m2, v)) || this.addAnimation(g, T, true);
            }
        }
      }, t2.build = function() {
        if (this._data)
          throw E.ERR_RUNNING;
        for (this._startBuild(); this._drawNext(); )
          ;
        return this._endBuild(), this.spriteSheet;
      }, t2.buildAsync = function(t3) {
        if (this._data)
          throw E.ERR_RUNNING;
        this.timeSlice = t3, this._startBuild();
        var e2 = this;
        this._timerID = setTimeout(function() {
          e2._run();
        }, 50 - 50 * Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)));
      }, t2.stopAsync = function() {
        clearTimeout(this._timerID), this._data = null;
      }, t2.clone = function() {
        throw "SpriteSheetBuilder cannot be cloned.";
      }, t2.toString = function() {
        return "[SpriteSheetBuilder]";
      }, t2._startBuild = function() {
        var t3 = this.padding || 0;
        this.progress = 0, this.spriteSheet = null, this._index = 0, this._scale = this.scale;
        var e2 = [];
        this._data = { images: [], frames: e2, framerate: this.framerate, animations: this._animations };
        var i2 = this._frames.slice();
        if (i2.sort(function(t4, e3) {
          return t4.height <= e3.height ? -1 : 1;
        }), i2[i2.length - 1].height + 2 * t3 > this.maxHeight)
          throw E.ERR_DIMENSIONS;
        for (var s4 = 0, r2 = 0, n = 0; i2.length; ) {
          var a, o2 = this._fillRow(i2, s4, n, e2, t3);
          o2.w > r2 && (r2 = o2.w), s4 += o2.h, o2.h && i2.length || ((a = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")).width = this._getSize(r2, this.maxWidth), a.height = this._getSize(s4, this.maxHeight), this._data.images[n] = a, o2.h || (r2 = s4 = 0, n++));
        }
      }, t2._setupMovieClipFrame = function(t3, e2) {
        var i2 = t3.actionsEnabled;
        t3.actionsEnabled = false, t3.gotoAndStop(e2.i), t3.actionsEnabled = i2, e2.f && e2.f(t3, e2.d, e2.i);
      }, t2._getSize = function(t3, e2) {
        for (var i2 = 4; Math.pow(2, ++i2) < t3; )
          ;
        return Math.min(e2, Math.pow(2, i2));
      }, t2._fillRow = function(t3, e2, i2, s4, r2) {
        for (var n = this.maxWidth, a = this.maxHeight - (e2 += r2), o2 = r2, h2 = 0, c = t3.length - 1; 0 <= c; c--) {
          var u = t3[c], l = this._scale * u.scale, d = u.sourceRect, _ = u.source, p = Math.floor(l * d.x - r2), f3 = Math.floor(l * d.y - r2), g = Math.ceil(l * d.height + 2 * r2), d = Math.ceil(l * d.width + 2 * r2);
          if (n < d)
            throw E.ERR_DIMENSIONS;
          a < g || n < o2 + d || (u.img = i2, u.rect = new createjs.Rectangle(o2, e2, d, g), h2 = h2 || g, t3.splice(c, 1), s4[u.index] = [o2, e2, d, g, i2, Math.round(-p + l * _.regX - r2), Math.round(-f3 + l * _.regY - r2)], o2 += d);
        }
        return { w: o2, h: h2 };
      }, t2._endBuild = function() {
        this.spriteSheet = new createjs.SpriteSheet(this._data), this._data = null, this.progress = 1, this.dispatchEvent("complete");
      }, t2._run = function() {
        for (var t3, e2 = 50 * Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)), i2 = new Date().getTime() + e2, s4 = false; i2 > new Date().getTime(); )
          if (!this._drawNext()) {
            s4 = true;
            break;
          }
        s4 ? this._endBuild() : (t3 = this)._timerID = setTimeout(function() {
          t3._run();
        }, 50 - e2);
        var r2 = this.progress = this._index / this._frames.length;
        this.hasEventListener("progress") && ((e2 = new createjs.Event("progress")).progress = r2, this.dispatchEvent(e2));
      }, t2._drawNext = function() {
        var t3 = this._frames[this._index], e2 = t3.scale * this._scale, i2 = t3.rect, s4 = t3.sourceRect, r2 = this._data.images[t3.img].getContext("2d");
        return t3.funct && t3.funct(t3.source, t3.data), r2.save(), r2.beginPath(), r2.rect(i2.x, i2.y, i2.width, i2.height), r2.clip(), r2.translate(Math.ceil(i2.x - s4.x * e2), Math.ceil(i2.y - s4.y * e2)), r2.scale(e2, e2), t3.source.draw(r2), r2.restore(), ++this._index < this._frames.length;
      }, createjs.SpriteSheetBuilder = createjs.promote(E, "EventDispatcher");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.DisplayObject_constructor(), typeof t3 == "string" && (t3 = document.getElementById(t3)), this.mouseEnabled = false;
        var e3 = t3.style;
        e3.position = "absolute", e3.transformOrigin = e3.WebkitTransformOrigin = e3.msTransformOrigin = e3.MozTransformOrigin = e3.OTransformOrigin = "0% 0%", this.htmlElement = t3, this._oldProps = null, this._oldStage = null, this._drawAction = null;
      }
      var e2 = createjs.extend(t2, createjs.DisplayObject);
      e2.isVisible = function() {
        return this.htmlElement != null;
      }, e2.draw = function(t3, e3) {
        return true;
      }, e2.cache = function() {
      }, e2.uncache = function() {
      }, e2.updateCache = function() {
      }, e2.hitTest = function() {
      }, e2.localToGlobal = function() {
      }, e2.globalToLocal = function() {
      }, e2.localToLocal = function() {
      }, e2.clone = function() {
        throw "DOMElement cannot be cloned.";
      }, e2.toString = function() {
        return "[DOMElement (name=" + this.name + ")]";
      }, e2._tick = function(t3) {
        var e3 = this.stage;
        e3 && e3 !== this._oldStage && (this._drawAction && e3.off("drawend", this._drawAction), this._drawAction = e3.on("drawend", this._handleDrawEnd, this), this._oldStage = e3), this.DisplayObject__tick(t3);
      }, e2._handleDrawEnd = function(t3) {
        var e3, i2, s4, r2, n, a = this.htmlElement;
        a && (e3 = a.style, s4 = (i2 = this.getConcatenatedDisplayProps(this._props)).matrix, (n = i2.visible ? "visible" : "hidden") != e3.visibility && (e3.visibility = n), i2.visible && (r2 = 1e4, (n = (a = this._oldProps) && a.matrix) && n.equals(s4) || (n = "matrix(" + (s4.a * r2 | 0) / r2 + "," + (s4.b * r2 | 0) / r2 + "," + (s4.c * r2 | 0) / r2 + "," + (s4.d * r2 | 0) / r2 + "," + (s4.tx + 0.5 | 0), e3.transform = e3.WebkitTransform = e3.OTransform = e3.msTransform = n + "," + (s4.ty + 0.5 | 0) + ")", e3.MozTransform = n + "px," + (s4.ty + 0.5 | 0) + "px)", (a = a || (this._oldProps = new createjs.DisplayProps(true, null))).matrix.copy(s4)), a.alpha != i2.alpha && (e3.opacity = "" + (i2.alpha * r2 | 0) / r2, a.alpha = i2.alpha)));
      }, createjs.DOMElement = createjs.promote(t2, "DisplayObject");
    }(), function() {
      "use strict";
      function t2() {
        this.usesContext = false, this._multiPass = null, this.VTX_SHADER_BODY = null, this.FRAG_SHADER_BODY = null;
      }
      var e2 = t2.prototype;
      e2.getBounds = function(t3) {
        return t3;
      }, e2.shaderParamSetup = function(t3, e3, i2) {
      }, e2.applyFilter = function(t3, e3, i2, s4, r2, n, a, o2) {
        n = n || t3, a == null && (a = e3), o2 == null && (o2 = i2);
        try {
          var h2 = t3.getImageData(e3, i2, s4, r2);
        } catch (t4) {
          return false;
        }
        return !!this._applyFilter(h2) && (n.putImageData(h2, a, o2), true);
      }, e2.toString = function() {
        return "[Filter]";
      }, e2.clone = function() {
        return new t2();
      }, e2._applyFilter = function(t3) {
        return true;
      }, createjs.Filter = t2;
    }(), function() {
      "use strict";
      function s4() {
        this.width = void 0, this.height = void 0, this.x = void 0, this.y = void 0, this.scale = 1, this.offX = 0, this.offY = 0, this.cacheID = 0, this._filterOffX = 0, this._filterOffY = 0, this._cacheDataURLID = 0, this._cacheDataURL = null, this._drawWidth = 0, this._drawHeight = 0;
      }
      var t2 = s4.prototype;
      s4.getFilterBounds = function(t3, e2) {
        e2 = e2 || new createjs.Rectangle();
        var i2 = t3.filters, s5 = i2 && i2.length;
        if (!!s5 <= 0)
          return e2;
        for (var r2 = 0; r2 < s5; r2++) {
          var n = i2[r2];
          n && n.getBounds && ((n = n.getBounds()) && (r2 == 0 ? e2.setValues(n.x, n.y, n.width, n.height) : e2.extend(n.x, n.y, n.width, n.height)));
        }
        return e2;
      }, t2.toString = function() {
        return "[BitmapCache]";
      }, t2.define = function(t3, e2, i2, s5, r2, n, a) {
        if (!t3)
          throw "No symbol to cache";
        this._options = a, this.target = t3, this.width = 1 <= s5 ? s5 : 1, this.height = 1 <= r2 ? r2 : 1, this.x = e2 || 0, this.y = i2 || 0, this.scale = n || 1, this.update();
      }, t2.update = function(t3) {
        if (!this.target)
          throw "define() must be called before update()";
        var e2 = s4.getFilterBounds(this.target), i2 = this.target.cacheCanvas;
        this._drawWidth = Math.ceil(this.width * this.scale) + e2.width, this._drawHeight = Math.ceil(this.height * this.scale) + e2.height, i2 && this._drawWidth == i2.width && this._drawHeight == i2.height || this._updateSurface(), this._filterOffX = e2.x, this._filterOffY = e2.y, this.offX = this.x * this.scale + this._filterOffX, this.offY = this.y * this.scale + this._filterOffY, this._drawToCache(t3), this.cacheID = this.cacheID ? this.cacheID + 1 : 1;
      }, t2.release = function() {
        var t3;
        this._webGLCache ? (this._webGLCache.isCacheControlled || (this.__lastRT && (this.__lastRT = void 0), this.__rtA && this._webGLCache._killTextureObject(this.__rtA), this.__rtB && this._webGLCache._killTextureObject(this.__rtB), this.target && this.target.cacheCanvas && this._webGLCache._killTextureObject(this.target.cacheCanvas)), this._webGLCache = false) : (t3 = this.target.stage) instanceof createjs.StageGL && t3.releaseTexture(this.target.cacheCanvas), this.target = this.target.cacheCanvas = null, this.cacheID = this._cacheDataURLID = this._cacheDataURL = void 0, this.width = this.height = this.x = this.y = this.offX = this.offY = 0, this.scale = 1;
      }, t2.getCacheDataURL = function() {
        var t3 = this.target && this.target.cacheCanvas;
        return t3 ? (this.cacheID != this._cacheDataURLID && (this._cacheDataURLID = this.cacheID, this._cacheDataURL = t3.toDataURL ? t3.getCacheDataURL() : null), this._cacheDataURL) : null;
      }, t2.draw = function(t3) {
        return !!this.target && (t3.drawImage(this.target.cacheCanvas, this.x + this._filterOffX / this.scale, this.y + this._filterOffY / this.scale, this._drawWidth / this.scale, this._drawHeight / this.scale), true);
      }, t2._updateSurface = function() {
        if (!this._options || !this._options.useGL)
          return (e2 = (e2 = this.target.cacheCanvas) || (this.target.cacheCanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas"))).width = this._drawWidth, void (e2.height = this._drawHeight);
        if (!this._webGLCache)
          if (this._options.useGL === "stage") {
            if (!this.target.stage || !this.target.stage.isWebGL) {
              var t3 = "Cannot use 'stage' for cache because the object's parent stage is ";
              throw t3 += this.target.stage ? "non WebGL." : "not set, please addChild to the correct stage.";
            }
            this.target.cacheCanvas = true, this._webGLCache = this.target.stage;
          } else if (this._options.useGL === "new")
            this.target.cacheCanvas = document.createElement("canvas"), this._webGLCache = new createjs.StageGL(this.target.cacheCanvas, { antialias: true, transparent: true, autoPurge: -1 }), this._webGLCache.isCacheControlled = true;
          else {
            if (!(this._options.useGL instanceof createjs.StageGL))
              throw "Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got " + this._options.useGL;
            this.target.cacheCanvas = true, this._webGLCache = this._options.useGL, this._webGLCache.isCacheControlled = true;
          }
        var e2 = this.target.cacheCanvas, t3 = this._webGLCache;
        t3.isCacheControlled && (e2.width = this._drawWidth, e2.height = this._drawHeight, t3.updateViewport(this._drawWidth, this._drawHeight)), this.target.filters ? (t3.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight), t3.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight)) : t3.isCacheControlled || t3.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);
      }, t2._drawToCache = function(t3) {
        var e2 = this.target.cacheCanvas, i2 = this.target, s5 = this._webGLCache;
        s5 ? (s5.cacheDraw(i2, i2.filters, this), (e2 = this.target.cacheCanvas).width = this._drawWidth, e2.height = this._drawHeight) : (s5 = e2.getContext("2d"), t3 || s5.clearRect(0, 0, this._drawWidth + 1, this._drawHeight + 1), s5.save(), s5.globalCompositeOperation = t3, s5.setTransform(this.scale, 0, 0, this.scale, -this._filterOffX, -this._filterOffY), s5.translate(-this.x, -this.y), i2.draw(s5, true), s5.restore(), i2.filters && i2.filters.length && this._applyFilters(s5)), e2._invalid = true;
      }, t2._applyFilters = function(t3) {
        for (var e2, i2 = this.target.filters, s5 = this._drawWidth, r2 = this._drawHeight, n = 0, a = i2[n]; a.usesContext ? (e2 && (t3.putImageData(e2, 0, 0), e2 = null), a.applyFilter(t3, 0, 0, s5, r2)) : (e2 = e2 || t3.getImageData(0, 0, s5, r2), a._applyFilter(e2)), a = a._multiPass !== null ? a._multiPass : i2[++n], a; )
          ;
        e2 && t3.putImageData(e2, 0, 0);
      }, createjs.BitmapCache = s4;
    }(), function() {
      "use strict";
      function B(t3, e2, i2) {
        this.Filter_constructor(), this._blurX = t3, this._blurXTable = [], this._lastBlurX = null, this._blurY = e2, this._blurYTable = [], this._lastBlurY = null, this._quality, this._lastQuality = null, this.FRAG_SHADER_TEMPLATE = "uniform float xWeight[{{blurX}}];uniform float yWeight[{{blurY}}];uniform vec2 textureOffset;void main(void) {vec4 color = vec4(0.0);float xAdj = ({{blurX}}.0-1.0)/2.0;float yAdj = ({{blurY}}.0-1.0)/2.0;vec2 sampleOffset;for(int i=0; i<{{blurX}}; i++) {for(int j=0; j<{{blurY}}; j++) {sampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));color += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);}}gl_FragColor = color.rgba;}", (isNaN(i2) || i2 < 1) && (i2 = 1), this.setQuality(0 | i2);
      }
      var t2 = createjs.extend(B, createjs.Filter);
      t2.getBlurX = function() {
        return this._blurX;
      }, t2.getBlurY = function() {
        return this._blurY;
      }, t2.setBlurX = function(t3) {
        (isNaN(t3) || t3 < 0) && (t3 = 0), this._blurX = t3;
      }, t2.setBlurY = function(t3) {
        (isNaN(t3) || t3 < 0) && (t3 = 0), this._blurY = t3;
      }, t2.getQuality = function() {
        return this._quality;
      }, t2.setQuality = function(t3) {
        (isNaN(t3) || t3 < 0) && (t3 = 0), this._quality = 0 | t3;
      }, t2._getShader = function() {
        var t3 = this._lastBlurX !== this._blurX, e2 = this._lastBlurY !== this._blurY, i2 = this._lastQuality !== this._quality;
        return t3 || e2 || i2 ? ((t3 || i2) && (this._blurXTable = this._getTable(this._blurX * this._quality)), (e2 || i2) && (this._blurYTable = this._getTable(this._blurY * this._quality)), this._updateShader(), this._lastBlurX = this._blurX, this._lastBlurY = this._blurY, void (this._lastQuality = this._quality)) : this._compiledShader;
      }, t2._setShader = function() {
        this._compiledShader;
      };
      try {
        Object.defineProperties(t2, { blurX: { get: t2.getBlurX, set: t2.setBlurX }, blurY: { get: t2.getBlurY, set: t2.setBlurY }, quality: { get: t2.getQuality, set: t2.setQuality }, _builtShader: { get: t2._getShader, set: t2._setShader } });
      } catch (t3) {
        console.log(t3);
      }
      t2._getTable = function(t3) {
        if (t3 <= 1)
          return [1];
        for (var e2 = [], t3 = Math.ceil(2 * t3), i2 = (t3 += t3 % 2 ? 0 : 1) / 2 | 0, s4 = -i2; s4 <= i2; s4++) {
          var r2 = s4 / i2 * 4.2;
          e2.push(1 / Math.sqrt(2 * Math.PI) * Math.pow(Math.E, -Math.pow(r2, 2) / 4));
        }
        var n = e2.reduce(function(t4, e3) {
          return t4 + e3;
        });
        return e2.map(function(t4, e3, i3) {
          return t4 / n;
        });
      }, t2._updateShader = function() {
        var t3;
        this._blurX !== void 0 && this._blurY !== void 0 && (t3 = (t3 = (t3 = this.FRAG_SHADER_TEMPLATE).replace(/\{\{blurX\}\}/g, this._blurXTable.length.toFixed(0))).replace(/\{\{blurY\}\}/g, this._blurYTable.length.toFixed(0)), this.FRAG_SHADER_BODY = t3);
      }, t2.shaderParamSetup = function(t3, e2, i2) {
        t3.uniform1fv(t3.getUniformLocation(i2, "xWeight"), this._blurXTable), t3.uniform1fv(t3.getUniformLocation(i2, "yWeight"), this._blurYTable), t3.uniform2f(t3.getUniformLocation(i2, "textureOffset"), 2 / (e2._viewportWidth * this._quality), 2 / (e2._viewportHeight * this._quality));
      }, B.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1], B.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9], t2.getBounds = function(t3) {
        var e2 = 0 | this.blurX, i2 = 0 | this.blurY;
        if (e2 <= 0 && i2 <= 0)
          return t3;
        var s4 = Math.pow(this.quality, 0.2);
        return (t3 || new createjs.Rectangle()).pad(i2 * s4 + 1, e2 * s4 + 1, i2 * s4 + 1, e2 * s4 + 1);
      }, t2.clone = function() {
        return new B(this.blurX, this.blurY, this.quality);
      }, t2.toString = function() {
        return "[BlurFilter]";
      }, t2._applyFilter = function(t3) {
        var e2 = this._blurX >> 1;
        if (isNaN(e2) || e2 < 0)
          return false;
        var i2 = this._blurY >> 1;
        if (isNaN(i2) || i2 < 0)
          return false;
        if (e2 == 0 && i2 == 0)
          return false;
        var s4 = this.quality;
        (isNaN(s4) || s4 < 1) && (s4 = 1), 3 < (s4 |= 0) && (s4 = 3), s4 < 1 && (s4 = 1);
        for (var r2 = t3.data, n = 0, a = 0, o2 = 0, h2 = 0, c = 0, u = 0, l = 0, d = 0, _ = 0, p = 0, f3 = 0, g = 0, m2 = 0, v = 0, T = 0, b = e2 + e2 + 1 | 0, E = i2 + i2 + 1 | 0, y = 0 | t3.width, x2 = 0 | t3.height, S2 = y - 1 | 0, w = x2 - 1 | 0, R = 1 + e2 | 0, A2 = 1 + i2 | 0, P = { r: 0, b: 0, g: 0, a: 0 }, L = P, o2 = 1; o2 < b; o2++)
          L = L.n = { r: 0, b: 0, g: 0, a: 0 };
        L.n = P;
        var j = { r: 0, b: 0, g: 0, a: 0 }, C = j;
        for (o2 = 1; o2 < E; o2++)
          C = C.n = { r: 0, b: 0, g: 0, a: 0 };
        C.n = j;
        for (var I = null, D = 0 | B.MUL_TABLE[e2], M = 0 | B.SHG_TABLE[e2], O = 0 | B.MUL_TABLE[i2], F2 = 0 | B.SHG_TABLE[i2]; 0 < s4--; ) {
          l = u = 0;
          for (var N = D, k = M, a = x2; -1 < --a; ) {
            for (d = R * (g = r2[0 | u]), _ = R * (m2 = r2[u + 1 | 0]), p = R * (v = r2[u + 2 | 0]), f3 = R * (T = r2[u + 3 | 0]), L = P, o2 = R; -1 < --o2; )
              L.r = g, L.g = m2, L.b = v, L.a = T, L = L.n;
            for (o2 = 1; o2 < R; o2++)
              h2 = u + ((S2 < o2 ? S2 : o2) << 2) | 0, d += L.r = r2[h2], _ += L.g = r2[h2 + 1], p += L.b = r2[h2 + 2], f3 += L.a = r2[h2 + 3], L = L.n;
            for (I = P, n = 0; n < y; n++)
              r2[u++] = d * N >>> k, r2[u++] = _ * N >>> k, r2[u++] = p * N >>> k, r2[u++] = f3 * N >>> k, h2 = l + ((h2 = n + e2 + 1) < S2 ? h2 : S2) << 2, d -= I.r - (I.r = r2[h2]), _ -= I.g - (I.g = r2[h2 + 1]), p -= I.b - (I.b = r2[h2 + 2]), f3 -= I.a - (I.a = r2[h2 + 3]), I = I.n;
            l += y;
          }
          for (N = O, k = F2, n = 0; n < y; n++) {
            for (d = A2 * (g = r2[u = n << 2 | 0]) | 0, _ = A2 * (m2 = r2[u + 1 | 0]) | 0, p = A2 * (v = r2[u + 2 | 0]) | 0, f3 = A2 * (T = r2[u + 3 | 0]) | 0, C = j, o2 = 0; o2 < A2; o2++)
              C.r = g, C.g = m2, C.b = v, C.a = T, C = C.n;
            for (c = y, o2 = 1; o2 <= i2; o2++)
              u = c + n << 2, d += C.r = r2[u], _ += C.g = r2[u + 1], p += C.b = r2[u + 2], f3 += C.a = r2[u + 3], C = C.n, o2 < w && (c += y);
            if (u = n, I = j, 0 < s4)
              for (a = 0; a < x2; a++)
                r2[(h2 = u << 2) + 3] = T = f3 * N >>> k, 0 < T ? (r2[h2] = d * N >>> k, r2[h2 + 1] = _ * N >>> k, r2[h2 + 2] = p * N >>> k) : r2[h2] = r2[h2 + 1] = r2[h2 + 2] = 0, h2 = n + ((h2 = a + A2) < w ? h2 : w) * y << 2, d -= I.r - (I.r = r2[h2]), _ -= I.g - (I.g = r2[h2 + 1]), p -= I.b - (I.b = r2[h2 + 2]), f3 -= I.a - (I.a = r2[h2 + 3]), I = I.n, u += y;
            else
              for (a = 0; a < x2; a++)
                r2[(h2 = u << 2) + 3] = T = f3 * N >>> k, 0 < T ? (T = 255 / T, r2[h2] = (d * N >>> k) * T, r2[h2 + 1] = (_ * N >>> k) * T, r2[h2 + 2] = (p * N >>> k) * T) : r2[h2] = r2[h2 + 1] = r2[h2 + 2] = 0, h2 = n + ((h2 = a + A2) < w ? h2 : w) * y << 2, d -= I.r - (I.r = r2[h2]), _ -= I.g - (I.g = r2[h2 + 1]), p -= I.b - (I.b = r2[h2 + 2]), f3 -= I.a - (I.a = r2[h2 + 3]), I = I.n, u += y;
          }
        }
        return true;
      }, createjs.BlurFilter = createjs.promote(B, "Filter");
    }(), function() {
      "use strict";
      function e2(t3) {
        this.Filter_constructor(), this.alphaMap = t3, this._alphaMap = null, this._mapData = null, this._mapTexture = null, this.FRAG_SHADER_BODY = "uniform sampler2D uAlphaSampler;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);gl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));}";
      }
      var t2 = createjs.extend(e2, createjs.Filter);
      t2.shaderParamSetup = function(t3, e3, i2) {
        this._mapTexture || (this._mapTexture = t3.createTexture()), t3.activeTexture(t3.TEXTURE1), t3.bindTexture(t3.TEXTURE_2D, this._mapTexture), e3.setTextureParams(t3), t3.texImage2D(t3.TEXTURE_2D, 0, t3.RGBA, t3.RGBA, t3.UNSIGNED_BYTE, this.alphaMap), t3.uniform1i(t3.getUniformLocation(i2, "uAlphaSampler"), 1);
      }, t2.clone = function() {
        var t3 = new e2(this.alphaMap);
        return t3._alphaMap = this._alphaMap, t3._mapData = this._mapData, t3;
      }, t2.toString = function() {
        return "[AlphaMapFilter]";
      }, t2._applyFilter = function(t3) {
        if (!this.alphaMap)
          return true;
        if (!this._prepAlphaMap())
          return false;
        for (var e3 = t3.data, i2 = this._mapData, s4 = 0, r2 = e3.length; s4 < r2; s4 += 4)
          e3[s4 + 3] = i2[s4] || 0;
        return true;
      }, t2._prepAlphaMap = function() {
        if (!this.alphaMap)
          return false;
        if (this.alphaMap == this._alphaMap && this._mapData)
          return true;
        this._mapData = null;
        var t3, e3 = this._alphaMap = this.alphaMap, i2 = e3;
        e3 instanceof HTMLCanvasElement ? t3 = i2.getContext("2d") : ((i2 = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")).width = e3.width, i2.height = e3.height, (t3 = i2.getContext("2d")).drawImage(e3, 0, 0));
        try {
          var s4 = t3.getImageData(0, 0, e3.width, e3.height);
        } catch (t4) {
          return false;
        }
        return this._mapData = s4.data, true;
      }, createjs.AlphaMapFilter = createjs.promote(e2, "Filter");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.Filter_constructor(), this.mask = t3, this.usesContext = true, this.FRAG_SHADER_BODY = "uniform sampler2D uAlphaSampler;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);vec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);gl_FragColor = vec4(color.rgb, color.a * alphaMap.a);}";
      }
      var e2 = createjs.extend(t2, createjs.Filter);
      e2.shaderParamSetup = function(t3, e3, i2) {
        this._mapTexture || (this._mapTexture = t3.createTexture()), t3.activeTexture(t3.TEXTURE1), t3.bindTexture(t3.TEXTURE_2D, this._mapTexture), e3.setTextureParams(t3), t3.texImage2D(t3.TEXTURE_2D, 0, t3.RGBA, t3.RGBA, t3.UNSIGNED_BYTE, this.mask), t3.uniform1i(t3.getUniformLocation(i2, "uAlphaSampler"), 1);
      }, e2.applyFilter = function(t3, e3, i2, s4, r2, n, a, o2) {
        return !this.mask || (a == null && (a = e3), o2 == null && (o2 = i2), (n = n || t3).save(), t3 == n && (n.globalCompositeOperation = "destination-in", n.drawImage(this.mask, a, o2), n.restore(), true));
      }, e2.clone = function() {
        return new t2(this.mask);
      }, e2.toString = function() {
        return "[AlphaMaskFilter]";
      }, createjs.AlphaMaskFilter = createjs.promote(t2, "Filter");
    }(), function() {
      "use strict";
      function t2(t3, e3, i2, s4, r2, n, a, o2) {
        this.Filter_constructor(), this.redMultiplier = t3 != null ? t3 : 1, this.greenMultiplier = e3 != null ? e3 : 1, this.blueMultiplier = i2 != null ? i2 : 1, this.alphaMultiplier = s4 != null ? s4 : 1, this.redOffset = r2 || 0, this.greenOffset = n || 0, this.blueOffset = a || 0, this.alphaOffset = o2 || 0, this.FRAG_SHADER_BODY = "uniform vec4 uColorMultiplier;uniform vec4 uColorOffset;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);gl_FragColor = (color * uColorMultiplier) + uColorOffset;}";
      }
      var e2 = createjs.extend(t2, createjs.Filter);
      e2.shaderParamSetup = function(t3, e3, i2) {
        t3.uniform4f(t3.getUniformLocation(i2, "uColorMultiplier"), this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier), t3.uniform4f(t3.getUniformLocation(i2, "uColorOffset"), this.redOffset / 255, this.greenOffset / 255, this.blueOffset / 255, this.alphaOffset / 255);
      }, e2.toString = function() {
        return "[ColorFilter]";
      }, e2.clone = function() {
        return new t2(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);
      }, e2._applyFilter = function(t3) {
        for (var e3 = t3.data, i2 = e3.length, s4 = 0; s4 < i2; s4 += 4)
          e3[s4] = e3[s4] * this.redMultiplier + this.redOffset, e3[s4 + 1] = e3[s4 + 1] * this.greenMultiplier + this.greenOffset, e3[s4 + 2] = e3[s4 + 2] * this.blueMultiplier + this.blueOffset, e3[s4 + 3] = e3[s4 + 3] * this.alphaMultiplier + this.alphaOffset;
        return true;
      }, createjs.ColorFilter = createjs.promote(t2, "Filter");
    }(), function() {
      "use strict";
      function s4(t3, e2, i2, s5) {
        this.setColor(t3, e2, i2, s5);
      }
      var t2 = s4.prototype;
      s4.DELTA_INDEX = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.2, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.3, 0.32, 0.34, 0.36, 0.38, 0.4, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.8, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1, 1.06, 1.12, 1.18, 1.24, 1.3, 1.36, 1.42, 1.48, 1.54, 1.6, 1.66, 1.72, 1.78, 1.84, 1.9, 1.96, 2, 2.12, 2.25, 2.37, 2.5, 2.62, 2.75, 2.87, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.3, 4.7, 4.9, 5, 5.5, 6, 6.5, 6.8, 7, 7.3, 7.5, 7.8, 8, 8.4, 8.7, 9, 9.4, 9.6, 9.8, 10], s4.LENGTH = (s4.IDENTITY_MATRIX = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]).length, t2.setColor = function(t3, e2, i2, s5) {
        return this.reset().adjustColor(t3, e2, i2, s5);
      }, t2.reset = function() {
        return this.copy(s4.IDENTITY_MATRIX);
      }, t2.adjustColor = function(t3, e2, i2, s5) {
        return this.adjustHue(s5), this.adjustContrast(e2), this.adjustBrightness(t3), this.adjustSaturation(i2);
      }, t2.adjustBrightness = function(t3) {
        return t3 == 0 || isNaN(t3) || (t3 = this._cleanValue(t3, 255), this._multiplyMatrix([1, 0, 0, 0, t3, 0, 1, 0, 0, t3, 0, 0, 1, 0, t3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1])), this;
      }, t2.adjustContrast = function(t3) {
        return t3 == 0 || isNaN(t3) || (e2 = (t3 = this._cleanValue(t3, 100)) < 0 ? 127 + t3 / 100 * 127 : 127 * (e2 = (e2 = t3 % 1) == 0 ? s4.DELTA_INDEX[t3] : s4.DELTA_INDEX[t3 << 0] * (1 - e2) + s4.DELTA_INDEX[1 + (t3 << 0)] * e2) + 127, this._multiplyMatrix([e2 / 127, 0, 0, 0, 0.5 * (127 - e2), 0, e2 / 127, 0, 0, 0.5 * (127 - e2), 0, 0, e2 / 127, 0, 0.5 * (127 - e2), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1])), this;
        var e2;
      }, t2.adjustSaturation = function(t3) {
        if (t3 == 0 || isNaN(t3))
          return this;
        t3 = 1 + (0 < (t3 = this._cleanValue(t3, 100)) ? 3 * t3 / 100 : t3 / 100);
        return this._multiplyMatrix([0.3086 * (1 - t3) + t3, 0.6094 * (1 - t3), 0.082 * (1 - t3), 0, 0, 0.3086 * (1 - t3), 0.6094 * (1 - t3) + t3, 0.082 * (1 - t3), 0, 0, 0.3086 * (1 - t3), 0.6094 * (1 - t3), 0.082 * (1 - t3) + t3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]), this;
      }, t2.adjustHue = function(t3) {
        if (t3 == 0 || isNaN(t3))
          return this;
        t3 = this._cleanValue(t3, 180) / 180 * Math.PI;
        var e2 = Math.cos(t3), i2 = Math.sin(t3), s5 = 0.213, r2 = 0.715, t3 = 0.072;
        return this._multiplyMatrix([s5 + 0.787 * e2 + i2 * -s5, r2 + e2 * -r2 + i2 * -r2, t3 + e2 * -t3 + 0.928 * i2, 0, 0, s5 + e2 * -s5 + 0.143 * i2, r2 + e2 * (1 - r2) + 0.14 * i2, t3 + e2 * -t3 + -0.283 * i2, 0, 0, s5 + e2 * -s5 + -0.787 * i2, r2 + e2 * -r2 + i2 * r2, t3 + 0.928 * e2 + i2 * t3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]), this;
      }, t2.concat = function(t3) {
        return (t3 = this._fixMatrix(t3)).length != s4.LENGTH || this._multiplyMatrix(t3), this;
      }, t2.clone = function() {
        return new s4().copy(this);
      }, t2.toArray = function() {
        for (var t3 = [], e2 = 0, i2 = s4.LENGTH; e2 < i2; e2++)
          t3[e2] = this[e2];
        return t3;
      }, t2.copy = function(t3) {
        for (var e2 = s4.LENGTH, i2 = 0; i2 < e2; i2++)
          this[i2] = t3[i2];
        return this;
      }, t2.toString = function() {
        return "[ColorMatrix]";
      }, t2._multiplyMatrix = function(t3) {
        for (var e2, i2 = [], s5 = 0; s5 < 5; s5++) {
          for (e2 = 0; e2 < 5; e2++)
            i2[e2] = this[e2 + 5 * s5];
          for (e2 = 0; e2 < 5; e2++) {
            for (var r2 = 0, n = 0; n < 5; n++)
              r2 += t3[e2 + 5 * n] * i2[n];
            this[e2 + 5 * s5] = r2;
          }
        }
      }, t2._cleanValue = function(t3, e2) {
        return Math.min(e2, Math.max(-e2, t3));
      }, t2._fixMatrix = function(t3) {
        return t3 instanceof s4 && (t3 = t3.toArray()), t3.length < s4.LENGTH ? t3 = t3.slice(0, t3.length).concat(s4.IDENTITY_MATRIX.slice(t3.length, s4.LENGTH)) : t3.length > s4.LENGTH && (t3 = t3.slice(0, s4.LENGTH)), t3;
      }, createjs.ColorMatrix = s4;
    }(), function() {
      "use strict";
      function t2(t3) {
        this.Filter_constructor(), this.matrix = t3, this.FRAG_SHADER_BODY = "uniform mat4 uColorMatrix;uniform vec4 uColorMatrixOffset;void main(void) {vec4 color = texture2D(uSampler, vRenderCoord);mat4 m = uColorMatrix;vec4 newColor = vec4(0,0,0,0);newColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];newColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];newColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];newColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];gl_FragColor = newColor + uColorMatrixOffset;}";
      }
      var e2 = createjs.extend(t2, createjs.Filter);
      e2.shaderParamSetup = function(t3, e3, i2) {
        var s4 = this.matrix, r2 = new Float32Array([s4[0], s4[1], s4[2], s4[3], s4[5], s4[6], s4[7], s4[8], s4[10], s4[11], s4[12], s4[13], s4[15], s4[16], s4[17], s4[18]]);
        t3.uniformMatrix4fv(t3.getUniformLocation(i2, "uColorMatrix"), false, r2), t3.uniform4f(t3.getUniformLocation(i2, "uColorMatrixOffset"), s4[4] / 255, s4[9] / 255, s4[14] / 255, s4[19] / 255);
      }, e2.toString = function() {
        return "[ColorMatrixFilter]";
      }, e2.clone = function() {
        return new t2(this.matrix);
      }, e2._applyFilter = function(t3) {
        for (var e3, i2, s4, r2, n = t3.data, a = n.length, t3 = this.matrix, o2 = t3[0], h2 = t3[1], c = t3[2], u = t3[3], l = t3[4], d = t3[5], _ = t3[6], p = t3[7], f3 = t3[8], g = t3[9], m2 = t3[10], v = t3[11], T = t3[12], b = t3[13], E = t3[14], y = t3[15], x2 = t3[16], S2 = t3[17], w = t3[18], R = t3[19], A2 = 0; A2 < a; A2 += 4)
          e3 = n[A2], i2 = n[A2 + 1], s4 = n[A2 + 2], r2 = n[A2 + 3], n[A2] = e3 * o2 + i2 * h2 + s4 * c + r2 * u + l, n[A2 + 1] = e3 * d + i2 * _ + s4 * p + r2 * f3 + g, n[A2 + 2] = e3 * m2 + i2 * v + s4 * T + r2 * b + E, n[A2 + 3] = e3 * y + i2 * x2 + s4 * S2 + r2 * w + R;
        return true;
      }, createjs.ColorMatrixFilter = createjs.promote(t2, "Filter");
    }(), function() {
      "use strict";
      function r2() {
        throw "Touch cannot be instantiated";
      }
      r2.isSupported = function() {
        return !!("ontouchstart" in window || window.MSPointerEvent && 0 < window.navigator.msMaxTouchPoints || window.PointerEvent && 0 < window.navigator.maxTouchPoints);
      }, r2.enable = function(t2, e2, i2, s4) {
        return !!(t2 && t2.canvas && r2.isSupported()) && (t2.__touch || (t2.__touch = { pointers: {}, multitouch: !e2, preventDefault: !i2, count: 0 }, s4 ? "ontouchstart" in window ? r2._enable(t2) : (window.PointerEvent || window.MSPointerEvent) && r2._IE_enable(t2) : "ontouchstart" in window || createjs.BrowserDetect.isChrome || createjs.BrowserDetect.isEdge || createjs.BrowserDetect.isFirefox ? r2._enable(t2) : (window.PointerEvent || window.MSPointerEvent) && r2._IE_enable(t2)), true);
      }, r2.disable = function(t2) {
        t2 && ("ontouchstart" in window || createjs.BrowserDetect.isChrome || createjs.BrowserDetect.isFirefox ? r2._disable(t2) : (window.PointerEvent || window.MSPointerEvent) && r2._IE_disable(t2), delete t2.__touch);
      }, r2._enable = function(e2) {
        var t2 = e2.canvas, i2 = e2.__touch.f = function(t3) {
          r2._handleEvent(e2, t3);
        };
        t2.addEventListener("pointerdown", function(t3) {
          t3.pointerType == "touch" ? e2.enableDOMEvents(false) : t3.pointerType == "mouse" && e2.enableDOMEvents(true);
        }, false), t2.addEventListener("touchstart", i2, false), t2.addEventListener("touchmove", i2, false), t2.addEventListener("touchend", i2, false), t2.addEventListener("touchcancel", i2, false);
      }, r2._disable = function(t2) {
        var e2 = t2.canvas;
        e2 && (t2 = t2.__touch.f, e2.removeEventListener("touchstart", t2, false), e2.removeEventListener("touchmove", t2, false), e2.removeEventListener("touchend", t2, false), e2.removeEventListener("touchcancel", t2, false));
      }, r2._handleEvent = function(t2, e2) {
        if (t2) {
          t2.__touch.preventDefault && e2.preventDefault && e2.preventDefault();
          for (var i2 = e2.changedTouches, s4 = e2.type, r3 = 0, n = i2.length; r3 < n; r3++) {
            var a = i2[r3], o2 = a.identifier;
            a.target == t2.canvas && (s4 === "touchstart" ? this._handleStart(t2, o2, e2, a.pageX, a.pageY) : s4 === "touchmove" ? this._handleMove(t2, o2, e2, a.pageX, a.pageY) : s4 !== "touchend" && s4 !== "touchcancel" || this._handleEnd(t2, o2, e2));
          }
        }
      }, r2._IE_enable = function(e2) {
        var t2 = e2.canvas, i2 = e2.__touch.f = function(t3) {
          r2._IE_handleEvent(e2, t3);
        };
        t2.style["-webkit-tap-highlight-color"] = "transparent", window.PointerEvent === void 0 ? (t2.addEventListener("MSPointerDown", i2, false), window.addEventListener("MSPointerMove", i2, false), window.addEventListener("MSPointerUp", i2, false), window.addEventListener("MSPointerCancel", i2, false), e2.__touch.preventDefault && (t2.style.msTouchAction = "none")) : (t2.addEventListener("pointerdown", i2, false), window.addEventListener("pointermove", i2, false), window.addEventListener("pointerup", i2, false), window.addEventListener("pointercancel", i2, false), e2.__touch.preventDefault && (t2.style.touchAction = "none")), e2.__touch.activeIDs = {};
      }, r2._IE_disable = function(t2) {
        var e2 = t2.__touch.f;
        window.PointerEvent === void 0 ? (window.removeEventListener("MSPointerMove", e2, false), window.removeEventListener("MSPointerUp", e2, false), window.removeEventListener("MSPointerCancel", e2, false), t2.canvas && t2.canvas.removeEventListener("MSPointerDown", e2, false)) : (window.removeEventListener("pointermove", e2, false), window.removeEventListener("pointerup", e2, false), window.removeEventListener("pointercancel", e2, false), t2.canvas && t2.canvas.removeEventListener("pointerdown", e2, false));
      }, r2._IE_handleEvent = function(t2, e2) {
        if (t2) {
          t2.__touch.preventDefault && e2.preventDefault && e2.preventDefault();
          var i2 = e2.type, s4 = e2.pointerId, r3 = t2.__touch.activeIDs;
          if (i2 === "MSPointerDown" || i2 === "pointerdown") {
            if (e2.srcElement == t2.canvas)
              switch (r3[s4] = true, this._handleStart(t2, s4, e2, e2.pageX, e2.pageY), e2.pointerType) {
                case "mouse":
                  t2.enableDOMEvents(true);
                  break;
                case "touch":
                  t2.enableDOMEvents(false);
              }
          } else
            r3[s4] && (i2 === "MSPointerMove" || i2 === "pointermove" ? this._handleMove(t2, s4, e2, e2.pageX, e2.pageY) : i2 !== "MSPointerUp" && i2 !== "MSPointerCancel" && i2 !== "pointerup" && i2 !== "pointercancel" || (delete r3[s4], this._handleEnd(t2, s4, e2)));
        }
      }, r2._handleStart = function(t2, e2, i2, s4, r3) {
        var n, a = t2.__touch;
        !a.multitouch && a.count || ((n = a.pointers)[e2] || (n[e2] = true, a.count++, t2._handlePointerDown(e2, i2, s4, r3)));
      }, r2._handleMove = function(t2, e2, i2, s4, r3) {
        t2.__touch.pointers[e2] && t2._handlePointerMove(e2, i2, s4, r3);
      }, r2._handleEnd = function(t2, e2, i2) {
        var s4 = t2.__touch, r3 = s4.pointers;
        r3[e2] && (s4.count--, t2._handlePointerUp(e2, i2, true), delete r3[e2]);
      }, createjs.Touch = r2;
    }(), function() {
      "use strict";
      var t2 = createjs.EaselJS = createjs.EaselJS || {};
      t2.version = "1.0.0", t2.buildDate = "Thu, 12 Oct 2017 16:34:05 GMT";
    }(), function() {
      "use strict";
      var t2 = createjs.PreloadJS = createjs.PreloadJS || {};
      t2.version = "NEXT", t2.buildDate = "Thu, 14 Sep 2017 22:19:45 GMT";
    }(), function() {
      "use strict";
      createjs.proxy = function(t2, e2) {
        var i2 = Array.prototype.slice.call(arguments, 2);
        return function() {
          return t2.apply(e2, Array.prototype.slice.call(arguments, 0).concat(i2));
        };
      };
    }(), function() {
      "use strict";
      function t2(t3, e2, i2) {
        this.Event_constructor("error"), this.title = t3, this.message = e2, this.data = i2;
      }
      createjs.extend(t2, createjs.Event).clone = function() {
        return new createjs.ErrorEvent(this.title, this.message, this.data);
      }, createjs.ErrorEvent = createjs.promote(t2, "Event");
    }(), function() {
      "use strict";
      function t2(t3, e2) {
        this.Event_constructor("progress"), this.loaded = t3, this.total = e2 == null ? 1 : e2, this.progress = e2 == 0 ? 0 : this.loaded / this.total;
      }
      createjs.extend(t2, createjs.Event).clone = function() {
        return new createjs.ProgressEvent(this.loaded, this.total);
      }, createjs.ProgressEvent = createjs.promote(t2, "Event");
    }(window), function() {
      var t2, e2, i2, s4, r2 = typeof define == "function" && define.amd, F2 = { function: true, object: true }, n = F2[typeof exports] && exports && !exports.nodeType && exports, N = F2[typeof window] && window || this, a = n && F2[typeof module2] && module2 && !module2.nodeType && typeof global == "object" && global;
      function k(t3, h2) {
        t3 = t3 || N.Object(), h2 = h2 || N.Object();
        var c = t3.Number || N.Number, u = t3.String || N.String, e3 = t3.Object || N.Object, l = t3.Date || N.Date, i3 = t3.SyntaxError || N.SyntaxError, E = t3.TypeError || N.TypeError, s5 = t3.Math || N.Math, t3 = t3.JSON || N.JSON;
        typeof t3 == "object" && t3 && (h2.stringify = t3.stringify, h2.parse = t3.parse);
        var y, x2, S2, d, w, R, A2, o2, P, r3, L, _, j, C, I, p, f3, g, m2, v, n2, a2, T, b, e3 = e3.prototype, D = e3.toString, M = new l(-3509827334573292);
        try {
          M = M.getUTCFullYear() == -109252 && M.getUTCMonth() === 0 && M.getUTCDate() === 1 && M.getUTCHours() == 10 && M.getUTCMinutes() == 37 && M.getUTCSeconds() == 6 && M.getUTCMilliseconds() == 708;
        } catch (t4) {
        }
        function O(t4) {
          if (O[t4] !== S2)
            return O[t4];
          var e4;
          if (t4 == "bug-string-char-index")
            e4 = "a"[0] != "a";
          else if (t4 == "json")
            e4 = O("json-stringify") && O("json-parse");
          else {
            var i4, s6 = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
            if (t4 == "json-stringify") {
              var r4 = h2.stringify, n3 = typeof r4 == "function" && M;
              if (n3) {
                (i4 = function() {
                  return 1;
                }).toJSON = i4;
                try {
                  n3 = r4(0) === "0" && r4(new c()) === "0" && r4(new u()) == '""' && r4(D) === S2 && r4(S2) === S2 && r4() === S2 && r4(i4) === "1" && r4([i4]) == "[1]" && r4([S2]) == "[null]" && r4(null) == "null" && r4([S2, D, null]) == "[null,null,null]" && r4({ a: [i4, true, false, null, "\0\b\n\f\r	"] }) == s6 && r4(null, i4) === "1" && r4([1, 2], null, 1) == "[\n 1,\n 2\n]" && r4(new l(-864e13)) == '"-271821-04-20T00:00:00.000Z"' && r4(new l(864e13)) == '"+275760-09-13T00:00:00.000Z"' && r4(new l(-621987552e5)) == '"-000001-01-01T00:00:00.000Z"' && r4(new l(-1)) == '"1969-12-31T23:59:59.999Z"';
                } catch (t5) {
                  n3 = false;
                }
              }
              e4 = n3;
            }
            if (t4 == "json-parse") {
              var a3 = h2.parse;
              if (typeof a3 == "function")
                try {
                  if (a3("0") === 0 && !a3(false)) {
                    var o3 = (i4 = a3(s6)).a.length == 5 && i4.a[0] === 1;
                    if (o3) {
                      try {
                        o3 = !a3('"	"');
                      } catch (t5) {
                      }
                      if (o3)
                        try {
                          o3 = a3("01") !== 1;
                        } catch (t5) {
                        }
                      if (o3)
                        try {
                          o3 = a3("1.") !== 1;
                        } catch (t5) {
                        }
                    }
                  }
                } catch (t5) {
                  o3 = false;
                }
              e4 = o3;
            }
          }
          return O[t4] = !!e4;
        }
        return O("json") || (d = "[object Function]", w = "[object Number]", R = "[object String]", A2 = "[object Array]", o2 = O("bug-string-char-index"), M || (P = s5.floor, r3 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334], L = function(t4, e4) {
          return r3[e4] + 365 * (t4 - 1970) + P((t4 - 1969 + (e4 = +(1 < e4))) / 4) - P((t4 - 1901 + e4) / 100) + P((t4 - 1601 + e4) / 400);
        }), (y = e3.hasOwnProperty) || (y = function(t4) {
          var i4, e4 = { __proto__: null };
          return e4.__proto__ = { toString: 1 }, y = e4.toString != D ? function(t5) {
            var e5 = this.__proto__, t5 = t5 in (this.__proto__ = null, this);
            return this.__proto__ = e5, t5;
          } : (i4 = e4.constructor, function(t5) {
            var e5 = (this.constructor || i4).prototype;
            return t5 in this && !(t5 in e5 && this[t5] === e5[t5]);
          }), e4 = null, y.call(this, t4);
        }), x2 = function(t4, e4) {
          var i4, a3, s6, r4 = 0;
          for (s6 in (i4 = function() {
            this.valueOf = 0;
          }).prototype.valueOf = 0, a3 = new i4())
            y.call(a3, s6) && r4++;
          return i4 = a3 = null, (x2 = r4 ? r4 == 2 ? function(t5, e5) {
            var i5, s7 = {}, r5 = D.call(t5) == d;
            for (i5 in t5)
              r5 && i5 == "prototype" || y.call(s7, i5) || !(s7[i5] = 1) || !y.call(t5, i5) || e5(i5);
          } : function(t5, e5) {
            var i5, s7, r5 = D.call(t5) == d;
            for (i5 in t5)
              r5 && i5 == "prototype" || !y.call(t5, i5) || (s7 = i5 === "constructor") || e5(i5);
            (s7 || y.call(t5, i5 = "constructor")) && e5(i5);
          } : (a3 = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"], function(t5, e5) {
            var i5, s7, r5 = D.call(t5) == d, n3 = !r5 && typeof t5.constructor != "function" && F2[typeof t5.hasOwnProperty] && t5.hasOwnProperty || y;
            for (i5 in t5)
              r5 && i5 == "prototype" || !n3.call(t5, i5) || e5(i5);
            for (s7 = a3.length; i5 = a3[--s7]; n3.call(t5, i5) && e5(i5))
              ;
          }))(t4, e4);
        }, O("json-stringify") || (_ = { 92: "\\\\", 34: '\\"', 8: "\\b", 12: "\\f", 10: "\\n", 13: "\\r", 9: "\\t" }, j = function(t4, e4) {
          return ("000000" + (e4 || 0)).slice(-t4);
        }, C = function(t4) {
          for (var e4 = '"', i4 = 0, s6 = t4.length, r4 = !o2 || 10 < s6, n3 = r4 && (o2 ? t4.split("") : t4); i4 < s6; i4++) {
            var a3 = t4.charCodeAt(i4);
            switch (a3) {
              case 8:
              case 9:
              case 10:
              case 12:
              case 13:
              case 34:
              case 92:
                e4 += _[a3];
                break;
              default:
                if (a3 < 32) {
                  e4 += "\\u00" + j(2, a3.toString(16));
                  break;
                }
                e4 += r4 ? n3[i4] : t4.charAt(i4);
            }
          }
          return e4 + '"';
        }, I = function(t4, e4, i4, s6, r4, n3, a3) {
          var o3, h3, c2, u2, l2, d2, _2, p2, f4, g2, m3, v2, T2, b2;
          try {
            o3 = e4[t4];
          } catch (t5) {
          }
          if (typeof o3 == "object" && o3)
            if ((h3 = D.call(o3)) != "[object Date]" || y.call(o3, "toJSON"))
              typeof o3.toJSON == "function" && (h3 != w && h3 != R && h3 != A2 || y.call(o3, "toJSON")) && (o3 = o3.toJSON(t4));
            else if (-1 / 0 < o3 && o3 < 1 / 0) {
              if (L) {
                for (l2 = P(o3 / 864e5), c2 = P(l2 / 365.2425) + 1970 - 1; L(c2 + 1, 0) <= l2; c2++)
                  ;
                for (u2 = P((l2 - L(c2, 0)) / 30.42); L(c2, u2 + 1) <= l2; u2++)
                  ;
                l2 = 1 + l2 - L(c2, u2), d2 = P((T2 = (o3 % 864e5 + 864e5) % 864e5) / 36e5) % 24, _2 = P(T2 / 6e4) % 60, p2 = P(T2 / 1e3) % 60, T2 = T2 % 1e3;
              } else
                c2 = o3.getUTCFullYear(), u2 = o3.getUTCMonth(), l2 = o3.getUTCDate(), d2 = o3.getUTCHours(), _2 = o3.getUTCMinutes(), p2 = o3.getUTCSeconds(), T2 = o3.getUTCMilliseconds();
              o3 = (c2 <= 0 || 1e4 <= c2 ? (c2 < 0 ? "-" : "+") + j(6, c2 < 0 ? -c2 : c2) : j(4, c2)) + "-" + j(2, u2 + 1) + "-" + j(2, l2) + "T" + j(2, d2) + ":" + j(2, _2) + ":" + j(2, p2) + "." + j(3, T2) + "Z";
            } else
              o3 = null;
          if (i4 && (o3 = i4.call(e4, t4, o3)), o3 === null)
            return "null";
          if ((h3 = D.call(o3)) == "[object Boolean]")
            return "" + o3;
          if (h3 == w)
            return -1 / 0 < o3 && o3 < 1 / 0 ? "" + o3 : "null";
          if (h3 == R)
            return C("" + o3);
          if (typeof o3 == "object") {
            for (v2 = a3.length; v2--; )
              if (a3[v2] === o3)
                throw E();
            if (a3.push(o3), f4 = [], T2 = n3, n3 += r4, h3 == A2) {
              for (m3 = 0, v2 = o3.length; m3 < v2; m3++)
                g2 = I(m3, o3, i4, s6, r4, n3, a3), f4.push(g2 === S2 ? "null" : g2);
              b2 = f4.length ? r4 ? "[\n" + n3 + f4.join(",\n" + n3) + "\n" + T2 + "]" : "[" + f4.join(",") + "]" : "[]";
            } else
              x2(s6 || o3, function(t5) {
                var e5 = I(t5, o3, i4, s6, r4, n3, a3);
                e5 !== S2 && f4.push(C(t5) + ":" + (r4 ? " " : "") + e5);
              }), b2 = f4.length ? r4 ? "{\n" + n3 + f4.join(",\n" + n3) + "\n" + T2 + "}" : "{" + f4.join(",") + "}" : "{}";
            return a3.pop(), b2;
          }
        }, h2.stringify = function(t4, e4, i4) {
          var s6, r4, n3, a3;
          if (F2[typeof e4] && e4) {
            if ((a3 = D.call(e4)) == d)
              r4 = e4;
            else if (a3 == A2) {
              n3 = {};
              for (var o3, h3 = 0, c2 = e4.length; h3 < c2; o3 = e4[h3++], (a3 = D.call(o3)) != R && a3 != w || (n3[o3] = 1))
                ;
            }
          }
          if (i4)
            if ((a3 = D.call(i4)) == w) {
              if (0 < (i4 -= i4 % 1))
                for (s6 = "", 10 < i4 && (i4 = 10); s6.length < i4; s6 += " ")
                  ;
            } else
              a3 == R && (s6 = i4.length <= 10 ? i4 : i4.slice(0, 10));
          return I("", ((o3 = {})[""] = t4, o3), r4, n3, s6, "", []);
        }), O("json-parse") || (p = u.fromCharCode, f3 = { 92: "\\", 34: '"', 47: "/", 98: "\b", 116: "	", 110: "\n", 102: "\f", 114: "\r" }, v = function() {
          throw g = m2 = null, i3();
        }, n2 = function() {
          for (var t4, e4, i4, s6, r4, n3 = m2, a3 = n3.length; g < a3; )
            switch (r4 = n3.charCodeAt(g)) {
              case 9:
              case 10:
              case 13:
              case 32:
                g++;
                break;
              case 123:
              case 125:
              case 91:
              case 93:
              case 58:
              case 44:
                return t4 = o2 ? n3.charAt(g) : n3[g], g++, t4;
              case 34:
                for (t4 = "@", g++; g < a3; )
                  if ((r4 = n3.charCodeAt(g)) < 32)
                    v();
                  else if (r4 == 92)
                    switch (r4 = n3.charCodeAt(++g)) {
                      case 92:
                      case 34:
                      case 47:
                      case 98:
                      case 116:
                      case 110:
                      case 102:
                      case 114:
                        t4 += f3[r4], g++;
                        break;
                      case 117:
                        for (e4 = ++g, i4 = g + 4; g < i4; g++)
                          48 <= (r4 = n3.charCodeAt(g)) && r4 <= 57 || 97 <= r4 && r4 <= 102 || 65 <= r4 && r4 <= 70 || v();
                        t4 += p("0x" + n3.slice(e4, g));
                        break;
                      default:
                        v();
                    }
                  else {
                    if (r4 == 34)
                      break;
                    for (r4 = n3.charCodeAt(g), e4 = g; 32 <= r4 && r4 != 92 && r4 != 34; )
                      r4 = n3.charCodeAt(++g);
                    t4 += n3.slice(e4, g);
                  }
                if (n3.charCodeAt(g) == 34)
                  return g++, t4;
                v();
              default:
                if (e4 = g, r4 == 45 && (s6 = true, r4 = n3.charCodeAt(++g)), 48 <= r4 && r4 <= 57) {
                  for (r4 == 48 && (48 <= (r4 = n3.charCodeAt(g + 1)) && r4 <= 57) && v(), s6 = false; g < a3 && (48 <= (r4 = n3.charCodeAt(g)) && r4 <= 57); g++)
                    ;
                  if (n3.charCodeAt(g) == 46) {
                    for (i4 = ++g; i4 < a3 && (48 <= (r4 = n3.charCodeAt(i4)) && r4 <= 57); i4++)
                      ;
                    i4 == g && v(), g = i4;
                  }
                  if ((r4 = n3.charCodeAt(g)) == 101 || r4 == 69) {
                    for ((r4 = n3.charCodeAt(++g)) != 43 && r4 != 45 || g++, i4 = g; i4 < a3 && (48 <= (r4 = n3.charCodeAt(i4)) && r4 <= 57); i4++)
                      ;
                    i4 == g && v(), g = i4;
                  }
                  return +n3.slice(e4, g);
                }
                if (s6 && v(), n3.slice(g, g + 4) == "true")
                  return g += 4, true;
                if (n3.slice(g, g + 5) == "false")
                  return g += 5, false;
                if (n3.slice(g, g + 4) == "null")
                  return g += 4, null;
                v();
            }
          return "$";
        }, a2 = function(t4) {
          var e4, i4;
          if (t4 == "$" && v(), typeof t4 == "string") {
            if ((o2 ? t4.charAt(0) : t4[0]) == "@")
              return t4.slice(1);
            if (t4 == "[") {
              for (e4 = []; (t4 = n2()) != "]"; i4 = i4 || true)
                !i4 || t4 == "," && (t4 = n2()) != "]" || v(), t4 == "," && v(), e4.push(a2(t4));
              return e4;
            }
            if (t4 == "{") {
              for (e4 = {}; (t4 = n2()) != "}"; i4 = i4 || true)
                !i4 || t4 == "," && (t4 = n2()) != "}" || v(), t4 != "," && typeof t4 == "string" && (o2 ? t4.charAt(0) : t4[0]) == "@" && n2() == ":" || v(), e4[t4.slice(1)] = a2(n2());
              return e4;
            }
            v();
          }
          return t4;
        }, T = function(t4, e4, i4) {
          i4 = b(t4, e4, i4);
          i4 === S2 ? delete t4[e4] : t4[e4] = i4;
        }, b = function(t4, e4, i4) {
          var s6, r4 = t4[e4];
          if (typeof r4 == "object" && r4)
            if (D.call(r4) == A2)
              for (s6 = r4.length; s6--; )
                T(r4, s6, i4);
            else
              x2(r4, function(t5) {
                T(r4, t5, i4);
              });
          return i4.call(t4, e4, r4);
        }, h2.parse = function(t4, e4) {
          var i4;
          return g = 0, m2 = "" + t4, i4 = a2(n2()), n2() != "$" && v(), g = m2 = null, e4 && D.call(e4) == d ? b(((t4 = {})[""] = i4, t4), "", e4) : i4;
        })), h2.runInContext = k, h2;
      }
      !a || a.global !== a && a.window !== a && a.self !== a || (N = a), n && !r2 ? k(N, n) : (t2 = N.JSON, e2 = N.JSON3, i2 = false, s4 = k(N, N.JSON3 = { noConflict: function() {
        return i2 || (i2 = true, N.JSON = t2, N.JSON3 = e2, t2 = e2 = null), s4;
      } }), N.JSON = { parse: s4.parse, stringify: s4.stringify }), r2 && define(function() {
        return s4;
      });
    }.call(exports), function() {
      var t2 = { a: function() {
        return t2.el("a");
      }, svg: function() {
        return t2.el("svg");
      }, object: function() {
        return t2.el("object");
      }, image: function() {
        return t2.el("image");
      }, img: function() {
        return t2.el("img");
      }, style: function() {
        return t2.el("style");
      }, link: function() {
        return t2.el("link");
      }, script: function() {
        return t2.el("script");
      }, audio: function() {
        return t2.el("audio");
      }, video: function() {
        return t2.el("video");
      }, text: function(t3) {
        return document.createTextNode(t3);
      }, el: function(t3) {
        return document.createElement(t3);
      } };
      createjs.Elements = t2;
    }(), function() {
      var n = { ABSOLUTE_PATT: /^(?:\w+:)?\/{2}/i, RELATIVE_PATT: /^[./]*?\//i, EXTENSION_PATT: /\/?[^/]+\.(\w{1,5})$/i, parseURI: function(t2) {
        var e2 = { absolute: false, relative: false, protocol: null, hostname: null, port: null, pathname: null, search: null, hash: null, host: null };
        if (t2 == null)
          return e2;
        var i2, s4 = createjs.Elements.a();
        for (i2 in s4.href = t2, e2)
          i2 in s4 && (e2[i2] = s4[i2]);
        var r2 = t2.indexOf("?");
        return -1 < r2 && (t2 = t2.substr(0, r2)), n.ABSOLUTE_PATT.test(t2) ? e2.absolute = true : n.RELATIVE_PATT.test(t2) && (e2.relative = true), (t2 = t2.match(n.EXTENSION_PATT)) && (e2.extension = t2[1].toLowerCase()), e2;
      }, formatQueryString: function(t2, e2) {
        if (t2 == null)
          throw new Error("You must specify data.");
        var i2, s4 = [];
        for (i2 in t2)
          s4.push(i2 + "=" + escape(t2[i2]));
        return e2 && (s4 = s4.concat(e2)), s4.join("&");
      }, buildURI: function(t2, e2) {
        if (e2 == null)
          return t2;
        var i2, s4 = [], r2 = t2.indexOf("?");
        return r2 != -1 && (i2 = t2.slice(r2 + 1), s4 = s4.concat(i2.split("&"))), r2 != -1 ? t2.slice(0, r2) + "?" + this.formatQueryString(e2, s4) : t2 + "?" + this.formatQueryString(e2, s4);
      }, isCrossDomain: function(t2) {
        var e2 = createjs.Elements.a();
        e2.href = t2.src;
        t2 = createjs.Elements.a();
        return t2.href = location.href, e2.hostname != "" && (e2.port != t2.port || e2.protocol != t2.protocol || e2.hostname != t2.hostname);
      }, isLocal: function(t2) {
        var e2 = createjs.Elements.a();
        return e2.href = t2.src, e2.hostname == "" && e2.protocol == "file:";
      } };
      createjs.URLUtils = n;
    }(), function() {
      var i2 = { container: null, appendToHead: function(t2) {
        i2.getHead().appendChild(t2);
      }, appendToBody: function(t2) {
        var e2;
        i2.container == null && (i2.container = document.createElement("div"), i2.container.id = "preloadjs-container", (e2 = i2.container.style).visibility = "hidden", e2.position = "absolute", e2.width = i2.container.style.height = "10px", e2.overflow = "hidden", e2.transform = e2.msTransform = e2.webkitTransform = e2.oTransform = "translate(-10px, -10px)", i2.getBody().appendChild(i2.container)), i2.container.appendChild(t2);
      }, getHead: function() {
        return document.head || document.getElementsByTagName("head")[0];
      }, getBody: function() {
        return document.body || document.getElementsByTagName("body")[0];
      }, removeChild: function(t2) {
        t2.parent && t2.parent.removeChild(t2);
      }, isImageTag: function(t2) {
        return t2 instanceof HTMLImageElement;
      }, isAudioTag: function(t2) {
        return !!window.HTMLAudioElement && t2 instanceof HTMLAudioElement;
      }, isVideoTag: function(t2) {
        return !!window.HTMLVideoElement && t2 instanceof HTMLVideoElement;
      } };
      createjs.DomUtils = i2;
    }(), function() {
      var t2 = { parseXML: function(t3) {
        var e2 = null;
        try {
          window.DOMParser && (e2 = new DOMParser().parseFromString(t3, "text/xml"));
        } catch (t4) {
        }
        if (!e2)
          try {
            (e2 = new ActiveXObject("Microsoft.XMLDOM")).async = false, e2.loadXML(t3);
          } catch (t4) {
            e2 = null;
          }
        return e2;
      }, parseJSON: function(t3) {
        if (t3 == null)
          return null;
        try {
          return JSON.parse(t3);
        } catch (t4) {
          throw t4;
        }
      } };
      createjs.DataUtils = t2;
    }(), function() {
      var t2 = { BINARY: "binary", CSS: "css", FONT: "font", FONTCSS: "fontcss", IMAGE: "image", JAVASCRIPT: "javascript", JSON: "json", JSONP: "jsonp", MANIFEST: "manifest", SOUND: "sound", VIDEO: "video", SPRITESHEET: "spritesheet", SVG: "svg", TEXT: "text", XML: "xml" };
      createjs.Types = t2;
    }(), function() {
      var t2 = { POST: "POST", GET: "GET" };
      createjs.Methods = t2;
    }(), function() {
      "use strict";
      function i2() {
        this.src = null, this.type = null, this.id = null, this.maintainOrder = false, this.callback = null, this.data = null, this.method = createjs.Methods.GET, this.values = null, this.headers = null, this.withCredentials = false, this.mimeType = null, this.crossOrigin = null, this.loadTimeout = s4.LOAD_TIMEOUT_DEFAULT;
      }
      var t2 = i2.prototype = {}, s4 = i2;
      s4.LOAD_TIMEOUT_DEFAULT = 8e3, s4.create = function(t3) {
        if (typeof t3 == "string") {
          var e2 = new i2();
          return e2.src = t3, e2;
        }
        if (t3 instanceof s4)
          return t3;
        if (t3 instanceof Object && t3.src)
          return t3.loadTimeout == null && (t3.loadTimeout = s4.LOAD_TIMEOUT_DEFAULT), t3;
        throw new Error("Type not recognized.");
      }, t2.set = function(t3) {
        for (var e2 in t3)
          this[e2] = t3[e2];
        return this;
      }, createjs.LoadItem = s4;
    }(), function() {
      var t2 = { isBinary: function(t3) {
        switch (t3) {
          case createjs.Types.IMAGE:
          case createjs.Types.BINARY:
            return true;
          default:
            return false;
        }
      }, isText: function(t3) {
        switch (t3) {
          case createjs.Types.TEXT:
          case createjs.Types.JSON:
          case createjs.Types.MANIFEST:
          case createjs.Types.XML:
          case createjs.Types.CSS:
          case createjs.Types.SVG:
          case createjs.Types.JAVASCRIPT:
          case createjs.Types.SPRITESHEET:
            return true;
          default:
            return false;
        }
      }, getTypeByExtension: function(t3) {
        if (t3 == null)
          return createjs.Types.TEXT;
        switch (t3.toLowerCase()) {
          case "jpeg":
          case "jpg":
          case "gif":
          case "png":
          case "webp":
          case "bmp":
            return createjs.Types.IMAGE;
          case "ogg":
          case "mp3":
          case "webm":
            return createjs.Types.SOUND;
          case "mp4":
          case "webm":
          case "ts":
            return createjs.Types.VIDEO;
          case "json":
            return createjs.Types.JSON;
          case "xml":
            return createjs.Types.XML;
          case "css":
            return createjs.Types.CSS;
          case "js":
            return createjs.Types.JAVASCRIPT;
          case "svg":
            return createjs.Types.SVG;
          default:
            return createjs.Types.TEXT;
        }
      } };
      createjs.RequestUtils = t2;
    }(), function() {
      "use strict";
      function t2(t3, e3, i3) {
        this.EventDispatcher_constructor(), this.loaded = false, this.canceled = false, this.progress = 0, this.type = i3, this.resultFormatter = null, this._item = t3 ? createjs.LoadItem.create(t3) : null, this._preferXHR = e3, this._result = null, this._rawResult = null, this._loadedItems = null, this._tagSrcAttribute = null, this._tag = null;
      }
      var e2 = createjs.extend(t2, createjs.EventDispatcher), i2 = t2;
      try {
        Object.defineProperties(i2, { POST: { get: createjs.deprecate(function() {
          return createjs.Methods.POST;
        }, "AbstractLoader.POST") }, GET: { get: createjs.deprecate(function() {
          return createjs.Methods.GET;
        }, "AbstractLoader.GET") }, BINARY: { get: createjs.deprecate(function() {
          return createjs.Types.BINARY;
        }, "AbstractLoader.BINARY") }, CSS: { get: createjs.deprecate(function() {
          return createjs.Types.CSS;
        }, "AbstractLoader.CSS") }, FONT: { get: createjs.deprecate(function() {
          return createjs.Types.FONT;
        }, "AbstractLoader.FONT") }, FONTCSS: { get: createjs.deprecate(function() {
          return createjs.Types.FONTCSS;
        }, "AbstractLoader.FONTCSS") }, IMAGE: { get: createjs.deprecate(function() {
          return createjs.Types.IMAGE;
        }, "AbstractLoader.IMAGE") }, JAVASCRIPT: { get: createjs.deprecate(function() {
          return createjs.Types.JAVASCRIPT;
        }, "AbstractLoader.JAVASCRIPT") }, JSON: { get: createjs.deprecate(function() {
          return createjs.Types.JSON;
        }, "AbstractLoader.JSON") }, JSONP: { get: createjs.deprecate(function() {
          return createjs.Types.JSONP;
        }, "AbstractLoader.JSONP") }, MANIFEST: { get: createjs.deprecate(function() {
          return createjs.Types.MANIFEST;
        }, "AbstractLoader.MANIFEST") }, SOUND: { get: createjs.deprecate(function() {
          return createjs.Types.SOUND;
        }, "AbstractLoader.SOUND") }, VIDEO: { get: createjs.deprecate(function() {
          return createjs.Types.VIDEO;
        }, "AbstractLoader.VIDEO") }, SPRITESHEET: { get: createjs.deprecate(function() {
          return createjs.Types.SPRITESHEET;
        }, "AbstractLoader.SPRITESHEET") }, SVG: { get: createjs.deprecate(function() {
          return createjs.Types.SVG;
        }, "AbstractLoader.SVG") }, TEXT: { get: createjs.deprecate(function() {
          return createjs.Types.TEXT;
        }, "AbstractLoader.TEXT") }, XML: { get: createjs.deprecate(function() {
          return createjs.Types.XML;
        }, "AbstractLoader.XML") } });
      } catch (t3) {
      }
      e2.getItem = function() {
        return this._item;
      }, e2.getResult = function(t3) {
        return t3 ? this._rawResult : this._result;
      }, e2.getTag = function() {
        return this._tag;
      }, e2.setTag = function(t3) {
        this._tag = t3;
      }, e2.load = function() {
        this._createRequest(), this._request.on("complete", this, this), this._request.on("progress", this, this), this._request.on("loadStart", this, this), this._request.on("abort", this, this), this._request.on("timeout", this, this), this._request.on("error", this, this);
        var t3 = new createjs.Event("initialize");
        t3.loader = this._request, this.dispatchEvent(t3), this._request.load();
      }, e2.cancel = function() {
        this.canceled = true, this.destroy();
      }, e2.destroy = function() {
        this._request && (this._request.removeAllEventListeners(), this._request.destroy()), this._request = null, this._item = null, this._rawResult = null, this._result = null, this._loadItems = null, this.removeAllEventListeners();
      }, e2.getLoadedItems = function() {
        return this._loadedItems;
      }, e2._createRequest = function() {
        this._preferXHR ? this._request = new createjs.XHRRequest(this._item) : this._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);
      }, e2._createTag = function(t3) {
        return null;
      }, e2._sendLoadStart = function() {
        this._isCanceled() || this.dispatchEvent("loadstart");
      }, e2._sendProgress = function(t3) {
        var e3;
        this._isCanceled() || (e3 = null, typeof t3 == "number" ? (this.progress = t3, e3 = new createjs.ProgressEvent(this.progress)) : (e3 = t3, this.progress = t3.loaded / t3.total, e3.progress = this.progress, !isNaN(this.progress) && this.progress != 1 / 0 || (this.progress = 0)), this.hasEventListener("progress") && this.dispatchEvent(e3));
      }, e2._sendComplete = function() {
        var t3;
        this._isCanceled() || (this.loaded = true, (t3 = new createjs.Event("complete")).rawResult = this._rawResult, this._result != null && (t3.result = this._result), this.dispatchEvent(t3));
      }, e2._sendError = function(t3) {
        !this._isCanceled() && this.hasEventListener("error") && (t3 == null && (t3 = new createjs.ErrorEvent("PRELOAD_ERROR_EMPTY")), this.dispatchEvent(t3));
      }, e2._isCanceled = function() {
        return !(window.createjs != null && !this.canceled);
      }, e2.resultFormatter = null, e2.handleEvent = function(t3) {
        switch (t3.type) {
          case "complete":
            this._rawResult = t3.target._response;
            var e3 = this.resultFormatter && this.resultFormatter(this);
            e3 instanceof Function ? e3.call(this, createjs.proxy(this._resultFormatSuccess, this), createjs.proxy(this._resultFormatFailed, this)) : (this._result = e3 || this._rawResult, this._sendComplete());
            break;
          case "progress":
            this._sendProgress(t3);
            break;
          case "error":
            this._sendError(t3);
            break;
          case "loadstart":
            this._sendLoadStart();
            break;
          case "abort":
          case "timeout":
            this._isCanceled() || this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_" + t3.type.toUpperCase() + "_ERROR"));
        }
      }, e2._resultFormatSuccess = function(t3) {
        this._result = t3, this._sendComplete();
      }, e2._resultFormatFailed = function(t3) {
        this._sendError(t3);
      }, e2.toString = function() {
        return "[PreloadJS AbstractLoader]";
      }, createjs.AbstractLoader = createjs.promote(t2, "EventDispatcher");
    }(), function() {
      "use strict";
      function t2(t3, e3, i2) {
        this.AbstractLoader_constructor(t3, e3, i2), this.resultFormatter = this._formatResult, this._tagSrcAttribute = "src", this.on("initialize", this._updateXHR, this);
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader);
      e2.load = function() {
        this._tag || (this._tag = this._createTag(this._item.src)), this._tag.preload = "auto", this._tag.load(), this.AbstractLoader_load();
      }, e2._createTag = function() {
      }, e2._createRequest = function() {
        this._preferXHR ? this._request = new createjs.XHRRequest(this._item) : this._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);
      }, e2._updateXHR = function(t3) {
        t3.loader.setResponseType && t3.loader.setResponseType("blob");
      }, e2._formatResult = function(t3) {
        var e3, i2;
        return this._tag.removeEventListener && this._tag.removeEventListener("canplaythrough", this._loadedHandler), this._tag.onstalled = null, this._preferXHR && (e3 = window.URL || window.webkitURL, i2 = t3.getResult(true), t3.getTag().src = e3.createObjectURL(i2)), t3.getTag();
      }, createjs.AbstractMediaLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3) {
        this._item = t3;
      }
      var e2 = createjs.extend(t2, createjs.EventDispatcher);
      e2.load = function() {
      }, e2.destroy = function() {
      }, e2.cancel = function() {
      }, createjs.AbstractRequest = createjs.promote(t2, "EventDispatcher");
    }(), function() {
      "use strict";
      function t2(t3, e3, i2) {
        this.AbstractRequest_constructor(t3), this._tag = e3, this._tagSrcAttribute = i2, this._loadedHandler = createjs.proxy(this._handleTagComplete, this), this._addedToDOM = false;
      }
      var e2 = createjs.extend(t2, createjs.AbstractRequest);
      e2.load = function() {
        this._tag.onload = createjs.proxy(this._handleTagComplete, this), this._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this), this._tag.onerror = createjs.proxy(this._handleError, this);
        var t3 = new createjs.Event("initialize");
        t3.loader = this._tag, this.dispatchEvent(t3), this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout), this._tag[this._tagSrcAttribute] = this._item.src, this._tag.parentNode == null && (createjs.DomUtils.appendToBody(this._tag), this._addedToDOM = true);
      }, e2.destroy = function() {
        this._clean(), this._tag = null, this.AbstractRequest_destroy();
      }, e2._handleReadyStateChange = function() {
        clearTimeout(this._loadTimeout);
        var t3 = this._tag;
        t3.readyState != "loaded" && t3.readyState != "complete" || this._handleTagComplete();
      }, e2._handleError = function() {
        this._clean(), this.dispatchEvent("error");
      }, e2._handleTagComplete = function() {
        this._rawResult = this._tag, this._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult, this._clean(), this.dispatchEvent("complete");
      }, e2._handleTimeout = function() {
        this._clean(), this.dispatchEvent(new createjs.Event("timeout"));
      }, e2._clean = function() {
        this._tag.onload = null, this._tag.onreadystatechange = null, this._tag.onerror = null, this._addedToDOM && this._tag.parentNode != null && this._tag.parentNode.removeChild(this._tag), clearTimeout(this._loadTimeout);
      }, e2._handleStalled = function() {
      }, createjs.TagRequest = createjs.promote(t2, "AbstractRequest");
    }(), function() {
      "use strict";
      function t2(t3, e3, i2) {
        this.AbstractRequest_constructor(t3), this._tag = e3, this._tagSrcAttribute = i2, this._loadedHandler = createjs.proxy(this._handleTagComplete, this);
      }
      var e2 = createjs.extend(t2, createjs.TagRequest);
      e2.load = function() {
        var t3 = createjs.proxy(this._handleStalled, this);
        this._stalledCallback = t3;
        var e3 = createjs.proxy(this._handleProgress, this);
        this._handleProgress = e3, this._tag.addEventListener("stalled", t3), this._tag.addEventListener("progress", e3), this._tag.addEventListener && this._tag.addEventListener("canplaythrough", this._loadedHandler, false), this.TagRequest_load();
      }, e2._handleReadyStateChange = function() {
        clearTimeout(this._loadTimeout);
        var t3 = this._tag;
        t3.readyState != "loaded" && t3.readyState != "complete" || this._handleTagComplete();
      }, e2._handleStalled = function() {
      }, e2._handleProgress = function(t3) {
        !t3 || 0 < t3.loaded && t3.total == 0 || (t3 = new createjs.ProgressEvent(t3.loaded, t3.total), this.dispatchEvent(t3));
      }, e2._clean = function() {
        this._tag.removeEventListener && this._tag.removeEventListener("canplaythrough", this._loadedHandler), this._tag.removeEventListener("stalled", this._stalledCallback), this._tag.removeEventListener("progress", this._progressCallback), this.TagRequest__clean();
      }, createjs.MediaTagRequest = createjs.promote(t2, "TagRequest");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.AbstractRequest_constructor(t3), this._request = null, this._loadTimeout = null, this._xhrLevel = 1, this._response = null, this._rawResponse = null, this._canceled = false, this._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this), this._handleProgressProxy = createjs.proxy(this._handleProgress, this), this._handleAbortProxy = createjs.proxy(this._handleAbort, this), this._handleErrorProxy = createjs.proxy(this._handleError, this), this._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this), this._handleLoadProxy = createjs.proxy(this._handleLoad, this), this._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this), this._createXHR(t3);
      }
      var e2 = createjs.extend(t2, createjs.AbstractRequest);
      t2.ACTIVEX_VERSIONS = ["Msxml2.XMLHTTP.6.0", "Msxml2.XMLHTTP.5.0", "Msxml2.XMLHTTP.4.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], e2.getResult = function(t3) {
        return t3 && this._rawResponse ? this._rawResponse : this._response;
      }, e2.cancel = function() {
        this.canceled = true, this._clean(), this._request.abort();
      }, e2.load = function() {
        if (this._request != null) {
          this._request.addEventListener != null ? (this._request.addEventListener("loadstart", this._handleLoadStartProxy, false), this._request.addEventListener("progress", this._handleProgressProxy, false), this._request.addEventListener("abort", this._handleAbortProxy, false), this._request.addEventListener("error", this._handleErrorProxy, false), this._request.addEventListener("timeout", this._handleTimeoutProxy, false), this._request.addEventListener("load", this._handleLoadProxy, false), this._request.addEventListener("readystatechange", this._handleReadyStateChangeProxy, false)) : (this._request.onloadstart = this._handleLoadStartProxy, this._request.onprogress = this._handleProgressProxy, this._request.onabort = this._handleAbortProxy, this._request.onerror = this._handleErrorProxy, this._request.ontimeout = this._handleTimeoutProxy, this._request.onload = this._handleLoadProxy, this._request.onreadystatechange = this._handleReadyStateChangeProxy), this._xhrLevel == 1 && (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout));
          try {
            this._item.values ? this._request.send(createjs.URLUtils.formatQueryString(this._item.values)) : this._request.send();
          } catch (t3) {
            this.dispatchEvent(new createjs.ErrorEvent("XHR_SEND", null, t3));
          }
        } else
          this._handleError();
      }, e2.setResponseType = function(t3) {
        t3 === "blob" && (t3 = window.URL ? "blob" : "arraybuffer", this._responseType = t3), this._request.responseType = t3;
      }, e2.getAllResponseHeaders = function() {
        return this._request.getAllResponseHeaders instanceof Function ? this._request.getAllResponseHeaders() : null;
      }, e2.getResponseHeader = function(t3) {
        return this._request.getResponseHeader instanceof Function ? this._request.getResponseHeader(t3) : null;
      }, e2._handleProgress = function(t3) {
        !t3 || 0 < t3.loaded && t3.total == 0 || (t3 = new createjs.ProgressEvent(t3.loaded, t3.total), this.dispatchEvent(t3));
      }, e2._handleLoadStart = function(t3) {
        clearTimeout(this._loadTimeout), this.dispatchEvent("loadstart");
      }, e2._handleAbort = function(t3) {
        this._clean(), this.dispatchEvent(new createjs.ErrorEvent("XHR_ABORTED", null, t3));
      }, e2._handleError = function(t3) {
        this._clean(), this.dispatchEvent(new createjs.ErrorEvent(t3.message));
      }, e2._handleReadyStateChange = function(t3) {
        this._request.readyState == 4 && this._handleLoad();
      }, e2._handleLoad = function(t3) {
        if (!this.loaded) {
          this.loaded = true;
          var e3 = this._checkError();
          if (e3)
            this._handleError(e3);
          else {
            if (this._response = this._getResponse(), this._responseType === "arraybuffer")
              try {
                this._response = new Blob([this._response]);
              } catch (t4) {
                window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder, t4.name === "TypeError" && window.BlobBuilder && ((e3 = new BlobBuilder()).append(this._response), this._response = e3.getBlob());
              }
            this._clean(), this.dispatchEvent(new createjs.Event("complete"));
          }
        }
      }, e2._handleTimeout = function(t3) {
        this._clean(), this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT", null, t3));
      }, e2._checkError = function() {
        var t3 = parseInt(this._request.status);
        return 400 <= t3 && t3 <= 599 ? new Error(t3) : t3 == 0 && /^https?:/.test(location.protocol) ? new Error(0) : null;
      }, e2._getResponse = function() {
        if (this._response != null)
          return this._response;
        if (this._request.response != null)
          return this._request.response;
        try {
          if (this._request.responseText != null)
            return this._request.responseText;
        } catch (t3) {
        }
        try {
          if (this._request.responseXML != null)
            return this._request.responseXML;
        } catch (t3) {
        }
        return null;
      }, e2._createXHR = function(t3) {
        var e3 = createjs.URLUtils.isCrossDomain(t3), i2 = {}, r2 = null;
        if (window.XMLHttpRequest)
          r2 = new XMLHttpRequest(), e3 && r2.withCredentials === void 0 && window.XDomainRequest && (r2 = new XDomainRequest());
        else {
          for (var n = 0, a = s.ACTIVEX_VERSIONS.length; n < a; n++) {
            var o2 = s.ACTIVEX_VERSIONS[n];
            try {
              r2 = new ActiveXObject(o2);
              break;
            } catch (t4) {
            }
          }
          if (r2 == null)
            return false;
        }
        t3.mimeType == null && createjs.RequestUtils.isText(t3.type) && (t3.mimeType = "text/plain; charset=utf-8"), t3.mimeType && r2.overrideMimeType && r2.overrideMimeType(t3.mimeType), this._xhrLevel = typeof r2.responseType == "string" ? 2 : 1;
        var h2 = null, h2 = t3.method == createjs.Methods.GET ? createjs.URLUtils.buildURI(t3.src, t3.values) : t3.src;
        if (r2.open(t3.method || createjs.Methods.GET, h2, true), e3 && r2 instanceof XMLHttpRequest && this._xhrLevel == 1 && (i2.Origin = location.origin), t3.values && t3.method == createjs.Methods.POST && (i2["Content-Type"] = "application/x-www-form-urlencoded"), e3 || i2["X-Requested-With"] || (i2["X-Requested-With"] = "XMLHttpRequest"), t3.headers)
          for (var c in t3.headers)
            i2[c] = t3.headers[c];
        for (c in i2)
          r2.setRequestHeader(c, i2[c]);
        return r2 instanceof XMLHttpRequest && t3.withCredentials !== void 0 && (r2.withCredentials = t3.withCredentials), this._request = r2, true;
      }, e2._clean = function() {
        clearTimeout(this._loadTimeout), this._request.removeEventListener != null ? (this._request.removeEventListener("loadstart", this._handleLoadStartProxy), this._request.removeEventListener("progress", this._handleProgressProxy), this._request.removeEventListener("abort", this._handleAbortProxy), this._request.removeEventListener("error", this._handleErrorProxy), this._request.removeEventListener("timeout", this._handleTimeoutProxy), this._request.removeEventListener("load", this._handleLoadProxy), this._request.removeEventListener("readystatechange", this._handleReadyStateChangeProxy)) : (this._request.onloadstart = null, this._request.onprogress = null, this._request.onabort = null, this._request.onerror = null, this._request.ontimeout = null, this._request.onload = null, this._request.onreadystatechange = null);
      }, e2.toString = function() {
        return "[PreloadJS XHRRequest]";
      }, createjs.XHRRequest = createjs.promote(t2, "AbstractRequest");
    }(), function() {
      "use strict";
      function t2(t3, e3, i2) {
        this.AbstractLoader_constructor(), this._plugins = [], this._typeCallbacks = {}, this._extensionCallbacks = {}, this.next = null, this.maintainScriptOrder = true, this.stopOnError = false, this._maxConnections = 1, this._availableLoaders = [createjs.FontLoader, createjs.ImageLoader, createjs.JavaScriptLoader, createjs.CSSLoader, createjs.JSONLoader, createjs.JSONPLoader, createjs.SoundLoader, createjs.ManifestLoader, createjs.SpriteSheetLoader, createjs.XMLLoader, createjs.SVGLoader, createjs.BinaryLoader, createjs.VideoLoader, createjs.TextLoader], this._defaultLoaderLength = this._availableLoaders.length, this.init(t3, e3, i2);
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader), h2 = t2;
      try {
        Object.defineProperties(h2, { POST: { get: createjs.deprecate(function() {
          return createjs.Methods.POST;
        }, "AbstractLoader.POST") }, GET: { get: createjs.deprecate(function() {
          return createjs.Methods.GET;
        }, "AbstractLoader.GET") }, BINARY: { get: createjs.deprecate(function() {
          return createjs.Types.BINARY;
        }, "AbstractLoader.BINARY") }, CSS: { get: createjs.deprecate(function() {
          return createjs.Types.CSS;
        }, "AbstractLoader.CSS") }, FONT: { get: createjs.deprecate(function() {
          return createjs.Types.FONT;
        }, "AbstractLoader.FONT") }, FONTCSS: { get: createjs.deprecate(function() {
          return createjs.Types.FONTCSS;
        }, "AbstractLoader.FONTCSS") }, IMAGE: { get: createjs.deprecate(function() {
          return createjs.Types.IMAGE;
        }, "AbstractLoader.IMAGE") }, JAVASCRIPT: { get: createjs.deprecate(function() {
          return createjs.Types.JAVASCRIPT;
        }, "AbstractLoader.JAVASCRIPT") }, JSON: { get: createjs.deprecate(function() {
          return createjs.Types.JSON;
        }, "AbstractLoader.JSON") }, JSONP: { get: createjs.deprecate(function() {
          return createjs.Types.JSONP;
        }, "AbstractLoader.JSONP") }, MANIFEST: { get: createjs.deprecate(function() {
          return createjs.Types.MANIFEST;
        }, "AbstractLoader.MANIFEST") }, SOUND: { get: createjs.deprecate(function() {
          return createjs.Types.SOUND;
        }, "AbstractLoader.SOUND") }, VIDEO: { get: createjs.deprecate(function() {
          return createjs.Types.VIDEO;
        }, "AbstractLoader.VIDEO") }, SPRITESHEET: { get: createjs.deprecate(function() {
          return createjs.Types.SPRITESHEET;
        }, "AbstractLoader.SPRITESHEET") }, SVG: { get: createjs.deprecate(function() {
          return createjs.Types.SVG;
        }, "AbstractLoader.SVG") }, TEXT: { get: createjs.deprecate(function() {
          return createjs.Types.TEXT;
        }, "AbstractLoader.TEXT") }, XML: { get: createjs.deprecate(function() {
          return createjs.Types.XML;
        }, "AbstractLoader.XML") } });
      } catch (t3) {
      }
      e2.init = function(t3, e3, i2) {
        this.preferXHR = true, this._preferXHR = true, this.setPreferXHR(t3), this._paused = false, this._basePath = e3, this._crossOrigin = i2, this._loadStartWasDispatched = false, this._currentlyLoadingScript = null, this._currentLoads = [], this._loadQueue = [], this._loadQueueBackup = [], this._loadItemsById = {}, this._loadItemsBySrc = {}, this._loadedResults = {}, this._loadedRawResults = {}, this._numItems = 0, this._numItemsLoaded = 0, this._scriptOrder = [], this._loadedScripts = [], this._lastProgress = NaN;
      }, e2.registerLoader = function(t3) {
        if (!t3 || !t3.canLoadItem)
          throw new Error("loader is of an incorrect type.");
        if (this._availableLoaders.indexOf(t3) != -1)
          throw new Error("loader already exists.");
        this._availableLoaders.unshift(t3);
      }, e2.unregisterLoader = function(t3) {
        t3 = this._availableLoaders.indexOf(t3);
        t3 != -1 && t3 < this._defaultLoaderLength - 1 && this._availableLoaders.splice(t3, 1);
      }, e2.setPreferXHR = function(t3) {
        return this.preferXHR = t3 != 0 && window.XMLHttpRequest != null, this.preferXHR;
      }, e2.removeAll = function() {
        this.remove();
      }, e2.remove = function(t3) {
        var e3 = null;
        if (t3 && !Array.isArray(t3))
          e3 = [t3];
        else if (t3)
          e3 = t3;
        else if (0 < arguments.length)
          return;
        var i2 = false;
        if (e3) {
          for (; e3.length; ) {
            for (var s4 = e3.pop(), r2 = this.getResult(s4), n = this._loadQueue.length - 1; 0 <= n; n--)
              if ((a = this._loadQueue[n].getItem()).id == s4 || a.src == s4) {
                this._loadQueue.splice(n, 1)[0].cancel();
                break;
              }
            for (n = this._loadQueueBackup.length - 1; 0 <= n; n--)
              if ((a = this._loadQueueBackup[n].getItem()).id == s4 || a.src == s4) {
                this._loadQueueBackup.splice(n, 1)[0].cancel();
                break;
              }
            if (r2)
              this._disposeItem(this.getItem(s4));
            else
              for (var n = this._currentLoads.length - 1; 0 <= n; n--) {
                var a = this._currentLoads[n].getItem();
                if (a.id == s4 || a.src == s4) {
                  this._currentLoads.splice(n, 1)[0].cancel(), i2 = true;
                  break;
                }
              }
          }
          i2 && this._loadNext();
        } else {
          for (var o2 in this.close(), this._loadItemsById)
            this._disposeItem(this._loadItemsById[o2]);
          this.init(this.preferXHR, this._basePath);
        }
      }, e2.reset = function() {
        for (var t3 in this.close(), this._loadItemsById)
          this._disposeItem(this._loadItemsById[t3]);
        for (var e3 = [], i2 = 0, s4 = this._loadQueueBackup.length; i2 < s4; i2++)
          e3.push(this._loadQueueBackup[i2].getItem());
        this.loadManifest(e3, false);
      }, e2.installPlugin = function(t3) {
        if (t3 != null && t3.getPreloadHandlers != null) {
          this._plugins.push(t3);
          var e3 = t3.getPreloadHandlers();
          if (e3.scope = t3, e3.types != null)
            for (var i2 = 0, s4 = e3.types.length; i2 < s4; i2++)
              this._typeCallbacks[e3.types[i2]] = e3;
          if (e3.extensions != null)
            for (i2 = 0, s4 = e3.extensions.length; i2 < s4; i2++)
              this._extensionCallbacks[e3.extensions[i2]] = e3;
        }
      }, e2.setMaxConnections = function(t3) {
        this._maxConnections = t3, !this._paused && 0 < this._loadQueue.length && this._loadNext();
      }, e2.loadFile = function(t3, e3, i2) {
        t3 != null ? (this._addItem(t3, null, i2), e3 !== false ? this.setPaused(false) : this.setPaused(true)) : (e3 = new createjs.ErrorEvent("PRELOAD_NO_FILE"), this._sendError(e3));
      }, e2.loadManifest = function(t3, e3, i2) {
        var s4 = null, r2 = null;
        if (Array.isArray(t3)) {
          if (t3.length == 0) {
            var n = new createjs.ErrorEvent("PRELOAD_MANIFEST_EMPTY");
            return void this._sendError(n);
          }
          s4 = t3;
        } else if (typeof t3 == "string")
          s4 = [{ src: t3, type: h2.MANIFEST }];
        else {
          if (typeof t3 != "object") {
            n = new createjs.ErrorEvent("PRELOAD_MANIFEST_NULL");
            return void this._sendError(n);
          }
          t3.src !== void 0 ? (t3.type == null ? t3.type = h2.MANIFEST : t3.type != h2.MANIFEST && (n = new createjs.ErrorEvent("PRELOAD_MANIFEST_TYPE"), this._sendError(n)), s4 = [t3]) : t3.manifest !== void 0 && (s4 = t3.manifest, r2 = t3.path);
        }
        for (var a = 0, o2 = s4.length; a < o2; a++)
          this._addItem(s4[a], r2, i2);
        e3 !== false ? this.setPaused(false) : this.setPaused(true);
      }, e2.load = function() {
        this.setPaused(false);
      }, e2.getItem = function(t3) {
        return this._loadItemsById[t3] || this._loadItemsBySrc[t3];
      }, e2.getResult = function(t3, e3) {
        t3 = this._loadItemsById[t3] || this._loadItemsBySrc[t3];
        if (t3 == null)
          return null;
        t3 = t3.id;
        return (e3 && this._loadedRawResults[t3] ? this._loadedRawResults : this._loadedResults)[t3];
      }, e2.getItems = function(t3) {
        var e3, i2 = [];
        for (e3 in this._loadItemsById) {
          var s4 = this._loadItemsById[e3], r2 = this.getResult(e3);
          t3 === true && r2 == null || i2.push({ item: s4, result: r2, rawResult: this.getResult(e3, true) });
        }
        return i2;
      }, e2.setPaused = function(t3) {
        this._paused = t3, this._paused || this._loadNext();
      }, e2.close = function() {
        for (; this._currentLoads.length; )
          this._currentLoads.pop().cancel();
        this._scriptOrder.length = 0, this._loadedScripts.length = 0, this.loadStartWasDispatched = false, this._itemCount = 0, this._lastProgress = NaN;
      }, e2._addItem = function(t3, e3, i2) {
        e3 = this._createLoadItem(t3, e3, i2);
        e3 == null || (i2 = this._createLoader(e3)) != null && ("plugins" in i2 && (i2.plugins = this._plugins), e3._loader = i2, this._loadQueue.push(i2), this._loadQueueBackup.push(i2), this._numItems++, this._updateProgress(), (this.maintainScriptOrder && e3.type == createjs.Types.JAVASCRIPT || e3.maintainOrder === true) && (this._scriptOrder.push(e3), this._loadedScripts.push(null)));
      }, e2._createLoadItem = function(t3, e3, i2) {
        var s4 = createjs.LoadItem.create(t3);
        if (s4 == null)
          return null;
        t3 = "", i2 = i2 || this._basePath;
        if (s4.src instanceof Object) {
          if (!s4.type)
            return null;
          e3 ? (t3 = e3, n = createjs.URLUtils.parseURI(e3), i2 == null || n.absolute || n.relative || (t3 = i2 + t3)) : i2 != null && (t3 = i2);
        } else {
          var r2 = createjs.URLUtils.parseURI(s4.src);
          r2.extension && (s4.ext = r2.extension), s4.type == null && (s4.type = createjs.RequestUtils.getTypeByExtension(s4.ext));
          var n, a = s4.src;
          r2.absolute || r2.relative || (e3 ? (t3 = e3, n = createjs.URLUtils.parseURI(e3), a = e3 + a, i2 == null || n.absolute || n.relative || (t3 = i2 + t3)) : i2 != null && (t3 = i2)), s4.src = t3 + s4.src;
        }
        s4.path = t3, s4.id !== void 0 && s4.id !== null && s4.id !== "" || (s4.id = a);
        a = this._typeCallbacks[s4.type] || this._extensionCallbacks[s4.ext];
        if (a) {
          a = a.callback.call(a.scope, s4, this);
          if (a === false)
            return null;
          a === true || a != null && (s4._loader = a), (r2 = createjs.URLUtils.parseURI(s4.src)).extension != null && (s4.ext = r2.extension);
        }
        return this._loadItemsById[s4.id] = s4, (this._loadItemsBySrc[s4.src] = s4).crossOrigin == null && (s4.crossOrigin = this._crossOrigin), s4;
      }, e2._createLoader = function(t3) {
        if (t3._loader != null)
          return t3._loader;
        for (var e3 = this.preferXHR, i2 = 0; i2 < this._availableLoaders.length; i2++) {
          var s4 = this._availableLoaders[i2];
          if (s4 && s4.canLoadItem(t3))
            return new s4(t3, e3);
        }
        return null;
      }, e2._loadNext = function() {
        if (!this._paused) {
          this._loadStartWasDispatched || (this._sendLoadStart(), this._loadStartWasDispatched = true), this._numItems == this._numItemsLoaded ? (this.loaded = true, this._sendComplete(), this.next && this.next.load && this.next.load()) : this.loaded = false;
          for (var t3 = 0; t3 < this._loadQueue.length && !(this._currentLoads.length >= this._maxConnections); t3++) {
            var e3 = this._loadQueue[t3];
            this._canStartLoad(e3) && (this._loadQueue.splice(t3, 1), t3--, this._loadItem(e3));
          }
        }
      }, e2._loadItem = function(t3) {
        t3.on("fileload", this._handleFileLoad, this), t3.on("progress", this._handleProgress, this), t3.on("complete", this._handleFileComplete, this), t3.on("error", this._handleError, this), t3.on("fileerror", this._handleFileError, this), this._currentLoads.push(t3), this._sendFileStart(t3.getItem()), t3.load();
      }, e2._handleFileLoad = function(t3) {
        t3.target = null, this.dispatchEvent(t3);
      }, e2._handleFileError = function(t3) {
        t3 = new createjs.ErrorEvent("FILE_LOAD_ERROR", null, t3.item);
        this._sendError(t3);
      }, e2._handleError = function(t3) {
        var e3 = t3.target;
        this._numItemsLoaded++, this._finishOrderedItem(e3, true), this._updateProgress();
        t3 = new createjs.ErrorEvent("FILE_LOAD_ERROR", null, e3.getItem());
        this._sendError(t3), this.stopOnError ? this.setPaused(true) : (this._removeLoadItem(e3), this._cleanLoadItem(e3), this._loadNext());
      }, e2._handleFileComplete = function(t3) {
        var e3 = t3.target, i2 = e3.getItem(), s4 = e3.getResult();
        this._loadedResults[i2.id] = s4;
        t3 = e3.getResult(true);
        t3 != null && t3 !== s4 && (this._loadedRawResults[i2.id] = t3), this._saveLoadedItems(e3), this._removeLoadItem(e3), this._finishOrderedItem(e3) || this._processFinishedLoad(i2, e3), this._cleanLoadItem(e3);
      }, e2._saveLoadedItems = function(t3) {
        var e3 = t3.getLoadedItems();
        if (e3 !== null)
          for (var i2 = 0; i2 < e3.length; i2++) {
            var s4 = e3[i2].item;
            this._loadItemsBySrc[s4.src] = s4, this._loadItemsById[s4.id] = s4, this._loadedResults[s4.id] = e3[i2].result, this._loadedRawResults[s4.id] = e3[i2].rawResult;
          }
      }, e2._finishOrderedItem = function(t3, e3) {
        var i2 = t3.getItem();
        if (this.maintainScriptOrder && i2.type == createjs.Types.JAVASCRIPT || i2.maintainOrder) {
          t3 instanceof createjs.JavaScriptLoader && (this._currentlyLoadingScript = false);
          t3 = createjs.indexOf(this._scriptOrder, i2);
          return t3 == -1 ? false : (this._loadedScripts[t3] = e3 === true || i2, this._checkScriptLoadOrder(), true);
        }
        return false;
      }, e2._checkScriptLoadOrder = function() {
        for (var t3 = this._loadedScripts.length, e3 = 0; e3 < t3; e3++) {
          var i2, s4 = this._loadedScripts[e3];
          if (s4 === null)
            break;
          s4 !== true && (i2 = this._loadedResults[s4.id], s4.type == createjs.Types.JAVASCRIPT && createjs.DomUtils.appendToHead(i2), i2 = s4._loader, this._processFinishedLoad(s4, i2), this._loadedScripts[e3] = true);
        }
      }, e2._processFinishedLoad = function(t3, e3) {
        var i2;
        this._numItemsLoaded++, this.maintainScriptOrder || t3.type != createjs.Types.JAVASCRIPT || (i2 = e3.getTag(), createjs.DomUtils.appendToHead(i2)), this._updateProgress(), this._sendFileComplete(t3, e3), this._loadNext();
      }, e2._canStartLoad = function(t3) {
        if (!this.maintainScriptOrder || t3.preferXHR)
          return true;
        t3 = t3.getItem();
        if (t3.type != createjs.Types.JAVASCRIPT)
          return true;
        if (this._currentlyLoadingScript)
          return false;
        for (var e3 = this._scriptOrder.indexOf(t3), i2 = 0; i2 < e3; ) {
          if (this._loadedScripts[i2] == null)
            return false;
          i2++;
        }
        return this._currentlyLoadingScript = true;
      }, e2._removeLoadItem = function(t3) {
        for (var e3 = this._currentLoads.length, i2 = 0; i2 < e3; i2++)
          if (this._currentLoads[i2] == t3) {
            this._currentLoads.splice(i2, 1);
            break;
          }
      }, e2._cleanLoadItem = function(t3) {
        t3 = t3.getItem();
        t3 && delete t3._loader;
      }, e2._handleProgress = function(t3) {
        t3 = t3.target;
        this._sendFileProgress(t3.getItem(), t3.progress), this._updateProgress();
      }, e2._updateProgress = function() {
        var t3 = this._numItemsLoaded / this._numItems, e3 = this._numItems - this._numItemsLoaded;
        if (0 < e3) {
          for (var i2 = 0, s4 = 0, r2 = this._currentLoads.length; s4 < r2; s4++)
            i2 += this._currentLoads[s4].progress;
          t3 += i2 / e3 * (e3 / this._numItems);
        }
        this._lastProgress != t3 && (this._sendProgress(t3), this._lastProgress = t3);
      }, e2._disposeItem = function(t3) {
        delete this._loadedResults[t3.id], delete this._loadedRawResults[t3.id], delete this._loadItemsById[t3.id], delete this._loadItemsBySrc[t3.src];
      }, e2._sendFileProgress = function(t3, e3) {
        var i2;
        this._isCanceled() || this._paused || this.hasEventListener("fileprogress") && ((i2 = new createjs.Event("fileprogress")).progress = e3, i2.loaded = e3, i2.total = 1, i2.item = t3, this.dispatchEvent(i2));
      }, e2._sendFileComplete = function(t3, e3) {
        var i2;
        this._isCanceled() || this._paused || ((i2 = new createjs.Event("fileload")).loader = e3, i2.item = t3, i2.result = this._loadedResults[t3.id], i2.rawResult = this._loadedRawResults[t3.id], t3.completeHandler && t3.completeHandler(i2), this.hasEventListener("fileload") && this.dispatchEvent(i2));
      }, e2._sendFileStart = function(t3) {
        var e3 = new createjs.Event("filestart");
        e3.item = t3, this.hasEventListener("filestart") && this.dispatchEvent(e3);
      }, e2.toString = function() {
        return "[PreloadJS LoadQueue]";
      }, createjs.LoadQueue = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.AbstractLoader_constructor(t3, true, createjs.Types.TEXT);
      }
      createjs.extend(t2, createjs.AbstractLoader), t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.TEXT;
      }, createjs.TextLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.AbstractLoader_constructor(t3, true, createjs.Types.BINARY), this.on("initialize", this._updateXHR, this);
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader);
      t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.BINARY;
      }, e2._updateXHR = function(t3) {
        t3.loader.setResponseType("arraybuffer");
      }, createjs.BinaryLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.AbstractLoader_constructor(t3, e3, createjs.Types.CSS), this.resultFormatter = this._formatResult, this._tagSrcAttribute = "href", this._tag = e3 ? createjs.Elements.style() : createjs.Elements.link(), this._tag.rel = "stylesheet", this._tag.type = "text/css";
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader);
      t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.CSS;
      }, e2._formatResult = function(t3) {
        var e3;
        return this._preferXHR ? (e3 = t3.getTag()).styleSheet ? e3.styleSheet.cssText = t3.getResult(true) : (t3 = createjs.Elements.text(t3.getResult(true)), e3.appendChild(t3)) : e3 = this._tag, createjs.DomUtils.appendToHead(e3), e3;
      }, createjs.CSSLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function h2(t3, e2) {
        this.AbstractLoader_constructor(t3, e2, t3.type), this._faces = {}, this._watched = [], this._count = 0, this._watchInterval = null, this._loadTimeout = null, this._injectCSS = t3.injectCSS === void 0 || t3.injectCSS, this.dispatchEvent("initialize");
      }
      var t2 = createjs.extend(h2, createjs.AbstractLoader);
      h2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.FONT || t3.type == createjs.Types.FONTCSS;
      }, h2.sampleText = "abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ", h2._ctx = document.createElement("canvas").getContext("2d"), h2._referenceFonts = ["serif", "monospace"], h2.WEIGHT_REGEX = /[- ._]*(thin|normal|book|regular|medium|black|heavy|[1-9]00|(?:extra|ultra|semi|demi)?[- ._]*(?:light|bold))[- ._]*/gi, h2.STYLE_REGEX = /[- ._]*(italic|oblique)[- ._]*/gi, h2.FONT_FORMAT = { woff2: "woff2", woff: "woff", ttf: "truetype", otf: "truetype" }, h2.FONT_WEIGHT = { thin: 100, extralight: 200, ultralight: 200, light: 300, semilight: 300, demilight: 300, book: "normal", regular: "normal", semibold: 600, demibold: 600, extrabold: 800, ultrabold: 800, black: 900, heavy: 900 }, h2.WATCH_DURATION = 10, t2.load = function() {
        var t3;
        if (this.type == createjs.Types.FONTCSS) {
          if (!this._watchCSS())
            return void this.AbstractLoader_load();
        } else
          this._item.src instanceof Array ? this._watchFontArray() : (t3 = this._defFromSrc(this._item.src), this._watchFont(t3), this._injectStyleTag(this._cssFromDef(t3)));
        this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout), this.dispatchEvent("loadstart");
      }, t2._handleTimeout = function() {
        this._stopWatching(), this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT"));
      }, t2._createRequest = function() {
        return this._request;
      }, t2.handleEvent = function(t3) {
        switch (t3.type) {
          case "complete":
            this._rawResult = t3.target._response, this._result = true, this._parseCSS(this._rawResult);
            break;
          case "error":
            this._stopWatching(), this.AbstractLoader_handleEvent(t3);
        }
      }, t2._watchCSS = function() {
        var t3 = this._item.src;
        return t3 instanceof HTMLStyleElement && (this._injectCSS && !t3.parentNode && (document.head || document.getElementsByTagName("head")[0]).appendChild(t3), this._injectCSS = false, t3 = "\n" + t3.textContent), t3.search(/\n|\r|@font-face/i) !== -1 ? (this._parseCSS(t3), true) : (this._request = new createjs.XHRRequest(this._item), false);
      }, t2._parseCSS = function(t3) {
        for (var e2 = /@font-face\s*\{([^}]+)}/g; ; ) {
          var i2 = e2.exec(t3);
          if (!i2)
            break;
          this._watchFont(this._parseFontFace(i2[1]));
        }
        this._injectStyleTag(t3);
      }, t2._watchFontArray = function() {
        for (var t3 = this._item.src, e2 = "", i2 = t3.length - 1; 0 <= i2; i2--) {
          var s4 = t3[i2], s4 = typeof s4 == "string" ? this._defFromSrc(s4) : this._defFromObj(s4);
          this._watchFont(s4), e2 += this._cssFromDef(s4) + "\n";
        }
        this._injectStyleTag(e2);
      }, t2._injectStyleTag = function(t3) {
        var e2, i2;
        this._injectCSS && (e2 = document.head || document.getElementsByTagName("head")[0], (i2 = document.createElement("style")).type = "text/css", i2.styleSheet ? i2.styleSheet.cssText = t3 : i2.appendChild(document.createTextNode(t3)), e2.appendChild(i2));
      }, t2._parseFontFace = function(t3) {
        var e2 = this._getCSSValue(t3, "font-family"), i2 = this._getCSSValue(t3, "src");
        return e2 && i2 ? this._defFromObj({ family: e2, src: i2, style: this._getCSSValue(t3, "font-style"), weight: this._getCSSValue(t3, "font-weight") }) : null;
      }, t2._watchFont = function(t3) {
        t3 && !this._faces[t3.id] && (this._faces[t3.id] = t3, this._watched.push(t3), this._count++, this._calculateReferenceSizes(t3), this._startWatching());
      }, t2._startWatching = function() {
        this._watchInterval == null && (this._watchInterval = setInterval(createjs.proxy(this._watch, this), h2.WATCH_DURATION));
      }, t2._stopWatching = function() {
        clearInterval(this._watchInterval), clearTimeout(this._loadTimeout), this._watchInterval = null;
      }, t2._watch = function() {
        for (var t3 = this._watched, e2 = h2._referenceFonts, i2 = t3.length, s4 = i2 - 1; 0 <= s4; s4--)
          for (var r2 = t3[s4], n = r2.refs, a = n.length - 1; 0 <= a; a--)
            if (this._getTextWidth(r2.family + "," + e2[a], r2.weight, r2.style) != n[a]) {
              var o2 = new createjs.Event("fileload");
              r2.type = "font-family", o2.item = r2, this.dispatchEvent(o2), t3.splice(s4, 1);
              break;
            }
        i2 !== t3.length && (o2 = new createjs.ProgressEvent(this._count - t3.length, this._count), this.dispatchEvent(o2)), i2 === 0 && (this._stopWatching(), this._sendComplete());
      }, t2._calculateReferenceSizes = function(t3) {
        for (var e2 = h2._referenceFonts, i2 = t3.refs = [], s4 = 0; s4 < e2.length; s4++)
          i2[s4] = this._getTextWidth(e2[s4], t3.weight, t3.style);
      }, t2._defFromSrc = function(t3) {
        var e2 = /[- ._]+/g, i2 = t3, s4 = null, r2 = i2.search(/[?#]/);
        r2 !== -1 && (i2 = i2.substr(0, r2)), (r2 = i2.lastIndexOf(".")) !== -1 && (s4 = i2.substr(r2 + 1), i2 = i2.substr(0, r2)), (r2 = i2.lastIndexOf("/")) !== -1 && (i2 = i2.substr(r2 + 1));
        var n = i2, a = n.match(h2.WEIGHT_REGEX);
        a && (a = a[0], n = n.replace(a, ""), a = a.replace(e2, "").toLowerCase());
        r2 = i2.match(h2.STYLE_REGEX);
        r2 && (n = n.replace(r2[0], ""), r2 = "italic"), n = n.replace(e2, "");
        t3 = "local('" + i2.replace(e2, " ") + "'), url('" + t3 + "')", s4 = h2.FONT_FORMAT[s4];
        return s4 && (t3 += " format('" + s4 + "')"), this._defFromObj({ family: n, weight: h2.FONT_WEIGHT[a] || a, style: r2, src: t3 });
      }, t2._defFromObj = function(t3) {
        t3 = { family: t3.family, src: t3.src, style: t3.style || "normal", weight: t3.weight || "normal" };
        return t3.id = t3.family + ";" + t3.style + ";" + t3.weight, t3;
      }, t2._cssFromDef = function(t3) {
        return "@font-face {\n	font-family: '" + t3.family + "';\n	font-style: " + t3.style + ";\n	font-weight: " + t3.weight + ";\n	src: " + t3.src + ";\n}";
      }, t2._getTextWidth = function(t3, e2, i2) {
        var s4 = h2._ctx;
        return s4.font = i2 + " " + e2 + " 72px " + t3, s4.measureText(h2.sampleText).width;
      }, t2._getCSSValue = function(t3, e2) {
        t3 = new RegExp(e2 + ":s*([^;}]+?)s*[;}]").exec(t3);
        return t3 && t3[1] ? t3[1] : null;
      }, createjs.FontLoader = createjs.promote(h2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.AbstractLoader_constructor(t3, e3, createjs.Types.IMAGE), this.resultFormatter = this._formatResult, this._tagSrcAttribute = "src", createjs.DomUtils.isImageTag(t3) ? this._tag = t3 : createjs.DomUtils.isImageTag(t3.src) ? this._tag = t3.src : createjs.DomUtils.isImageTag(t3.tag) && (this._tag = t3.tag), this._tag != null ? this._preferXHR = false : this._tag = createjs.Elements.img(), this.on("initialize", this._updateXHR, this);
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader);
      t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.IMAGE;
      }, e2.load = function() {
        var t3;
        this._tag.src != "" && this._tag.complete ? this._sendComplete() : ((t3 = this._item.crossOrigin) == 1 && (t3 = "Anonymous"), t3 == null || createjs.URLUtils.isLocal(this._item) || (this._tag.crossOrigin = t3), this.AbstractLoader_load());
      }, e2._updateXHR = function(t3) {
        t3.loader.mimeType = "text/plain; charset=x-user-defined-binary", t3.loader.setResponseType && t3.loader.setResponseType("blob");
      }, e2._formatResult = function(t3) {
        return this._formatImage;
      }, e2._formatImage = function(t3, e3) {
        var i2 = this._tag, s4 = window.URL || window.webkitURL;
        this._preferXHR && (s4 ? (this.getResult(true) && (s4 = s4.createObjectURL(this.getResult(true)), i2.src = s4), i2.addEventListener("load", this._cleanUpURL, false), i2.addEventListener("error", this._cleanUpURL, false)) : i2.src = this._item.src), i2.complete ? t3(i2) : (i2.onload = createjs.proxy(function() {
          t3(this._tag), i2.onload = i2.onerror = null;
        }, this), i2.onerror = createjs.proxy(function(t4) {
          e3(new createjs.ErrorEvent("IMAGE_FORMAT", null, t4)), i2.onload = i2.onerror = null;
        }, this));
      }, e2._cleanUpURL = function(t3) {
        (window.URL || window.webkitURL).revokeObjectURL(t3.target.src);
      }, createjs.ImageLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.AbstractLoader_constructor(t3, e3, createjs.Types.JAVASCRIPT), this.resultFormatter = this._formatResult, this._tagSrcAttribute = "src", this.setTag(createjs.Elements.script());
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader);
      t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.JAVASCRIPT;
      }, e2._formatResult = function(t3) {
        var e3 = t3.getTag();
        return this._preferXHR && (e3.text = t3.getResult(true)), e3;
      }, createjs.JavaScriptLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.AbstractLoader_constructor(t3, true, createjs.Types.JSON), this.resultFormatter = this._formatResult;
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader);
      t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.JSON;
      }, e2._formatResult = function(t3) {
        var e3 = null;
        try {
          e3 = createjs.DataUtils.parseJSON(t3.getResult(true));
        } catch (t4) {
          var i2 = new createjs.ErrorEvent("JSON_FORMAT", null, t4);
          return this._sendError(i2), t4;
        }
        return e3;
      }, createjs.JSONLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.AbstractLoader_constructor(t3, false, createjs.Types.JSONP), this.setTag(createjs.Elements.script()), this.getTag().type = "text/javascript";
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader);
      t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.JSONP;
      }, e2.cancel = function() {
        this.AbstractLoader_cancel(), this._dispose();
      }, e2.load = function() {
        if (this._item.callback == null)
          throw new Error("callback is required for loading JSONP requests.");
        if (window[this._item.callback] != null)
          throw new Error("JSONP callback '" + this._item.callback + "' already exists on window. You need to specify a different callback or re-name the current one.");
        window[this._item.callback] = createjs.proxy(this._handleLoad, this), createjs.DomUtils.appendToBody(this._tag), this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout), this._tag.src = this._item.src;
      }, e2._handleLoad = function(t3) {
        this._result = this._rawResult = t3, this._sendComplete(), this._dispose();
      }, e2._handleTimeout = function() {
        this._dispose(), this.dispatchEvent(new createjs.ErrorEvent("timeout"));
      }, e2._dispose = function() {
        createjs.DomUtils.removeChild(this._tag), delete window[this._item.callback], clearTimeout(this._loadTimeout);
      }, createjs.JSONPLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.AbstractLoader_constructor(t3, e3, createjs.Types.MANIFEST), this.plugins = null, this._manifestQueue = null;
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader), i2 = t2;
      i2.MANIFEST_PROGRESS = 0.25, i2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.MANIFEST;
      }, e2.load = function() {
        this.AbstractLoader_load();
      }, e2._createRequest = function() {
        var t3 = this._item.callback;
        this._request = new (t3 != null ? createjs.JSONPLoader : createjs.JSONLoader)(this._item);
      }, e2.handleEvent = function(t3) {
        switch (t3.type) {
          case "complete":
            return this._rawResult = t3.target.getResult(true), this._result = t3.target.getResult(), this._sendProgress(i2.MANIFEST_PROGRESS), void this._loadManifest(this._result);
          case "progress":
            return t3.loaded *= i2.MANIFEST_PROGRESS, this.progress = t3.loaded / t3.total, !isNaN(this.progress) && this.progress != 1 / 0 || (this.progress = 0), void this._sendProgress(t3);
        }
        this.AbstractLoader_handleEvent(t3);
      }, e2.destroy = function() {
        this.AbstractLoader_destroy(), this._manifestQueue.close();
      }, e2._loadManifest = function(t3) {
        if (t3 && t3.manifest) {
          var e3 = this._manifestQueue = new createjs.LoadQueue(this._preferXHR);
          e3.on("fileload", this._handleManifestFileLoad, this), e3.on("progress", this._handleManifestProgress, this), e3.on("complete", this._handleManifestComplete, this, true), e3.on("error", this._handleManifestError, this, true);
          for (var i3 = 0, s4 = this.plugins.length; i3 < s4; i3++)
            e3.installPlugin(this.plugins[i3]);
          e3.loadManifest(t3);
        } else
          this._sendComplete();
      }, e2._handleManifestFileLoad = function(t3) {
        t3.target = null, this.dispatchEvent(t3);
      }, e2._handleManifestComplete = function(t3) {
        this._loadedItems = this._manifestQueue.getItems(true), this._sendComplete();
      }, e2._handleManifestProgress = function(t3) {
        this.progress = t3.progress * (1 - i2.MANIFEST_PROGRESS) + i2.MANIFEST_PROGRESS, this._sendProgress(this.progress);
      }, e2._handleManifestError = function(t3) {
        var e3 = new createjs.Event("fileerror");
        e3.item = t3.data, this.dispatchEvent(e3);
      }, createjs.ManifestLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.AbstractMediaLoader_constructor(t3, e3, createjs.Types.SOUND), createjs.DomUtils.isAudioTag(t3) || createjs.DomUtils.isAudioTag(t3.src) ? this._tag = t3 : createjs.DomUtils.isAudioTag(t3.tag) && (this._tag = createjs.DomUtils.isAudioTag(t3) ? t3 : t3.src), this._tag != null && (this._preferXHR = false);
      }
      var e2 = createjs.extend(t2, createjs.AbstractMediaLoader);
      t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.SOUND;
      }, e2._createTag = function(t3) {
        var e3 = createjs.Elements.audio();
        return e3.autoplay = false, e3.preload = "none", e3.src = t3, e3;
      }, createjs.SoundLoader = createjs.promote(t2, "AbstractMediaLoader");
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.AbstractMediaLoader_constructor(t3, e3, createjs.Types.VIDEO), createjs.DomUtils.isVideoTag(t3) || createjs.DomUtils.isVideoTag(t3.src) ? (this.setTag(createjs.DomUtils.isVideoTag(t3) ? t3 : t3.src), this._preferXHR = false) : this.setTag(this._createTag());
      }
      var e2 = t2;
      createjs.extend(t2, createjs.AbstractMediaLoader)._createTag = function() {
        return createjs.Elements.video();
      }, e2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.VIDEO;
      }, createjs.VideoLoader = createjs.promote(t2, "AbstractMediaLoader");
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.AbstractLoader_constructor(t3, e3, createjs.Types.SPRITESHEET), this._manifestQueue = null;
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader), i2 = t2;
      i2.SPRITESHEET_PROGRESS = 0.25, i2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.SPRITESHEET;
      }, e2.destroy = function() {
        this.AbstractLoader_destroy(), this._manifestQueue.close();
      }, e2._createRequest = function() {
        var t3 = this._item.callback;
        this._request = new (t3 != null ? createjs.JSONPLoader : createjs.JSONLoader)(this._item);
      }, e2.handleEvent = function(t3) {
        switch (t3.type) {
          case "complete":
            return this._rawResult = t3.target.getResult(true), this._result = t3.target.getResult(), this._sendProgress(i2.SPRITESHEET_PROGRESS), void this._loadManifest(this._result);
          case "progress":
            return t3.loaded *= i2.SPRITESHEET_PROGRESS, this.progress = t3.loaded / t3.total, !isNaN(this.progress) && this.progress != 1 / 0 || (this.progress = 0), void this._sendProgress(t3);
        }
        this.AbstractLoader_handleEvent(t3);
      }, e2._loadManifest = function(t3) {
        var e3;
        t3 && t3.images && ((e3 = this._manifestQueue = new createjs.LoadQueue(this._preferXHR, this._item.path, this._item.crossOrigin)).on("complete", this._handleManifestComplete, this, true), e3.on("fileload", this._handleManifestFileLoad, this), e3.on("progress", this._handleManifestProgress, this), e3.on("error", this._handleManifestError, this, true), e3.loadManifest(t3.images));
      }, e2._handleManifestFileLoad = function(t3) {
        var e3, i3 = t3.result;
        i3 != null && (t3 = (e3 = this.getResult().images).indexOf(t3.item.src), e3[t3] = i3);
      }, e2._handleManifestComplete = function(t3) {
        this._result = new createjs.SpriteSheet(this._result), this._loadedItems = this._manifestQueue.getItems(true), this._sendComplete();
      }, e2._handleManifestProgress = function(t3) {
        this.progress = t3.progress * (1 - i2.SPRITESHEET_PROGRESS) + i2.SPRITESHEET_PROGRESS, this._sendProgress(this.progress);
      }, e2._handleManifestError = function(t3) {
        var e3 = new createjs.Event("fileerror");
        e3.item = t3.data, this.dispatchEvent(e3);
      }, createjs.SpriteSheetLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3, e3) {
        this.AbstractLoader_constructor(t3, e3, createjs.Types.SVG), this.resultFormatter = this._formatResult, this._tagSrcAttribute = "data", e3 ? this.setTag(createjs.Elements.svg()) : (this.setTag(createjs.Elements.object()), this.getTag().type = "image/svg+xml");
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader);
      t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.SVG;
      }, e2._formatResult = function(t3) {
        var e3 = createjs.DataUtils.parseXML(t3.getResult(true)), t3 = t3.getTag();
        if (!this._preferXHR && document.body.contains(t3) && document.body.removeChild(t3), e3.documentElement == null)
          return e3;
        e3 = e3.documentElement;
        return document.importNode && (e3 = document.importNode(e3, true)), t3.appendChild(e3), t3;
      }, createjs.SVGLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.AbstractLoader_constructor(t3, true, createjs.Types.XML), this.resultFormatter = this._formatResult;
      }
      var e2 = createjs.extend(t2, createjs.AbstractLoader);
      t2.canLoadItem = function(t3) {
        return t3.type == createjs.Types.XML;
      }, e2._formatResult = function(t3) {
        return createjs.DataUtils.parseXML(t3.getResult(true));
      }, createjs.XMLLoader = createjs.promote(t2, "AbstractLoader");
    }(), function() {
      var t2 = createjs.SoundJS = createjs.SoundJS || {};
      t2.version = "NEXT", t2.buildDate = "Thu, 14 Sep 2017 22:19:45 GMT";
    }(), function() {
      "use strict";
      function t2() {
        throw "BrowserDetect cannot be instantiated";
      }
      var e2 = t2.agent = window.navigator.userAgent;
      t2.isWindowPhone = -1 < e2.indexOf("IEMobile") || -1 < e2.indexOf("Windows Phone"), t2.isFirefox = -1 < e2.indexOf("Firefox"), t2.isOpera = window.opera != null, t2.isChrome = -1 < e2.indexOf("Chrome"), t2.isIOS = (-1 < e2.indexOf("iPod") || -1 < e2.indexOf("iPhone") || -1 < e2.indexOf("iPad")) && !t2.isWindowPhone, t2.isAndroid = -1 < e2.indexOf("Android") && !t2.isWindowPhone, t2.isBlackberry = -1 < e2.indexOf("Blackberry"), t2.isEdge = -1 < e2.indexOf("Edg"), createjs.BrowserDetect = t2;
    }(), function() {
      "use strict";
      function t2() {
        this.interrupt = null, this.delay = null, this.offset = null, this.loop = null, this.volume = null, this.pan = null, this.startTime = null, this.duration = null;
      }
      var e2 = t2.prototype = {}, i2 = t2;
      i2.create = function(t3) {
        if (typeof t3 == "string")
          return console && (console.warn || console.log)("Deprecated behaviour. Sound.play takes a configuration object instead of individual arguments. See docs for info."), new createjs.PlayPropsConfig().set({ interrupt: t3 });
        if (t3 == null || t3 instanceof i2 || t3 instanceof Object)
          return new createjs.PlayPropsConfig().set(t3);
        if (t3 == null)
          throw new Error("PlayProps configuration not recognized.");
      }, e2.set = function(t3) {
        if (t3 != null)
          for (var e3 in t3)
            this[e3] = t3[e3];
        return this;
      }, e2.toString = function() {
        return "[PlayPropsConfig]";
      }, createjs.PlayPropsConfig = i2;
    }(), function() {
      "use strict";
      function a() {
        throw "Sound cannot be instantiated";
      }
      var o2 = a;
      function h2(t3, e2) {
        this.init(t3, e2);
      }
      o2.INTERRUPT_ANY = "any", o2.INTERRUPT_EARLY = "early", o2.INTERRUPT_LATE = "late", o2.INTERRUPT_NONE = "none", o2.PLAY_INITED = "playInited", o2.PLAY_SUCCEEDED = "playSucceeded", o2.PLAY_INTERRUPTED = "playInterrupted", o2.PLAY_FINISHED = "playFinished", o2.PLAY_FAILED = "playFailed", o2.SUPPORTED_EXTENSIONS = ["mp3", "ogg", "opus", "mpeg", "wav", "m4a", "mp4", "aiff", "wma", "mid"], o2.EXTENSION_MAP = { m4a: "mp4" }, o2.FILE_PATTERN = /^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([/.]*?(?:[^?]+)?\/)?((?:[^/?]+)\.(\w+))(?:\?(\S+)?)?$/, o2.defaultInterruptBehavior = o2.INTERRUPT_NONE, o2.alternateExtensions = [], o2.activePlugin = null, o2._masterVolume = 1, o2._getMasterVolume = function() {
        return this._masterVolume;
      }, o2.getVolume = createjs.deprecate(o2._getMasterVolume, "Sound.getVolume"), o2._setMasterVolume = function(t3) {
        if (Number(t3) != null && (t3 = Math.max(0, Math.min(1, t3)), o2._masterVolume = t3, !this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(t3)))
          for (var e2 = this._instances, i2 = 0, s4 = e2.length; i2 < s4; i2++)
            e2[i2].setMasterVolume(t3);
      }, o2.setVolume = createjs.deprecate(o2._setMasterVolume, "Sound.setVolume"), o2._masterMute = false, o2._getMute = function() {
        return this._masterMute;
      }, o2.getMute = createjs.deprecate(o2._getMute, "Sound.getMute"), o2._setMute = function(t3) {
        if (t3 != null && (this._masterMute = t3, !this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(t3)))
          for (var e2 = this._instances, i2 = 0, s4 = e2.length; i2 < s4; i2++)
            e2[i2].setMasterMute(t3);
      }, o2.setMute = createjs.deprecate(o2._setMute, "Sound.setMute"), o2._getCapabilities = function() {
        return o2.activePlugin == null ? null : o2.activePlugin._capabilities;
      }, o2.getCapabilities = createjs.deprecate(o2._getCapabilities, "Sound.getCapabilities"), Object.defineProperties(o2, { volume: { get: o2._getMasterVolume, set: o2._setMasterVolume }, muted: { get: o2._getMute, set: o2._setMute }, capabilities: { get: o2._getCapabilities } }), o2._pluginsRegistered = false, o2._lastID = 0, o2._instances = [], o2._idHash = {}, o2._preloadHash = {}, o2._defaultPlayPropsHash = {}, o2.addEventListener = null, o2.removeEventListener = null, o2.removeAllEventListeners = null, o2.dispatchEvent = null, o2.hasEventListener = null, o2._listeners = null, createjs.EventDispatcher.initialize(o2), o2.getPreloadHandlers = function() {
        return { callback: createjs.proxy(o2.initLoad, o2), types: ["sound"], extensions: o2.SUPPORTED_EXTENSIONS };
      }, o2._handleLoadComplete = function(t3) {
        var e2 = t3.target.getItem().src;
        if (o2._preloadHash[e2])
          for (var i2 = 0, s4 = o2._preloadHash[e2].length; i2 < s4; i2++) {
            var r2 = o2._preloadHash[e2][i2];
            o2._preloadHash[e2][i2] = true, o2.hasEventListener("fileload") && ((t3 = new createjs.Event("fileload")).src = r2.src, t3.id = r2.id, t3.data = r2.data, t3.sprite = r2.sprite, o2.dispatchEvent(t3));
          }
      }, o2._handleLoadError = function(t3) {
        var e2 = t3.target.getItem().src;
        if (o2._preloadHash[e2])
          for (var i2 = 0, s4 = o2._preloadHash[e2].length; i2 < s4; i2++) {
            var r2 = o2._preloadHash[e2][i2];
            o2._preloadHash[e2][i2] = false, o2.hasEventListener("fileerror") && ((t3 = new createjs.Event("fileerror")).src = r2.src, t3.id = r2.id, t3.data = r2.data, t3.sprite = r2.sprite, o2.dispatchEvent(t3));
          }
      }, o2._registerPlugin = function(t3) {
        return !!t3.isSupported() && (o2.activePlugin = new t3(), true);
      }, o2.registerPlugins = function(t3) {
        o2._pluginsRegistered = true;
        for (var e2 = 0, i2 = t3.length; e2 < i2; e2++)
          if (o2._registerPlugin(t3[e2]))
            return true;
        return false;
      }, o2.initializeDefaultPlugins = function() {
        return o2.activePlugin != null || !o2._pluginsRegistered && !!o2.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin]);
      }, o2.isReady = function() {
        return o2.activePlugin != null;
      }, o2.initLoad = function(t3) {
        return t3.type == "video" || o2._registerSound(t3);
      }, o2._registerSound = function(t3) {
        if (!o2.initializeDefaultPlugins())
          return false;
        if (t3.src instanceof Object ? (n = o2._parseSrc(t3.src)).src = t3.path + n.src : n = o2._parsePath(t3.src), n == null)
          return false;
        t3.src = n.src, t3.type = "sound";
        var e2 = t3.data, i2 = null;
        if (e2 != null && (isNaN(e2.channels) ? isNaN(e2) || (i2 = parseInt(e2)) : i2 = parseInt(e2.channels), e2.audioSprite))
          for (var s4, r2 = e2.audioSprite.length; r2--; )
            s4 = e2.audioSprite[r2], o2._idHash[s4.id] = { src: t3.src, startTime: parseInt(s4.startTime), duration: parseInt(s4.duration) }, s4.defaultPlayProps && (o2._defaultPlayPropsHash[s4.id] = createjs.PlayPropsConfig.create(s4.defaultPlayProps));
        t3.id != null && (o2._idHash[t3.id] = { src: t3.src });
        var n = o2.activePlugin.register(t3);
        return h2.create(t3.src, i2), e2 != null && isNaN(e2) ? t3.data.channels = i2 || h2.maxPerChannel() : t3.data = i2 || h2.maxPerChannel(), n.type && (t3.type = n.type), t3.defaultPlayProps && (o2._defaultPlayPropsHash[t3.src] = createjs.PlayPropsConfig.create(t3.defaultPlayProps)), n;
      }, o2.registerSound = function(t3, e2, i2, s4, r2) {
        r2 = { src: t3, id: e2, data: i2, defaultPlayProps: r2 };
        t3 instanceof Object && t3.src && (s4 = e2, r2 = t3), ((r2 = createjs.LoadItem.create(r2)).path = s4) == null || r2.src instanceof Object || (r2.src = s4 + r2.src);
        s4 = o2._registerSound(r2);
        if (!s4)
          return false;
        if (o2._preloadHash[r2.src] || (o2._preloadHash[r2.src] = []), o2._preloadHash[r2.src].push(r2), o2._preloadHash[r2.src].length == 1)
          s4.on("complete", this._handleLoadComplete, this), s4.on("error", this._handleLoadError, this), o2.activePlugin.preload(s4);
        else if (o2._preloadHash[r2.src][0] == 1)
          return true;
        return r2;
      }, o2.registerSounds = function(t3, e2) {
        var i2 = [];
        t3.path && (e2 ? e2 += t3.path : e2 = t3.path, t3 = t3.manifest);
        for (var s4 = 0, r2 = t3.length; s4 < r2; s4++)
          i2[s4] = createjs.Sound.registerSound(t3[s4].src, t3[s4].id, t3[s4].data, e2, t3[s4].defaultPlayProps);
        return i2;
      }, o2.removeSound = function(t3, e2) {
        if (o2.activePlugin == null)
          return false;
        var i2, s4;
        if (t3 instanceof Object && t3.src && (t3 = t3.src), (i2 = t3 instanceof Object ? o2._parseSrc(t3) : (t3 = o2._getSrcById(t3).src, o2._parsePath(t3))) == null)
          return false;
        for (s4 in t3 = i2.src, e2 != null && (t3 = e2 + t3), o2._idHash)
          o2._idHash[s4].src == t3 && delete o2._idHash[s4];
        return h2.removeSrc(t3), delete o2._preloadHash[t3], o2.activePlugin.removeSound(t3), true;
      }, o2.removeSounds = function(t3, e2) {
        var i2 = [];
        t3.path && (e2 ? e2 += t3.path : e2 = t3.path, t3 = t3.manifest);
        for (var s4 = 0, r2 = t3.length; s4 < r2; s4++)
          i2[s4] = createjs.Sound.removeSound(t3[s4].src, e2);
        return i2;
      }, o2.removeAllSounds = function() {
        o2._idHash = {}, o2._preloadHash = {}, h2.removeAll(), o2.activePlugin && o2.activePlugin.removeAllSounds();
      }, o2.loadComplete = function(t3) {
        if (!o2.isReady())
          return false;
        var e2 = o2._parsePath(t3);
        return t3 = (e2 ? o2._getSrcById(e2.src) : o2._getSrcById(t3)).src, o2._preloadHash[t3] != null && o2._preloadHash[t3][0] == 1;
      }, o2._parsePath = function(t3) {
        typeof t3 != "string" && (t3 = t3.toString());
        var e2 = t3.match(o2.FILE_PATTERN);
        if (e2 == null)
          return false;
        for (var i2 = e2[4], s4 = e2[5], r2 = o2.capabilities, n = 0; !r2[s4]; )
          if (s4 = o2.alternateExtensions[n++], n > o2.alternateExtensions.length)
            return null;
        return { name: i2, src: t3 = t3.replace("." + e2[5], "." + s4), extension: s4 };
      }, o2._parseSrc = function(t3) {
        var e2, i2 = { name: void 0, src: void 0, extension: void 0 }, s4 = o2.capabilities;
        for (e2 in t3)
          if (t3.hasOwnProperty(e2) && s4[e2]) {
            i2.src = t3[e2], i2.extension = e2;
            break;
          }
        if (!i2.src)
          return false;
        var r2 = i2.src.lastIndexOf("/");
        return i2.name = r2 != -1 ? i2.src.slice(r2 + 1) : i2.src, i2;
      }, o2.play = function(t3, e2) {
        var i2;
        createjs.WebAudioPlugin && createjs.WebAudioPlugin.context && (console.log("audio context available"), (i2 = createjs.WebAudioPlugin.context).state !== "interrupted" && i2.state !== "suspended" || i2.resume());
        e2 = createjs.PlayPropsConfig.create(e2), t3 = o2.createInstance(t3, e2.startTime, e2.duration);
        return i2 && (t3.audioCtx = i2), o2._playInstance(t3, e2) || t3._playFailed(), t3;
      }, o2.createInstance = function(t3, e2, i2) {
        if (!o2.initializeDefaultPlugins())
          return new createjs.DefaultSoundInstance(t3, e2, i2);
        var s4 = o2._defaultPlayPropsHash[t3];
        t3 = o2._getSrcById(t3);
        var r2 = o2._parsePath(t3.src), n = null;
        return r2 != null && r2.src != null ? (h2.create(r2.src), e2 == null && (e2 = t3.startTime), n = o2.activePlugin.create(r2.src, e2, i2 || t3.duration), (s4 = s4 || o2._defaultPlayPropsHash[r2.src]) && n.applyPlayProps(s4)) : n = new createjs.DefaultSoundInstance(t3, e2, i2), n.uniqueId = o2._lastID++, n;
      }, o2.stop = function() {
        for (var t3 = this._instances, e2 = t3.length; e2--; )
          t3[e2].stop();
      }, o2.setDefaultPlayProps = function(t3, e2) {
        t3 = o2._getSrcById(t3), o2._defaultPlayPropsHash[o2._parsePath(t3.src).src] = createjs.PlayPropsConfig.create(e2);
      }, o2.getDefaultPlayProps = function(t3) {
        return t3 = o2._getSrcById(t3), o2._defaultPlayPropsHash[o2._parsePath(t3.src).src];
      }, o2._playInstance = function(t3, e2) {
        var i2 = o2._defaultPlayPropsHash[t3.src] || {};
        if (e2.interrupt == null && (e2.interrupt = i2.interrupt || o2.defaultInterruptBehavior), e2.delay == null && (e2.delay = i2.delay || 0), e2.offset == null && (e2.offset = t3.position), e2.loop == null && (e2.loop = t3.loop), e2.volume == null && (e2.volume = t3.volume), e2.pan == null && (e2.pan = t3.pan), e2.delay == 0) {
          if (!o2._beginPlaying(t3, e2))
            return false;
        } else {
          i2 = setTimeout(function() {
            o2._beginPlaying(t3, e2);
          }, e2.delay);
          t3.delayTimeoutId = i2;
        }
        return this._instances.push(t3), true;
      }, o2._beginPlaying = function(t3, e2) {
        if (!h2.add(t3, e2.interrupt))
          return false;
        if (t3._beginPlaying(e2))
          return true;
        t3 = createjs.indexOf(this._instances, t3);
        return -1 < t3 && this._instances.splice(t3, 1), false;
      }, o2._getSrcById = function(t3) {
        return o2._idHash[t3] || { src: t3 };
      }, o2._playFinished = function(t3) {
        h2.remove(t3);
        t3 = createjs.indexOf(this._instances, t3);
        -1 < t3 && this._instances.splice(t3, 1);
      }, createjs.Sound = a, h2.channels = {}, h2.create = function(t3, e2) {
        return h2.get(t3) == null && (h2.channels[t3] = new h2(t3, e2), true);
      }, h2.removeSrc = function(t3) {
        var e2 = h2.get(t3);
        return e2 != null && (e2._removeAll(), delete h2.channels[t3], true);
      }, h2.removeAll = function() {
        for (var t3 in h2.channels)
          h2.channels[t3]._removeAll();
        h2.channels = {};
      }, h2.add = function(t3, e2) {
        var i2 = h2.get(t3.src);
        return i2 != null && i2._add(t3, e2);
      }, h2.remove = function(t3) {
        var e2 = h2.get(t3.src);
        return e2 != null && (e2._remove(t3), true);
      }, h2.maxPerChannel = function() {
        return t2.maxDefault;
      }, h2.get = function(t3) {
        return h2.channels[t3];
      };
      var t2 = h2.prototype;
      t2.constructor = h2, t2.src = null, t2.max = null, t2.maxDefault = 100, t2.length = 0, t2.init = function(t3, e2) {
        this.src = t3, this.max = e2 || this.maxDefault, this.max == -1 && (this.max = this.maxDefault), this._instances = [];
      }, t2._get = function(t3) {
        return this._instances[t3];
      }, t2._add = function(t3, e2) {
        return !!this._getSlot(e2, t3) && (this._instances.push(t3), this.length++, true);
      }, t2._remove = function(t3) {
        t3 = createjs.indexOf(this._instances, t3);
        return t3 != -1 && (this._instances.splice(t3, 1), this.length--, true);
      }, t2._removeAll = function() {
        for (var t3 = this.length - 1; 0 <= t3; t3--)
          this._instances[t3].stop();
      }, t2._getSlot = function(t3, e2) {
        var i2, s4;
        if (t3 != a.INTERRUPT_NONE && (s4 = this._get(0)) == null)
          return true;
        for (var r2 = 0, n = this.max; r2 < n; r2++) {
          if ((i2 = this._get(r2)) == null)
            return true;
          if (i2.playState == a.PLAY_FINISHED || i2.playState == a.PLAY_INTERRUPTED || i2.playState == a.PLAY_FAILED) {
            s4 = i2;
            break;
          }
          t3 != a.INTERRUPT_NONE && (t3 == a.INTERRUPT_EARLY && i2.position < s4.position || t3 == a.INTERRUPT_LATE && i2.position > s4.position) && (s4 = i2);
        }
        return s4 != null && (s4._interrupt(), this._remove(s4), true);
      }, t2.toString = function() {
        return "[Sound SoundChannel]";
      };
    }(), function() {
      "use strict";
      function t2(t3, e3, i2, s4) {
        this.EventDispatcher_constructor(), this.src = t3, this.uniqueId = -1, this.playState = null, this.delayTimeoutId = null, this._volume = 1, Object.defineProperty(this, "volume", { get: this._getVolume, set: this._setVolume }), this._pan = 0, Object.defineProperty(this, "pan", { get: this._getPan, set: this._setPan }), this._startTime = Math.max(0, e3 || 0), Object.defineProperty(this, "startTime", { get: this._getStartTime, set: this._setStartTime }), this._duration = Math.max(0, i2 || 0), Object.defineProperty(this, "duration", { get: this._getDuration, set: this._setDuration }), this._playbackResource = null, Object.defineProperty(this, "playbackResource", { get: this._getPlaybackResource, set: this._setPlaybackResource }), s4 !== false && s4 !== true && this._setPlaybackResource(s4), this._position = 0, Object.defineProperty(this, "position", { get: this._getPosition, set: this._setPosition }), this._loop = 0, Object.defineProperty(this, "loop", { get: this._getLoop, set: this._setLoop }), this._muted = false, Object.defineProperty(this, "muted", { get: this._getMuted, set: this._setMuted }), this._paused = false, Object.defineProperty(this, "paused", { get: this._getPaused, set: this._setPaused });
      }
      var e2 = createjs.extend(t2, createjs.EventDispatcher);
      e2.play = function(t3) {
        t3 = createjs.PlayPropsConfig.create(t3);
        return this.playState == createjs.Sound.PLAY_SUCCEEDED ? (this.applyPlayProps(t3), void (this._paused && this._setPaused(false))) : (this._cleanUp(), createjs.Sound._playInstance(this, t3), this);
      }, e2.stop = function() {
        return this._position = 0, this._paused = false, this._handleStop(), this._cleanUp(), this.playState = createjs.Sound.PLAY_FINISHED, this;
      }, e2.destroy = function() {
        this._cleanUp(), this.src = null, this.playbackResource = null, this.removeAllEventListeners();
      }, e2.applyPlayProps = function(t3) {
        return t3.offset != null && this._setPosition(t3.offset), t3.loop != null && this._setLoop(t3.loop), t3.volume != null && this._setVolume(t3.volume), t3.pan != null && this._setPan(t3.pan), t3.startTime != null && (this._setStartTime(t3.startTime), this._setDuration(t3.duration)), this;
      }, e2.toString = function() {
        return "[AbstractSoundInstance]";
      }, e2._getPaused = function() {
        return this._paused;
      }, e2._setPaused = function(t3) {
        if (!(t3 !== true && t3 !== false || this._paused == t3 || t3 == 1 && this.playState != createjs.Sound.PLAY_SUCCEEDED))
          return (this._paused = t3) ? this._pause() : this._resume(), clearTimeout(this.delayTimeoutId), this;
      }, e2._setVolume = function(t3) {
        return t3 == this._volume || (this._volume = Math.max(0, Math.min(1, t3)), this._muted || this._updateVolume()), this;
      }, e2._getVolume = function() {
        return this._volume;
      }, e2._setMuted = function(t3) {
        if (t3 === true || t3 === false)
          return this._muted = t3, this._updateVolume(), this;
      }, e2._getMuted = function() {
        return this._muted;
      }, e2._setPan = function(t3) {
        return t3 == this._pan || (this._pan = Math.max(-1, Math.min(1, t3)), this._updatePan()), this;
      }, e2._getPan = function() {
        return this._pan;
      }, e2._getPosition = function() {
        return this._paused || this.playState != createjs.Sound.PLAY_SUCCEEDED || (this._position = this._calculateCurrentPosition()), this._position;
      }, e2._setPosition = function(t3) {
        return this._position = Math.max(0, t3), this.playState == createjs.Sound.PLAY_SUCCEEDED && this._updatePosition(), this;
      }, e2._getStartTime = function() {
        return this._startTime;
      }, e2._setStartTime = function(t3) {
        return t3 == this._startTime || (this._startTime = Math.max(0, t3 || 0), this._updateStartTime()), this;
      }, e2._getDuration = function() {
        return this._duration;
      }, e2._setDuration = function(t3) {
        return t3 == this._duration || (this._duration = Math.max(0, t3 || 0), this._updateDuration()), this;
      }, e2._setPlaybackResource = function(t3) {
        return this._playbackResource = t3, this._duration == 0 && this._playbackResource && this._setDurationFromSource(), this;
      }, e2._getPlaybackResource = function() {
        return this._playbackResource;
      }, e2._getLoop = function() {
        return this._loop;
      }, e2._setLoop = function(t3) {
        this._playbackResource != null && (this._loop != 0 && t3 == 0 ? this._removeLooping(t3) : this._loop == 0 && t3 != 0 && this._addLooping(t3)), this._loop = t3;
      }, e2._sendEvent = function(t3) {
        t3 = new createjs.Event(t3);
        this.dispatchEvent(t3);
      }, e2._cleanUp = function() {
        clearTimeout(this.delayTimeoutId), this._handleCleanUp(), this._paused = false, createjs.Sound._playFinished(this);
      }, e2._interrupt = function() {
        this._cleanUp(), this.playState = createjs.Sound.PLAY_INTERRUPTED, this._sendEvent("interrupted");
      }, e2._beginPlaying = function(t3) {
        return this._setPosition(t3.offset), this._setLoop(t3.loop), this._setVolume(t3.volume), this._setPan(t3.pan), t3.startTime != null && (this._setStartTime(t3.startTime), this._setDuration(t3.duration)), this._playbackResource != null && this._position < this._duration ? (this._paused = false, this._handleSoundReady(), this.playState = createjs.Sound.PLAY_SUCCEEDED, this._sendEvent("succeeded"), true) : (this._playFailed(), false);
      }, e2._playFailed = function() {
        this._cleanUp(), this.playState = createjs.Sound.PLAY_FAILED, this._sendEvent("failed");
      }, e2._handleSoundComplete = function(t3) {
        if ((this._position = 0) != this._loop)
          return this._loop--, this._handleLoop(), void this._sendEvent("loop");
        this._cleanUp(), this.playState = createjs.Sound.PLAY_FINISHED, this._sendEvent("complete");
      }, e2._handleSoundReady = function() {
      }, e2._updateVolume = function() {
      }, e2._updatePan = function() {
      }, e2._updateStartTime = function() {
      }, e2._updateDuration = function() {
      }, e2._setDurationFromSource = function() {
      }, e2._calculateCurrentPosition = function() {
      }, e2._updatePosition = function() {
      }, e2._removeLooping = function(t3) {
      }, e2._addLooping = function(t3) {
      }, e2._pause = function() {
      }, e2._resume = function() {
      }, e2._handleStop = function() {
      }, e2._handleCleanUp = function() {
      }, e2._handleLoop = function() {
      }, createjs.AbstractSoundInstance = createjs.promote(t2, "EventDispatcher"), createjs.DefaultSoundInstance = createjs.AbstractSoundInstance;
    }(), function() {
      "use strict";
      function t2() {
        this._capabilities = null, this._loaders = {}, this._audioSources = {}, this._soundInstances = {}, this._volume = 1, this._loaderClass, this._soundInstanceClass;
      }
      var e2 = t2.prototype;
      t2._capabilities = null, t2.isSupported = function() {
        return true;
      }, e2.register = function(t3) {
        var e3 = this._loaders[t3.src];
        return e3 && !e3.canceled ? this._loaders[t3.src] : (this._audioSources[t3.src] = true, this._soundInstances[t3.src] = [], (e3 = new this._loaderClass(t3)).on("complete", this._handlePreloadComplete, this), this._loaders[t3.src] = e3);
      }, e2.preload = function(t3) {
        t3.on("error", this._handlePreloadError, this), t3.load();
      }, e2.isPreloadStarted = function(t3) {
        return this._audioSources[t3] != null;
      }, e2.isPreloadComplete = function(t3) {
        return !(this._audioSources[t3] == null || this._audioSources[t3] == 1);
      }, e2.removeSound = function(t3) {
        if (this._soundInstances[t3]) {
          for (var e3 = this._soundInstances[t3].length; e3--; )
            this._soundInstances[t3][e3].destroy();
          delete this._soundInstances[t3], delete this._audioSources[t3], this._loaders[t3] && this._loaders[t3].destroy(), delete this._loaders[t3];
        }
      }, e2.removeAllSounds = function() {
        for (var t3 in this._audioSources)
          this.removeSound(t3);
      }, e2.create = function(t3, e3, i2) {
        this.isPreloadStarted(t3) || this.preload(this.register(t3));
        i2 = new this._soundInstanceClass(t3, e3, i2, this._audioSources[t3]);
        return this._soundInstances[t3] && this._soundInstances[t3].push(i2), i2.setMasterVolume && i2.setMasterVolume(createjs.Sound.volume), i2.setMasterMute && i2.setMasterMute(createjs.Sound.muted), i2;
      }, e2.setVolume = function(t3) {
        return this._volume = t3, this._updateVolume(), true;
      }, e2.getVolume = function() {
        return this._volume;
      }, e2.setMute = function(t3) {
        return this._updateVolume(), true;
      }, e2.toString = function() {
        return "[AbstractPlugin]";
      }, e2._handlePreloadComplete = function(t3) {
        var e3 = t3.target.getItem().src;
        this._audioSources[e3] = t3.result;
        for (var i2 = 0, s4 = this._soundInstances[e3].length; i2 < s4; i2++)
          this._soundInstances[e3][i2].setPlaybackResource(this._audioSources[e3]), this._soundInstances[e3] = null;
      }, e2._handlePreloadError = function(t3) {
      }, e2._updateVolume = function() {
      }, createjs.AbstractPlugin = t2;
    }(), function() {
      "use strict";
      function e2(t3) {
        this.AbstractLoader_constructor(t3, true, createjs.Types.SOUND);
      }
      var t2 = createjs.extend(e2, createjs.AbstractLoader);
      e2.context = null, t2.toString = function() {
        return "[WebAudioLoader]";
      }, t2._createRequest = function() {
        this._request = new createjs.XHRRequest(this._item, false), this._request.setResponseType("arraybuffer");
      }, t2._sendComplete = function(t3) {
        e2.context.decodeAudioData(this._rawResult, createjs.proxy(this._handleAudioDecoded, this), createjs.proxy(this._sendError, this));
      }, t2._handleAudioDecoded = function(t3) {
        this._result = t3, this.AbstractLoader__sendComplete();
      }, createjs.WebAudioLoader = createjs.promote(e2, "AbstractLoader");
    }(), function() {
      "use strict";
      function t2(t3, e3, i2, s4) {
        this.AbstractSoundInstance_constructor(t3, e3, i2, s4), this.gainNode = r2.context.createGain(), this.panNode = r2.context.createPanner(), this.panNode.panningModel = r2._panningModel, this.panNode.connect(this.gainNode), this._updatePan(), this.sourceNode = null, this._soundCompleteTimeout = null, this._sourceNodeNext = null, this._playbackStartTime = 0, this._endedHandler = createjs.proxy(this._handleSoundComplete, this);
      }
      var e2 = createjs.extend(t2, createjs.AbstractSoundInstance), r2 = t2;
      r2.context = null, r2._scratchBuffer = null, r2.destinationNode = null, r2._panningModel = "equalpower", e2.destroy = function() {
        this.AbstractSoundInstance_destroy(), this.panNode.disconnect(0), this.panNode = null, this.gainNode.disconnect(0), this.gainNode = null;
      }, e2.toString = function() {
        return "[WebAudioSoundInstance]";
      }, e2._updatePan = function() {
        this.panNode.setPosition(this._pan, 0, -0.5);
      }, e2._removeLooping = function(t3) {
        this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);
      }, e2._addLooping = function(t3) {
        this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0));
      }, e2._setDurationFromSource = function() {
        this._duration = 1e3 * this.playbackResource.duration;
      }, e2._handleCleanUp = function() {
        this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED && (this.sourceNode = this._cleanUpAudioNode(this.sourceNode), this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext)), this.gainNode.numberOfOutputs != 0 && this.gainNode.disconnect(0), clearTimeout(this._soundCompleteTimeout), this._playbackStartTime = 0;
      }, e2._cleanUpAudioNode = function(t3) {
        if (t3) {
          if (t3.stop(0), t3.disconnect(0), createjs.BrowserDetect.isIOS)
            try {
              t3.buffer = r2._scratchBuffer;
            } catch (t4) {
            }
          t3 = null;
        }
        return t3;
      }, e2._handleSoundReady = function(t3) {
        this.gainNode.connect(r2.destinationNode);
        var e3 = 1e-3 * this._duration, i2 = Math.min(1e-3 * Math.max(0, this._position), e3);
        this.sourceNode = this._createAndPlayAudioNode(r2.context.currentTime - e3, i2), this._playbackStartTime = this.sourceNode.startTime - i2, this._soundCompleteTimeout = setTimeout(this._endedHandler, 1e3 * (e3 - i2)), this._loop != 0 && (this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0));
      }, e2._createAndPlayAudioNode = function(t3, e3) {
        var i2 = r2.context.createBufferSource();
        i2.buffer = this.playbackResource, i2.connect(this.panNode);
        var s4 = 1e-3 * this._duration;
        return i2.startTime = t3 + s4, i2.start(i2.startTime, e3 + 1e-3 * this._startTime, s4 - e3), i2;
      }, e2._pause = function() {
        this._position = 1e3 * (r2.context.currentTime - this._playbackStartTime), this.sourceNode = this._cleanUpAudioNode(this.sourceNode), this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext), this.gainNode.numberOfOutputs != 0 && this.gainNode.disconnect(0), clearTimeout(this._soundCompleteTimeout);
      }, e2._resume = function() {
        this._handleSoundReady();
      }, e2._updateVolume = function() {
        var t3 = this._muted ? 0 : this._volume;
        t3 != this.gainNode.gain.value && (this.gainNode.gain.value = t3);
      }, e2._calculateCurrentPosition = function() {
        return 1e3 * (r2.context.currentTime - this._playbackStartTime);
      }, e2._updatePosition = function() {
        this.sourceNode = this._cleanUpAudioNode(this.sourceNode), this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext), clearTimeout(this._soundCompleteTimeout), this._paused || this._handleSoundReady();
      }, e2._handleLoop = function() {
        this._cleanUpAudioNode(this.sourceNode), this.sourceNode = this._sourceNodeNext, this._playbackStartTime = this.sourceNode.startTime, this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0), this._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration);
      }, e2._updateDuration = function() {
        this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._pause(), this._resume());
      }, createjs.WebAudioSoundInstance = createjs.promote(t2, "AbstractSoundInstance");
    }(), function() {
      "use strict";
      function t2() {
        this.AbstractPlugin_constructor(), this._panningModel = o2._panningModel, this.context = o2.context, this.dynamicsCompressorNode = this.context.createDynamicsCompressor(), this.dynamicsCompressorNode.connect(this.context.destination), this.gainNode = this.context.createGain(), this.gainNode.connect(this.dynamicsCompressorNode), createjs.WebAudioSoundInstance.destinationNode = this.gainNode, this._capabilities = o2._capabilities, this._loaderClass = createjs.WebAudioLoader, this._soundInstanceClass = createjs.WebAudioSoundInstance, this._addPropsToClasses();
      }
      var e2 = createjs.extend(t2, createjs.AbstractPlugin), o2 = t2;
      o2._capabilities = null, o2._panningModel = "equalpower", o2.context = null, o2._scratchBuffer = null, o2._unlocked = false, o2.DEFAULT_SAMPLE_RATE = 44100, o2.isSupported = function() {
        var t3 = createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry;
        return !(location.protocol == "file:" && !t3 && !this._isFileXHRSupported()) && (o2._generateCapabilities(), o2.context != null);
      }, o2.playEmptySound = function() {
        var t3;
        o2.context != null && ((t3 = o2.context.createBufferSource()).buffer = o2._scratchBuffer, t3.connect(o2.context.destination), t3.start(0, 0, 0));
      }, o2._isFileXHRSupported = function() {
        return document.location.host;
      }, o2._generateCapabilities = function() {
        if (o2._capabilities == null) {
          var t3 = document.createElement("audio");
          if (t3.canPlayType == null)
            return null;
          if (o2.context == null && (o2.context = o2._createAudioContext(), o2.context == null))
            return null;
          o2._scratchBuffer == null && (o2._scratchBuffer = o2.context.createBuffer(1, 1, 22050)), o2._compatibilitySetUp(), "ontouchstart" in window && o2.context.state != "running" && (o2._unlock(), document.addEventListener("mousedown", o2._unlock, true), document.addEventListener("touchstart", o2._unlock, true), document.addEventListener("touchend", o2._unlock, true)), o2._capabilities = { panning: true, volume: true, tracks: -1 };
          for (var e3 = createjs.Sound.SUPPORTED_EXTENSIONS, i2 = createjs.Sound.EXTENSION_MAP, s4 = 0, r2 = e3.length; s4 < r2; s4++) {
            var n = e3[s4], a = i2[n] || n;
            o2._capabilities[n] = t3.canPlayType("audio/" + n) != "no" && t3.canPlayType("audio/" + n) != "" || t3.canPlayType("audio/" + a) != "no" && t3.canPlayType("audio/" + a) != "";
          }
          o2.context.destination.numberOfChannels < 2 && (o2._capabilities.panning = false);
        }
      }, o2._createAudioContext = function() {
        var t3 = window.AudioContext || window.webkitAudioContext;
        if (t3 == null)
          return null;
        var e3, i2, s4 = new t3();
        return console.warn("The AudioContext is ready"), /(iPhone|iPad)/i.test(navigator.userAgent) && s4.sampleRate !== o2.DEFAULT_SAMPLE_RATE && (e3 = s4.createBuffer(1, 1, o2.DEFAULT_SAMPLE_RATE), (i2 = s4.createBufferSource()).buffer = e3, i2.connect(s4.destination), i2.start(0), i2.disconnect(), s4.close(), s4 = new t3()), s4;
      }, o2._compatibilitySetUp = function() {
        var t3;
        o2._panningModel = "equalpower", o2.context.createGain || (o2.context.createGain = o2.context.createGainNode, (t3 = o2.context.createBufferSource()).__proto__.start = t3.__proto__.noteGrainOn, t3.__proto__.stop = t3.__proto__.noteOff, o2._panningModel = 0);
      }, o2._unlock = function() {
        o2._unlocked || (o2.playEmptySound(), o2.context.state == "running" && (document.removeEventListener("mousedown", o2._unlock, true), document.removeEventListener("touchend", o2._unlock, true), document.removeEventListener("touchstart", o2._unlock, true), o2._unlocked = true));
      }, e2.toString = function() {
        return "[WebAudioPlugin]";
      }, e2._addPropsToClasses = function() {
        var t3 = this._soundInstanceClass;
        t3.context = this.context, t3._scratchBuffer = o2._scratchBuffer, t3.destinationNode = this.gainNode, t3._panningModel = this._panningModel, this._loaderClass.context = this.context;
      }, e2._updateVolume = function() {
        var t3 = createjs.Sound._masterMute ? 0 : this._volume;
        t3 != this.gainNode.gain.value && (this.gainNode.gain.value = t3);
      }, createjs.WebAudioPlugin = createjs.promote(t2, "AbstractPlugin");
    }(), function() {
      "use strict";
      function t2() {
        throw "HTMLAudioTagPool cannot be instantiated";
      }
      var i2 = t2;
      function e2(t3) {
        this._tags = [];
      }
      i2._tags = {}, i2._tagPool = new e2(), i2._tagUsed = {}, i2.get = function(t3) {
        var e3 = i2._tags[t3];
        return e3 == null ? (e3 = i2._tags[t3] = i2._tagPool.get()).src = t3 : i2._tagUsed[t3] ? (e3 = i2._tagPool.get()).src = t3 : i2._tagUsed[t3] = true, e3;
      }, i2.set = function(t3, e3) {
        e3 == i2._tags[t3] ? i2._tagUsed[t3] = false : i2._tagPool.set(e3);
      }, i2.remove = function(t3) {
        var e3 = i2._tags[t3];
        return e3 != null && (i2._tagPool.set(e3), delete i2._tags[t3], delete i2._tagUsed[t3], true);
      }, i2.getDuration = function(t3) {
        t3 = i2._tags[t3];
        return t3 != null && t3.duration ? 1e3 * t3.duration : 0;
      }, createjs.HTMLAudioTagPool = t2;
      var s4 = e2.prototype;
      s4.constructor = e2, s4.get = function() {
        var t3 = this._tags.length == 0 ? this._createTag() : this._tags.pop();
        return t3.parentNode == null && document.body.appendChild(t3), t3;
      }, s4.set = function(t3) {
        createjs.indexOf(this._tags, t3) == -1 && (this._tags.src = null, this._tags.push(t3));
      }, s4.toString = function() {
        return "[TagPool]";
      }, s4._createTag = function() {
        var t3 = document.createElement("audio");
        return t3.autoplay = false, t3.preload = "none", t3;
      };
    }(), function() {
      "use strict";
      function t2(t3, e3, i2, s4) {
        this.AbstractSoundInstance_constructor(t3, e3, i2, s4), this._audioSpriteStopTime = null, this._delayTimeoutId = null, this._endedHandler = createjs.proxy(this._handleSoundComplete, this), this._readyHandler = createjs.proxy(this._handleTagReady, this), this._stalledHandler = createjs.proxy(this._playFailed, this), this._audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this), this._loopHandler = createjs.proxy(this._handleSoundComplete, this), i2 ? this._audioSpriteStopTime = 1e-3 * (e3 + i2) : this._duration = createjs.HTMLAudioTagPool.getDuration(this.src);
      }
      var e2 = createjs.extend(t2, createjs.AbstractSoundInstance);
      e2.setMasterVolume = function(t3) {
        this._updateVolume();
      }, e2.setMasterMute = function(t3) {
        this._updateVolume();
      }, e2.toString = function() {
        return "[HTMLAudioSoundInstance]";
      }, e2._removeLooping = function() {
        this._playbackResource != null && (this._playbackResource.loop = false, this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false));
      }, e2._addLooping = function() {
        this._playbackResource == null || this._audioSpriteStopTime || (this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false), this._playbackResource.loop = true);
      }, e2._handleCleanUp = function() {
        var t3 = this._playbackResource;
        if (t3 != null) {
          t3.pause(), t3.loop = false, t3.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false), t3.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false), t3.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false), t3.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false), t3.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);
          try {
            t3.currentTime = this._startTime;
          } catch (t4) {
          }
          createjs.HTMLAudioTagPool.set(this.src, t3), this._playbackResource = null;
        }
      }, e2._beginPlaying = function(t3) {
        return this._playbackResource = createjs.HTMLAudioTagPool.get(this.src), this.AbstractSoundInstance__beginPlaying(t3);
      }, e2._handleSoundReady = function(t3) {
        if (this._playbackResource.readyState !== 4) {
          var e3 = this._playbackResource;
          return e3.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false), e3.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false), e3.preload = "auto", void e3.load();
        }
        this._updateVolume(), this._playbackResource.currentTime = 1e-3 * (this._startTime + this._position), this._audioSpriteStopTime ? this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false) : (this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false), this._loop != 0 && (this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false), this._playbackResource.loop = true)), this._playbackResource.play();
      }, e2._handleTagReady = function(t3) {
        this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false), this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false), this._handleSoundReady();
      }, e2._pause = function() {
        this._playbackResource.pause();
      }, e2._resume = function() {
        this._playbackResource.play();
      }, e2._updateVolume = function() {
        var t3;
        this._playbackResource == null || (t3 = this._muted || createjs.Sound._masterMute ? 0 : this._volume * createjs.Sound._masterVolume) != this._playbackResource.volume && (this._playbackResource.volume = t3);
      }, e2._calculateCurrentPosition = function() {
        return 1e3 * this._playbackResource.currentTime - this._startTime;
      }, e2._updatePosition = function() {
        this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false), this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);
        try {
          this._playbackResource.currentTime = 1e-3 * (this._position + this._startTime);
        } catch (t3) {
          this._handleSetPositionSeek(null);
        }
      }, e2._handleSetPositionSeek = function(t3) {
        this._playbackResource != null && (this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false), this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false));
      }, e2._handleAudioSpriteLoop = function(t3) {
        this._playbackResource.currentTime <= this._audioSpriteStopTime || (this._playbackResource.pause(), this._loop == 0 ? this._handleSoundComplete(null) : (this._position = 0, this._loop--, this._playbackResource.currentTime = 1e-3 * this._startTime, this._paused || this._playbackResource.play(), this._sendEvent("loop")));
      }, e2._handleLoop = function(t3) {
        this._loop == 0 && (this._playbackResource.loop = false, this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false));
      }, e2._updateStartTime = function() {
        this._audioSpriteStopTime = 1e-3 * (this._startTime + this._duration), this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false), this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false));
      }, e2._updateDuration = function() {
        this._audioSpriteStopTime = 1e-3 * (this._startTime + this._duration), this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false), this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false));
      }, e2._setDurationFromSource = function() {
        this._duration = createjs.HTMLAudioTagPool.getDuration(this.src), this._playbackResource = null;
      }, createjs.HTMLAudioSoundInstance = createjs.promote(t2, "AbstractSoundInstance");
    }(), function() {
      "use strict";
      function t2() {
        this.AbstractPlugin_constructor(), this._capabilities = o2._capabilities, this._loaderClass = createjs.SoundLoader, this._soundInstanceClass = createjs.HTMLAudioSoundInstance;
      }
      var e2 = createjs.extend(t2, createjs.AbstractPlugin), o2 = t2;
      o2.MAX_INSTANCES = 30, o2._AUDIO_READY = "canplaythrough", o2._AUDIO_ENDED = "ended", o2._AUDIO_SEEKED = "seeked", o2._AUDIO_STALLED = "stalled", o2._TIME_UPDATE = "timeupdate", o2._capabilities = null, o2.isSupported = function() {
        return o2._generateCapabilities(), o2._capabilities != null;
      }, o2._generateCapabilities = function() {
        if (o2._capabilities == null) {
          var t3 = document.createElement("audio");
          if (t3.canPlayType == null)
            return null;
          o2._capabilities = { panning: false, volume: true, tracks: -1 };
          for (var e3 = createjs.Sound.SUPPORTED_EXTENSIONS, i2 = createjs.Sound.EXTENSION_MAP, s4 = 0, r2 = e3.length; s4 < r2; s4++) {
            var n = e3[s4], a = i2[n] || n;
            o2._capabilities[n] = t3.canPlayType("audio/" + n) != "no" && t3.canPlayType("audio/" + n) != "" || t3.canPlayType("audio/" + a) != "no" && t3.canPlayType("audio/" + a) != "";
          }
        }
      }, e2.register = function(t3) {
        var e3 = createjs.HTMLAudioTagPool.get(t3.src), t3 = this.AbstractPlugin_register(t3);
        return t3.setTag(e3), t3;
      }, e2.removeSound = function(t3) {
        this.AbstractPlugin_removeSound(t3), createjs.HTMLAudioTagPool.remove(t3);
      }, e2.create = function(t3, e3, i2) {
        i2 = this.AbstractPlugin_create(t3, e3, i2);
        return i2.playbackResource = null, i2;
      }, e2.toString = function() {
        return "[HTMLAudioPlugin]";
      }, e2.setVolume = e2.getVolume = e2.setMute = null, createjs.HTMLAudioPlugin = createjs.promote(t2, "AbstractPlugin");
    }(), function() {
      "use strict";
      function t2(t3) {
        this.EventDispatcher_constructor(), this.ignoreGlobalPause = false, this.loop = 0, this.useTicks = false, this.reversed = false, this.bounce = false, this.timeScale = 1, this.duration = 0, this.position = 0, this.rawPosition = -1, this._paused = true, this._next = null, this._prev = null, this._parent = null, this._labels = null, this._labelList = null, this._status = -1, this._lastTick = 0, t3 && (this.useTicks = !!t3.useTicks, this.ignoreGlobalPause = !!t3.ignoreGlobalPause, this.loop = t3.loop === true ? -1 : t3.loop || 0, this.reversed = !!t3.reversed, this.bounce = !!t3.bounce, this.timeScale = t3.timeScale || 1, t3.onChange && this.addEventListener("change", t3.onChange), t3.onComplete && this.addEventListener("complete", t3.onComplete));
      }
      var e2 = createjs.extend(t2, createjs.EventDispatcher);
      e2._setPaused = function(t3) {
        return createjs.Tween._register(this, t3), this;
      }, e2.setPaused = createjs.deprecate(e2._setPaused, "AbstractTween.setPaused"), e2._getPaused = function() {
        return this._paused;
      }, e2.getPaused = createjs.deprecate(e2._getPaused, "AbstactTween.getPaused"), e2._getCurrentLabel = function(t3) {
        var e3 = this.getLabels();
        t3 == null && (t3 = this.position);
        for (var i2 = 0, s4 = e3.length; i2 < s4 && !(t3 < e3[i2].position); i2++)
          ;
        return i2 === 0 ? null : e3[i2 - 1].label;
      }, e2.getCurrentLabel = createjs.deprecate(e2._getCurrentLabel, "AbstractTween.getCurrentLabel");
      try {
        Object.defineProperties(e2, { paused: { set: e2._setPaused, get: e2._getPaused }, currentLabel: { get: e2._getCurrentLabel } });
      } catch (t3) {
      }
      e2.advance = function(t3, e3) {
        this.setPosition(this.rawPosition + t3 * this.timeScale, e3);
      }, e2.setPosition = function(t3, e3, i2, s4) {
        var r2 = this.duration, n = this.loop, a = this.rawPosition, o2 = 0, h2 = 0, c = false;
        if (t3 < 0 && (t3 = 0), r2 === 0) {
          if (c = true, a !== -1)
            return c;
        } else {
          if (h2 = t3 - (o2 = t3 / r2 | 0) * r2, (c = n !== -1 && n * r2 + r2 <= t3) && (t3 = (h2 = r2) * (o2 = n) + r2), t3 === a)
            return c;
          !this.reversed != !(this.bounce && o2 % 2) && (h2 = r2 - h2);
        }
        this.position = h2, this.rawPosition = t3, this._updatePosition(i2, c), c && (this.paused = true), s4 && s4(this), e3 || this._runActions(a, t3, i2, !i2 && a === -1), this.dispatchEvent("change"), c && this.dispatchEvent("complete");
      }, e2.calculatePosition = function(t3) {
        var e3 = this.duration, i2 = this.loop, s4 = 0, r2 = 0;
        return e3 === 0 ? 0 : (i2 !== -1 && i2 * e3 + e3 <= t3 ? (r2 = e3, s4 = i2) : r2 = t3 < 0 ? 0 : t3 - (s4 = t3 / e3 | 0) * e3, !this.reversed != !(this.bounce && s4 % 2) ? e3 - r2 : r2);
      }, e2.getLabels = function() {
        var t3 = this._labelList;
        if (!t3) {
          t3 = this._labelList = [];
          var e3, i2 = this._labels;
          for (e3 in i2)
            t3.push({ label: e3, position: i2[e3] });
          t3.sort(function(t4, e4) {
            return t4.position - e4.position;
          });
        }
        return t3;
      }, e2.setLabels = function(t3) {
        this._labels = t3, this._labelList = null;
      }, e2.addLabel = function(t3, e3) {
        this._labels || (this._labels = {}), this._labels[t3] = e3;
        var i2 = this._labelList;
        if (i2) {
          for (var s4 = 0, r2 = i2.length; s4 < r2 && !(e3 < i2[s4].position); s4++)
            ;
          i2.splice(s4, 0, { label: t3, position: e3 });
        }
      }, e2.gotoAndPlay = function(t3) {
        this.paused = false, this._goto(t3);
      }, e2.gotoAndStop = function(t3) {
        this.paused = true, this._goto(t3);
      }, e2.resolve = function(t3) {
        var e3 = Number(t3);
        return isNaN(e3) && (e3 = this._labels && this._labels[t3]), e3;
      }, e2.toString = function() {
        return "[AbstractTween]";
      }, e2.clone = function() {
        throw "AbstractTween can not be cloned.";
      }, e2._init = function(t3) {
        t3 && t3.paused || (this.paused = false), t3 && t3.position != null && this.setPosition(t3.position);
      }, e2._updatePosition = function(t3, e3) {
      }, e2._goto = function(t3) {
        t3 = this.resolve(t3);
        t3 != null && this.setPosition(t3, false, true);
      }, e2._runActions = function(t3, e3, i2, s4) {
        if (this._actionHead || this.tweens) {
          var r2, n, a, o2, h2 = this.duration, c = this.reversed, u = this.bounce, l = this.loop;
          if (h2 === 0 ? (r2 = n = a = o2 = 0, c = u = false) : (a = t3 - (r2 = t3 / h2 | 0) * h2, o2 = e3 - (n = e3 / h2 | 0) * h2), l !== -1 && (l < n && (o2 = h2, n = l), l < r2 && (a = h2, r2 = l)), i2)
            return this._runActionsRange(o2, o2, i2, s4);
          if (r2 !== n || a !== o2 || i2 || s4) {
            r2 === -1 && (r2 = a = 0);
            var d = t3 <= e3, _ = r2;
            do {
              var p = !c != !(u && _ % 2), f3 = _ === r2 ? a : d ? 0 : h2, g = _ === n ? o2 : d ? h2 : 0;
              if (p && (f3 = h2 - f3, g = h2 - g), (!u || _ === r2 || f3 !== g) && this._runActionsRange(f3, g, i2, s4 || _ !== r2 && !u))
                return true;
            } while (s4 = false, d && ++_ <= n || !d && --_ >= n);
          }
        }
      }, e2._runActionsRange = function(t3, e3, i2, s4) {
      }, createjs.AbstractTween = createjs.promote(t2, "EventDispatcher");
    }(), function() {
      "use strict";
      function g(t3, e2) {
        this.AbstractTween_constructor(e2), this.pluginData = null, this.target = t3, this.passive = false, this._stepHead = new r2(null, 0, 0, {}, null, true), this._stepTail = this._stepHead, this._stepPosition = 0, this._actionHead = null, this._actionTail = null, this._plugins = null, this._pluginIds = null, this._injected = null, e2 && (this.pluginData = e2.pluginData, e2.override && g.removeTweens(t3)), this.pluginData || (this.pluginData = {}), this._init(e2);
      }
      var t2 = createjs.extend(g, createjs.AbstractTween);
      function r2(t3, e2, i2, s5, r3, n) {
        this.next = null, this.prev = t3, this.t = e2, this.d = i2, this.props = s5, this.ease = r3, this.passive = n, this.index = t3 ? t3.index + 1 : 0;
      }
      function s4(t3, e2, i2, s5, r3) {
        this.next = null, this.prev = t3, this.t = e2, this.d = 0, this.scope = i2, this.funct = s5, this.params = r3;
      }
      g.IGNORE = {}, g._tweens = [], g._plugins = null, g._tweenHead = null, g._tweenTail = null, g._inTick = 0, g.get = function(t3, e2) {
        return new g(t3, e2);
      }, g.tick = function(t3, e2) {
        for (var i2 = g._tweenHead, s5 = g._inTick = Date.now(); i2; ) {
          var r3 = i2._next, n = i2._status;
          i2._lastTick = s5, n === 1 ? i2._status = 0 : n === -1 ? g._delist(i2) : e2 && !i2.ignoreGlobalPause || i2._paused || i2.advance(i2.useTicks ? 1 : t3), i2 = r3;
        }
        g._inTick = 0;
      }, g.handleEvent = function(t3) {
        t3.type === "tick" && this.tick(t3.delta, t3.paused);
      }, g.removeTweens = function(t3) {
        if (t3.tweenjs_count) {
          for (var e2 = g._tweenHead; e2; ) {
            var i2 = e2._next;
            e2.target === t3 && g._register(e2, true), e2 = i2;
          }
          t3.tweenjs_count = 0;
        }
      }, g.removeAllTweens = function() {
        for (var t3 = g._tweenHead; t3; ) {
          var e2 = t3._next;
          t3._paused = true, t3.target && (t3.target.tweenjs_count = 0), t3._next = t3._prev = null, t3 = e2;
        }
        g._tweenHead = g._tweenTail = null;
      }, g.hasActiveTweens = function(t3) {
        return t3 ? !!t3.tweenjs_count : !!g._tweenHead;
      }, g._installPlugin = function(t3) {
        for (var e2 = t3.priority = t3.priority || 0, i2 = g._plugins = g._plugins || [], s5 = 0, r3 = i2.length; s5 < r3 && !(e2 < i2[s5].priority); s5++)
          ;
        i2.splice(s5, 0, t3);
      }, g._register = function(t3, e2) {
        var i2, s5 = t3.target;
        !e2 && t3._paused ? (s5 && (s5.tweenjs_count = s5.tweenjs_count ? s5.tweenjs_count + 1 : 1), (i2 = g._tweenTail) ? (g._tweenTail = i2._next = t3)._prev = i2 : g._tweenHead = g._tweenTail = t3, t3._status = g._inTick ? 1 : 0, !g._inited && createjs.Ticker && (createjs.Ticker.addEventListener("tick", g), g._inited = true)) : e2 && !t3._paused && (s5 && s5.tweenjs_count--, g._inTick && t3._lastTick !== g._inTick || g._delist(t3), t3._status = -1), t3._paused = e2;
      }, g._delist = function(t3) {
        var e2 = t3._next, i2 = t3._prev;
        e2 ? e2._prev = i2 : g._tweenTail = i2, i2 ? i2._next = e2 : g._tweenHead = e2, t3._next = t3._prev = null;
      }, t2.wait = function(t3, e2) {
        return 0 < t3 && this._addStep(+t3, this._stepTail.props, null, e2), this;
      }, t2.to = function(t3, e2, i2) {
        (e2 == null || e2 < 0) && (e2 = 0);
        i2 = this._addStep(+e2, null, i2);
        return this._appendProps(t3, i2), this;
      }, t2.label = function(t3) {
        return this.addLabel(t3, this.duration), this;
      }, t2.call = function(t3, e2, i2) {
        return this._addAction(i2 || this.target, t3, e2 || [this]);
      }, t2.set = function(t3, e2) {
        return this._addAction(e2 || this.target, this._set, [t3]);
      }, t2.play = function(t3) {
        return this._addAction(t3 || this, this._set, [{ paused: false }]);
      }, t2.pause = function(t3) {
        return this._addAction(t3 || this, this._set, [{ paused: true }]);
      }, t2.w = t2.wait, t2.t = t2.to, t2.c = t2.call, t2.s = t2.set, t2.toString = function() {
        return "[Tween]";
      }, t2.clone = function() {
        throw "Tween can not be cloned.";
      }, t2._addPlugin = function(t3) {
        var e2 = this._pluginIds || (this._pluginIds = {}), i2 = t3.ID;
        if (i2 && !e2[i2]) {
          e2[i2] = true;
          for (var s5 = this._plugins || (this._plugins = []), r3 = t3.priority || 0, n = 0, a = s5.length; n < a; n++)
            if (r3 < s5[n].priority)
              return void s5.splice(n, 0, t3);
          s5.push(t3);
        }
      }, t2._updatePosition = function(t3, e2) {
        var i2 = this._stepHead.next, s5 = this.position, r3 = this.duration;
        if (this.target && i2) {
          for (var n = i2.next; n && n.t <= s5; )
            n = (i2 = i2.next).next;
          r3 = e2 ? r3 === 0 ? 1 : s5 / r3 : (s5 - i2.t) / i2.d;
          this._updateTargetProps(i2, r3, e2);
        }
        this._stepPosition = i2 ? s5 - i2.t : 0;
      }, t2._updateTargetProps = function(t3, e2, i2) {
        if (!(this.passive = !!t3.passive)) {
          var s5, r3, n, a, o2 = t3.prev.props, h2 = t3.props;
          (a = t3.ease) && (e2 = a(e2, 0, 1, 1));
          var c = this._plugins;
          t:
            for (var u in o2) {
              if (s5 = (r3 = o2[u]) !== (n = h2[u]) && typeof r3 == "number" ? r3 + (n - r3) * e2 : 1 <= e2 ? n : r3, c)
                for (var l = 0, d = c.length; l < d; l++) {
                  var _ = c[l].change(this, t3, u, s5, e2, i2);
                  if (_ === g.IGNORE)
                    continue t;
                  _ !== void 0 && (s5 = _);
                }
              this.target[u] = s5;
            }
        }
      }, t2._runActionsRange = function(t3, e2, i2, s5) {
        var r3 = e2 < t3, n = r3 ? this._actionTail : this._actionHead, a = e2, o2 = t3;
        r3 && (a = t3, o2 = e2);
        for (var h2 = this.position; n; ) {
          var c = n.t;
          if ((c === e2 || o2 < c && c < a || s5 && c === t3) && (n.funct.apply(n.scope, n.params), h2 !== this.position))
            return true;
          n = r3 ? n.prev : n.next;
        }
      }, t2._appendProps = function(t3, e2, i2) {
        var s5, r3, n, a, o2 = this._stepHead.props, h2 = this.target, c = g._plugins, u = e2.prev, l = u.props, d = e2.props || (e2.props = this._cloneProps(l)), _ = {};
        for (s5 in t3)
          if (t3.hasOwnProperty(s5) && (_[s5] = d[s5] = t3[s5], o2[s5] === void 0)) {
            if (a = void 0, c) {
              for (r3 = c.length - 1; 0 <= r3; r3--)
                if ((n = c[r3].init(this, s5, a)) !== void 0 && (a = n), a === g.IGNORE) {
                  delete d[s5], delete _[s5];
                  break;
                }
            }
            a !== g.IGNORE && (a === void 0 && (a = h2[s5]), l[s5] = a === void 0 ? null : a);
          }
        for (s5 in _) {
          n = t3[s5];
          for (var p, f3 = u; (p = f3) && (f3 = p.prev); )
            if (f3.props !== p.props) {
              if (f3.props[s5] !== void 0)
                break;
              f3.props[s5] = l[s5];
            }
        }
        if (i2 !== false && (c = this._plugins))
          for (r3 = c.length - 1; 0 <= r3; r3--)
            c[r3].step(this, e2, _);
        (i2 = this._injected) && (this._injected = null, this._appendProps(i2, e2, false)), this.step = e2;
      }, t2._injectProp = function(t3, e2) {
        (this._injected || (this._injected = {}))[t3] = e2;
      }, t2._addStep = function(t3, e2, i2, s5) {
        s5 = new r2(this._stepTail, this.duration, t3, e2, i2, s5 || false);
        return this.duration += t3, this._stepTail = this._stepTail.next = s5;
      }, t2._addAction = function(t3, e2, i2) {
        i2 = new s4(this._actionTail, this.duration, t3, e2, i2);
        return this._actionTail ? this._actionTail.next = i2 : this._actionHead = i2, this._actionTail = i2, this;
      }, t2._set = function(t3) {
        for (var e2 in t3)
          this[e2] = t3[e2];
      }, t2._cloneProps = function(t3) {
        var e2, i2 = {};
        for (e2 in t3)
          i2[e2] = t3[e2];
        return i2;
      }, createjs.Tween = createjs.promote(g, "AbstractTween");
    }(), function() {
      "use strict";
      function t2(t3) {
        var e3, i2;
        t3 instanceof Array || t3 == null && 1 < arguments.length ? (e3 = t3, i2 = arguments[1], t3 = arguments[2]) : t3 && (e3 = t3.tweens, i2 = t3.labels), this.AbstractTween_constructor(t3), this.tweens = [], e3 && this.addTween.apply(this, e3), this.setLabels(i2), this._init(t3);
      }
      var e2 = createjs.extend(t2, createjs.AbstractTween);
      e2.addTween = function(t3) {
        t3._parent && t3._parent.removeTween(t3);
        var e3 = arguments.length;
        if (1 < e3) {
          for (var i2 = 0; i2 < e3; i2++)
            this.addTween(arguments[i2]);
          return arguments[e3 - 1];
        }
        if (e3 === 0)
          return null;
        this.tweens.push(t3), t3._parent = this, t3.paused = true;
        var s4 = t3.duration;
        return 0 < t3.loop && (s4 *= t3.loop + 1), s4 > this.duration && (this.duration = s4), 0 <= this.rawPosition && t3.setPosition(this.rawPosition), t3;
      }, e2.removeTween = function(t3) {
        var e3 = arguments.length;
        if (1 < e3) {
          for (var i2 = true, s4 = 0; s4 < e3; s4++)
            i2 = i2 && this.removeTween(arguments[s4]);
          return i2;
        }
        if (e3 === 0)
          return true;
        for (var r2 = this.tweens, s4 = r2.length; s4--; )
          if (r2[s4] === t3)
            return r2.splice(s4, 1), t3._parent = null, t3.duration >= this.duration && this.updateDuration(), true;
        return false;
      }, e2.updateDuration = function() {
        for (var t3 = this.duration = 0, e3 = this.tweens.length; t3 < e3; t3++) {
          var i2 = this.tweens[t3], s4 = i2.duration;
          0 < i2.loop && (s4 *= i2.loop + 1), s4 > this.duration && (this.duration = s4);
        }
      }, e2.toString = function() {
        return "[Timeline]";
      }, e2.clone = function() {
        throw "Timeline can not be cloned.";
      }, e2._updatePosition = function(t3, e3) {
        for (var i2 = this.position, s4 = 0, r2 = this.tweens.length; s4 < r2; s4++)
          this.tweens[s4].setPosition(i2, true, t3);
      }, e2._runActionsRange = function(t3, e3, i2, s4) {
        for (var r2 = this.position, n = 0, a = this.tweens.length; n < a; n++)
          if (this.tweens[n]._runActions(t3, e3, i2, s4), r2 !== this.position)
            return true;
      }, createjs.Timeline = createjs.promote(t2, "AbstractTween");
    }(), function() {
      "use strict";
      function e2() {
        throw "Ease cannot be instantiated.";
      }
      e2.none = e2.linear = function(t2) {
        return t2;
      }, e2.get = function(e3) {
        return e3 < -1 ? e3 = -1 : 1 < e3 && (e3 = 1), function(t2) {
          return e3 == 0 ? t2 : e3 < 0 ? t2 * (t2 * -e3 + 1 + e3) : t2 * ((2 - t2) * e3 + (1 - e3));
        };
      }, e2.getPowIn = function(e3) {
        return function(t2) {
          return Math.pow(t2, e3);
        };
      }, e2.getPowOut = function(e3) {
        return function(t2) {
          return 1 - Math.pow(1 - t2, e3);
        };
      }, e2.getPowInOut = function(e3) {
        return function(t2) {
          return (t2 *= 2) < 1 ? 0.5 * Math.pow(t2, e3) : 1 - 0.5 * Math.abs(Math.pow(2 - t2, e3));
        };
      }, e2.quadIn = e2.getPowIn(2), e2.quadOut = e2.getPowOut(2), e2.quadInOut = e2.getPowInOut(2), e2.cubicIn = e2.getPowIn(3), e2.cubicOut = e2.getPowOut(3), e2.cubicInOut = e2.getPowInOut(3), e2.quartIn = e2.getPowIn(4), e2.quartOut = e2.getPowOut(4), e2.quartInOut = e2.getPowInOut(4), e2.quintIn = e2.getPowIn(5), e2.quintOut = e2.getPowOut(5), e2.quintInOut = e2.getPowInOut(5), e2.sineIn = function(t2) {
        return 1 - Math.cos(t2 * Math.PI / 2);
      }, e2.sineOut = function(t2) {
        return Math.sin(t2 * Math.PI / 2);
      }, e2.sineInOut = function(t2) {
        return -0.5 * (Math.cos(Math.PI * t2) - 1);
      }, e2.backIn = (e2.getBackIn = function(e3) {
        return function(t2) {
          return t2 * t2 * ((e3 + 1) * t2 - e3);
        };
      })(1.7), e2.backOut = (e2.getBackOut = function(e3) {
        return function(t2) {
          return --t2 * t2 * ((e3 + 1) * t2 + e3) + 1;
        };
      })(1.7), e2.backInOut = (e2.getBackInOut = function(e3) {
        return e3 *= 1.525, function(t2) {
          return (t2 *= 2) < 1 ? t2 * t2 * ((e3 + 1) * t2 - e3) * 0.5 : 0.5 * ((t2 -= 2) * t2 * ((e3 + 1) * t2 + e3) + 2);
        };
      })(1.7), e2.circIn = function(t2) {
        return -(Math.sqrt(1 - t2 * t2) - 1);
      }, e2.circOut = function(t2) {
        return Math.sqrt(1 - --t2 * t2);
      }, e2.circInOut = function(t2) {
        return (t2 *= 2) < 1 ? -0.5 * (Math.sqrt(1 - t2 * t2) - 1) : 0.5 * (Math.sqrt(1 - (t2 -= 2) * t2) + 1);
      }, e2.bounceIn = function(t2) {
        return 1 - e2.bounceOut(1 - t2);
      }, e2.bounceOut = function(t2) {
        return t2 < 1 / 2.75 ? 7.5625 * t2 * t2 : t2 < 2 / 2.75 ? 7.5625 * (t2 -= 1.5 / 2.75) * t2 + 0.75 : t2 < 2.5 / 2.75 ? 7.5625 * (t2 -= 2.25 / 2.75) * t2 + 0.9375 : 7.5625 * (t2 -= 2.625 / 2.75) * t2 + 0.984375;
      }, e2.bounceInOut = function(t2) {
        return t2 < 0.5 ? 0.5 * e2.bounceIn(2 * t2) : 0.5 * e2.bounceOut(2 * t2 - 1) + 0.5;
      }, e2.elasticIn = (e2.getElasticIn = function(i2, s4) {
        var r2 = 2 * Math.PI;
        return function(t2) {
          if (t2 == 0 || t2 == 1)
            return t2;
          var e3 = s4 / r2 * Math.asin(1 / i2);
          return -(i2 * Math.pow(2, 10 * --t2) * Math.sin((t2 - e3) * r2 / s4));
        };
      })(1, 0.3), e2.elasticOut = (e2.getElasticOut = function(i2, s4) {
        var r2 = 2 * Math.PI;
        return function(t2) {
          if (t2 == 0 || t2 == 1)
            return t2;
          var e3 = s4 / r2 * Math.asin(1 / i2);
          return i2 * Math.pow(2, -10 * t2) * Math.sin((t2 - e3) * r2 / s4) + 1;
        };
      })(1, 0.3), e2.elasticInOut = (e2.getElasticInOut = function(i2, s4) {
        var r2 = 2 * Math.PI;
        return function(t2) {
          var e3 = s4 / r2 * Math.asin(1 / i2);
          return (t2 *= 2) < 1 ? i2 * Math.pow(2, 10 * --t2) * Math.sin((t2 - e3) * r2 / s4) * -0.5 : i2 * Math.pow(2, -10 * --t2) * Math.sin((t2 - e3) * r2 / s4) * 0.5 + 1;
        };
      })(1, 0.3 * 1.5), createjs.Ease = e2;
    }(), function() {
      "use strict";
      function t2() {
        throw "MotionGuidePlugin cannot be instantiated.";
      }
      var E = t2;
      E.priority = 0, E.ID = "MotionGuide", E.install = function() {
        return createjs.Tween._installPlugin(t2), createjs.Tween.IGNORE;
      }, E.init = function(t3, e2, i2) {
        e2 == "guide" && t3._addPlugin(E);
      }, E.step = function(t3, e2, i2) {
        for (var s4 in i2)
          if (s4 === "guide") {
            var r2 = e2.props.guide, n = E._solveGuideData(i2.guide, r2);
            r2.valid = !n;
            var a = r2.endData;
            if (t3._injectProp("x", a.x), t3._injectProp("y", a.y), n || !r2.orient)
              break;
            n = e2.prev.props.rotation === void 0 ? t3.target.rotation || 0 : e2.prev.props.rotation;
            if (r2.startOffsetRot = n - r2.startData.rotation, r2.orient == "fixed")
              r2.endAbsRot = a.rotation + r2.startOffsetRot, r2.deltaRotation = 0;
            else {
              var a = i2.rotation === void 0 ? t3.target.rotation || 0 : i2.rotation, o2 = a - r2.endData.rotation - r2.startOffsetRot, h2 = o2 % 360;
              switch (r2.endAbsRot = a, r2.orient) {
                case "auto":
                  r2.deltaRotation = o2;
                  break;
                case "cw":
                  r2.deltaRotation = (360 + h2) % 360 + 360 * Math.abs(o2 / 360 | 0);
                  break;
                case "ccw":
                  r2.deltaRotation = (h2 - 360) % 360 + -360 * Math.abs(o2 / 360 | 0);
              }
            }
            t3._injectProp("rotation", r2.endAbsRot);
          }
      }, E.change = function(t3, e2, i2, s4, r2, n) {
        var a = e2.props.guide;
        if (a && e2.props !== e2.prev.props && a !== e2.prev.props.guide)
          return i2 === "guide" && !a.valid || i2 == "x" || i2 == "y" || i2 === "rotation" && a.orient ? createjs.Tween.IGNORE : void E._ratioToPositionData(r2, a, t3.target);
      }, E.debug = function(t3, e2, i2) {
        t3 = t3.guide || t3;
        var s4 = E._findPathProblems(t3);
        if (s4 && console.error("MotionGuidePlugin Error found: \n" + s4), !e2)
          return s4;
        var r2 = t3.path, n = r2.length;
        for (e2.save(), e2.lineCap = "round", e2.lineJoin = "miter", e2.beginPath(), e2.moveTo(r2[0], r2[1]), c = 2; c < n; c += 4)
          e2.quadraticCurveTo(r2[c], r2[c + 1], r2[c + 2], r2[c + 3]);
        e2.strokeStyle = "black", e2.lineWidth = 4.5, e2.stroke(), e2.strokeStyle = "white", e2.lineWidth = 3, e2.stroke(), e2.closePath();
        var a = i2.length;
        if (i2 && a) {
          var o2 = {}, h2 = {};
          E._solveGuideData(t3, o2);
          for (var c = 0; c < a; c++)
            o2.orient = "fixed", E._ratioToPositionData(i2[c], o2, h2), e2.beginPath(), e2.moveTo(h2.x, h2.y), e2.lineTo(h2.x + 9 * Math.cos(0.0174533 * h2.rotation), h2.y + 9 * Math.sin(0.0174533 * h2.rotation)), e2.strokeStyle = "black", e2.lineWidth = 4.5, e2.stroke(), e2.strokeStyle = "red", e2.lineWidth = 3, e2.stroke(), e2.closePath();
        }
        return e2.restore(), s4;
      }, E._solveGuideData = function(t3, e2) {
        if (b = E.debug(t3))
          return b;
        var i2 = e2.path = t3.path;
        e2.orient = t3.orient;
        e2.subLines = [], e2.totalLength = 0, e2.startOffsetRot = 0, e2.deltaRotation = 0, e2.startData = { ratio: 0 }, e2.endData = { ratio: 1 }, e2.animSpan = 1;
        for (var s4, r2, n, a, o2 = i2.length, h2 = {}, c = i2[0], u = i2[1], l = 2; l < o2; l += 4) {
          s4 = i2[l], r2 = i2[l + 1], n = i2[l + 2], a = i2[l + 3];
          for (var d = { weightings: [], estLength: 0, portion: 0 }, _ = c, p = u, f3 = 1; f3 <= 10; f3++) {
            E._getParamsForCurve(c, u, s4, r2, n, a, f3 / 10, false, h2);
            var g = h2.x - _, m2 = h2.y - p, v = Math.sqrt(g * g + m2 * m2);
            d.weightings.push(v), d.estLength += v, _ = h2.x, p = h2.y;
          }
          for (e2.totalLength += d.estLength, f3 = 0; f3 < 10; f3++)
            v = d.estLength, d.weightings[f3] = d.weightings[f3] / v;
          e2.subLines.push(d), c = n, u = a;
        }
        v = e2.totalLength;
        var T = e2.subLines.length;
        for (l = 0; l < T; l++)
          e2.subLines[l].portion = e2.subLines[l].estLength / v;
        var b = isNaN(t3.start) ? 0 : t3.start, t3 = isNaN(t3.end) ? 1 : t3.end;
        E._ratioToPositionData(b, e2, e2.startData), E._ratioToPositionData(t3, e2, e2.endData), e2.startData.ratio = b, e2.endData.ratio = t3, e2.animSpan = e2.endData.ratio - e2.startData.ratio;
      }, E._ratioToPositionData = function(t3, e2, i2) {
        for (var s4, r2, n, a = e2.subLines, o2 = 0, h2 = t3 * e2.animSpan + e2.startData.ratio, c = a.length, u = 0; u < c; u++) {
          if (h2 <= o2 + (r2 = a[u].portion)) {
            n = u;
            break;
          }
          o2 += r2;
        }
        n === void 0 && (n = c - 1, o2 -= r2);
        var l = a[n].weightings, d = r2;
        for (c = l.length, u = 0; u < c && !(h2 <= o2 + (r2 = l[u] * d)); u++)
          o2 += r2;
        n = 4 * n + 2, s4 = u / 10 + (h2 - o2) / r2 * 0.1;
        var _ = e2.path;
        return E._getParamsForCurve(_[n - 2], _[n - 1], _[n], _[n + 1], _[n + 2], _[n + 3], s4, e2.orient, i2), e2.orient && (0.99999 <= t3 && t3 <= 1.00001 && e2.endAbsRot !== void 0 ? i2.rotation = e2.endAbsRot : i2.rotation += e2.startOffsetRot + t3 * e2.deltaRotation), i2;
      }, E._getParamsForCurve = function(t3, e2, i2, s4, r2, n, a, o2, h2) {
        var c = 1 - a;
        h2.x = c * c * t3 + 2 * c * a * i2 + a * a * r2, h2.y = c * c * e2 + 2 * c * a * s4 + a * a * n, o2 && (h2.rotation = 57.2957795 * Math.atan2((s4 - e2) * c + (n - s4) * a, (i2 - t3) * c + (r2 - i2) * a));
      }, E._findPathProblems = function(t3) {
        var e2 = t3.path, i2 = e2 && e2.length || 0;
        if (i2 < 6 || (i2 - 2) % 4) {
          var s4 = "	Cannot parse 'path' array due to invalid number of entries in path. ";
          return s4 += "There should be an odd number of points, at least 3 points, and 2 entries per point (x & y). ", s4 += "See 'CanvasRenderingContext2D.quadraticCurveTo' for details as 'path' models a quadratic bezier.\n\n", s4 += "Only [ " + i2 + " ] values found. Expected: " + Math.max(4 * Math.ceil((i2 - 2) / 4) + 2, 6);
        }
        for (var r2 = 0; r2 < i2; r2++)
          if (isNaN(e2[r2]))
            return "All data in path array must be numeric";
        s4 = t3.start;
        if (isNaN(s4) && s4 !== void 0)
          return "'start' out of bounds. Expected 0 to 1, got: " + s4;
        s4 = t3.end;
        if (isNaN(s4) && s4 !== void 0)
          return "'end' out of bounds. Expected 0 to 1, got: " + s4;
        t3 = t3.orient;
        return t3 && t3 != "fixed" && t3 != "auto" && t3 != "cw" && t3 != "ccw" ? 'Invalid orientation value. Expected ["fixed", "auto", "cw", "ccw", undefined], got: ' + t3 : void 0;
      }, createjs.MotionGuidePlugin = t2;
    }(), function() {
      "use strict";
      var t2 = createjs.TweenJS = createjs.TweenJS || {};
      t2.version = "NEXT", t2.buildDate = "Thu, 14 Sep 2017 22:19:45 GMT";
    }(), exports.createjs = exports.createjs || {}, function() {
      "use strict";
      function a() {
        throw "CSSPlugin cannot be instantiated.";
      }
      var o2 = a;
      function h2(t2, e2) {
        for (var i2, s4, r2, n = [false, t2]; i2 = o2.TRANSFORM_RE.exec(t2); )
          i2[3] !== "*" ? (s4 = [i2[1]], r2 = e2 && e2[n.length], !e2 || r2 && s4[0] === r2[0] || (console.log("transforms don't match: ", s4[0], r2 && r2[0]), e2 = null), function(t3, e3, i3) {
            for (; ; ) {
              var s5 = o2.TRANSFORM_VALUE_RE.exec(t3);
              if (!s5)
                return;
              (i3 = i3 || []).push(+s5[1], s5[2]), e3 && e3[i3.length - 1] !== s5[2] && (console.log("transform units don't match: ", i3[0], e3[i3.length - 1], s5[2]), e3 = null);
            }
          }(i2[2], r2, s4), n.push(s4)) : n.push(e2[n.length]);
        return n[0] = !!e2, n;
      }
      o2.priority = 100, o2.ID = "CSS", o2.VALUE_RE = /^(-?[\d.]+)([a-z%]*)$/, o2.TRANSFORM_VALUE_RE = /(?:^| |,)(-?[\d.]+)([a-z%]*)/g, o2.TRANSFORM_RE = /(\w+?)\(([^)]+)\)|(?:^| )(\*)(?:$| )/g, o2.compute = false, o2.install = function() {
        createjs.Tween._installPlugin(a);
      }, o2.init = function(t2, e2, i2) {
        var s4 = t2.pluginData;
        if (!s4.CSS_disabled && t2.target instanceof HTMLElement) {
          var r2, n = i2 || (r2 = t2.target, n = e2, ((i2 = s4.CSS_compute) || i2 == null && o2.compute ? window.getComputedStyle(r2) : r2.style)[n]);
          if (n !== void 0) {
            t2._addPlugin(a);
            t2 = s4.CSS || (s4.CSS = {});
            if (e2 === "transform")
              return t2[e2] = "_t", h2(n);
            s4 = o2.VALUE_RE.exec(n);
            return s4 === null ? (t2[e2] = "", n) : (t2[e2] = s4[2], parseFloat(s4[1]));
          }
        }
      }, o2.step = function(t2, e2, i2) {
        i2.transform && (e2.props.transform = h2(e2.props.transform, e2.prev.props.transform));
      }, o2.change = function(t2, e2, i2, s4, r2, n) {
        var a2 = t2.pluginData.CSS[i2];
        if (a2 !== void 0)
          return i2 === "transform" ? s4 = function(t3, e3, i3) {
            if (i3 === 1)
              return e3[1];
            if (i3 === 0 || !e3[0])
              return t3[1];
            for (var s5, r3, n2 = "", a3 = t3.length, o3 = 2; o3 < a3; o3++) {
              var h3 = t3[o3], c = e3[o3];
              for (n2 += h3[0] + "(", s5 = 1, r3 = h3.length; s5 < r3; s5 += 2)
                n2 += h3[s5] + (c[s5] - h3[s5]) * i3, n2 += c[s5 + 1] || h3[s5 + 1], s5 < r3 - 2 && (n2 += ", ");
              n2 += ")", o3 < a3 - 1 && (n2 += " ");
            }
            return n2;
          }(e2.prev.props[i2], e2.props[i2], r2) : s4 += a2, t2.target.style[i2] = s4, createjs.Tween.IGNORE;
      }, createjs.CSSPlugin = o2;
    }(), createjs.CSSPlugin.install(), exports.createjs = exports.createjs || {}, function() {
      "use strict";
      function c() {
        throw "DotPlugin cannot be instantiated.";
      }
      var t2 = c;
      t2.priority = 100, t2.ID = "Dot", t2.install = function() {
        createjs.Tween._installPlugin(c);
      }, t2.init = function(t3, e2, i2) {
        var s4 = t3.pluginData;
        if (!s4.Dot_disabled && e2[0] === ".") {
          t3._addPlugin(c);
          for (var r2 = t3.target, n = e2.split("."), a = 1, o2 = n.length; a < o2 - 1; a++)
            if (!(r2 = r2[n[a]]))
              return createjs.Tween.IGNORE;
          var h2 = n[a], t3 = r2[h2], i2 = i2 === void 0 ? t3 : i2;
          return s4.Dot = s4.Dot || {}, s4.Dot[e2] = { t: r2, n: h2 }, i2;
        }
      }, t2.step = function(t3, e2, i2) {
      }, t2.change = function(t3, e2, i2, s4, r2, n) {
        var a, t3 = t3.pluginData.Dot;
        if (t3 && (a = t3[i2]))
          return a.t[a.n] = s4, createjs.Tween.IGNORE;
      }, createjs.DotPlugin = t2;
    }(), exports.createjs = exports.createjs || {}, function() {
      "use strict";
      function t2() {
        throw "RelativePlugin plugin cannot be instantiated.";
      }
      var s4 = t2;
      s4.ID = "Relative", s4.install = function() {
        createjs.Tween._installPlugin(t2);
      }, s4.init = function(t3, e2, i2) {
        t3.pluginData.Relative_disabled || t3._addPlugin(s4);
      }, s4.step = function(t3, e2, i2) {
        for (var s5 in i2) {
          var r2, n, a = i2[s5];
          typeof a == "string" && (r2 = e2.prev.props[s5], (n = a[0]) !== "+" && n !== "-" || isNaN(a = +a + r2) || (e2.props[s5] = a));
        }
      }, s4.change = function(t3, e2, i2, s5, r2, n) {
      }, createjs.RelativePlugin = s4;
    }(), createjs.DotPlugin.install(), createjs.RelativePlugin.install(), window.addEventListener("DOMContentLoaded", function() {
      var t2 = document.createElement("style");
      t2.innerHTML = "canvas {-webkit-tap-highlight-color: transparent;}", document.body.appendChild(t2);
    });
    window.createjs = createjs;
    module2.exports = function makeCreateJS() {
      return createjs;
    };
  }
});

// node_modules/zimjs/zim.js
var require_zim = __commonJS({
  "node_modules/zimjs/zim.js"(exports, module2) {
    module2.exports = function makeZIM2(zns) {
      window.zns = zns;
      typeof window == "undefined" && (window = {});
      var zon, zns, zimDefaultFrame = window.zimDefaultFrame, zdf = window.zdf, createjs = window.createjs, OPTIMIZE = window.OPTIMIZE, ACTIONEVENT = window.ACTIONEVENT, KEYFOCUS = window.KEYFOCUS, TIMECHECK = window.TIMECHECK, TIME = window.TIME, STYLE = window.STYLE, MOBILE = window.MOBILE, LOCALSTORAGE = window.LOCALSTORAGE, GET = window.GET, POST = window.POST, SOCKET = window.SOCKET, FIT = window.FIT, FILL = window.FILL, FULL = window.FULL, zimContactListener = window.zimContactListener, zimDefaultPhysics = window.zimDefaultPhysics, b2ContactListener = window.b2ContactListener, b2Vec2 = window.b2Vec2;
      zon === void 0 && (zon = true), zns === void 0 && (zns = false);
      var zog = zon ? console.log.bind(console) : function() {
      }, zogStyle = " border:thin solid black; color: black", zogg = zon ? console.log.bind(console, "%c Z ", "background: #acd241;" + zogStyle) : function() {
      }, zogp = zon ? console.log.bind(console, "%c Z ", "background: #e472c4;" + zogStyle) : function() {
      }, zogb = zon ? console.log.bind(console, "%c Z ", "background: #50c4b7;" + zogStyle) : function() {
      }, zogr = zon ? console.log.bind(console, "%c Z ", "background: #fb4758;" + zogStyle) : function() {
      }, zogy = zon ? console.log.bind(console, "%c Z ", "background: #ebcb35;" + zogStyle) : function() {
      }, zogo = zon ? console.log.bind(console, "%c Z ", "background: #f58e25;" + zogStyle) : function() {
      }, zogl = zon ? console.log.bind(console, "%c Z ", "background: #eeeeee;" + zogStyle) : function() {
      }, zogd = zon ? console.log.bind(console, "%c Z ", "background: #444444; border:thin solid black; color: white") : function() {
      };
      function zid(e2) {
        return z_d("1"), document.getElementById(e2);
      }
      function zss(e2) {
        if (z_d("2"), document.getElementById(e2))
          return document.getElementById(e2).style;
        zon && zogy("zss(): id not found");
      }
      function zgo(e2, t2, o2, n, r2, i2) {
        if (z_d("3"), !(zot(t2) && t2 != "" || t2 == "_self")) {
          var a = "";
          return o2 && (a += "width=" + o2 + ","), n && (a += "height=" + n + ","), r2 && (a += "fullscreen=yes,"), i2 && (a += "modal=yes,alwaysRaised=yes"), window.open(e2, t2, a);
        }
        window.location.href = e2;
      }
      function zum(e2) {
        if (z_d("4"), !zot(e2))
          return Number(String(e2).replace(/[^\d\.\-]/g, ""));
      }
      function zot(e2) {
        return e2 == null;
      }
      function zop(e2) {
        z_d("5"), zot(e2) || (e2.stopImmediatePropagation && e2.stopImmediatePropagation(), window.event && (window.event.cancelBubble = true));
      }
      function zil() {
        z_d("6");
        function e2(e3) {
          (e3 = e3 || event).keyCode && 32 <= e3.keyCode && e3.keyCode <= 40 && e3.preventDefault();
        }
        function t2(e3) {
          (e3 = e3 || event).preventDefault();
        }
        var o2 = t2;
        return window.addEventListener("keydown", e2, { passive: false }), window.addEventListener("wheel", t2, { passive: false }), window.addEventListener("DOMMouseScroll", o2, { passive: false }), [e2, t2, o2];
      }
      function zet(r2) {
        return z_d("6.1"), new function() {
          var a = this;
          this.on = function(e2, t2) {
            if (!(zot(r2) || zot(e2) || zot(t2)))
              for (var o2 = a.tags, n = 0; n < o2.length; n++)
                o2[n].addEventListener(e2, t2);
          }, this.off = function(e2, t2) {
            if (!(zot(r2) || zot(e2) || zot(t2)))
              for (var o2 = a.tags, n = 0; n < o2.length; n++)
                o2[n].removeEventListener(e2, t2);
          }, Object.defineProperty(a, "tags", { get: function() {
            return zot(r2) ? [] : typeof r2 == "string" || r2 instanceof String ? document.querySelectorAll(r2) : typeof r2.innerHTML == "string" ? [r2] : [];
          }, set: function() {
          } }), this.css = function(e2, t2) {
            for (var o2 = a.tags, n = 0; n < o2.length; n++)
              if (arguments.length == 1 && e2.constructor === {}.constructor)
                for (var r3 in e2)
                  o2[n].style[r3] = e2[r3];
              else {
                if (arguments.length == 1)
                  return a.tags[0].style[e2];
                o2[n].style[e2] = t2;
              }
          }, this.prop = function(e2, t2) {
            if (!zot(e2)) {
              for (var o2 = a.tags, n = [], r3 = 0; r3 < o2.length; r3++)
                if (zot(t2))
                  if (e2.constructor === {}.constructor)
                    for (var i2 in e2)
                      o2[r3][i2] = e2[i2];
                  else
                    n.push(o2[r3][e2]);
                else
                  o2[r3][e2] = t2;
              return zot(t2) ? n : void 0;
            }
          };
        }();
      }
      function isDUO(e2) {
        return e2.length == 1 && e2[0] != null && e2[0].constructor === {}.constructor;
      }
      function zob(e2, t2, o2, n) {
        var r2 = zim2 && (zim2.ZIMONON || ZIMONON);
        if (isDUO(t2)) {
          z_d("7");
          for (var i2, a = t2[0], l = (zot(o2) ? e2.toString().split(/\n/, 1)[0].match(/\((.*)\)/)[1] : o2).replace(/\s+/g, "").split(","), s4 = [], c = 0; c < l.length; c++)
            i2 = l[c].split("=")[0], l[c] = i2, s4.push(a[i2]);
          for (c in a)
            l.indexOf(c) < 0 && zon && zogy(e2, "bad argument " + c);
          return !(o2 = e2.prototype.isPrototypeOf(n) ? new (e2.bind.apply(e2, [null].concat(s4)))() : e2.apply(null, s4)) || (r2 && !o2.arguments && (o2.arguments = [a]), o2);
        }
        r2 && n && t2 && zot(n.arguments) && (n.arguments = Array.prototype.slice.call(t2));
      }
      function zik(e2) {
        if (z_d("7.5"), z_d("17.6"), !zot(e2))
          return zim2.Pick.choose(e2);
      }
      var ignore, zta = console.table && zon ? console.table.bind(console) : function() {
      }, zor = function() {
        for (var e2 = 0; e2 < arguments.length; e2++)
          if (!zot(arguments[e2]))
            return arguments[e2];
      };
      function z_d(e2) {
        zim2 && (zim2.DISTILL || window.DISTILL) && zim2.distillery.push(e2);
      }
      function zimify(n, e2) {
        if (z_d("83.3"), n && n.noDrag)
          return n;
        var t2, o2 = { drag: function(e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g, p, f3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.drag(e3)) : zim2.drag(this, e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g, p, f3);
        }, noDrag: function(e3) {
          return zim2.noDrag(this, e3);
        }, mouse: function() {
          return zim2.mouse(this);
        }, noMouse: function() {
          return zim2.noMouse(this);
        }, effect: function(e3, t3, o3, n2, r3) {
          return zim2.effect(this, e3, t3, o3, n2, r3);
        }, noEffect: function(e3, t3) {
          return zim2.noEffect(this, e3, t3);
        }, updateEffects: function(e3) {
          return zim2.updateEffects(this, e3);
        }, wire: function(e3, t3, o3, n2, r3, i2, a) {
          return isDUO(arguments) ? (e3.source = this, zim2.wire(e3)) : zim2.wire(this, e3, t3, o3, n2, r3, i2, a);
        }, noWire: function(e3, t3, o3) {
          return isDUO(arguments) ? (e3.source = this, zim2.noWire(e3)) : zim2.noWire(this, e3, t3, o3);
        }, wired: function(e3, t3, o3, n2, r3, i2, a) {
          return isDUO(arguments) ? (e3.target = this, zim2.wired(e3)) : zim2.wired(this, e3, t3, o3, n2, r3, i2, a);
        }, noWired: function(e3, t3, o3) {
          return isDUO(arguments) ? (e3.target = this, zim2.noWired(e3)) : zim2.noWired(this, e3, t3, o3);
        }, bind: function(e3, t3, o3, n2, r3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.bind(e3)) : zim2.bind(this, e3, t3, o3, n2, r3);
        }, noBind: function(e3, t3, o3, n2) {
          return isDUO(arguments) ? (e3.obj = this, zim2.noBind(e3)) : zim2.noBind(this, e3, t3, o3, n2);
        }, dragBoundary: function(e3) {
          return zim2.dragBoundary(this, e3);
        }, dragRect: function(e3) {
          return zim2.dragBoundary(this, e3);
        }, transform: function(e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T, A2, P) {
          return isDUO(arguments) ? (e3.obj = this, zim2.transform(e3)) : zim2.transform(this, e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T, A2, P);
        }, setSwipe: function(e3) {
          return zim2.setSwipe(this, e3);
        }, gesture: function(e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g, p) {
          return isDUO(arguments) ? (e3.obj = this, zim2.gesture(e3)) : zim2.gesture(this, e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g, p);
        }, noGesture: function(e3, t3, o3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.noGesture(e3)) : zim2.noGesture(this, e3, t3, o3);
        }, gestureBoundary: function(e3, t3) {
          return zim2.gestureBoundary(this, e3, t3);
        }, gestureRect: function(e3, t3) {
          return zim2.gestureBoundary(this, e3, t3);
        }, addPhysics: function(e3, t3, o3, n2, r3, i2, a, l, s4, c, u) {
          return isDUO(arguments) ? (e3.obj = this, zim2.addPhysics(e3)) : zim2.addPhysics(this, e3, t3, o3, n2, r3, i2, a, l, s4, c, u);
        }, removePhysics: function() {
          return zim2.removePhysics(this);
        }, hitTestPoint: function(e3, t3, o3) {
          return zim2.hitTestPoint(this, e3, t3, o3);
        }, hitTestReg: function(e3, t3) {
          return zim2.hitTestReg(this, e3, t3);
        }, hitTestRect: function(e3, t3, o3) {
          return zim2.hitTestRect(this, e3, t3, o3);
        }, hitTestCircle: function(e3, t3, o3) {
          return zim2.hitTestCircle(this, e3, t3, o3);
        }, hitTestCircleRect: function(e3, t3) {
          return zim2.hitTestCircleRect(this, e3, t3);
        }, hitTestCircles: function(e3, t3) {
          return zim2.hitTestCircles(this, e3, t3);
        }, hitTestBounds: function(e3, t3, o3) {
          return zim2.hitTestBounds(this, e3, t3, o3);
        }, boundsToGlobal: function(e3, t3, o3, n2) {
          return zim2.boundsToGlobal(this, e3, t3, o3, n2);
        }, resetBounds: function(e3, t3, o3, n2) {
          return zim2.resetBounds(this, e3, t3, o3, n2);
        }, hitTestPath: function(e3, t3, o3) {
          return zim2.hitTestPath(this, e3, t3, o3);
        }, hitTestGrid: function(e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d) {
          return zim2.hitTestGrid(this, e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d);
        }, animate: function(e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T, A2, P, B, S2, E, I, M, O, j, L, _, Y, D, X, R, W, F2, H, N, V, G, q, U, Q, Z2, K) {
          return e3 && (e3.props || e3.obj) && isDUO(arguments) ? (e3.target = this, zim2.animate(e3)) : zim2.animate(this, e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T, A2, P, B, S2, E, I, M, O, j, L, _, Y, D, X, R, W, F2, H, N, V, G, q, U, Q, Z2, K);
        }, pauseAnimate: function() {
          return this;
        }, stopAnimate: function() {
          return this;
        }, wiggle: function(e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g) {
          return isDUO(arguments) ? (e3.target = this, zim2.wiggle(e3)) : zim2.wiggle(this, e3, t3, o3, n2, r3, i2, a, l, s4, c, u, d, h2, g);
        }, loop: function(e3, t3, o3, n2, r3) {
          return zim2.loop(this, e3, t3, o3, n2, r3);
        }, copyMatrix: function(e3) {
          return zim2.copyMatrix(this, e3);
        }, duplicate: function(e3) {
          return zim2.duplicate(this, e3);
        }, cur: function(e3) {
          return zim2.cur(this, e3);
        }, sha: function(e3, t3, o3, n2) {
          return zim2.sha(this, e3, t3, o3, n2);
        }, pos: function(e3, t3, o3, n2, r3, i2, a, l, s4, c) {
          return isDUO(arguments) ? (e3.obj = this, zim2.pos(e3)) : zim2.pos(this, e3, t3, o3, n2, r3, i2, a, l, s4, c);
        }, loc: function(e3, t3, o3, n2, r3, i2, a) {
          return isDUO(arguments) ? (e3.obj = this, zim2.loc(e3)) : zim2.loc(this, e3, t3, o3, n2, r3, i2, a);
        }, mov: function(e3, t3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.mov(e3)) : zim2.mov(this, e3, t3);
        }, top: function() {
          return zim2.top(this);
        }, bot: function() {
          return zim2.bot(this);
        }, ord: function(e3) {
          return zim2.ord(this, e3);
        }, dep: function(e3) {
          return zim2.dep(this, e3);
        }, nam: function(e3) {
          return zim2.nam(this, e3);
        }, alp: function(e3) {
          return zim2.alp(this, e3);
        }, vis: function(e3) {
          return zim2.vis(this, e3);
        }, ble: function(e3) {
          return zim2.ble(this, e3);
        }, hov: function(e3, t3) {
          return zim2.hov(this, e3, t3);
        }, rot: function(e3, t3, o3) {
          return zim2.rot(this, e3, t3, o3);
        }, siz: function(e3, t3, o3) {
          return zim2.siz(this, e3, t3, o3);
        }, ske: function(e3, t3) {
          return zim2.ske(this, e3, t3);
        }, reg: function(e3, t3, o3) {
          return zim2.reg(this, e3, t3, o3);
        }, sca: function(e3, t3) {
          return zim2.sca(this, e3, t3);
        }, scaleTo: function(e3, t3, o3, n2, r3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.scaleTo(e3)) : zim2.scaleTo(this, e3, t3, o3, n2, r3);
        }, fit: function(e3, t3, o3, n2, r3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.fit(e3)) : zim2.fit(this, e3, t3, o3, n2, r3);
        }, outline: function(e3, t3, o3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.outline(e3)) : zim2.outline(this, e3, t3, o3);
        }, addTo: function(e3, t3, o3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.addTo(e3)) : zim2.addTo(this, e3, t3, o3);
        }, removeFrom: function(e3) {
          return zim2.removeFrom(this, e3);
        }, added: function(e3, t3, o3) {
          return zim2.added(this, e3, t3, o3);
        }, movement: function(e3, t3) {
          return zim2.movement(this, e3, t3);
        }, noMovement: function() {
          return zim2.noMovement(this);
        }, tap: function(e3, t3, o3, n2, r3, i2, a, l, s4) {
          return isDUO(arguments) ? (e3.obj = this, zim2.tap(e3)) : zim2.tap(this, e3, t3, o3, n2, r3, i2, a, l, s4);
        }, noTap: function() {
          return zim2.noTap(this);
        }, hold: function(e3, t3, o3, n2) {
          return zim2.hold(this, e3, t3, o3, n2);
        }, noHold: function() {
          return zim2.noHold(this);
        }, change: function(e3, t3) {
          return zim2.change(this, e3, t3);
        }, noChange: function() {
          return zim2.noChange(this);
        }, centerReg: function(e3, t3, o3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.centerReg(e3)) : zim2.centerReg(this, e3, t3, o3);
        }, center: function(e3, t3, o3) {
          return isDUO(arguments) ? (e3.obj = this, zim2.center(e3)) : zim2.center(this, e3, t3, o3);
        }, place: function(e3) {
          return zim2.place(this, e3);
        }, placeReg: function(e3) {
          return zim2.placeReg(this, e3);
        }, expand: function(e3, t3, o3, n2) {
          return isDUO(arguments) ? (e3.obj = this, zim2.expand(e3)) : zim2.expand(this, e3, t3, o3, n2);
        }, setMask: function(e3, t3) {
          return zim2.setMask(this, e3, t3);
        }, cloneProps: function(e3) {
          return e3.type = this.type, e3.group = this.group, e3.style = this.style, e3.alpha = this.alpha, e3.rotation = this.rotation, e3.mouseEnabled = this.mouseEnabled, e3.mouseChildren = this.mouseChildren, e3.tickEnabled = this.tickEnabled, e3.x = this.x, e3.y = this.y, e3.scaleX = this.scaleX, e3.scaleY = this.scaleY, e3.skewX = this.skewX, e3.skewY = this.skewY, e3.name && (e3.name = this.name), e3.regX = this.regX * e3.width / (this.width || 1), e3.regY = this.regY * e3.height / (this.height || 1), e3.visible = this.visible, e3.shadow = this.shadow, this.type && this.type != "Shape" || zim2.copyMatrix(e3, this), e3.compositeOperation = this.compositeOperation, e3.snapToPixel = this.snapToPixel, this.filters && 0 < this.filters.length && (e3.filters = this.filters.slice(0), e3.cache()), e3.mask = this.mask, e3.hitArea = this.hitArea, this.type && this.type != "Shape" && this.type != "Blob" && this.type != "Squiggle" || !this._bounds || e3.setBounds(this._bounds.x, this._bounds.y, this._bounds.width, this._bounds.height), e3;
        }, cloneChildren: function(e3, t3) {
          e3.children.length && e3.removeAllChildren();
          for (var o3 = e3.children, n2 = 0, r3 = this.children.length; n2 < r3; n2++) {
            var i2 = this.children[n2].clone(t3);
            i2.parent = e3, o3.push(i2);
          }
          return e3;
        } };
        if (!zot(e2)) {
          var r2, e2 = [];
          for (r2 in o2)
            e2.push(r2);
          return e2;
        }
        for (t2 in o2)
          o2.hasOwnProperty(t2) && (n[t2] = o2[t2]);
        return zim2 && (n.cjsLocalToGlobal = n.localToGlobal, n.cjsGlobalToLocal = n.globalToLocal, n.cjsLocalToLocal = n.localToLocal, n.localToGlobal = function(e3, t3) {
          return zim2.localToGlobal(e3, t3, n, n.cjsLocalToGlobal);
        }, n.globalToLocal = function(e3, t3) {
          return zim2.globalToLocal(e3, t3, n, n.cjsGlobalToLocal);
        }, n.localToLocal = function(e3, t3, o3) {
          return zim2.localToLocal(e3, t3, o3, n);
        }, n.hueBatch || zim2.displayBase(n)), n;
      }
      function zimplify(e2) {
        z_d("83.35"), document.Window = Window, document.Blob = Blob, ignore = "ignore", zot(e2) && (e2 = []), Array.isArray(e2) || (e2 = [e2]);
        var t2, o2 = zimify(null, true), n = ["loop", "stopAnimate", "pauseAnimate", "animate", "wiggle", "wire", "wired"];
        for (t2 in zim2)
          (o2.indexOf(t2) == -1 || 0 <= n.indexOf(t2)) && e2.indexOf(t2) == -1 && (window[t2] = zim2[t2]);
      }
      (zim2 = function(To) {
        function Ao(e3, t2, o2, n, r2) {
          To.timeCheck || (z_d("9.99"), To.timeCheck = true);
          var i2 = zot(TIME) ? zot(To.TIME) ? "seconds" : To.TIME : TIME;
          return i2 && i2.toLowerCase && (i2 = i2.toLowerCase()), i2 != "milliseconds" && i2 != "ms" && (i2 = "seconds"), t2 && t2.toLowerCase && (t2 = t2.toLowerCase()), t2 != "ms" && t2 != "milliseconds" && t2 != "seconds" && t2 != "s" || (i2 = t2), zot(e3) ? i2.charAt(0) : (i2 == "ms" && (i2 = "milliseconds"), i2 == "s" && (i2 = "seconds"), i2 = i2.charAt(0), r2 || Po(e3, i2, o2, n), i2);
        }
        function Po(e3, t2, o2, n) {
          zot(o2) && (o2 = 10), zot(n) && (n = 9), (To.TIMECHECK || TIMECHECK) && (t2 != "m" && o2 < e3 || t2 == "m" && e3 < n) && zon && zogy("TIME - warning: time is in " + (t2 == "m" ? "milliseconds" : "seconds") + " (" + e3 + ")");
        }
        if (To.chop = function(o2, e3, t2, n, r2) {
          if (z_d("7.8"), !zot(o2)) {
            zot(e3) && (e3 = 3), zot(t2) && (t2 = 3), zot(n) && (n = true), zot(r2) && (r2 = 0);
            var i2 = o2.width / e3, a = o2.height / t2, l = r2, s5 = [];
            return To.loop(t2, function(t3) {
              To.loop(e3, function(e4) {
                e4 = new To.Bitmap(o2, i2 + 2 * l, a + 2 * l, e4 * i2 - l, t3 * a - l);
                r2 != 0 && (e4.setBounds(l, l, i2, a), e4.regX = l, e4.regY = l), s5.push(e4);
              });
            }), n ? new To.Tile(s5, e3, t2, 0, 0, true) : s5;
          }
        }, To.shuffle = function(e3) {
          if (z_d("8"), !zot(e3)) {
            var t2, o2, n = e3.length;
            if (n == 0)
              return e3;
            for (; --n; )
              t2 = Math.floor(Math.random() * (n + 1)), o2 = e3[n], e3[n] = e3[t2], e3[t2] = o2;
            return e3;
          }
        }, To.rand = function(e3, t2, o2, n) {
          return z_d("9"), zot(e3) && zot(t2) ? Math.random() : ((zot(e3) || isNaN(e3)) && (e3 = 0), (zot(t2) || isNaN(t2)) && (t2 = 0), e3 % 1 == 0 && t2 % 1 == 0 || (o2 = false), zot(o2) && (o2 = true), n && 0.5 < Math.random() && (e3 *= -1, t2 *= -1), o2 && (t2 < e3 ? e3++ : e3 < t2 && t2++), e3 == 0 && t2 == 0 ? 0 : (t2 = t2 == 0 ? Math.random() * e3 : Math.min(e3, t2) + Math.random() * (Math.max(e3, t2) - Math.min(e3, t2)), o2 ? Math.floor(t2) : t2));
        }, To.series = function() {
          var r2, t2;
          if (z_d("13.61"), arguments.length == 0)
            return function() {
            };
          arguments.length == 1 && Array.isArray(arguments[0]) ? r2 = arguments[0] : arguments.length == 1 && arguments[0].constructor == {}.constructor ? (zot((t2 = arguments[0]).min) && (t2.min = 0), zot(t2.max) && (t2.max = 1), zot(t2.step) && (t2.step = 1), r2 = [], To.loop(Math.floor(Math.abs(t2.max - t2.min) + t2.step), function(e3) {
            r2.push(e3 + t2.min);
          }, null, t2.step), t2 = null) : r2 = Array.prototype.slice.call(arguments);
          function o2(e3, t3) {
            if (c2 && u % c2 != 0)
              return u++, i2;
            u++;
            var o3 = r2.length, n = r2[(10 * o3 + a) % o3];
            return d ? 0 < l && o3 <= a + l * s5 ? (l = -1, a = o3 - 1 - (a + s5 - (o3 - 1))) : l < 0 && a + l * s5 < 0 ? (l = 1, a = s5 - a) : a += l * s5 : h2 ? 0 < l && o3 <= a + l * s5 ? a = o3 - 1 : l < 0 && a + l * s5 < 0 ? a = 0 : a += l * s5 : a += l * s5, i2 = n, !To.isPick(n) || n.noPick && t3 ? n : To.Pick.choose(n);
          }
          var i2, a = 0, l = 1, s5 = 1, c2 = 0, u = 0, d = false, h2 = false;
          return o2.array = r2, o2.type = "series", Object.defineProperty(o2, "index", { get: function() {
            var e3 = r2.length;
            return (10 * e3 + a) % e3;
          }, set: function(e3) {
            a = e3;
          } }), o2.jump = function(e3) {
            return a = e3, o2;
          }, o2.reverse = function(e3) {
            return zot(e3) && (e3 = true), l = e3 ? -1 : 1, a = r2.length - 1, o2;
          }, o2.bounce = function(e3) {
            zot(e3) && (e3 = true);
            var t3 = r2.length;
            return a = (10 * t3 + a) % t3, d = e3, o2;
          }, o2.step = function(e3) {
            return zot(e3) && (e3 = 1), s5 = Math.floor(e3), o2;
          }, o2.every = function(e3) {
            return zot(e3) && (e3 = 1), c2 = Math.abs(e3), u = 0, o2;
          }, o2.constrain = function(e3) {
            return zot(e3) && (e3 = true), h2 = e3, o2;
          }, o2;
        }, To.makeSeries = function(e3) {
          if (z_d("13.6"), zot(e3))
            return function() {
            };
          function t2() {
            return e3[o2++ % e3.length];
          }
          var o2 = 0;
          return t2.array = e3, t2;
        }, To.loop = function(e3, t2, o2, n, r2, i2) {
          var a;
          if (a = zob(To.loop, arguments, "obj, call, reverse, step, start, end"))
            return a;
          if (z_d("9.5"), !zot(e3) && !zot(t2)) {
            zot(o2) && (o2 = false), (zot(n) || n <= 0) && (n = 1);
            var l = typeof e3 == "number" ? "number" : e3.constructor === Array ? "array" : e3.constructor === {}.constructor ? "object" : typeof e3 == "string" ? "string" : e3 instanceof NodeList ? "nodelist" : e3 instanceof HTMLCollection ? "htmlcollection" : "invalid";
            if (l != "invalid") {
              if (l == "number" || l == "string" || l == "array" || l == "nodelist" || l == "htmlcollection") {
                if ((c2 = g((u = l == "number" ? e3 : e3.length) - 1)) == 0)
                  return true;
                if (o2) {
                  for (var s5 = r2; i2 <= s5; s5 -= n)
                    if ((h2 = l == "number" ? t2(s5, c2, r2, i2, e3) : t2(l == "array" || l == "string" ? e3[s5] : e3.item(s5), s5, c2, r2, i2, e3)) !== void 0)
                      return h2;
                } else
                  for (s5 = r2; s5 <= i2; s5 += n)
                    if ((h2 = l == "number" ? t2(s5, c2, r2, i2, e3) : t2(l == "array" || l == "string" ? e3[s5] : e3.item(s5), s5, c2, r2, i2, e3)) !== void 0)
                      return h2;
                return true;
              }
              if (l == "object") {
                var c2, u = 0, d = [];
                for (s5 in e3)
                  u++, d.push(s5);
                if ((c2 = g(u - 1)) != 0) {
                  if (o2) {
                    for (s5 = r2; i2 <= s5; s5 -= n)
                      if ((h2 = t2(d[s5], e3[d[s5]], s5, c2, r2, i2, e3)) !== void 0)
                        return h2;
                  } else
                    for (var h2, s5 = r2; s5 <= i2; s5 += n)
                      if ((h2 = t2(d[s5], e3[d[s5]], s5, c2, r2, i2, e3)) !== void 0)
                        return h2;
                  return true;
                }
              }
            }
          }
          function g(e4) {
            return zot(r2) && (r2 = o2 ? e4 : 0), zot(i2) && (i2 = o2 ? 0 : e4), o2 && r2 < i2 || !o2 && i2 < r2 || (r2 < 0 && i2) < 0 || e4 < r2 && e4 < i2 ? 0 : (r2 = Math.max(0, Math.min(r2, e4)), i2 = Math.max(0, Math.min(i2, e4)), Math.floor((o2 ? r2 - i2 : i2 - r2) / n) + 1);
          }
        }, To.timeout = function(t2, o2, e3, n) {
          var r2;
          if (r2 = zob(To.timeout, arguments, "time, call, pauseOnBlur, timeUnit", this))
            return r2;
          if (z_d("9.7"), !zot(o2) && typeof o2 == "function") {
            var i2 = Ao(t2, n);
            zot(t2) && (t2 = i2 == "s" ? 1 : 1e3), t2 = To.Pick.choose(t2);
            var a = { startTime: Date.now(), time: 0, paused: false, done: false, timeUnit: n };
            e3 && (zot(To.blurCheck) && To.setBlurDetect(), To.pauseOnBlur.push(a));
            var l = a.startTime;
            return a.pause = function(e4, t3, o3) {
              zot(e4) && (e4 = true), e4 ? cancelAnimationFrame(a.rid) : (t3 ? l = 0 : o3 ? (l = Date.now(), a.time = 0) : l = Date.now(), s5()), a.paused = e4;
            }, a.clear = function() {
              for (var e4 in a && cancelAnimationFrame(a.rid), a)
                delete a[e4];
              a.pause = function() {
              }, a.clear = function() {
              };
            }, s5(), a;
          }
          function s5() {
            var e4 = Date.now();
            if (a.time += (e4 - l) / (i2 == "s" ? 1e3 : 1), l = e4, a.time >= t2)
              return a.done = true, o2(a), void a.clear();
            a.rid = requestAnimationFrame(s5);
          }
        }, To.interval = function(e3, n, t2, o2, r2, i2) {
          var a;
          if (a = zob(To.interval, arguments, "time, call, total, immediate, pauseOnBlur, timeUnit", this))
            return a;
          if (z_d("9.8"), !zot(n) && typeof n == "function") {
            var l = Ao(e3, i2);
            if (zot(e3) && (e3 = l == "s" ? 1 : 1e3), zot(o2) && (o2 = false), zot(t2) || !(isNaN(t2) || t2 <= 0)) {
              zot(t2) && (t2 = -1);
              var s5, c2 = { count: 0, total: t2, paused: false, time: e3, active: true, timeUnit: i2 };
              return r2 && (zot(To.blurCheck) && To.setBlurDetect(), To.pauseOnBlur.push(c2)), o2 && setTimeout(function() {
                n(c2), d();
              }, 10), c2.pause = function(e4, t3, o3) {
                zot(e4) && (e4 = true), e4 ? (clearTimeout(s5), clearTimeout(c2.id), cancelAnimationFrame(c2.rid), c2.pauseTimeLeft = c2.interval - (Date.now() - c2.startTime) / (l == "s" ? 1e3 : 1)) : (c2.paused || c2.pause(true), s5 = setTimeout(function() {
                  c2.count++, n(c2), u(), d();
                }, t3 ? 0 : (o3 ? c2.interval : c2.pauseTimeLeft) * (l == "s" ? 1e3 : 1)), c2.pauseTimeLeft = null), c2.paused = e4;
              }, c2.clear = function() {
                c2.active = false, clearTimeout(s5), cancelAnimationFrame(c2.rid), clearTimeout(c2.id);
                var e4, t3 = c2.count;
                for (e4 in c2)
                  delete c2[e4];
                c2.active = false, c2.count = t3, c2.pause = function() {
                }, c2.clear = function() {
                };
              }, u(), c2;
            }
          }
          function u() {
            c2.startTime = Date.now(), c2.interval = To.Pick.choose(c2.time), c2.id = setTimeout(function() {
              c2.paused || c2.active && (c2.count++, n(c2), u(), d());
            }, c2.interval * (l == "s" ? 1e3 : 1));
          }
          function d() {
            t2 != -1 && c2.count >= (o2 ? c2.total - 1 : c2.total) && c2.clear();
          }
        }, To.async = function(e3, t2, o2, n, r2) {
          var i2, a, l, s5, c2, u;
          z_d("29"), zot(e3) || (i2 = document.createElement("script"), a = Ao(n), zot(n) && (n = a == "s" ? 2 : 2e3), t2 ? (l = o2 || t2.toString().split(/\n/, 1)[0].match(/^function\s?([^\s(]*)/)[1], To.asyncList || (To.asyncList = {}), To.asyncList[l] || (To.asyncList[l] = []), To.asyncList[l].push(t2), To.async[l] = (s5 = i2, c2 = false, u = setTimeout(function() {
            c2 = r2, typeof t2 == "function" && t2("asyncError", r2 ? "cancelled" : "timeout");
          }, n * (a == "s" ? 1e3 : 1)), function(e4) {
            clearTimeout(u), To.asyncList[l] && (t2 = To.asyncList[l].shift()), typeof t2 != "function" || c2 || t2(e4), s5 && s5.parentNode.removeChild(s5), s5 = null;
          })) : (To.async.z_s && To.async.z_s.parentNode && To.async.z_s.parentNode.removeChild(To.async.z_s), To.async.z_s = i2), e3.match(/\?/) || (e3 += "?"), i2.setAttribute("src", e3 + "&r=" + Math.random()), document.getElementsByTagName("head")[0].appendChild(i2));
        }, To.couple = function(e3) {
          if (z_d("29.2"), !To.isJSON(e3))
            return e3;
          var t2, o2 = JSON.parse(e3), n = {};
          for (t2 in o2) {
            var r2, i2 = o2[t2];
            for (r2 in i2)
              n[t2 + "_" + r2] = i2[r2];
          }
          return JSON.stringify(n);
        }, To.decouple = function(e3) {
          if (z_d("29.3"), !To.isJSON(e3))
            return e3;
          var t2, o2 = JSON.parse(e3), n = {};
          for (t2 in o2) {
            var r2 = t2.split("_", 2);
            if (r2.length != 2)
              return e3;
            n[r2[0]] || (n[r2[0]] = {}), n[r2[0]][r2[1]] = o2[t2];
          }
          return JSON.stringify(n);
        }, To.convertColor = function(e3, t2, o2) {
          if (To.convertColorCheck || (z_d("27.5"), To.convertColorCheck = true), zot(t2) && (t2 = "hex"), !zot(e3)) {
            e3 = zik(e3);
            var n, r2, i2 = ["black", "aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgrey", "darkgreen", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "grey", "green", "greenyellow", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgrey", "lightgreen", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen"], a = ["000000", "f0f8ff", "faebd7", "00ffff", "7fffd4", "f0ffff", "f5f5dc", "ffe4c4", "ffebcd", "0000ff", "8a2be2", "a52a2a", "deb887", "5f9ea0", "7fff00", "d2691e", "ff7f50", "6495ed", "fff8dc", "dc143c", "00ffff", "00008b", "008b8b", "b8860b", "a9a9a9", "a9a9a9", "006400", "bdb76b", "8b008b", "556b2f", "ff8c00", "9932cc", "8b0000", "e9967a", "8fbc8f", "483d8b", "2f4f4f", "2f4f4f", "00ced1", "9400d3", "ff1493", "00bfff", "696969", "696969", "1e90ff", "b22222", "fffaf0", "228b22", "ff00ff", "dcdcdc", "f8f8ff", "ffd700", "daa520", "808080", "808080", "008000", "adff2f", "f0fff0", "ff69b4", "cd5c5c", "4b0082", "fffff0", "f0e68c", "e6e6fa", "fff0f5", "7cfc00", "fffacd", "add8e6", "f08080", "e0ffff", "fafad2", "d3d3d3", "d3d3d3", "90ee90", "ffb6c1", "ffa07a", "20b2aa", "87cefa", "778899", "778899", "b0c4de", "ffffe0", "00ff00", "32cd32", "faf0e6", "ff00ff", "800000", "66cdaa", "0000cd", "ba55d3", "9370db", "3cb371", "7b68ee", "00fa9a", "48d1cc", "c71585", "191970", "f5fffa", "ffe4e1", "ffe4b5", "ffdead", "000080", "fdf5e6", "808000", "6b8e23", "ffa500", "ff4500", "da70d6", "eee8aa", "98fb98", "afeeee", "db7093", "ffefd5", "ffdab9", "cd853f", "ffc0cb", "dda0dd", "b0e0e6", "800080", "663399", "ff0000", "bc8f8f", "4169e1", "8b4513", "fa8072", "f4a460", "2e8b57", "fff5ee", "a0522d", "c0c0c0", "87ceeb", "6a5acd", "708090", "708090", "fffafa", "00ff7f", "4682b4", "d2b48c", "008080", "d8bfd8", "ff6347", "40e0d0", "ee82ee", "f5deb3", "ffffff", "f5f5f5", "ffff00", "9acd32"];
            if (t2.toLowerCase() == "zim")
              return To.colorsHex.indexOf(e3) < 0 ? e3 : To.colors[To.colorsHex.indexOf(e3)];
            if (n = e3.match(/rgba\((.*)\)/)) {
              if (!zot(o2))
                return (r2 = e3.split(","))[3] = o2 + ")", r2.join(",");
              e3 = "rgb(" + n[1] + ")";
            }
            if (zot(o2), n = e3.match(/rgb\((.*)\)/)) {
              if (t2 == "rgba")
                return (r2 = e3.split(")"))[0] + "," + o2 + r2[1];
              if (t2 == "hex")
                return "#" + (i2 = u(n[1]))[0] + i2[1] + i2[2];
              if (t2 == "hexNumber") {
                i2 = u(n[1]);
                return parseInt(i2[0] + i2[1] + i2[2], 16);
              }
              if (t2 != "string")
                return e3;
              var l, e3 = u(n[1]).join("").toLowerCase();
              return (l = a.indexOf(e3)) == -1 ? "#" + e3 : i2[l];
            }
            if (t2 == "rgb" || t2 == "rgba") {
              let s6 = function(e4) {
                return /^#([A-Fa-f0-9]{3}){1,2}$/.test(e4) ? ((e4 = e4.substring(1).split("")).length == 3 && (e4 = [e4[0], e4[0], e4[1], e4[1], e4[2], e4[2]]), e4 = "0x" + e4.join(""), t2 == "rgb" ? "rgb(" + [e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4] + ")" : "rgba(" + [e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4].join(",") + "," + o2 + ")") : t2 == "rgb" ? "rgb(0,0,0)" : "rgba(0,0,0,1)";
              };
              var s5 = s6;
              return e3.charAt(0) == "#" ? s6(e3) : s6(To.convertColor(e3));
            }
            if (t2 == "hex") {
              if (e3.charAt(0) == "#")
                return e3;
            } else if (t2 == "hexNumber") {
              if (e3.charAt(0) == "#")
                return parseInt(e3.replace(/^#/, ""), 16);
            } else
              e3.charAt(0) == "#" && (e3 = e3.replace("#", "")).length == 3 && (e3 = e3.charAt(0) + e3.charAt(0) + e3.charAt(1) + e3.charAt(1) + e3.charAt(2) + e3.charAt(2));
            return t2 != "string" ? t2 == "hexNumber" ? parseInt(a[i2.indexOf(e3.toLowerCase()) != -1 ? i2.indexOf(e3) : 0], 16) : "#" + a[i2.indexOf(e3.toLowerCase()) != -1 ? i2.indexOf(e3) : 0] : (l = a.indexOf(e3)) == -1 ? "#" + e3 : i2[l];
          }
          function c2(e4) {
            e4 = Number(e4).toString(16);
            return e4.length < 2 && (e4 = "0" + e4), e4;
          }
          function u(e4) {
            e4 = e4.split(",");
            return [c2(e4[0]), c2(e4[1]), c2(e4[2])];
          }
        }, To.colorRange = function(e3, t2, o2) {
          To.colorRangeCheck || (z_d("27.6"), To.colorRangeCheck = true), zot(o2) && (o2 = 0.5), o2 = Math.max(0, Math.min(1, o2)), zot(e3) && (e3 = "white"), zot(t2) && (t2 = "black");
          for (var n, r2 = To.convertColor(e3, "rgb"), i2 = To.convertColor(t2, "rgb"), e3 = r2.substring(4, r2.length - 1).split(","), t2 = i2.substring(4, i2.length - 1).split(","), a = "#", l = 0; l < e3.length; l++)
            n = t2[l] - e3[l], (n = Math.floor(parseInt(e3[l], 10) + n * o2).toString(16)).length < 2 && (n = "0" + n), a += n;
          return a;
        }, To.lighten = function(e3, t2) {
          return To.lightenCheck || (z_d("27.65"), To.lightenCheck = true), zot(t2) && (t2 = 0.5), 0 <= t2 ? To.colorRange(String(e3), "#FFFFFF", t2) : To.colorRange(String(e3), "#000000", -t2);
        }, To.darken = function(e3, t2) {
          return zot(t2) && (t2 = 0.5), To.darkenCheck || (z_d("27.66"), To.darkenCheck = true), 0 <= t2 ? To.colorRange(String(e3), "#000000", t2) : To.colorRange(String(e3), "#ffffff", -t2);
        }, To.toColor = function(e3, t2, o2) {
          return To.toColorCheck || (z_d("27.67"), To.toColorCheck = true), zot(o2) && (o2 = 0.5), To.colorRange(String(e3), t2, o2);
        }, To.toAlpha = function(e3, t2) {
          return To.toAlphaCheck || (z_d("27.68"), To.toAlphaCheck = true), zot(t2) && (t2 = 0.5), To.convertColor(String(e3), "rgba", t2);
        }, To.zimEase = function(e3, t2, o2, n, r2) {
          z_d("27.69");
          var i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2 = false;
          return zot(r2) && (r2 = true), e3 ? (Array.isArray(e3[1]) && (T2 = true, points2 = e3[1], e3 = e3[0], i2 = points2[0], a = points2[1], l = points2[2], s5 = points2[3], g = 1 - (h2 = 5 * (s5 + 0) - 20 * (l + i2) + 30 * a) - (d = 10 * +l + 30 * (i2 - a)) - (u = 10 * +a - 4 * (c2 = 5 * +i2)) - c2), p = e3[0], f3 = e3[1], m2 = e3[2], z = e3[3], y = 1 - (b = 5 * (z + 0) - 20 * (m2 + p) + 30 * f3) - (v = 10 * +m2 + 30 * (p - f3)) - (w = 10 * +f3 - 4 * (C = 5 * +p)) - C) : t2 ? (y = t2[0], b = t2[1], v = t2[2], w = t2[3], p = (C = t2[4]) / 5, f3 = (w + 4 * C) / 10, m2 = (v + 6 * C + 3 * w) / 10, z = (b + 4 * C + 3 * w + 2 * v) / 5) : (w = v = b = y = 0, C = 1), o2 ? k = { reverse: x2 = function() {
            return To.zimEase(null, [y, b, v, w, C], true);
          }, points: [p, f3, m2, z], polynomials: [y, b, v, w, C], noPick: function(e4) {
            if (r2) {
              if (e4 < 0.025)
                return 0;
              if (0.975 < e4)
                return 1;
            }
            if (e4 < 0.5) {
              var t3 = 100 * (e4 *= 2), o3 = (t3 /= 100) * t3;
              return (y * (n2 = o3 * t3) * o3 + b * o3 * o3 + v * n2 + w * o3 + C * t3) / 2;
            }
            var n2, t3 = 100 * (e4 = 1 - 2 * (e4 - 0.5)), o3 = (t3 /= 100) * t3;
            return 1 - (y * (n2 = o3 * t3) * o3 + b * o3 * o3 + v * n2 + w * o3 + C * t3) / 2;
          } } : T2 ? k = { reverse: x2 = function() {
            return zon && zogy("zimEase - multi array points cannot be reversed"), To.zimEase(null, [y, b, v, w, C]);
          }, points: [[p, f3, m2, z], [i2, a, l, s5]], polynomials: [[y, b, v, w, C], [g, h2, d, u, c2]], noPick: function(e4) {
            if (r2) {
              if (e4 < 0.025)
                return 0;
              if (0.975 < e4)
                return 1;
            }
            if (e4 < 0.5) {
              var t3 = 100 * (e4 *= 2), o3 = (t3 /= 100) * t3;
              return (y * (n2 = o3 * t3) * o3 + b * o3 * o3 + v * n2 + w * o3 + C * t3) / 2;
            }
            var n2, t3 = 100 * (e4 = 2 * (e4 - 0.5)), o3 = (t3 /= 100) * t3;
            return 0.5 + (g * (n2 = o3 * t3) * o3 + h2 * o3 * o3 + d * n2 + u * o3 + c2 * t3) / 2;
          } } : (k = { reverse: x2 = function() {
            return To.zimEase(null, [y, b, v, w, C], null, true);
          }, points: [p, f3, m2, z], polynomials: [y, b, v, w, C] }).noPick = n ? function(e4) {
            if (r2) {
              if (e4 < 0.025)
                return 0;
              if (0.975 < e4)
                return 1;
            }
            var t3 = 100 - 100 * e4, o3 = (t3 /= 100) * t3, e4 = o3 * t3;
            return 1 - (y * e4 * o3 + b * o3 * o3 + v * e4 + w * o3 + C * t3);
          } : function(e4) {
            if (r2) {
              if (e4 < 0.025)
                return 0;
              if (0.975 < e4)
                return 1;
            }
            var t3 = 100 * e4, o3 = (t3 /= 100) * t3, e4 = o3 * t3;
            return y * e4 * o3 + b * o3 * o3 + v * e4 + w * o3 + C * t3;
          }, k.noPick.reverse = x2, k;
        }, To.pointAlongCurve = function(e3, t2, o2, n) {
          if (z_d("27.7"), e3 && e3[0] && e3[1] && e3[2] && e3[3]) {
            zot(n) && (n = false);
            var r2, i2 = new To.Bezier(e3[0], e3[1], e3[2], e3[3]);
            if (e3 = n ? (r2 = i2.mx(t2), i2.my(t2)) : (r2 = i2.x(t2), i2.y(t2)), o2) {
              var a, l, s5, o2 = t2 - 0.05, t2 = t2 + 0.05;
              return o2 < 0 && (o2 = 0), 1 < t2 && (t2 = 1), t2 = n ? (a = i2.mx(o2), l = i2.my(o2), s5 = i2.mx(t2), i2.my(t2)) : (a = i2.x(o2), l = i2.y(o2), s5 = i2.x(t2), i2.y(t2)), { x: r2, y: e3, angle: To.angle(a, l, s5, t2) };
            }
            return { x: r2, y: e3 };
          }
        }, To.distanceAlongCurve = function(e3) {
          return z_d("27.8"), (To.dist(e3[0], e3[3]) + (To.dist(e3[0], e3[1]) + To.dist(e3[1], e3[2]) + To.dist(e3[2], e3[3]))) / 2;
        }, To.closestPointAlongCurve = function(i2, e3, o2, t2, n) {
          z_d("27.9");
          var a, l = 1e7, s5 = 0, c2 = 0;
          return zot(o2) && (o2 = 10), To.loop(e3, function(e4, n2, t3) {
            var r2 = new To.Bezier(e4[0], e4[1], e4[2], e4[3]);
            To.loop(o2, function(e5, t4) {
              var o3 = { x: r2.x(e5 / t4), y: r2.y(e5 / t4) }, t4 = To.dist(i2, o3);
              t4 < l && (l = t4, a = o3, s5 = n2, c2 = e5);
            });
          }), n ? (s5 * o2 + c2) / (e3.length * o2) * 100 : t2 ? a : s5;
        }, To.transformPoints = function(e3, t2, o2, n, r2) {
          if (z_d("27.95"), !zot(e3) && Array.isArray(e3)) {
            zot(n) && (n = 0), zot(r2) && (r2 = 0);
            var e3 = To.copy(e3), i2 = n, a = r2;
            t2 == "rotation" && (n != 0 && (e3 = To.transformPoints(e3, "x", -i2)), r2 != 0 && (e3 = To.transformPoints(e3, "y", -a)));
            for (var l = 0; l < e3.length; l++) {
              var s5, c2, u, d = e3[l];
              Array.isArray(d) && (t2 == "x" ? d[0] += o2 : t2 == "y" ? d[1] += o2 : t2 == "scaleX" ? (d[0] = (d[0] - n) * o2 + n, d[4] = d[4] * o2, d[6] = d[6] * o2) : t2 == "scaleY" ? (d[1] = (d[1] - r2) * o2 + r2, d[5] = d[5] * o2, d[7] = d[7] * o2) : t2 == "scale" ? (d[0] = (d[0] - n) * o2 + n, d[4] = d[4] * o2, d[6] = d[6] * o2, d[1] = (d[1] - r2) * o2 + r2, d[5] = d[5] * o2, d[7] = d[7] * o2) : t2 == "rotation" && (s5 = o2 * Math.PI / 180, c2 = d[0], u = d[1], d[0] = c2 * Math.cos(s5) - u * Math.sin(s5), d[1] = u * Math.cos(s5) + c2 * Math.sin(s5), c2 = d[4], u = d[5], d[4] = c2 * Math.cos(s5) - u * Math.sin(s5), d[5] = u * Math.cos(s5) + c2 * Math.sin(s5), c2 = d[6], u = d[7], d[6] = c2 * Math.cos(s5) - u * Math.sin(s5), d[7] = u * Math.cos(s5) + c2 * Math.sin(s5)));
            }
            return t2 == "rotation" && (n != 0 && (e3 = To.transformPoints(e3, "x", i2)), r2 != 0 && (e3 = To.transformPoints(e3, "y", a))), e3;
          }
        }, To.trimPointEnds = function(e3) {
          z_d("27.97"), e3[0][4] = 0, e3[0][5] = 0, e3[0][8] = "free", e3[e3.length - 1][6] = 0, e3[e3.length - 1][7] = 0, e3[e3.length - 1][8] = "free";
        }, To.reversePoints = function(e3) {
          return z_d("27.975"), e3.reverse(), loop(e3, (e4) => {
            var t2 = e4[6];
            e4[6] = e4[4], e4[4] = t2;
            t2 = e4[7];
            e4[7] = e4[5], e4[5] = t2;
          }), e3;
        }, To.appendPoints = function(e3, t2, o2) {
          return z_d("27.98"), zot(e3) && zot(t2) ? [] : zot(e3) ? t2 : zot(t2) ? e3 : (e3[e3.length - 1][6] = t2[0][6], e3[e3.length - 1][7] = t2[0][7], o2 && (e3[e3.length - 1][8] = o2), t2.shift(), e3 = e3.concat(t2));
        }, To.prependPoints = function(e3, t2, o2) {
          return z_d("27.985"), zot(e3) && zot(t2) ? [] : zot(e3) ? t2 : (zot(t2) || (t2[t2.length - 1][6] = e3[0][6], t2[t2.length - 1][7] = e3[0][7], o2 && (e3[e3.length - 1][8] = o2), e3.shift(), e3 = t2.concat(e3), zog(e3)), e3);
        }, To.splitPoints = function(e3, t2, o2) {
          if (z_d("27.99"), !(zot(e3) || (zot(t2) && (t2 = Math.floor(e3.length / 2)), t2 < 0 || t2 > e3.length - 1))) {
            zot(o2) && (o2 = true);
            var n = To.copy(e3.slice(0, t2 + 1)), t2 = To.copy(e3.slice(t2));
            return o2 && (To.trimPointEnds(n), To.trimPointEnds(t2)), [n, t2];
          }
        }, To.makeID = function(e3, t2, o2) {
          z_d("13.5"), zot(e3) && (e3 = "mixed"), zot(t2) && (t2 = 5), zot(o2) && (o2 = "uppercase");
          for (var n, r2, i2 = [2, 3, 4, 5, 6, 7, 8, 9], a = "abcdefghjkmnpqrstuvwxyz".split(""), l = e3.constructor === Array ? e3 : e3 == "numbers" ? i2 : e3 == "letters" ? a : i2.concat(a), s5 = "", c2 = 0; c2 < t2; c2++)
            n = l[Math.floor(Math.random() * l.length)], r2 = Math.random(), o2 == "uppercase" || o2 == "mixed" && 0.5 < r2 ? n.toUpperCase && (n = n.toUpperCase()) : n.toLowerCase && (n = n.toLowerCase()), s5 += String(n);
          return s5;
        }, To.swapProperties = function(e3, t2, o2) {
          if (z_d("17.1"), zot(t2) || zot(o2) || zot(t2[e3]) || zot(o2[e3]))
            return false;
          var n = o2[e3];
          return o2[e3] = t2[e3], t2[e3] = n, true;
        }, To.mobile = function(e3) {
          return z_d("28"), MOBILE !== void 0 && MOBILE != "default" ? MOBILE : zot(To.MOBILE) || To.MOBILE == "default" ? (zot(e3) && (e3 = true), /ip(hone|od|ad)/i.test(navigator.userAgent) ? "ios" : /android|nexus/i.test(navigator.userAgent) ? "android" : /blackberry/i.test(navigator.userAgent) ? "blackberry" : /nokia|phone|mobile/i.test(navigator.userAgent) ? "windows" : /opera mini|webos/i.test(navigator.userAgent) ? "other" : !(!e3 || window.orientation === void 0) && (!/safari/i.test(navigator.userAgent) || "ios")) : To.MOBILE;
        }, To.vee = function(e3) {
          return z_d("28.5"), !zot(e3) && (e3.type == "Pick" || Array.isArray(e3) || e3.constructor == {}.constructor && (!zot(e3.max) || !zot(e3.noPick)) || typeof e3 == "function");
        }, To.extend = function(e3, t2, o2, n, r2) {
          var i2;
          if (i2 = zob(To.extend, arguments, "subclass, superclass, override, prefix, prototype"))
            return i2;
          if (!zot(e3) && !zot(t2)) {
            zot(n) && (n = "super"), zot(o2) && (o2 = []), Array.isArray(o2) || (o2 = [o2]), zot(r2) && (r2 = true);
            var a, l = {};
            for (a in e3.prototype)
              Object.defineProperty(l, a, Object.getOwnPropertyDescriptor(e3.prototype, a));
            for (a in h2.prototype = t2.prototype, e3.prototype = new h2(), l)
              Object.defineProperty(e3.prototype, a, Object.getOwnPropertyDescriptor(l, a));
            var s5, c2 = e3.prototype, u = Object.getPrototypeOf && Object.getPrototypeOf(c2) || c2.__proto__;
            if (u) {
              c2[(n += "_") + "constructor"] = u.constructor;
              for (var d = 0; d < o2.length; d++)
                typeof u[s5 = o2[d]] == "function" && (c2[n + s5] = u[s5]);
              if (r2)
                for (s5 in u)
                  c2.hasOwnProperty(s5) && typeof u[s5] == "function" && (c2[n + s5] = u[s5]);
            }
            return e3;
          }
          function h2() {
            this.constructor = e3;
          }
          zon && e3 != To.StageGL && zog("zim.extend() - please supply a class and its superclass");
        }, To.copy = function(e3, t2, o2) {
          if (To.copyCheck || (z_d("10"), To.copyCheck = true), zot(t2) && (t2 = false), zot(o2) && (o2 = true), e3 == null || !(e3 instanceof Array || e3.constructor == {}.constructor))
            return t2 && e3 != null && e3.clone && e3.type && (e3.type != "Container" && e3.type != "Stage" && e3.type != "StageGL" || o2) ? e3.clone() : e3;
          if (e3 instanceof Array) {
            for (var n = [], r2 = 0; r2 < e3.length; r2++)
              n[r2] = To.copy(e3[r2], t2, o2);
            return n;
          }
          if (e3.constructor == {}.constructor) {
            var i2, a = {};
            for (i2 in e3) {
              var l = To.copy(e3[i2], t2, o2);
              e3.hasOwnProperty(i2) && (a[i2] = l);
            }
            return a;
          }
        }, To.merge = function() {
          To.mergeCheck || (z_d("12"), To.mergeCheck = true);
          for (var e3, t2 = {}, o2 = 0; o2 < arguments.length; o2++)
            for (e3 in arguments[o2])
              arguments[o2].hasOwnProperty(e3) && (t2[e3] = arguments[o2][e3]);
          return t2;
        }, To.arraysEqual = function(e3, t2, o2) {
          if (z_d("11"), zot(e3) || zot(t2))
            return false;
          if (zot(o2) && (o2 = true), e3.length != t2.length)
            return false;
          for (var n = 0; n < e3.length; n++)
            if (e3[n] instanceof Array && t2[n] instanceof Array) {
              if (!To.arraysEqual(e3[n], t2[n], o2))
                return false;
            } else {
              if (o2 && e3[n] != t2[n])
                return false;
              if (!o2)
                return To.arraysEqual(e3.sort(), t2.sort(), true);
            }
          return true;
        }, To.arrayMinMax = function(e3) {
          if (z_d("11.2"), !Array.isArray(e3))
            return { min: null, max: null };
          for (var t2 = e3[0], o2 = e3[0], n = e3.length; n--; )
            t2 = e3[n] < t2 ? e3[n] : t2, o2 = e3[n] > o2 ? e3[n] : o2;
          return { min: t2 = isNaN(t2) ? null : t2, max: o2 = isNaN(o2) ? null : o2 };
        }, To.isEmpty = function(e3) {
          if (To.zimEmptyCheck || (z_d("11.5"), To.zimEmptyCheck = true), !zot(e3)) {
            var t2, o2 = 0;
            for (t2 in e3) {
              o2++;
              break;
            }
            return o2 == 0;
          }
        }, To.isJSON = function(e3) {
          if (z_d("11.6"), typeof e3 != "string")
            return false;
          try {
            return JSON.parse(e3), true;
          } catch (e4) {
            return false;
          }
        }, To.isPick = function(e3) {
          if (To.zimPickCheck || (z_d("11.7"), To.zimPickCheck = true), !zot(e3))
            return Array.isArray(e3) || e3.constructor == {}.constructor && (e3.min != null && e3.max != null || e3.noPick) || e3.constructor === Function && (e3.array != null || e3() != null);
        }, To.zut = function(e3) {
          if (zot(e3) || typeof e3 == "object")
            return true;
        }, To.decimals = function(e3, t2, o2, n, r2, i2, a) {
          if (To.zimDecimalCheck || (z_d("13"), To.zimDecimalCheck = true), zot(e3))
            return 0;
          zot(t2) && (t2 = 1), zot(o2) && (o2 = 0), zot(n) && (n = 1), zot(r2) && (r2 = true), zot(i2) && (i2 = false);
          var l = Math.round(e3 * Math.pow(10, t2)) / Math.pow(10, t2);
          i2 && (s5 = l - Math.floor(l), l = To.decimals(Math.floor(l) + 60 * s5 / 100, 2));
          var s5 = To.sign(l);
          if (0 < o2) {
            var c2 = String(l).indexOf("."), u = String(l).length;
            c2 < 0 && (c2 = u++, l += ".");
            for (var d = 0; d < o2 - (u - c2 - 1); d++)
              l += "0";
          }
          if (1 < n) {
            s5 == -1 && (l = l.substr(1, l.length - 1));
            for (var c2 = String(l).indexOf("."), u = String(l).length, h2 = c2 < 0 ? u : c2, d = 0; d < n - h2; d++)
              l = "0" + l;
            s5 == -1 && (l = "-" + l);
          }
          return n == 0 && (l = l.toString().replace(/^0\./, ".")), 0 < o2 + n && !r2 && Number(l) == 0 && (l = 0), i2 && (l = String(l).replace(".", ":")), To.zut(a) ? l : null;
        }, To.countDecimals = function(e3) {
          return To.zimCountDecimalsCheck || (z_d("13.05"), To.zimCountDecimalsCheck = true), e3 % 1 ? e3.toString().split(".")[1].length : 0;
        }, To.sign = function(e3) {
          return To.zimSignCheck || (z_d("13.1"), To.zimSignCheck = true), e3 ? e3 < 0 ? -1 : 1 : 0;
        }, To.constrain = function(e3, t2, o2, n) {
          if (z_d("13.2"), !zot(e3))
            return zot(t2) && (t2 = 0), zot(o2) && (o2 = Number.MAX_VALUE), o2 < t2 && (t2 = o2 = t2), zot(n) && (n = false), n && e3 < 0 ? Math.max(-o2, Math.min(e3, -t2)) : Math.max(t2, Math.min(e3, o2));
        }, To.dist = function(e3, t2, o2, n) {
          if (To.zimDistCheck || (z_d("13.3"), To.zimDistCheck = true), !zot(e3) && !zot(t2))
            return zot(e3.x) || zot(t2.x) ? (zot(o2) && (o2 = 0), zot(n) && (n = 0)) : (n = t2.y, o2 = t2.x, t2 = e3.y, e3 = e3.x), Math.sqrt(Math.pow(o2 - e3, 2) + Math.pow(n - t2, 2));
        }, To.rectIntersect = function(e3, t2, o2) {
          return To.zimRectIntersectCheck || (z_d("13.32"), To.zimRectIntersectCheck = true), zot(o2) && (o2 = 0), !(e3.x >= t2.x + t2.width + o2 || e3.x + e3.width + o2 <= t2.x || e3.y >= t2.y + t2.height + o2 || e3.y + e3.height + o2 <= t2.y);
        }, To.boundsAroundPoints = function(e3) {
          To.zimBoundsAroundPointsCheck || (z_d("13.34"), To.zimBoundsAroundPointsCheck = true);
          for (var t2 = 1e4, o2 = 1e4, n = -1e4, r2 = -1e4, i2 = 0; i2 < e3.length; i2++) {
            var a = e3[i2];
            a.x < t2 && (t2 = a.x), a.x > n && (n = a.x), a.y < o2 && (o2 = a.y), a.y > r2 && (r2 = a.y);
          }
          return { x: t2, y: o2, width: n - t2, height: r2 - o2 };
        }, To.angle = function(e3, t2, o2, n) {
          if (To.angleCheck || (z_d("13.4"), To.angleCheck = true), !zot(e3) && !zot(t2))
            return zot(o2) && (o2 = e3, e3 = 0), zot(n) && (n = t2, t2 = 0), (180 * Math.atan2(n - t2, o2 - e3) / Math.PI + 360) % 360;
        }, To.TAU = 2 * Math.PI, To.DEG = 180 / Math.PI, To.RAD = Math.PI / 180, To.smoothStep = function(e3, t2, o2) {
          z_d("13.7");
          t2 = To.constrain((e3 - t2) / (o2 - t2), 0, 1);
          return t2 * t2 * t2 * (t2 * (6 * t2 - 15) + 10);
        }, To.Ajax = function(i2, e3, a, t2) {
          z_d("13.8");
          var c2 = new XMLHttpRequest();
          this.master = i2, this.couple = e3, this.lock = a, this.unique = t2;
          var u = this;
          this.get = function(e4, t3) {
            var o2 = zot(u.master) ? "" : "&master=" + encodeURI(i2), n = zot(u.lock) ? "" : "&lock=" + encodeURI(a), r2 = u.unique ? "&unique=true" : "";
            c2.open("GET", e4 + o2 + n + r2, true), c2.onload = function() {
              c2.status == 200 ? t3(To.isJSON(c2.responseText) ? JSON.parse(c2.responseText) : c2.responseText) : t3(null, "Error: " + c2.status);
            }, c2.send();
          }, this.post = function(e4, t3, o2, n, r2) {
            var i3, a2, l, s5;
            if (s5 = zob(u.post, arguments, "url, data, command, extra, callback"))
              return s5;
            zot(e4) || (c2.open("POST", e4, true), c2.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), c2.onload = function() {
              var e5 = c2.responseText;
              To.isJSON(e5) && (u.couple && (e5 = To.decouple(e5)), e5 = JSON.parse(e5)), r2(e5);
            }, To.isJSON(t3) || (t3 = JSON.stringify(t3)), u.couple && (t3 = To.couple(t3)), i3 = zot(u.master) ? "" : "&master=" + encodeURIComponent(u.master), a2 = zot(u.lock) ? "" : "&lock=" + encodeURIComponent(u.lock), l = zot(o2) ? "" : "&command=" + encodeURIComponent(o2), s5 = zot(n) ? "" : "&extra=" + encodeURIComponent(n), c2.send("data=" + encodeURIComponent(t3) + i3 + a2 + l + s5));
          }, this.put = function(e4, t3, o2) {
            c2.open("PUT", e4, true), c2.setRequestHeader("Content-type", "application/json"), c2.onload = function() {
              o2(To.isJSON(c2.responseText) ? JSON.parse(c2.responseText) : u.http.responseText);
            }, c2.send(JSON.stringify(t3));
          };
        }, To.Noise = function(e3) {
          "use strict";
          z_d("13.9"), zot(e3) && (e3 = 1e6 * Math.random());
          var t2 = e3;
          this.seed = e3;
          var B = this, S2 = {};
          function o2(e4) {
            var t3 = new Uint32Array(1);
            return t3[0] = 1664525 * e4[0] + 1013904223, t3;
          }
          function n(e4, t3, o3) {
            this.dx = -t3 - e4 * S2.SQUISH_2D, this.dy = -o3 - e4 * S2.SQUISH_2D, this.xsb = t3, this.ysb = o3;
          }
          function r2(e4, t3, o3, n2) {
            this.dx = -t3 - e4 * S2.SQUISH_3D, this.dy = -o3 - e4 * S2.SQUISH_3D, this.dz = -n2 - e4 * S2.SQUISH_3D, this.xsb = t3, this.ysb = o3, this.zsb = n2;
          }
          function i2(e4, t3, o3, n2, r3) {
            this.dx = -t3 - e4 * S2.SQUISH_4D, this.dy = -o3 - e4 * S2.SQUISH_4D, this.dz = -n2 - e4 * S2.SQUISH_4D, this.dw = -r3 - e4 * S2.SQUISH_4D, this.xsb = t3, this.ysb = o3, this.zsb = n2, this.wsb = r3;
          }
          S2.NORM_2D = 1 / 47, S2.NORM_3D = 1 / 103, S2.NORM_4D = 1 / 30, S2.SQUISH_2D = (Math.sqrt(3) - 1) / 2, S2.SQUISH_3D = (Math.sqrt(4) - 1) / 3, S2.SQUISH_4D = (Math.sqrt(5) - 1) / 4, S2.STRETCH_2D = (1 / Math.sqrt(3) - 1) / 2, S2.STRETCH_3D = (1 / Math.sqrt(4) - 1) / 3, S2.STRETCH_4D = (1 / Math.sqrt(5) - 1) / 4, S2.base2D = [[1, 1, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 2, 1, 1]], S2.base3D = [[0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1]], S2.base4D = [[0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 0, 2, 1, 0, 1, 0, 2, 1, 0, 0, 1, 2, 0, 1, 1, 0, 2, 0, 1, 0, 1, 2, 0, 0, 1, 1], [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 2, 1, 1, 0, 0, 2, 1, 0, 1, 0, 2, 1, 0, 0, 1, 2, 0, 1, 1, 0, 2, 0, 1, 0, 1, 2, 0, 0, 1, 1]], S2.gradients2D = [5, 2, 2, 5, -5, 2, -2, 5, 5, -2, 2, -5, -5, -2, -2, -5], S2.gradients3D = [-11, 4, 4, -4, 11, 4, -4, 4, 11, 11, 4, 4, 4, 11, 4, 4, 4, 11, -11, -4, 4, -4, -11, 4, -4, -4, 11, 11, -4, 4, 4, -11, 4, 4, -4, 11, -11, 4, -4, -4, 11, -4, -4, 4, -11, 11, 4, -4, 4, 11, -4, 4, 4, -11, -11, -4, -4, -4, -11, -4, -4, -4, -11, 11, -4, -4, 4, -11, -4, 4, -4, -11], S2.gradients4D = [3, 1, 1, 1, 1, 3, 1, 1, 1, 1, 3, 1, 1, 1, 1, 3, -3, 1, 1, 1, -1, 3, 1, 1, -1, 1, 3, 1, -1, 1, 1, 3, 3, -1, 1, 1, 1, -3, 1, 1, 1, -1, 3, 1, 1, -1, 1, 3, -3, -1, 1, 1, -1, -3, 1, 1, -1, -1, 3, 1, -1, -1, 1, 3, 3, 1, -1, 1, 1, 3, -1, 1, 1, 1, -3, 1, 1, 1, -1, 3, -3, 1, -1, 1, -1, 3, -1, 1, -1, 1, -3, 1, -1, 1, -1, 3, 3, -1, -1, 1, 1, -3, -1, 1, 1, -1, -3, 1, 1, -1, -1, 3, -3, -1, -1, 1, -1, -3, -1, 1, -1, -1, -3, 1, -1, -1, -1, 3, 3, 1, 1, -1, 1, 3, 1, -1, 1, 1, 3, -1, 1, 1, 1, -3, -3, 1, 1, -1, -1, 3, 1, -1, -1, 1, 3, -1, -1, 1, 1, -3, 3, -1, 1, -1, 1, -3, 1, -1, 1, -1, 3, -1, 1, -1, 1, -3, -3, -1, 1, -1, -1, -3, 1, -1, -1, -1, 3, -1, -1, -1, 1, -3, 3, 1, -1, -1, 1, 3, -1, -1, 1, 1, -3, -1, 1, 1, -1, -3, -3, 1, -1, -1, -1, 3, -1, -1, -1, 1, -3, -1, -1, 1, -1, -3, 3, -1, -1, -1, 1, -3, -1, -1, 1, -1, -3, -1, 1, -1, -1, -3, -3, -1, -1, -1, -1, -3, -1, -1, -1, -1, -3, -1, -1, -1, -1, -3], S2.lookupPairs2D = [0, 1, 1, 0, 4, 1, 17, 0, 20, 2, 21, 2, 22, 5, 23, 5, 26, 4, 39, 3, 42, 4, 43, 3], S2.lookupPairs3D = [0, 2, 1, 1, 2, 2, 5, 1, 6, 0, 7, 0, 32, 2, 34, 2, 129, 1, 133, 1, 160, 5, 161, 5, 518, 0, 519, 0, 546, 4, 550, 4, 645, 3, 647, 3, 672, 5, 673, 5, 674, 4, 677, 3, 678, 4, 679, 3, 680, 13, 681, 13, 682, 12, 685, 14, 686, 12, 687, 14, 712, 20, 714, 18, 809, 21, 813, 23, 840, 20, 841, 21, 1198, 19, 1199, 22, 1226, 18, 1230, 19, 1325, 23, 1327, 22, 1352, 15, 1353, 17, 1354, 15, 1357, 17, 1358, 16, 1359, 16, 1360, 11, 1361, 10, 1362, 11, 1365, 10, 1366, 9, 1367, 9, 1392, 11, 1394, 11, 1489, 10, 1493, 10, 1520, 8, 1521, 8, 1878, 9, 1879, 9, 1906, 7, 1910, 7, 2005, 6, 2007, 6, 2032, 8, 2033, 8, 2034, 7, 2037, 6, 2038, 7, 2039, 6], S2.lookupPairs4D = [0, 3, 1, 2, 2, 3, 5, 2, 6, 1, 7, 1, 8, 3, 9, 2, 10, 3, 13, 2, 16, 3, 18, 3, 22, 1, 23, 1, 24, 3, 26, 3, 33, 2, 37, 2, 38, 1, 39, 1, 41, 2, 45, 2, 54, 1, 55, 1, 56, 0, 57, 0, 58, 0, 59, 0, 60, 0, 61, 0, 62, 0, 63, 0, 256, 3, 258, 3, 264, 3, 266, 3, 272, 3, 274, 3, 280, 3, 282, 3, 2049, 2, 2053, 2, 2057, 2, 2061, 2, 2081, 2, 2085, 2, 2089, 2, 2093, 2, 2304, 9, 2305, 9, 2312, 9, 2313, 9, 16390, 1, 16391, 1, 16406, 1, 16407, 1, 16422, 1, 16423, 1, 16438, 1, 16439, 1, 16642, 8, 16646, 8, 16658, 8, 16662, 8, 18437, 6, 18439, 6, 18469, 6, 18471, 6, 18688, 9, 18689, 9, 18690, 8, 18693, 6, 18694, 8, 18695, 6, 18696, 9, 18697, 9, 18706, 8, 18710, 8, 18725, 6, 18727, 6, 131128, 0, 131129, 0, 131130, 0, 131131, 0, 131132, 0, 131133, 0, 131134, 0, 131135, 0, 131352, 7, 131354, 7, 131384, 7, 131386, 7, 133161, 5, 133165, 5, 133177, 5, 133181, 5, 133376, 9, 133377, 9, 133384, 9, 133385, 9, 133400, 7, 133402, 7, 133417, 5, 133421, 5, 133432, 7, 133433, 5, 133434, 7, 133437, 5, 147510, 4, 147511, 4, 147518, 4, 147519, 4, 147714, 8, 147718, 8, 147730, 8, 147734, 8, 147736, 7, 147738, 7, 147766, 4, 147767, 4, 147768, 7, 147770, 7, 147774, 4, 147775, 4, 149509, 6, 149511, 6, 149541, 6, 149543, 6, 149545, 5, 149549, 5, 149558, 4, 149559, 4, 149561, 5, 149565, 5, 149566, 4, 149567, 4, 149760, 9, 149761, 9, 149762, 8, 149765, 6, 149766, 8, 149767, 6, 149768, 9, 149769, 9, 149778, 8, 149782, 8, 149784, 7, 149786, 7, 149797, 6, 149799, 6, 149801, 5, 149805, 5, 149814, 4, 149815, 4, 149816, 7, 149817, 5, 149818, 7, 149821, 5, 149822, 4, 149823, 4, 149824, 37, 149825, 37, 149826, 36, 149829, 34, 149830, 36, 149831, 34, 149832, 37, 149833, 37, 149842, 36, 149846, 36, 149848, 35, 149850, 35, 149861, 34, 149863, 34, 149865, 33, 149869, 33, 149878, 32, 149879, 32, 149880, 35, 149881, 33, 149882, 35, 149885, 33, 149886, 32, 149887, 32, 150080, 49, 150082, 48, 150088, 49, 150098, 48, 150104, 47, 150106, 47, 151873, 46, 151877, 45, 151881, 46, 151909, 45, 151913, 44, 151917, 44, 152128, 49, 152129, 46, 152136, 49, 152137, 46, 166214, 43, 166215, 42, 166230, 43, 166247, 42, 166262, 41, 166263, 41, 166466, 48, 166470, 43, 166482, 48, 166486, 43, 168261, 45, 168263, 42, 168293, 45, 168295, 42, 168512, 31, 168513, 28, 168514, 31, 168517, 28, 168518, 25, 168519, 25, 280952, 40, 280953, 39, 280954, 40, 280957, 39, 280958, 38, 280959, 38, 281176, 47, 281178, 47, 281208, 40, 281210, 40, 282985, 44, 282989, 44, 283001, 39, 283005, 39, 283208, 30, 283209, 27, 283224, 30, 283241, 27, 283256, 22, 283257, 22, 297334, 41, 297335, 41, 297342, 38, 297343, 38, 297554, 29, 297558, 24, 297562, 29, 297590, 24, 297594, 21, 297598, 21, 299365, 26, 299367, 23, 299373, 26, 299383, 23, 299389, 20, 299391, 20, 299584, 31, 299585, 28, 299586, 31, 299589, 28, 299590, 25, 299591, 25, 299592, 30, 299593, 27, 299602, 29, 299606, 24, 299608, 30, 299610, 29, 299621, 26, 299623, 23, 299625, 27, 299629, 26, 299638, 24, 299639, 23, 299640, 22, 299641, 22, 299642, 21, 299645, 20, 299646, 21, 299647, 20, 299648, 61, 299649, 60, 299650, 61, 299653, 60, 299654, 59, 299655, 59, 299656, 58, 299657, 57, 299666, 55, 299670, 54, 299672, 58, 299674, 55, 299685, 52, 299687, 51, 299689, 57, 299693, 52, 299702, 54, 299703, 51, 299704, 56, 299705, 56, 299706, 53, 299709, 50, 299710, 53, 299711, 50, 299904, 61, 299906, 61, 299912, 58, 299922, 55, 299928, 58, 299930, 55, 301697, 60, 301701, 60, 301705, 57, 301733, 52, 301737, 57, 301741, 52, 301952, 79, 301953, 79, 301960, 76, 301961, 76, 316038, 59, 316039, 59, 316054, 54, 316071, 51, 316086, 54, 316087, 51, 316290, 78, 316294, 78, 316306, 73, 316310, 73, 318085, 77, 318087, 77, 318117, 70, 318119, 70, 318336, 79, 318337, 79, 318338, 78, 318341, 77, 318342, 78, 318343, 77, 430776, 56, 430777, 56, 430778, 53, 430781, 50, 430782, 53, 430783, 50, 431e3, 75, 431002, 72, 431032, 75, 431034, 72, 432809, 74, 432813, 69, 432825, 74, 432829, 69, 433032, 76, 433033, 76, 433048, 75, 433065, 74, 433080, 75, 433081, 74, 447158, 71, 447159, 68, 447166, 71, 447167, 68, 447378, 73, 447382, 73, 447386, 72, 447414, 71, 447418, 72, 447422, 71, 449189, 70, 449191, 70, 449197, 69, 449207, 68, 449213, 69, 449215, 68, 449408, 67, 449409, 67, 449410, 66, 449413, 64, 449414, 66, 449415, 64, 449416, 67, 449417, 67, 449426, 66, 449430, 66, 449432, 65, 449434, 65, 449445, 64, 449447, 64, 449449, 63, 449453, 63, 449462, 62, 449463, 62, 449464, 65, 449465, 63, 449466, 65, 449469, 63, 449470, 62, 449471, 62, 449472, 19, 449473, 19, 449474, 18, 449477, 16, 449478, 18, 449479, 16, 449480, 19, 449481, 19, 449490, 18, 449494, 18, 449496, 17, 449498, 17, 449509, 16, 449511, 16, 449513, 15, 449517, 15, 449526, 14, 449527, 14, 449528, 17, 449529, 15, 449530, 17, 449533, 15, 449534, 14, 449535, 14, 449728, 19, 449729, 19, 449730, 18, 449734, 18, 449736, 19, 449737, 19, 449746, 18, 449750, 18, 449752, 17, 449754, 17, 449784, 17, 449786, 17, 451520, 19, 451521, 19, 451525, 16, 451527, 16, 451528, 19, 451529, 19, 451557, 16, 451559, 16, 451561, 15, 451565, 15, 451577, 15, 451581, 15, 451776, 19, 451777, 19, 451784, 19, 451785, 19, 465858, 18, 465861, 16, 465862, 18, 465863, 16, 465874, 18, 465878, 18, 465893, 16, 465895, 16, 465910, 14, 465911, 14, 465918, 14, 465919, 14, 466114, 18, 466118, 18, 466130, 18, 466134, 18, 467909, 16, 467911, 16, 467941, 16, 467943, 16, 468160, 13, 468161, 13, 468162, 13, 468163, 13, 468164, 13, 468165, 13, 468166, 13, 468167, 13, 580568, 17, 580570, 17, 580585, 15, 580589, 15, 580598, 14, 580599, 14, 580600, 17, 580601, 15, 580602, 17, 580605, 15, 580606, 14, 580607, 14, 580824, 17, 580826, 17, 580856, 17, 580858, 17, 582633, 15, 582637, 15, 582649, 15, 582653, 15, 582856, 12, 582857, 12, 582872, 12, 582873, 12, 582888, 12, 582889, 12, 582904, 12, 582905, 12, 596982, 14, 596983, 14, 596990, 14, 596991, 14, 597202, 11, 597206, 11, 597210, 11, 597214, 11, 597234, 11, 597238, 11, 597242, 11, 597246, 11, 599013, 10, 599015, 10, 599021, 10, 599023, 10, 599029, 10, 599031, 10, 599037, 10, 599039, 10, 599232, 13, 599233, 13, 599234, 13, 599235, 13, 599236, 13, 599237, 13, 599238, 13, 599239, 13, 599240, 12, 599241, 12, 599250, 11, 599254, 11, 599256, 12, 599257, 12, 599258, 11, 599262, 11, 599269, 10, 599271, 10, 599272, 12, 599273, 12, 599277, 10, 599279, 10, 599282, 11, 599285, 10, 599286, 11, 599287, 10, 599288, 12, 599289, 12, 599290, 11, 599293, 10, 599294, 11, 599295, 10], S2.p2D = [0, 0, 1, -1, 0, 0, -1, 1, 0, 2, 1, 1, 1, 2, 2, 0, 1, 2, 0, 2, 1, 0, 0, 0], S2.p3D = [0, 0, 1, -1, 0, 0, 1, 0, -1, 0, 0, -1, 1, 0, 0, 0, 1, -1, 0, 0, -1, 0, 1, 0, 0, -1, 1, 0, 2, 1, 1, 0, 1, 1, 1, -1, 0, 2, 1, 0, 1, 1, 1, -1, 1, 0, 2, 0, 1, 1, 1, -1, 1, 1, 1, 3, 2, 1, 0, 3, 1, 2, 0, 1, 3, 2, 0, 1, 3, 1, 0, 2, 1, 3, 0, 2, 1, 3, 0, 1, 2, 1, 1, 1, 0, 0, 2, 2, 0, 0, 1, 1, 0, 1, 0, 2, 0, 2, 0, 1, 1, 0, 0, 1, 2, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1, -1, 1, 2, 0, 0, 0, 0, 1, -1, 1, 1, 2, 0, 0, 0, 0, 1, 1, 1, -1, 2, 3, 1, 1, 1, 2, 0, 0, 2, 2, 3, 1, 1, 1, 2, 2, 0, 0, 2, 3, 1, 1, 1, 2, 0, 2, 0, 2, 1, 1, -1, 1, 2, 0, 0, 2, 2, 1, 1, -1, 1, 2, 2, 0, 0, 2, 1, -1, 1, 1, 2, 0, 0, 2, 2, 1, -1, 1, 1, 2, 0, 2, 0, 2, 1, 1, 1, -1, 2, 2, 0, 0, 2, 1, 1, 1, -1, 2, 0, 2, 0], S2.p4D = [0, 0, 1, -1, 0, 0, 0, 1, 0, -1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 0, 0, 1, -1, 0, 0, 0, 1, 0, -1, 0, 0, -1, 0, 1, 0, 0, 0, -1, 1, 0, 0, 0, 0, 1, -1, 0, 0, -1, 0, 0, 1, 0, 0, -1, 0, 1, 0, 0, 0, -1, 1, 0, 2, 1, 1, 0, 0, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 0, 2, 1, 0, 1, 0, 1, 1, -1, 1, 0, 1, 1, 0, 1, -1, 0, 2, 0, 1, 1, 0, 1, -1, 1, 1, 0, 1, 0, 1, 1, -1, 0, 2, 1, 0, 0, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 1, 0, 2, 0, 1, 0, 1, 1, -1, 1, 0, 1, 1, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 1, 1, 1, 4, 2, 1, 1, 0, 4, 1, 2, 1, 0, 4, 1, 1, 2, 0, 1, 4, 2, 1, 0, 1, 4, 1, 2, 0, 1, 4, 1, 1, 0, 2, 1, 4, 2, 0, 1, 1, 4, 1, 0, 2, 1, 4, 1, 0, 1, 2, 1, 4, 0, 2, 1, 1, 4, 0, 1, 2, 1, 4, 0, 1, 1, 2, 1, 2, 1, 1, 0, 0, 3, 2, 1, 0, 0, 3, 1, 2, 0, 0, 1, 2, 1, 0, 1, 0, 3, 2, 0, 1, 0, 3, 1, 0, 2, 0, 1, 2, 0, 1, 1, 0, 3, 0, 2, 1, 0, 3, 0, 1, 2, 0, 1, 2, 1, 0, 0, 1, 3, 2, 0, 0, 1, 3, 1, 0, 0, 2, 1, 2, 0, 1, 0, 1, 3, 0, 2, 0, 1, 3, 0, 1, 0, 2, 1, 2, 0, 0, 1, 1, 3, 0, 0, 2, 1, 3, 0, 0, 1, 2, 2, 3, 1, 1, 1, 0, 2, 1, 1, 1, -1, 2, 2, 0, 0, 0, 2, 3, 1, 1, 0, 1, 2, 1, 1, -1, 1, 2, 2, 0, 0, 0, 2, 3, 1, 0, 1, 1, 2, 1, -1, 1, 1, 2, 2, 0, 0, 0, 2, 3, 1, 1, 1, 0, 2, 1, 1, 1, -1, 2, 0, 2, 0, 0, 2, 3, 1, 1, 0, 1, 2, 1, 1, -1, 1, 2, 0, 2, 0, 0, 2, 3, 0, 1, 1, 1, 2, -1, 1, 1, 1, 2, 0, 2, 0, 0, 2, 3, 1, 1, 1, 0, 2, 1, 1, 1, -1, 2, 0, 0, 2, 0, 2, 3, 1, 0, 1, 1, 2, 1, -1, 1, 1, 2, 0, 0, 2, 0, 2, 3, 0, 1, 1, 1, 2, -1, 1, 1, 1, 2, 0, 0, 2, 0, 2, 3, 1, 1, 0, 1, 2, 1, 1, -1, 1, 2, 0, 0, 0, 2, 2, 3, 1, 0, 1, 1, 2, 1, -1, 1, 1, 2, 0, 0, 0, 2, 2, 3, 0, 1, 1, 1, 2, -1, 1, 1, 1, 2, 0, 0, 0, 2, 2, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 0, 0, 0, 0, 0, 2, 1, 1, -1, 1, 0, 1, 1, 0, 1, -1, 0, 0, 0, 0, 0, 2, 1, -1, 1, 1, 0, 1, 0, 1, 1, -1, 0, 0, 0, 0, 0, 2, 1, 1, -1, 0, 1, 1, 1, 0, -1, 1, 0, 0, 0, 0, 0, 2, 1, -1, 1, 0, 1, 1, 0, 1, -1, 1, 0, 0, 0, 0, 0, 2, 1, -1, 0, 1, 1, 1, 0, -1, 1, 1, 0, 0, 0, 0, 0, 2, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 2, 2, 0, 0, 0, 2, 1, 1, -1, 1, 0, 1, 1, 0, 1, -1, 2, 2, 0, 0, 0, 2, 1, 1, -1, 0, 1, 1, 1, 0, -1, 1, 2, 2, 0, 0, 0, 2, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 2, 0, 2, 0, 0, 2, 1, -1, 1, 1, 0, 1, 0, 1, 1, -1, 2, 0, 2, 0, 0, 2, 1, -1, 1, 0, 1, 1, 0, 1, -1, 1, 2, 0, 2, 0, 0, 2, 1, 1, -1, 1, 0, 1, 1, 0, 1, -1, 2, 0, 0, 2, 0, 2, 1, -1, 1, 1, 0, 1, 0, 1, 1, -1, 2, 0, 0, 2, 0, 2, 1, -1, 0, 1, 1, 1, 0, -1, 1, 1, 2, 0, 0, 2, 0, 2, 1, 1, -1, 0, 1, 1, 1, 0, -1, 1, 2, 0, 0, 0, 2, 2, 1, -1, 1, 0, 1, 1, 0, 1, -1, 1, 2, 0, 0, 0, 2, 2, 1, -1, 0, 1, 1, 1, 0, -1, 1, 1, 2, 0, 0, 0, 2, 3, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 2, 1, 1, 1, -1, 3, 1, 0, 1, 0, 0, 2, 0, 2, 0, 0, 2, 1, 1, 1, -1, 3, 1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 2, 1, 1, 1, -1, 3, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 2, 1, 1, -1, 1, 3, 1, 0, 1, 0, 0, 2, 0, 2, 0, 0, 2, 1, 1, -1, 1, 3, 1, 0, 0, 0, 1, 2, 0, 0, 0, 2, 2, 1, 1, -1, 1, 3, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 2, 1, -1, 1, 1, 3, 1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 2, 1, -1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 0, 0, 0, 2, 2, 1, -1, 1, 1, 3, 1, 0, 1, 0, 0, 2, 0, 2, 0, 0, 2, -1, 1, 1, 1, 3, 1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 2, -1, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 0, 0, 0, 2, 2, -1, 1, 1, 1, 3, 3, 2, 1, 0, 0, 3, 1, 2, 0, 0, 4, 1, 1, 1, 1, 3, 3, 2, 0, 1, 0, 3, 1, 0, 2, 0, 4, 1, 1, 1, 1, 3, 3, 0, 2, 1, 0, 3, 0, 1, 2, 0, 4, 1, 1, 1, 1, 3, 3, 2, 0, 0, 1, 3, 1, 0, 0, 2, 4, 1, 1, 1, 1, 3, 3, 0, 2, 0, 1, 3, 0, 1, 0, 2, 4, 1, 1, 1, 1, 3, 3, 0, 0, 2, 1, 3, 0, 0, 1, 2, 4, 1, 1, 1, 1, 3, 3, 2, 1, 0, 0, 3, 1, 2, 0, 0, 2, 1, 1, 1, -1, 3, 3, 2, 0, 1, 0, 3, 1, 0, 2, 0, 2, 1, 1, 1, -1, 3, 3, 0, 2, 1, 0, 3, 0, 1, 2, 0, 2, 1, 1, 1, -1, 3, 3, 2, 1, 0, 0, 3, 1, 2, 0, 0, 2, 1, 1, -1, 1, 3, 3, 2, 0, 0, 1, 3, 1, 0, 0, 2, 2, 1, 1, -1, 1, 3, 3, 0, 2, 0, 1, 3, 0, 1, 0, 2, 2, 1, 1, -1, 1, 3, 3, 2, 0, 1, 0, 3, 1, 0, 2, 0, 2, 1, -1, 1, 1, 3, 3, 2, 0, 0, 1, 3, 1, 0, 0, 2, 2, 1, -1, 1, 1, 3, 3, 0, 0, 2, 1, 3, 0, 0, 1, 2, 2, 1, -1, 1, 1, 3, 3, 0, 2, 1, 0, 3, 0, 1, 2, 0, 2, -1, 1, 1, 1, 3, 3, 0, 2, 0, 1, 3, 0, 1, 0, 2, 2, -1, 1, 1, 1, 3, 3, 0, 0, 2, 1, 3, 0, 0, 1, 2, 2, -1, 1, 1, 1];
          for (var a = [], l = 0; l < S2.p2D.length; l += 4) {
            for (var s5 = S2.base2D[S2.p2D[l]], c2 = null, u = null, d = 0; d < s5.length; d += 3)
              u = new n(s5[d], s5[d + 1], s5[d + 2]), c2 === null ? a[l / 4] = u : c2.next = u, c2 = u;
            u.next = new n(S2.p2D[l + 1], S2.p2D[l + 2], S2.p2D[l + 3]);
          }
          this.lookup2D = [];
          for (l = 0; l < S2.lookupPairs2D.length; l += 2)
            this.lookup2D[S2.lookupPairs2D[l]] = a[S2.lookupPairs2D[l + 1]];
          for (var h2 = [], l = 0; l < S2.p3D.length; l += 9) {
            for (s5 = S2.base3D[S2.p3D[l]], c2 = null, u = null, d = 0; d < s5.length; d += 4)
              u = new r2(s5[d], s5[d + 1], s5[d + 2], s5[d + 3]), c2 === null ? h2[l / 9] = u : c2.next = u, c2 = u;
            u.next = new r2(S2.p3D[l + 1], S2.p3D[l + 2], S2.p3D[l + 3], S2.p3D[l + 4]), u.next.next = new r2(S2.p3D[l + 5], S2.p3D[l + 6], S2.p3D[l + 7], S2.p3D[l + 8]);
          }
          this.lookup3D = [];
          for (l = 0; l < S2.lookupPairs3D.length; l += 2)
            this.lookup3D[S2.lookupPairs3D[l]] = h2[S2.lookupPairs3D[l + 1]];
          for (var g = [], l = 0; l < S2.p4D.length; l += 16) {
            for (s5 = S2.base4D[S2.p4D[l]], c2 = null, u = null, d = 0; d < s5.length; d += 5)
              u = new i2(s5[d], s5[d + 1], s5[d + 2], s5[d + 3], s5[d + 4]), c2 === null ? g[l / 16] = u : c2.next = u, c2 = u;
            u.next = new i2(S2.p4D[l + 1], S2.p4D[l + 2], S2.p4D[l + 3], S2.p4D[l + 4], S2.p4D[l + 5]), u.next.next = new i2(S2.p4D[l + 6], S2.p4D[l + 7], S2.p4D[l + 8], S2.p4D[l + 9], S2.p4D[l + 10]), u.next.next.next = new i2(S2.p4D[l + 11], S2.p4D[l + 12], S2.p4D[l + 13], S2.p4D[l + 14], S2.p4D[l + 15]);
          }
          this.lookup4D = [];
          for (l = 0; l < S2.lookupPairs4D.length; l += 2)
            this.lookup4D[S2.lookupPairs4D[l]] = g[S2.lookupPairs4D[l + 1]];
          this.perm = new Uint8Array(256), this.perm2D = new Uint8Array(256), this.perm3D = new Uint8Array(256), this.perm4D = new Uint8Array(256);
          for (var p = new Uint8Array(256), l = 0; l < 256; l++)
            p[l] = l;
          (e3 = new Uint32Array(1))[0] = t2, e3 = o2(o2(o2(e3)));
          for (l = 255; 0 <= l; l--) {
            e3 = o2(e3);
            var f3 = new Uint32Array(1);
            f3[0] = (e3[0] + 31) % (l + 1), f3[0] < 0 && (f3[0] += l + 1), this.perm[l] = p[f3[0]], this.perm2D[l] = 14 & this.perm[l], this.perm3D[l] = this.perm[l] % 24 * 3, this.perm4D[l] = 252 & this.perm[l], p[f3[0]] = p[l];
          }
          this.simplex1D = function(e4) {
            return B.simplex2D(e4, 1);
          }, this.simplex2D = function(e4, t3) {
            var o3 = (e4 + t3) * S2.STRETCH_2D, n2 = [e4 + o3, t3 + o3], r3 = n2[0], o3 = n2[1], n2 = [Math.floor(r3), Math.floor(o3)], i3 = n2[0], a2 = n2[1], n2 = (i3 + a2) * S2.SQUISH_2D, t3 = [e4 - (i3 + n2), t3 - (a2 + n2)], l2 = t3[0], s6 = t3[1], n2 = [r3 - i3, o3 - a2], t3 = n2[0], r3 = n2[1], o3 = t3 + r3, n2 = new Uint32Array(4);
            n2[0] = t3 - r3 + 1, n2[1] = o3, n2[2] = o3 + r3, n2[3] = o3 + t3;
            for (var n2 = n2[0] | n2[1] << 1 | n2[2] << 2 | n2[3] << 4, c3 = B.lookup2D[n2], u2 = 0; c3 !== void 0; ) {
              var d2, h3 = [l2 + c3.dx, s6 + c3.dy], g2 = h3[0], p2 = h3[1], f4 = 2 - g2 * g2 - p2 * p2;
              0 < f4 && (h3 = (d2 = [i3 + c3.xsb, a2 + c3.ysb])[0], d2 = d2[1], d2 = B.perm2D[B.perm[255 & h3] + d2 & 255], u2 += (f4 *= f4) * f4 * (S2.gradients2D[d2] * g2 + S2.gradients2D[d2 + 1] * p2)), c3 = c3.next;
            }
            return u2 * S2.NORM_2D;
          }, this.simplex3D = function(e4, t3, o3) {
            var n2 = (e4 + t3 + o3) * S2.STRETCH_3D, r3 = [e4 + n2, t3 + n2, o3 + n2], i3 = r3[0], a2 = r3[1], n2 = r3[2], r3 = [Math.floor(i3), Math.floor(a2), Math.floor(n2)], l2 = r3[0], s6 = r3[1], c3 = r3[2], r3 = (l2 + s6 + c3) * S2.SQUISH_3D, o3 = [e4 - (l2 + r3), t3 - (s6 + r3), o3 - (c3 + r3)], u2 = o3[0], d2 = o3[1], h3 = o3[2], r3 = [i3 - l2, a2 - s6, n2 - c3], o3 = r3[0], i3 = r3[1], a2 = r3[2], n2 = o3 + i3 + a2, r3 = new Uint32Array(7);
            r3[0] = i3 - a2 + 1, r3[1] = o3 - i3 + 1, r3[2] = o3 - a2 + 1, r3[3] = n2, r3[4] = n2 + a2, r3[5] = n2 + i3, r3[6] = n2 + o3;
            for (var r3 = r3[0] | r3[1] << 1 | r3[2] << 2 | r3[3] << 3 | r3[4] << 5 | r3[5] << 7 | r3[6] << 9, g2 = B.lookup3D[r3], p2 = 0; g2 !== void 0; ) {
              var f4, m2, z = [u2 + g2.dx, d2 + g2.dy, h3 + g2.dz], y = z[0], b = z[1], v = z[2], w = 2 - y * y - b * b - v * v;
              0 < w && (f4 = (m2 = [l2 + g2.xsb, s6 + g2.ysb, c3 + g2.zsb])[0], z = m2[1], m2 = m2[2], m2 = B.perm3D[B.perm[B.perm[255 & f4] + z & 255] + m2 & 255], p2 += (w *= w) * w * (S2.gradients3D[m2] * y + S2.gradients3D[m2 + 1] * b + S2.gradients3D[m2 + 2] * v)), g2 = g2.next;
            }
            return p2 * S2.NORM_3D;
          }, this.simplex4D = function(e4, t3, o3, n2) {
            var r3 = (e4 + t3 + o3 + n2) * S2.STRETCH_4D, i3 = [e4 + r3, t3 + r3, o3 + r3, n2 + r3], a2 = i3[0], l2 = i3[1], s6 = i3[2], r3 = i3[3], i3 = [Math.floor(a2), Math.floor(l2), Math.floor(s6), Math.floor(r3)], c3 = i3[0], u2 = i3[1], d2 = i3[2], h3 = i3[3], i3 = (c3 + u2 + d2 + h3) * S2.SQUISH_4D, g2 = e4 - (c3 + i3), p2 = t3 - (u2 + i3), f4 = o3 - (d2 + i3), m2 = n2 - (h3 + i3), n2 = [a2 - c3, l2 - u2, s6 - d2, r3 - h3], i3 = n2[0], a2 = n2[1], l2 = n2[2], s6 = n2[3], r3 = i3 + a2 + l2 + s6, n2 = new Uint32Array(11);
            n2[0] = l2 - s6 + 1, n2[1] = a2 - l2 + 1, n2[2] = a2 - s6 + 1, n2[3] = i3 - a2 + 1, n2[4] = i3 - l2 + 1, n2[5] = i3 - s6 + 1, n2[6] = r3 << 6, n2[7] = r3 + s6, n2[8] = r3 + l2, n2[9] = r3 + a2, n2[10] = r3 + i3;
            for (var n2 = n2[0] | n2[1] << 1 | n2[2] << 2 | n2[3] << 3 | n2[4] << 4 | n2[5] << 5 | n2[6] << 6 | n2[7] << 8 | n2[8] << 11 | n2[9] << 14 | n2[10] << 17, z = B.lookup4D[n2], y = 0; z !== void 0; ) {
              var b, v, w, C = [g2 + z.dx, p2 + z.dy, f4 + z.dz, m2 + z.dw], x2 = C[0], k = C[1], T2 = C[2], A3 = C[3], P = 2 - x2 * x2 - k * k - T2 * T2 - A3 * A3;
              0 < P && (b = (w = [c3 + z.xsb, u2 + z.ysb, d2 + z.zsb, h3 + z.wsb])[0], v = w[1], C = w[2], w = w[3], w = B.perm4D[B.perm[B.perm[B.perm[255 & b] + v & 255] + C & 255] + w & 255], y += (P *= P) * P * (S2.gradients4D[w] * x2 + S2.gradients4D[w + 1] * k + S2.gradients4D[w + 2] * T2 + S2.gradients4D[w + 3] * A3)), z = z.next;
            }
            return y * S2.NORM_4D;
          };
        }, To.Point = function(e3, t2, o2, n, r2, i2, a, l, s5, c2) {
          z_d("13.45"), zot(e3) && (e3 = 0), zot(t2) && (t2 = 0), zot(o2) && (o2 = 0), zot(n) && (n = 0), zot(r2) && (r2 = 0), zot(i2) && (i2 = 0), zot(a) && (a = 0), zot(l) && (l = 0), zot(s5) && (s5 = 0), zot(c2) && (c2 = 0), this.x = e3, this.y = t2, this.z = o2, this.q = n, this.r = r2, this.s = i2, this.t = a, this.u = l, this.v = s5, this.w = c2;
        }, To.Bezier = function(e3, t2, o2, n) {
          z_d("13.47"), this.a = e3, this.b = t2, this.c = o2, this.d = n, this.len = 100, this.arcLengths = new Array(this.len + 1), this.arcLengths[0] = 0;
          for (var r2 = this.x(0), i2 = this.y(0), a = 0, l = 1; l <= this.len; l += 1) {
            var s5 = this.x(0.01 * l), c2 = this.y(0.01 * l), u = r2 - s5, d = i2 - c2;
            a += Math.sqrt(u * u + d * d), this.arcLengths[l] = a, r2 = s5, i2 = c2;
          }
          this.length = a;
        }, To.Bezier.prototype = { map: function(e3) {
          for (var t2 = e3 * this.arcLengths[this.len], o2 = 0, n = this.len, r2 = 0; o2 < n; )
            r2 = o2 + ((n - o2) / 2 | 0), this.arcLengths[r2] < t2 ? o2 = r2 + 1 : n = r2;
          this.arcLengths[r2] > t2 && r2--;
          e3 = this.arcLengths[r2];
          return e3 === t2 ? r2 / this.len : (r2 + (t2 - e3) / (this.arcLengths[r2 + 1] - e3)) / this.len;
        }, mx: function(e3) {
          return this.x(this.map(e3));
        }, my: function(e3) {
          return this.y(this.map(e3));
        }, x: function(e3) {
          return (1 - e3) * (1 - e3) * (1 - e3) * this.a.x + (1 - e3) * (1 - e3) * 3 * e3 * this.b.x + 3 * (1 - e3) * (e3 * e3) * this.c.x + e3 * e3 * e3 * this.d.x;
        }, y: function(e3) {
          return (1 - e3) * (1 - e3) * (1 - e3) * this.a.y + (1 - e3) * (1 - e3) * 3 * e3 * this.b.y + 3 * (1 - e3) * (e3 * e3) * this.c.y + e3 * e3 * e3 * this.d.y;
        } }, To.Boundary = function(e3, t2, o2, n) {
          z_d("13.46"), zot(e3) || zot(t2) || zot(o2) || zot(n) || (this.x = e3, this.y = t2, this.width = o2, this.height = n, this.contract = function(e4, t3, o3, n2) {
            return zot(e4) || (zot(t3) && (t3 = e4), zot(o3) ? o3 = 2 * e4 : o3 += e4, zot(n2) ? n2 = 2 * t3 : n2 += t3, this.x += e4, this.y += t3, this.width -= o3, this.height -= n2), this;
          });
        }, To.GradientColor = function(e3, t2, o2, n, r2, i2) {
          z_d("13.465"), this.type = "GradientColor", this.colors = zot(e3) ? ["black", "white"] : e3, this.ratios = zot(t2) ? [0, 1] : t2, this.x0 = zot(o2) ? 0 : o2, this.y0 = zot(n) ? 0 : n, this.x1 = zot(r2) ? 0 : r2, this.y1 = zot(i2) ? 100 : i2;
        }, To.RadialColor = function(e3, t2, o2, n, r2, i2, a, l) {
          z_d("13.466"), this.type = "RadialColor", this.colors = zot(e3) ? ["black", "white"] : e3, this.ratios = zot(t2) ? [0, 1] : t2, this.x0 = zot(o2) ? 0 : o2, this.y0 = zot(n) ? 0 : n, this.r0 = zot(r2) ? 0 : r2, this.x1 = zot(i2) ? 0 : i2, this.y1 = zot(a) ? 100 : a, this.r1 = zot(l) ? 100 : l;
        }, To.BitmapColor = function(e3, t2, o2) {
          z_d("13.467"), this.type = "BitmapColor", typeof e3 == "string" && window.asset && (e3 = window.asset(e3)), e3.type == "Image" && (e3 = e3.bitmap), this.image = e3.type == "Bitmap" ? e3.image : e3, this.repetition = t2, this.matrix = o2;
        }, To.Damp = function(e3, t2) {
          z_d("14");
          var o2;
          if (o2 = zob(To.Damp, arguments, "startValue, damp", this))
            return o2;
          this.lastValue = zot(e3) ? 0 : e3, this.damp = zot(t2) ? 0.1 : t2;
        }, To.Damp.prototype.convert = function(e3) {
          return this.lastValue = this.lastValue + (e3 - this.lastValue) * this.damp;
        }, To.Damp.prototype.immediate = function(e3) {
          return this.lastValue = e3, this;
        }, To.Proportion = function(t2, o2, n, r2, i2, a, l) {
          var e3, s5;
          if (e3 = zob(To.Proportion, arguments, "baseMin, baseMax, targetMin, targetMax, factor, targetRound, clamp", this))
            return e3;
          z_d("15"), zot(n) && (n = 0), zot(r2) && (r2 = 1), zot(i2) && (i2 = 1), zot(a) && (a = false), zot(l) && (l = true), this.convert = function(e4) {
            if (!isNaN(e4) && o2 - t2 != 0)
              return l && (e4 = Math.max(e4, t2), e4 = Math.min(e4, o2)), s5 = (e4 - t2) / (o2 - t2), s5 = 0 < i2 ? n + (r2 - n) * s5 : r2 - (r2 - n) * s5, a && (s5 = Math.round(s5)), s5;
          };
        }, To.ProportionDamp = function(e3, t2, o2, n, r2, i2, a, l) {
          var s5;
          if (s5 = zob(To.ProportionDamp, arguments, "baseMin, baseMax, targetMin, targetMax, damp, factor, targetRound, clamp", this))
            return s5;
          z_d("16"), zot(o2) && (o2 = 0), zot(n) && (n = 1), zot(r2) && (r2 = 0.1), zot(i2) && (i2 = 1), zot(a) && (a = false), zot(l) && (l = true), this.damp = r2;
          var c2, u, d, h2 = this, g = 0, p = e3, g = o2, f3 = setInterval(m2, 20);
          function m2() {
            isNaN(p) || t2 - e3 == 0 || (l && (p = Math.max(p, e3), p = Math.min(p, t2)), c2 = (p - e3) / (t2 - e3), u = n - o2, g += ((d = 0 < i2 ? o2 + u * c2 : n - u * c2) - g) * h2.damp);
          }
          this.immediate = function(e4) {
            return h2.convert(e4), m2(), g = d, a && (g = Math.round(g)), h2;
          }, this.convert = function(e4) {
            return p = e4, a ? Math.round(g) : g;
          }, this.dispose = function(e4, t3, o3) {
            return clearInterval(f3), true;
          };
        }, To.Dictionary = function(e3) {
          z_d("17"), this.length = 0, this.unique = e3;
          var n = this.objects = [], r2 = this.values = [];
          this.add = function(e4, t2) {
            zot(e4) || (zot(t2) && (t2 = true), this.unique && this.remove(e4), n.push(e4), r2.push(t2), this.length++);
          }, this.at = function(e4) {
            if (!zot(e4)) {
              e4 = n.indexOf(e4);
              return -1 < e4 ? r2[e4] : null;
            }
          }, this.remove = function(e4) {
            if (zot(e4))
              return false;
            e4 = n.indexOf(e4);
            return -1 < e4 && (n.splice(e4, 1), r2.splice(e4, 1), this.length--, true);
          }, this.clear = function() {
            return n = this.objects = [], r2 = this.values = [], this.length = null, this;
          }, this.dispose = function(e4, t2, o2) {
            return r2 = n = null, !(this.length = null);
          };
        }, To.Hierarchy = function(o2, l) {
          z_d("17.5");
          var n, t2 = this;
          function r2(e3) {
            var r3 = [], i2 = [];
            return function o3(e4, n2) {
              To.loop(e4, function(e5, t3) {
                r3.push(t3.obj), i2.push(e5), t3.open && o3(t3.list, n2 + 1);
              });
            }(e3, 0), [r3, i2];
          }
          zot(o2) || (zot(l) && (l = false), t2.processSimple = function(e3) {
            var a = 0, t3 = {};
            return function n2(e4, r3, i2, o3) {
              var t4;
              e4.constructor == {}.constructor ? (e4.list && (e4 = (t4 = e4).list), o3 && t4 && To.loop(t4, function(e5, t5) {
                e5 != "list" && (o3[e5] = t5);
              }), To.loop(e4, function(e5, t5) {
                var o4 = {}, e5 = r3["id" + a] = { obj: e5, level: i2, open: l, opened: false, list: o4 };
                a++, n2(t5, o4, i2 + 1, e5);
              })) : Array.isArray(e4) && To.loop(e4, function(e5) {
                r3["id" + a] = { obj: e5 }, a++;
              });
            }(o2, t3, 0), n = a, t3;
          }, t2.processComplex = function(e3) {
            var r3 = 0;
            return function o3(e4, n2) {
              To.loop(e4, function(e5, t3) {
                t3.level = n2, zot(t3.open) && (t3.open = l), zot(t3.opened) && (t3.opened = false), t3.list && o3(t3.list, n2 + 1), r3++;
              });
            }(e3, 0), n = r3, e3;
          }, zot(o2.id0) ? t2.data = t2.processSimple(o2) : t2.data = t2.processComplex(o2), t2.getLinearList = function(e3) {
            return zot(e3) && (e3 = t2.data), r2(e3)[0];
          }, t2.getLinearIDs = function(e3) {
            return zot(e3) && (e3 = t2.data), r2(e3)[1];
          }, t2.getData = function(n2) {
            var r3;
            return function o3(e3) {
              To.loop(e3, function(e4, t3) {
                return e4 == n2 ? r3 = t3 : void o3(t3.list);
              });
            }(t2.data), r3;
          }, t2.getNextSibling = function(n2) {
            var r3, i2;
            return function o3(e3) {
              To.loop(e3, function(e4, t3) {
                return !i2 && r3 ? i2 = e4 : void (e4 == n2 ? r3 = t3 : o3(t3.list));
              });
            }(t2.data), i2;
          }, t2.getPrevSibling = function(r3) {
            var i2, a = [];
            return function o3(e3, n2) {
              To.loop(e3, function(e4, t3) {
                return e4 == r3 ? i2 = a[n2] || a[n2 - 1] : (a[n2] = e4, void o3(t3.list, n2 + 1));
              });
            }(t2.data, 0), i2;
          }, Object.defineProperty(t2, "length", { get: function() {
            return n;
          }, set: function(e3) {
            zon && zogy("Hierarchy() - length is read only");
          } }));
        }, To.Pick = function(e3) {
          To.pickCheck || (z_d("17.6"), To.pickCheck = true), this.choices = e3, this.num = function(e4) {
            for (var t2 = [], o2 = 0; o2 < e4; o2++)
              t2.push(To.Pick.choose(this));
            return this.choices = To.Pick.series(t2), this;
          };
          var r2 = this;
          this.loop = function(e4, t2) {
            for (var o2, n = 0; n < e4; n++)
              if ((o2 = t2(To.Pick.choose(r2), n, e4)) !== void 0)
                return o2;
          };
        }, To.Pick.prototype.type = "Pick", To.Pick.series = function() {
          return To.pickCheck || (z_d("17.6"), To.pickCheck = true), To.series.apply(null, arguments);
        }, To.Pick.rand = function(e3, t2, o2, n) {
          return To.pickCheck || (z_d("17.6"), To.pickCheck = true), To.rand(e3, t2, o2, n);
        }, To.Pick.choose = function(e3, t2, o2) {
          if (To.pickCheck || (z_d("17.6"), To.pickCheck = true), t2 == null && (t2 = true), e3 == null)
            return e3;
          if (e3.type == "Pick" || t2) {
            t2 = e3.choices || e3;
            if (Array.isArray(t2)) {
              var n = t2[Math.floor(Math.random() * t2.length)];
              return To.Pick.choose(n);
            }
            return t2.constructor === {}.constructor ? zot(t2.noPick) ? zot(t2.max) ? t2 : (zot(t2.integer) && (t2.integer = false), n = To.Pick.rand(t2.min, t2.max, t2.integer, t2.negative)) : t2.noPick : t2 instanceof Function ? (t2.count == null ? t2.count = 0 : t2.count++, To.Pick.choose(t2(o2, true))) : e3;
          }
          return e3;
        }, To.Pick.getMinMax = function(e3) {
          return zot(e3.min) || zot(e3.max) ? Array.isArray(e3) ? To.arrayMinMax(e3) : e3.type == "series" ? To.arrayMinMax(e3.array) : { min: null, max: null } : e3;
        }, To.scrollX = function(e3, t2) {
          return z_d("18"), To.abstractScroll("X", "Left", e3, t2);
        }, To.scrollY = function(e3, t2) {
          return z_d("19"), To.abstractScroll("Y", "Top", e3, t2);
        }, To.abstractScroll = function(e3, t2, o2, n) {
          z_d("20");
          var r2, i2, a, l, s5, c2 = Ao(n), u = e3 == "X" ? "Y" : "X";
          if (zot(o2)) {
            var d = navigator.applicationName;
            return navigator.userAgent.indexOf("Safari") == -1 && d != "Safari" || 0, document.documentElement && document.documentElement["scroll" + t2] || document.body["scroll" + t2];
          }
          return zot(n) ? window.scrollTo(To["scroll" + u](), o2) : ((c2 = n * (c2 == "s" ? 1e3 : 1)) < 50 && (c2 = 50), r2 = c2 / 50, i2 = To["scroll" + e3](), a = (o2 - i2) / r2, l = 0, s5 = setInterval(function() {
            l++, i2 += a, window.scrollTo(To["scroll" + u](), i2), r2 <= l && (window.scrollTo(To["scroll" + u](), o2), clearInterval(s5));
          }, 50)), o2;
        }, To.windowWidth = function() {
          z_d("21");
          var e3, t2 = isNaN(window.innerWidth) ? window.clientWidth : window.innerWidth, o2 = isNaN(window.innerHeight) ? window.clientHeight : window.innerHeight;
          return !To.mobile() || zot(window.orientation) || window.parent || (o2 < t2 && Math.abs(window.orientation) != 90 || t2 < o2 && Math.abs(window.orientation) == 90) && (e3 = t2, t2 = o2, o2 = e3), zdf !== void 0 && zdf.swapRotation ? o2 : t2;
        }, To.windowHeight = function() {
          z_d("22");
          var e3, t2 = isNaN(window.innerWidth) ? window.clientWidth : window.innerWidth, o2 = isNaN(window.innerHeight) ? window.clientHeight : window.innerHeight;
          return !To.mobile() || zot(window.orientation) || window.parent || (o2 < t2 && Math.abs(window.orientation) != 90 || t2 < o2 && Math.abs(window.orientation) == 90) && (e3 = t2, t2 = o2, o2 = e3), zdf !== void 0 && zdf.swapRotation ? t2 : o2;
        }, To.getQueryString = function(e3) {
          if (z_d("22.5"), zot(e3) && (e3 = location.search.replace("?", "")), e3 == "")
            return {};
          for (var t2 = e3.split("&"), o2 = {}, n = 0; n < t2.length; n++) {
            var r2 = t2[n].split("=");
            o2[r2[0]] === void 0 ? o2[r2[0]] = decodeURIComponent((r2[1] + "").replace(/\+/g, "%20")) : typeof o2[r2[0]] == "string" ? o2[r2[0]] = [o2[r2[0]], decodeURIComponent((r2[1] + "").replace(/\+/g, "%20"))] : o2[r2[0]].push(decodeURIComponent((r2[1] + "").replace(/\+/g, "%20")));
          }
          return o2;
        }, To.swapHTML = function(e3, t2) {
          return z_d("17.2"), To.swapProperties("innerHTML", zid(e3), zid(t2));
        }, To.urlEncode = function(e3) {
          z_d("23");
          e3 = (e3 + "").toString();
          return encodeURIComponent(e3).replace(/!/g, "%21").replace(/'/g, "%27").replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/\*/g, "%2A").replace(/%20/g, "+");
        }, To.urlDecode = function(e3) {
          return z_d("24"), decodeURIComponent((e3 + "").replace(/\+/g, "%20"));
        }, To.setCookie = function(e3, t2, o2) {
          var n;
          if (z_d("25"), !zot(e3) && !zot(t2))
            return n = o2 ? ((n = new Date()).setTime(n.getTime() + 24 * o2 * 60 * 60 * 1e3), "; expires=" + n.toGMTString()) : "", document.cookie = e3 + "=" + escape(t2) + n + "; path=/", true;
        }, To.getCookie = function(e3) {
          z_d("26");
          var t2, o2 = document.cookie.split(/;\s*/), n = new Array();
          for (I = 0; I < o2.length; I++)
            n[(t2 = o2[I].split("="))[0]] = t2[1];
          if (n[e3] !== void 0)
            return unescape(n[e3]);
        }, To.deleteCookie = function(e3) {
          return z_d("27"), !zot(To.getCookie(e3)) && (To.setCookie(e3, "", -1), true);
        }, createjs == null)
          return zon && zogr("ZIM >= 4.3.0 requires createjs namespace to be loaded (import createjs before zim)"), To;
        function Ge(e3, t2) {
          t2 ? (e3.mouseChildren = true, e3.mouseEnabled = true, e3._enabled = true) : (e3.mouseChildren = false, e3.mouseEnabled = false, e3._enabled = false);
        }
        var c;
        To.localToGlobal = function(e3, t2, o2, n) {
          if (To.coordinatesCheck || (z_d("50.43"), To.coordinatesCheck = true), e3 != null && t2 != null) {
            t2 = n.call(o2, e3, t2), o2 = o2.stage;
            if (zdf === void 0) {
              if (!o2)
                return t2;
              zdf = { stage: o2, canvas: o2.canvas };
            }
            return t2.x /= To.scaX, t2.y /= To.scaY, t2;
          }
        }, To.globalToLocal = function(e3, t2, o2, n) {
          if (To.coordinatesCheck || (z_d("50.43"), To.coordinatesCheck = true), e3 != null && t2 != null) {
            var r2 = o2.stage;
            if (zdf === void 0) {
              if (!r2)
                return n.call(o2, e3, t2);
              zdf = { stage: r2, canvas: r2.canvas };
            }
            return e3 *= To.scaX, t2 *= To.scaY, n.call(o2, e3, t2);
          }
        }, To.localToLocal = function(e3, t2, o2, n) {
          if (To.coordinatesCheck || (z_d("50.43"), To.coordinatesCheck = true), e3 != null && t2 != null && o2 != null) {
            t2 = n.localToGlobal(e3, t2), n = n.stage;
            if (zdf === void 0) {
              if (!n)
                return o2.globalToLocal(t2.x, t2.y);
              zdf = { stage: n, canvas: n.canvas };
            }
            return o2 == (n = n || zdf.stage) ? t2 : t2 ? o2.globalToLocal(t2.x, t2.y) : void 0;
          }
        }, To.displayBase = function(e3) {
          To.zimDBCheck || (z_d("50.432"), To.zimDBCheck = true);
          var t2, o2, n, r2 = e3;
          Object.defineProperty(e3, "width", { enumerable: true, get: function() {
            var e4 = this.getBounds();
            return zot(e4) ? null : Math.abs(e4.width * this.scaleX);
          }, set: function(e4) {
            var t3 = this.getBounds();
            zot(t3) || t3.width == 0 ? zon && zogy("DisplayObject() - width needs bounds set with setBounds()") : (t3 = e4 / t3.width, this.scaleX = this.scaleY = t3);
          } }), Object.defineProperty(e3, "height", { enumerable: true, get: function() {
            var e4 = this.getBounds();
            return zot(e4) ? null : Math.abs(e4.height * this.scaleY);
          }, set: function(e4) {
            var t3 = this.getBounds();
            zot(t3) || t3.height == 0 ? zon && zogy("DisplayObject() - height needs bounds set with setBounds()") : (t3 = e4 / t3.height, this.scaleX = this.scaleY = t3);
          } }), Object.defineProperty(e3, "widthOnly", { enumerable: true, get: function() {
            var e4 = this.getBounds();
            return zot(e4) ? null : Math.abs(e4.width * this.scaleX);
          }, set: function(e4) {
            var t3 = this.getBounds();
            !zot(t3) && t3.width != 0 || !zon ? (t3 = e4 / t3.width, this.scaleX = t3) : zogy("DisplayObject() - widthOnly needs bounds set with setBounds()");
          } }), Object.defineProperty(e3, "heightOnly", { enumerable: true, get: function() {
            var e4 = this.getBounds();
            return zot(e4) ? null : Math.abs(e4.height * this.scaleY);
          }, set: function(e4) {
            var t3 = this.getBounds();
            !zot(t3) && t3.height != 0 || !zon ? (t3 = e4 / t3.height, this.scaleY = t3) : zogy("DisplayObject() - heightOnly needs bounds set with setBounds()");
          } }), Object.defineProperty(e3, "level", { enumerable: true, get: function() {
            return this.parent ? this.parent.getChildIndex(this) : null;
          }, set: function(e4) {
            this.parent && this.parent.setChildIndex(this, Math.max(0, Math.min(e4, this.parent.numChildren - 1)));
          } }), Object.defineProperty(e3, "depth", { enumerable: true, get: function() {
            return this._depth;
          }, set: function(e4) {
            var t3;
            this._depth = e4, zot(this.vrChannel) || (t3 = this.vrParallaxDistance ? e4 * this.vrParallax * this.vrParallaxDistance : 0, this.vrChannel == "left" ? this.x = this.vrStartX + e4 + t3 : this.vrChannel == "right" && (this.x = this.vrStartX - e4 + t3));
          } }), Object.defineProperty(e3, "blendMode", { enumerable: true, get: function() {
            return this.compositeOperation;
          }, set: function(e4) {
            this.compositeOperation = e4;
          } }), r2.name || Object.defineProperty(r2, "name", { get: function() {
            return t2;
          }, set: function(e4) {
            t2 = e4, To.zimObjectIDs[e4] = r2;
          } }), r2._draggable, Object.defineProperty(r2, "draggable", { get: function() {
            return this._draggable;
          }, set: function(e4) {
            e4 != this._draggable && (this._draggable = e4, this._draggable ? this.drag() : this.noDrag());
          } }), r2.on("mousedown", function(e4) {
            e4.target.stage && (o2 = e4.target.stage.frame).allowDefault && (n = true, o2.allowDefault = false);
          }), r2.on("pressup", function(e4) {
            o2 && n && (o2.allowDefault = true);
          });
          for (var i2 = ["hue", "saturation", "brightness", "contrast"], a = 0; a < i2.length; a++)
            !function() {
              for (var o3 = i2[a], e4 = 0; e4 < 2; e4++)
                !function() {
                  var t3 = e4 == 0 ? "" : "Batch";
                  Object.defineProperty(r2, o3 + t3, { get: function() {
                    return r2.effects && r2.effects.multi ? r2.effects.multi[o3] : 0;
                  }, set: function(e5) {
                    r2.effects && r2.effects.multi ? r2.effects.multi[o3] = e5 : r2.effect(new MultiEffect(o3 == "hue" ? e5 : 0, o3 == "saturation" ? e5 : 0, o3 == "brightness" ? e5 : 0, o3 == "contrast" ? e5 : 0)), t3 || r2.updateEffects();
                  } });
                }();
            }();
        }, To.gD = function(e3) {
          To.zimGDCheck || (z_d("50.435"), To.zimGDCheck = true), e3 && (To.KEYFOCUS == e3 && (To.KEYFOCUS = null), e3.draggable && e3.noDrag(), e3.zimTweens && e3.stopAnimate(), e3.zimWire && e3.noWire(), e3.zimWired && e3.noWired(), e3.zimClickHoldDownEvent && e3.noHold(), e3.transformControls && e3.transformControls.dispose(), e3.zimClickDownEvent && (e3.zimClickDownEvent = null), e3.zimClickUpEvent && (e3.zimClickUpEvent = null), e3.physics && e3.removePhysics(), e3.name && To.zimObjectIDs[e3.name] == e3 && delete To.zimObjectIDs[e3.name]);
        }, To.Stage = function(e3) {
          var t2;
          z_d("50.44"), zot(e3) || (zot(t2 = e3.tagName == "CANVAS" ? e3 : zid(e3)) || (this.cjsStage_constructor(e3), this.setBounds(0, 0, t2.width, t2.height), this.type = "Stage", zdf === void 0 && (zimDefaultFrame = zdf = { stage: this }), this.cache = function(e4, t3, o2, n, r2, i2) {
            var a, l;
            return zot(o2) && (zot(e4) ? zot(a = this.getBounds()) || (l = 0 < this.borderWidth ? this.borderWidth / 2 : 0, e4 = a.x - l, t3 = a.y - l, o2 = a.width + 2 * l, n = a.height + 2 * l) : (o2 = e4, n = t3, t3 = e4 = 0)), this.cjsStage_cache(e4, t3, o2, n, r2, i2), this;
          }, this.on("mousedown", function(e4) {
            var t3 = e4.clone();
            t3.type = "pressdown", e4.target.dispatchEvent(t3);
          }, void 0, false, void 0, true), this.loop = function(e4, t3, o2, n, r2) {
            return To.loop(this, e4, t3, o2, n, r2);
          }, this.hitTestGrid = function(e4, t3, o2, n, r2, i2, a, l, s5, c2, u, d) {
            return To.hitTestGrid(this, e4, t3, o2, n, r2, i2, a, l, s5, c2, u, d);
          }, this.disposeAllChildren = function() {
            for (var e4 = this.numChildren - 1; 0 <= e4; e4--) {
              var t3 = this.getChildAt(e4);
              t3.dispose && t3.dispose();
            }
            return this;
          }, !createjs || createjs.stageTransformable || !zdf.retina && typeof exportRoot == "undefined" || (Object.defineProperty(this, "scale", { get: function() {
            return this.cjsStage_scale;
          }, set: function(e4) {
            this.cjsStage_scaleX = e4, this.cjsStage_scaleY = e4, To.scaX = createjs.stageTransformable ? 1 : e4, To.scaY = createjs.stageTransformable ? 1 : e4;
          } }), Object.defineProperty(this, "scaleX", { get: function() {
            return this.cjsStage_scaleX;
          }, set: function(e4) {
            this.cjsStage_scaleX = e4, To.scaX = createjs.stageTransformable ? 1 : e4;
          } }), Object.defineProperty(this, "scaleY", { get: function() {
            return this.cjsStage_scaleY;
          }, set: function(e4) {
            this.cjsStage_scaleY = e4, To.scaY = createjs.stageTransformable ? 1 : e4;
          } }), this.localToGlobal = function(e4, t3) {
            return To.localToGlobal(e4, t3, this, this.cjsStage_localToGlobal);
          }, this.globalToLocal = function(e4, t3) {
            return To.globalToLocal(e4, t3, this, this.cjsStage_globalToLocal);
          }, this.localToLocal = function(e4, t3, o2) {
            return To.localToLocal(e4, t3, o2, this);
          })));
        }, To.extend(To.Stage, createjs.Stage, ["cache", "localToLocal", "localToGlobal", "globalToLocal"], "cjsStage", false), To.StageGL = function(e3, t2) {
          var o2;
          z_d("50.45"), zot(e3) || (zot(o2 = e3.tagName == "CANVAS" ? e3 : zid(e3)) || (this.cjsStageGL_constructor(e3, t2), this.setBounds(0, 0, o2.width, o2.height), this.type = "StageGL", zdf === void 0 && (zdf = { stage: this }), this.cache = function(e4, t3, o3, n, r2, i2) {
            var a, l;
            return zot(o3) && (zot(e4) ? zot(a = this.getBounds()) || (l = 0 < this.borderWidth ? this.borderWidth / 2 : 0, e4 = a.x - l, t3 = a.y - l, o3 = a.width + 2 * l, n = a.height + 2 * l) : (o3 = e4, n = t3, t3 = e4 = 0)), this.cjsStageGL_cache(e4, t3, o3, n, r2, i2), this;
          }, this.on("mousedown", function(e4) {
            var t3 = e4.clone();
            t3.type = "pressdown", e4.target.dispatchEvent(t3);
          }, void 0, false, void 0, true), this.loop = function(e4, t3, o3, n, r2) {
            return To.loop(this, e4, t3, o3, n, r2);
          }, this.hitTestGrid = function(e4, t3, o3, n, r2, i2, a, l, s5, c2, u, d) {
            return To.hitTestGrid(this, e4, t3, o3, n, r2, i2, a, l, s5, c2, u, d);
          }, this.disposeAllChildren = function() {
            for (var e4 = this.numChildren - 1; 0 <= e4; e4--) {
              var t3 = this.getChildAt(e4);
              t3.dispose && t3.dispose();
            }
            return this;
          }, !createjs || createjs.stageTransformable || !zdf.retina && typeof exportRoot == "undefined" || (Object.defineProperty(this, "scale", { get: function() {
            return this.cjsStage_scale;
          }, set: function(e4) {
            this.cjsStage_scaleX = e4, this.cjsStage_scaleY = e4, To.scaX = createjs.stageTransformable ? 1 : e4, To.scaY = createjs.stageTransformable ? 1 : e4;
          } }), Object.defineProperty(this, "scaleX", { get: function() {
            return this.cjsStage_scaleX;
          }, set: function(e4) {
            this.cjsStage_scaleX = e4, To.scaX = createjs.stageTransformable ? 1 : e4;
          } }), Object.defineProperty(this, "scaleY", { get: function() {
            return this.cjsStage_scaleY;
          }, set: function(e4) {
            this.cjsStage_scaleY = e4, To.scaY = createjs.stageTransformable ? 1 : e4;
          } }), this.localToGlobal = function(e4, t3) {
            return To.localToGlobal(e4, t3, this, this.cjsStageGL_localToGlobal);
          }, this.globalToLocal = function(e4, t3) {
            return To.globalToLocal(e4, t3, this, this.cjsStageGL_globalToLocal);
          }, this.localToLocal = function(e4, t3, o3) {
            return To.localToLocal(e4, t3, o3, this);
          })));
        }, To.extend(To.StageGL, createjs.StageGL, ["cache", "localToLocal", "localToGlobal", "globalToLocal"], "cjsStageGL", false), To.Container = function(e3, t2, o2, n, r2, i2, a) {
          if (s5 = zob(To.Container, arguments, "a, b, c, d, style, group, inherit", this))
            return s5;
          To.containerCheck || (z_d("50.5"), z_d("50.435"), To.containerCheck = true), this.cjsContainer_constructor(), this.type = "Container", this.group = i2;
          var c2 = this, l = r2 === false ? {} : To.getStyle(this.type, this.group, a);
          zot(e3) && (e3 = l.a != null ? l.a : null), zot(t2) && (t2 = l.b != null ? l.b : null), zot(o2) && (o2 = l.c != null ? l.c : null), zot(n) && (n = l.d != null ? l.d : null);
          var s5 = u(e3, t2, o2, n);
          function u(e4, t3, o3, n2) {
            var r3 = [];
            return zot(e4) ? r3 = [e4, t3, o3, n2] : zot(t3) ? r3 = [e4.x, e4.y, e4.width, e4.height] : zot(o3) ? (r3[0] = 0, r3[1] = 0, r3[2] = e4, r3[3] = t3) : (r3[0] = e4, r3[1] = t3, r3[2] = o3, r3[3] = n2), zot(r3[3]) && (r3[3] = r3[2]), r3;
          }
          zot(e3) || this.setBounds(s5[0], s5[1], s5[2], s5[3]), this.cache = function(e4, t3, o3, n2, r3, i3, a2) {
            if (this.type == "AC" && zdf)
              return zdf.ac("cache", arguments, this), this;
            if (l2 = zob(c2.cache, arguments, "a,b,c,d,scale,options,margin"))
              return l2;
            var l2, s6 = c2.getBounds();
            return zot(o3) && (zot(e4) ? zot(s6) || (l2 = 0 < c2.borderWidth ? c2.borderWidth / 2 : 0, e4 = s6.x - l2, t3 = s6.y - l2, o3 = s6.width + 2 * l2, n2 = s6.height + 2 * l2) : (o3 = e4, n2 = t3, t3 = e4 = 0)), c2.type == "Triangle" && (e4 -= c2.borderWidth || 0, o3 += c2.borderWidth ? 2 * c2.borderWidth : 0, t3 -= c2.borderWidth || 0, n2 += c2.borderWidth ? 2 * c2.borderWidth : 0), zot(a2) && (a2 = 0), c2.cjsContainer_cache(e4 - a2, t3 - a2, o3 + 2 * a2, n2 + 2 * a2, r3, i3), s6 && c2.setBounds(s6.x, s6.y, s6.width, s6.height), c2;
          }, this.uncache = function() {
            return c2.cjsContainer_uncache(), c2;
          }, this.childrenToBitmap = function() {
            var e4 = this.cacheCanvas, t3 = new To.Bitmap(this.cache().cacheCanvas);
            return e4 || this.uncache(), this.removeAllChildren(), t3.addTo(this), this;
          };
          s5 = zdf || 1;
          createjs && !createjs.stageTransformable && s5.retina && (this.localToGlobal = function(e4, t3) {
            return To.localToGlobal(e4, t3, this, this.cjsContainer_localToGlobal);
          }, this.globalToLocal = function(e4, t3) {
            return To.globalToLocal(e4, t3, this, this.cjsContainer_globalToLocal);
          }, this.localToLocal = function(e4, t3, o3) {
            return To.localToLocal(e4, t3, o3, this);
          }), this.setBounds = function(e4, t3, o3, n2) {
            n2 = u(e4, t3, o3, n2);
            return this.cjsContainer_setBounds(n2[0], n2[1], n2[2], n2[3]), this;
          }, this.disposeAllChildren = function() {
            for (var e4 = this.numChildren - 1; 0 <= e4; e4--) {
              var t3 = this.getChildAt(e4);
              t3.dispose && t3.dispose();
            }
            return this;
          }, To.displayBase(c2), r2 !== false && To.styleTransforms(this, l), this.clone = function(e4) {
            if (this.type == "AC" && zdf)
              return zon && zogy("ZIM asset() - cannot clone lazy loaded asset - use Frame() assets parameter or loadAssets() method"), zdf.ac("clone", arguments, this), this;
            var t3 = this.getBounds();
            return zot(t3) && (t3 = { x: null, y: null, width: null, height: null }), this.cloneChildren(this.cloneProps(new To.Container(t3.x, t3.y, t3.width, t3.height, r2, this.group, a)), e4);
          }, this.hasProp = function(e4) {
            return !zot(this[e4]) || this.hasOwnProperty(e4);
          };
        }, To.Container.prototype.dispose = function(e3) {
          return function e4(t2, o2) {
            t2 && To.gD(t2);
            !o2 && t2 && t2.dispose && t2.dispose !== To.Container.prototype.dispose && t2.dispose(null, null, true);
            if (t2 && t2.addChild && (t2.dispatchEvent("removed"), t2.removeAllEventListeners(), t2.numChildren))
              for (var n = t2.numChildren - 1; 0 <= n; n--)
                e4(t2.getChildAt(n));
            t2 && t2.parent && t2.parent.removeChild(t2);
          }(this, e3), true;
        }, To.Container.prototype.specialColor = function(e3, t2) {
          t2.type == "GradientColor" ? e3.linearGradient(t2.colors, t2.ratios, t2.x0, t2.y0, t2.x1, t2.y1) : t2.type == "RadialColor" ? e3.radialGradient(t2.colors, t2.ratios, t2.x0, t2.y0, t2.r0, t2.x1, t2.y1, t2.r1) : t2.type == "BitmapColor" && e3.bitmap(t2.image, t2.repetition, t2.matrix);
        }, zimify(To.Container.prototype), To.extend(To.Container, createjs.Container, ["cache", "uncache", "setBounds", "clone", "localToLocal", "localToGlobal", "globalToLocal"], "cjsContainer", false), To.Shape = function(e3, t2, o2, n, r2, i2, a, l, s5) {
          if (d = zob(To.Shape, arguments, "a, b, c, d, graphics, optimize, style, group, inherit", this))
            return d;
          z_d("50.6"), this.cjsShape_constructor(r2), this.type = "Shape", this.group = l;
          var c2 = a === false ? {} : To.getStyle(this.type, this.group, s5), u = this;
          zot(e3) && (e3 = c2.a != null ? c2.a : null), zot(t2) && (t2 = c2.b != null ? c2.b : null), zot(o2) && (o2 = c2.c != null ? c2.c : null), zot(n) && (n = c2.d != null ? c2.d : null), zot(r2) && (r2 = c2.graphics != null ? c2.graphics : null), zot(i2) && (i2 = c2.optimize != null && c2.optimize);
          var d = h2(e3, t2, o2, n);
          function h2(e4, t3, o3, n2) {
            var r3 = [];
            return zot(o3) ? (r3[0] = 0, r3[2] = e4, r3[1] = 0, r3[3] = t3) : (r3[0] = e4, r3[2] = o3, r3[1] = t3, r3[3] = n2), zot(r3[3]) && (r3[3] = r3[2]), r3;
          }
          if (zot(e3) || this.setBounds(d[0], d[1], d[2], d[3]), !i2)
            for (var g = ["mt", "lt", "a", "at", "bt", "ct", "qt", "cp", "c", "f", "lf", "rf", "bf", "ef", "ss", "sd", "s", "ls", "rs", "bs", "es", "dr", "rr", "rc", "dc", "de", "dp", "pg", "p"], p = 0; p < g.length; p++)
              !function() {
                var e4 = p;
                u[g[e4]] = function() {
                  return (g[e4] == "ct" ? u.graphics.curveTo : u.graphics[g[e4]]).apply(u.graphics, arguments), u;
                };
              }();
          Object.defineProperty(u, "command", { get: function() {
            return u.graphics.command;
          }, set: function(e4) {
          } }), this.cache = function(e4, t3, o3, n2, r3, i3, a2) {
            if (l2 = zob(u.cache, arguments, "a,b,c,d,scale,options,margin"))
              return l2;
            var l2, s6 = u.getBounds();
            return zot(o3) && (zot(e4) ? zot(s6) || (l2 = 0 < u.borderWidth ? u.borderWidth / 2 : 0, e4 = s6.x - l2, t3 = s6.y - l2, o3 = s6.width + 2 * l2, n2 = s6.height + 2 * l2) : (o3 = e4, n2 = t3, t3 = e4 = 0)), zot(a2) && (a2 = 0), u.cjsShape_cache(e4 - a2, t3 - a2, o3 + 2 * a2, n2 + 2 * a2, r3, i3), u;
          }, !(this.setBounds = function(e4, t3, o3, n2) {
            n2 = h2(e4, t3, o3, n2);
            return this.cjsShape_setBounds(n2[0], n2[1], n2[2], n2[3]), this;
          }) !== a && To.styleTransforms(this, c2), this.clone = function(e4) {
            zot(e4) && (e4 = true);
            var t3 = this.getBounds();
            zot(t3) && (t3 = { x: null, y: null, width: null, height: null });
            t3 = u.cloneProps(new To.Shape(t3.x, t3.y, t3.width, t3.height, r2, a, l, s5));
            return t3.graphics = e4 ? u.graphics.clone() : u.graphics, t3;
          };
          c2 = zdf || 1;
          createjs && !createjs.stageTransformable && c2.retina && (this.localToGlobal = function(e4, t3) {
            return To.localToGlobal(e4, t3, this, this.cjsShape_localToGlobal);
          }, this.globalToLocal = function(e4, t3) {
            return To.globalToLocal(e4, t3, this, this.cjsShape_globalToLocal);
          }, this.localToLocal = function(e4, t3, o3) {
            return To.localToLocal(e4, t3, o3, this);
          }), this.hasProp = function(e4) {
            return !zot(this[e4]) || this.hasOwnProperty(e4);
          }, To.displayBase(u), this.dispose = function(e4, t3, o3) {
            To.gD(this), this.graphics.c(), this.dispatchEvent("removed"), this.removeAllEventListeners(), this.parent && this.parent.removeChild(this);
          };
        }, To.extend(To.Shape, createjs.Shape, ["cache", "clone", "setBounds", "localToLocal", "localToGlobal", "globalToLocal"], "cjsShape", false), zimify(To.Shape.prototype), To.Bitmap = function(l, s5, c2, t2, o2, e3, n, r2, i2) {
          var a, u;
          if (a = zob(To.Bitmap, arguments, "image, width, height, left, top, id, style, group, inherit", this))
            return a;
          z_d("50.7"), zot(l) || l.uncache && (u = l.cacheCanvas, l = (h2 = l).cache().cacheCanvas), this.cjsBitmap_constructor(l), h2 && !u && h2.uncache();
          var d = this;
          this.type = "Bitmap", this.group = r2;
          var h2 = n === false ? {} : To.getStyle(this.type, this.group, i2);
          this.id = d.fileID = h2.id != null ? h2.id : e3, zot(s5) && (s5 = h2.width != null ? h2.width : l ? l.width : 100), zot(c2) && (c2 = h2.height != null ? h2.height : l ? l.height : 100), zot(s5) || zot(c2) || d.setBounds(0, 0, s5, c2), zot(t2) && (t2 = h2.left != null ? h2.left : 0), zot(o2) && (o2 = h2.top != null ? h2.top : 0), zdf && (zdf.canvas.getContext("2d") ? this.imageData = zdf.canvas.getContext("2d").createImageData(s5, c2) : this.imageData = document.createElement("canvas").getContext("2d").createImageData(s5, c2), this.drawImageData = function(e4, t3, o3, n2, r3, i3) {
            var a2;
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), zot(o3) && (o3 = 0), zot(n2) && (n2 = 0), zot(r3) && (r3 = s5), zot(i3) && (i3 = c2), d.proxyCanvas || ((a2 = d.proxyCanvas = document.createElement("canvas")).setAttribute("width", s5), a2.setAttribute("height", c2), d.proxyContext = a2.getContext("2d"), l = d.image = a2), d.proxyContext && d.proxyContext.putImageData(d.imageData, e4, t3, o3, n2, r3, i3);
          }, zot(l) && d.drawImageData(), l.match && l.match(/data:image/i) && setTimeout(function() {
            d.stage && d.stage.update(), setTimeout(function() {
              d.stage && d.stage.update();
            }, 50);
          }, 50)), l && l.nodeName && l.nodeName.toLowerCase() != "video" && (d.sourceRect = { x: t2, y: o2, width: s5, height: c2 }), this.cache = function(e4, t3, o3, n2, r3, i3) {
            var a2;
            zot(o3) && (zot(e4) ? zot(l2 = this.getBounds()) || (a2 = 0 < this.borderWidth ? this.borderWidth / 2 : 0, e4 = l2.x - a2, t3 = l2.y - a2, o3 = l2.width + 2 * a2, n2 = l2.height + 2 * a2) : (o3 = e4, n2 = t3, t3 = e4 = 0));
            var l2 = this.getBounds();
            return this.cjsBitmap_cache(e4, t3, o3, n2, r3, i3), this.setBounds(l2.x, l2.y, l2.width, l2.height), this;
          }, this.clone = function() {
            var e4 = this.cloneProps(new To.Bitmap(l, s5, c2, t2, o2, d.fileID, n, this.group, i2));
            return e4.cloned = true, e4;
          };
          var g, p = zdf || 1;
          createjs && !createjs.stageTransformable && p.retina && (this.localToGlobal = function(e4, t3) {
            return To.localToGlobal(e4, t3, this, this.cjsBitmap_localToGlobal);
          }, this.globalToLocal = function(e4, t3) {
            return To.globalToLocal(e4, t3, this, this.cjsBitmap_globalToLocal);
          }, this.localToLocal = function(e4, t3, o3) {
            return To.localToLocal(e4, t3, o3, this);
          }), this.hasProp = function(e4) {
            return !zot(this[e4]) || this.hasOwnProperty(e4);
          }, this.getColorAt = function(e4, t3) {
            g || (d.cache(), g = d.cacheCanvas.getContext("2d"), d.uncache());
            t3 = g.getImageData(e4, t3, 1, 1).data;
            return "rgba(" + t3[0] + "," + t3[1] + "," + t3[2] + "," + t3[3] + ")";
          }, To.displayBase(d), n !== false && To.styleTransforms(this, h2), this.dispose = function(e4, t3, o3) {
            To.gD(this), this.dispatchEvent("removed"), this.removeAllEventListeners(), this.cloned || this.id && ((p = this.stage && this.stage.frame ? this.stage.frame : zdf) && p.assets && p.assets[this.id] && delete p.assets[this.id], To.assets[this.id] && delete To.assets[this.id]), this.parent && this.parent.removeChild(this);
          };
        }, To.Bitmap.fromData = function(t2, o2) {
          var n = 100, r2 = 100, i2 = new Image();
          i2.onload = function() {
            n = i2.naturalWidth, r2 = i2.naturalHeight, zot(n) && (n = i2.width), zot(r2) && (r2 = i2.height);
            var e3 = new To.Bitmap(t2, n, r2);
            setTimeout(function() {
              o2(e3);
            }, 50);
          }, i2.src = t2;
        }, To.extend(To.Bitmap, createjs.Bitmap, ["cache", "clone", "dispose", "localToLocal", "localToGlobal", "globalToLocal"], "cjsBitmap", false), zimify(To.Bitmap.prototype), To.Sprite = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b) {
          if (B = zob(To.Sprite, arguments, "image, cols, rows, count, offsetX, offsetY, spacingX, spacingY, width, height, animations, json, id, globalControl, spriteSheet, label, frame, style, group, inherit", this))
            return B;
          z_d("50.8"), this.type = "Sprite", this.group = y;
          var v, w = z === false ? {} : To.getStyle(this.type, this.group, b), Y = this;
          if (zot(m2) && (m2 = w.frame != null ? w.frame : zdf), zot(d) && !zot(e3)) {
            zot(t2) && (t2 = w.cols != null ? w.cols : 1), zot(o2) && (o2 = w.rows != null ? w.rows : 1), zot(n) && (n = w.count != null ? w.count : t2 * o2), zot(r2) && (r2 = w.offsetX != null ? w.offsetX : 0), zot(i2) && (i2 = w.offsetY != null ? w.offsetY : 0), zot(a) && (a = w.spacingX != null ? w.spacingX : 0), zot(l) && (l = w.spacingY != null ? w.spacingY : 0), zot(s5) && (s5 = (w.width != null ? w : e3).width), zot(c2) && (c2 = (w.height != null ? w : e3).height);
            var C = (s5 - r2 + a) / t2 - a, x2 = (c2 - i2 + l) / o2 - l, k = [], T2 = 0;
            e:
              for (var A3 = 0; A3 < o2; A3++)
                for (var P = 0; P < t2; P++) {
                  if (++T2 > n)
                    break e;
                  k.push([r2 + P * (C + a), i2 + A3 * (x2 + l), C, x2]);
                }
            E(e3, k, u);
          } else if (p)
            u = (v = p).animations;
          else {
            if (!d)
              return;
            var B, S2, k = d.frames;
            u = d.animations, zot(e3) ? (B = d.images ? d.images[0] : null) && B.split ? (S2 = [], To.loop(d.images, function(e4) {
              var t3 = e4.split("/").pop();
              m2.asset(e4) && m2.asset(e4).type != "EmptyAsset" ? S2.push(m2.asset(e4)) : m2.asset(t3) && m2.asset(t3).type != "EmptyAsset" ? S2.push(m2.asset(t3)) : m2.asset(e4).type != "EmptyAsset" ? S2.push(m2.asset(e4)) : zon && zogy("Sprite() - please preload Sprite in Frame or with loadAssets");
            }), E(S2, k, u)) : v = new createjs.SpriteSheet(d) : E(e3, k, u);
          }
          function E(o3, e4, t3) {
            Array.isArray(o3) || (o3 = [o3]), To.loop(o3, function(e5, t4) {
              o3[t4] = e5.image;
            });
            t3 = { images: o3, frames: e4, animations: t3 || [] };
            v = new createjs.SpriteSheet(t3);
          }
          this.animations = u, this.cjsSprite_constructor(v, f3), zot(f3) || this.stop(), zot(h2) && (h2 = To.makeID()), this.id = h2, zot(g) && (g = true), Y.globalControl = g;
          var D, X = 0;
          this.parseFrames = function(e4, t3, o3, n2) {
            var i3 = [], a2 = Number.MAX_VALUE, l2 = 0;
            if (zot(e4))
              zot(t3) && (t3 = 0), zot(o3) && (o3 = Y.totalFrames - 1), s6(t3, o3);
            else {
              if (zot(Y.animations) || zot(Y.animations[e4]))
                return [];
              r3(Y.animations[e4]);
            }
            function r3(e5) {
              var t4;
              Array.isArray(e5) ? (s6((t4 = e5)[0], t4[1], t4[3]), t4[2] && !zot(Y.animations[t4[2]]) && r3(Y.animations[t4[2]])) : e5.constructor == {}.constructor ? function(e6) {
                if (!zot(e6.frames)) {
                  zot(e6.speed) && (e6.speed = 1);
                  for (var t5 = 0; t5 < e6.frames.length; t5++)
                    e6.speed < a2 && (a2 = e6.speed), e6.speed > l2 && (l2 = e6.speed), i3.push({ f: e6.frames[t5], s: e6.speed });
                  e6.next && !zot(Y.animations[e6.next]) && r3(Y.animations[e6.next]);
                }
              }(e5) : isNaN(e5) || i3.push({ f: Math.floor(e5), s: 1 });
            }
            function s6(e5, t4, o4) {
              if (zot(o4) && (o4 = 1), e5 < t4)
                for (var n3 = e5; n3 <= t4; n3++)
                  r4(n3);
              else
                for (n3 = t4; n3 <= e5; n3++)
                  r4(e5 - (n3 - t4));
              function r4(e6) {
                o4 < a2 && (a2 = o4), l2 < o4 && (l2 = o4), i3.push({ f: e6, s: o4 });
              }
            }
            if (n2)
              return i3;
            a2 = To.constrain(To.decimals(a2), 0.1), l2 = To.constrain(To.decimals(l2), 0.1);
            for (var c3, u2 = [], d2 = a2 != l2, h3 = 0; h3 < i3.length; h3++)
              if (c3 = i3[h3], d2)
                for (var g2 = 0; g2 < To.constrain(Math.round(a2 < 1 ? c3.s / a2 : c3.s), 0.1); g2++)
                  u2.push(c3.f);
              else
                u2.push(c3.f);
            return u2;
          }, this.run = function(e4, t3, o3, n2, r3, i3, a2, l2, s6, c3, u2, d2, h3, g2, p2, f4, m3, z2, y2, b2, v2, w2, C2, x3, k2, T3, A4, P2, B2) {
            if (S3 = zob(this.run, arguments, "time, label, call, params, wait, waitedCall, waitedParams, loop, loopCount, loopWait, loopCall, loopParams, loopWaitCall, loopWaitParams, loopPick, rewind, rewindWait, rewindCall, rewindParams, rewindWaitCall, rewindWaitParams, rewindTime, rewindEase, startFrame, endFrame, tweek, id, globalControl, pauseOnBlur"))
              return S3;
            var S3 = Ao();
            if (zot(T3) && (T3 = 1), zot(A4) || (Y.id = A4), zot(P2) || (Y.globalControl = P2), Array.isArray(t3)) {
              for (var E2, I2, M = [], O = 0, j = 0; j < t3.length; j++) {
                (L = t3[j]).lookup = Y.parseFrames(L.label, L.startFrame, L.endFrame), j == 0 && (I2 = L.lookup[0]), delete L.startFrame, delete L.endFrame, L.obj = To.merge(L.obj, { normalizedFrame: L.lookup.length - 1 }), L.set = To.merge(L.set, { normalizedFrames: { noPick: L.lookup }, normalizedFrame: 0 }), zot(L.wait) && (L.wait = O * T3), E2 = L.label, delete L.label, M.push(L), O = 0;
                var L = zot(L.time) ? e4 : L.time;
                0 < k2 - x3 && (O = L / (k2 - x3) / 2);
              }
              if (M.length == 0)
                return this;
              M.length == 1 ? (e4 = M[0].time, t3 = E2, _()) : Y.gotoAndStop(I2);
            } else
              _();
            function _() {
              D = Y.parseFrames(t3, x3, k2), X = 0, Y.gotoAndStop(D[X]), x3 = k2 = null, M = { normalizedFrame: D.length - 1 };
            }
            zot(e4) && (e4 = S3 == "s" ? 1 : 1e3), Y.running && Y.stopAnimate(Y.id), Y.running = true, Array.isArray(M) || ((O = 0) < k2 - x3 && (O = e4 / Math.abs(k2 - x3) / 2), D && 0 < D.length && (O = e4 / D.length / 2), zot(c3) && (c3 = O * T3), zot(m3) && (m3 = O * T3));
            return To.animate({ target: Y, obj: M, time: e4, ease: "linear", call: function() {
              Y.running = false, Y.stop(), o3 && typeof o3 == "function" && o3(n2 || Y);
            }, params: n2, wait: r3, waitedCall: i3, waitedParams: a2, loop: l2, loopCount: s6, loopWait: c3, loopCall: u2, loopParams: d2, loopWaitCall: h3, loopWaitParams: g2, rewind: f4, rewindWait: m3, rewindCall: z2, rewindParams: y2, rewindWaitCall: b2, rewindWaitParams: v2, rewindTime: w2, rewindEase: C2, override: false, pauseOnBlur: B2, id: Y.id }), Y.runPaused = false, Y;
          }, this.runPaused = true, this.pauseRun = function(e4) {
            return zot(e4) && (e4 = true), Y.runPaused = e4, (Y.globalControl ? To : Y).pauseAnimate(e4, Y.id), Y;
          }, this.stopRun = function() {
            return Y.runPaused = true, Y.running = false, (Y.globalControl ? To : Y).stopAnimate(Y.id), Y;
          }, Object.defineProperty(this, "frame", { get: function() {
            return this.currentFrame;
          }, set: function(e4) {
            e4 = Math.round(e4), this.paused ? this.gotoAndStop(e4) : this.gotoAndPlay(e4);
          } }), Object.defineProperty(this, "normalizedFrame", { get: function() {
            return X;
          }, set: function(e4) {
            X = Math.round(e4), this.gotoAndStop(D[X]);
          } }), Object.defineProperty(this, "normalizedFrames", { get: function() {
            return D;
          }, set: function(e4) {
            D = e4;
          } }), Object.defineProperty(this, "totalFrames", { get: function() {
            return v.getNumFrames();
          }, set: function(e4) {
            zog("zim.Sprite - totalFrames is read only");
          } }), z !== false && To.styleTransforms(this, w), this.clone = function() {
            return this.cloneProps(new To.Sprite(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, null, g, p, f3, m2, z, this.group, b));
          };
          m2 = zdf || 1;
          createjs && !createjs.stageTransformable && m2.retina && (this.localToGlobal = function(e4, t3) {
            return To.localToGlobal(e4, t3, this, this.cjsSprite_localToGlobal);
          }, this.globalToLocal = function(e4, t3) {
            return To.globalToLocal(e4, t3, this, this.cjsSprite_globalToLocal);
          }, this.localToLocal = function(e4, t3, o3) {
            return To.localToLocal(e4, t3, o3, this);
          }), this.hasProp = function(e4) {
            return !zot(this[e4]) || this.hasOwnProperty(e4);
          }, To.displayBase(Y), this.dispose = function(e4, t3, o3) {
            To.gD(this), this.dispatchEvent("removed"), this.removeAllEventListeners(), this.parent && this.parent.removeChild(this);
          };
        }, To.extend(To.Sprite, createjs.Sprite, ["clone", "localToLocal", "localToGlobal", "globalToLocal"], "cjsSprite", false), zimify(To.Sprite.prototype), To.MovieClip = function(e3, t2, o2, n, r2, i2, a) {
          if (l = zob(To.MovieClip, arguments, "mode, startPosition, loop, labels, style, group, inherit", this))
            return l;
          z_d("50.9"), this.type = "MovieClip", this.group = i2;
          var l = r2 === false ? {} : To.getStyle(this.type, this.group, a);
          zot(e3) && (e3 = l.mode != null ? l.mode : null), zot(t2) && (t2 = l.startPosition != null ? l.startPosition : null), zot(o2) && (o2 = l.loop != null ? l.loop : null), zot(n) && (n = l.labels != null ? l.labels : null), this.cjsMovieClip_constructor(e3, t2, o2, n), r2 !== false && To.styleTransforms(this, l), this.clone = function() {
            return this.cloneProps(new To.MovieClip(e3, t2, o2, n, r2, this.group, a));
          }, this.hasProp = function(e4) {
            return !zot(this[e4]) || this.hasOwnProperty(e4);
          };
          l = zdf || 1;
          createjs && !createjs.stageTransformable && l.retina && (this.localToGlobal = function(e4, t3) {
            return To.localToGlobal(e4, t3, this, this.cjsMovieClip_localToGlobal);
          }, this.globalToLocal = function(e4, t3) {
            return To.globalToLocal(e4, t3, this, this.cjsMovieClip_globalToLocal);
          }, this.localToLocal = function(e4, t3, o3) {
            return To.localToLocal(e4, t3, o3, this);
          }), To.displayBase(this), this.dispose = function(e4, t3, o3) {
            To.gD(this), this.dispatchEvent("removed"), this.removeAllEventListeners(), this.parent && this.parent.removeChild(this);
          };
        }, To.extend(To.MovieClip, createjs.MovieClip, ["clone", "localToLocal", "localToGlobal", "globalToLocal"], "cjsMovieClip", false), zimify(To.MovieClip.prototype), To.SVGContainer = function(e3, A3, z, P, B, t2, o2, n) {
          if (r2 = zob(To.SVGContainer, arguments, "svg, splitTypes, geometric, showControls, interactive, style, group, inherit", this))
            return r2;
          z_d("50.95"), this.group = o2;
          var r2 = t2 === false ? {} : To.getStyle("SVGContainer", this.group, n);
          e3 && e3.type == "Bitmap" && (e3 = e3.svg);
          var S2, i2, a, l, E = this, I2 = new To.Point(0, 0);
          function M() {
            function A4(e4, t3) {
              return function(e5) {
                if (Array.isArray(e5))
                  return e5;
              }(e4) || function(e5, t4) {
                if (typeof Symbol == "undefined" || !(Symbol.iterator in Object(e5)))
                  return;
                var o3 = [], n3 = true, r3 = false, i3 = void 0;
                try {
                  for (var a2, l2 = e5[Symbol.iterator](); !(n3 = (a2 = l2.next()).done) && (o3.push(a2.value), !t4 || o3.length !== t4); n3 = true)
                    ;
                } catch (e6) {
                  r3 = true, i3 = e6;
                } finally {
                  try {
                    n3 || l2.return == null || l2.return();
                  } finally {
                    if (r3)
                      throw i3;
                  }
                }
                return o3;
              }(e4, t3) || function(e5, t4) {
                if (!e5)
                  return;
                if (typeof e5 == "string")
                  return n2(e5, t4);
                var o3 = Object.prototype.toString.call(e5).slice(8, -1);
                o3 === "Object" && e5.constructor && (o3 = e5.constructor.name);
                if (o3 === "Map" || o3 === "Set")
                  return Array.from(e5);
                if (o3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o3))
                  return n2(e5, t4);
              }(e4, t3) || function() {
                throw new TypeError("Invalid");
              }();
            }
            function n2(e4, t3) {
              (t3 == null || t3 > e4.length) && (t3 = e4.length);
              for (var o3 = 0, n3 = new Array(t3); o3 < t3; o3++)
                n3[o3] = e4[o3];
              return n3;
            }
            function P2(e4, t3, o3, n3, r3, i3, a2) {
              var l2 = e4.x, e4 = e4.y;
              return { x: n3 * (l2 *= t3) - r3 * (e4 *= o3) + i3, y: r3 * l2 + n3 * e4 + a2 };
            }
            function B2(e4, t3, o3, n3) {
              var r3 = e4 * o3 + t3 * n3;
              return 1 < r3 && (r3 = 1), r3 < -1 && (r3 = -1), (e4 * n3 - t3 * o3 < 0 ? -1 : 1) * Math.acos(r3);
            }
            var S3 = 2 * Math.PI;
            return function(e4) {
              var t3 = e4.px, o3 = e4.py, n3 = e4.cx, r3 = e4.cy, i3 = e4.rx, a2 = e4.ry, l2 = e4.xAxisRotation, s6 = l2 === void 0 ? 0 : l2, c3 = e4.largeArcFlag, u2 = c3 === void 0 ? 0 : c3, l2 = e4.sweepFlag, c3 = l2 === void 0 ? 0 : l2, d2 = [];
              if (i3 === 0 || a2 === 0)
                return [];
              var h3 = Math.sin(s6 * S3 / 360), g2 = Math.cos(s6 * S3 / 360), e4 = g2 * (t3 - n3) / 2 + h3 * (o3 - r3) / 2, l2 = -h3 * (t3 - n3) / 2 + g2 * (o3 - r3) / 2;
              if (e4 == 0 && l2 == 0)
                return [];
              i3 = Math.abs(i3), a2 = Math.abs(a2);
              s6 = Math.pow(e4, 2) / Math.pow(i3, 2) + Math.pow(l2, 2) / Math.pow(a2, 2);
              1 < s6 && (i3 *= Math.sqrt(s6), a2 *= Math.sqrt(s6));
              var l2 = A4(function(e5, t4, o4, n4, r4, i4, a3, l3, s7, c4, u3, d3) {
                var h4 = Math.pow(r4, 2), g3 = Math.pow(i4, 2), p3 = Math.pow(u3, 2), f5 = Math.pow(d3, 2), m4 = h4 * g3 - h4 * f5 - g3 * p3;
                m4 < 0 && (m4 = 0), m4 /= h4 * f5 + g3 * p3;
                a3 = (m4 = Math.sqrt(m4) * (a3 === l3 ? -1 : 1)) * r4 / i4 * d3, m4 = m4 * -i4 / r4 * u3, o4 = c4 * a3 - s7 * m4 + (e5 + o4) / 2, c4 = s7 * a3 + c4 * m4 + (t4 + n4) / 2, t4 = (u3 - a3) / r4, n4 = (d3 - m4) / i4, r4 = (-u3 - a3) / r4, m4 = (-d3 - m4) / i4, i4 = B2(1, 0, t4, n4), m4 = B2(t4, n4, r4, m4);
                return l3 === 0 && 0 < m4 && (m4 -= S3), l3 === 1 && m4 < 0 && (m4 += S3), [o4, c4, i4, m4];
              }(t3, o3, n3, r3, i3, a2, u2, c3, h3, g2, e4, l2), 4), p2 = l2[0], f4 = l2[1], m3 = l2[2], z2 = l2[3], l2 = Math.abs(z2) / (S3 / 4);
              Math.abs(1 - l2) < 1e-7 && (l2 = 1);
              var y2 = Math.max(Math.ceil(l2), 1);
              z2 /= y2;
              for (var b2, v2, w2, C2, x2, k, T2 = 0; T2 < y2; T2++)
                d2.push((b2 = m3, k = x2 = C2 = w2 = void 0, w2 = (v2 = z2) === 1.5707963267948966 ? 0.551915024494 : v2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(v2 / 4), C2 = Math.cos(b2), x2 = Math.sin(b2), k = Math.cos(b2 + v2), v2 = Math.sin(b2 + v2), [{ x: C2 - x2 * w2, y: x2 + C2 * w2 }, { x: k + v2 * w2, y: v2 - k * w2 }, { x: k, y: v2 }])), m3 += z2;
              return d2.map(function(e5) {
                var t4 = P2(e5[0], i3, a2, g2, h3, p2, f4), o4 = t4.x, n4 = t4.y, r4 = P2(e5[1], i3, a2, g2, h3, p2, f4), t4 = r4.x, r4 = r4.y, e5 = P2(e5[2], i3, a2, g2, h3, p2, f4);
                return { x1: o4, y1: n4, x2: t4, y2: r4, x: e5.x, y: e5.y };
              });
            };
          }
          if (zot(A3) && (A3 = false), zot(z) && (z = true), !zot(e3)) {
            let v2 = function(e4) {
              var o3, n2, r3, i3, a2, e4 = e4.split(";");
              return To.loop(e4, function(e5) {
                var t3 = (e5 = e5.replace(/,/g, "")).split(":"), e5 = t3[0].trim().toLowerCase(), t3 = t3[1].trim().toLowerCase().replace("px", "");
                e5 == "fill" && (o3 = t3), e5 == "stroke" && (n2 = t3), e5 == "stroke-width" && (r3 = t3), e5 == "opacity" && (a2 = i3 = t3), e5 == "fill-opacity" && (i3 = t3), e5 == "stroke-opacity" && (a2 = t3);
              }), [o3, n2, r3, i3, a2];
            }, w2 = function(e4, t3) {
              var o3, n2, r3, i3, a2, l2, s6, c3, u2, d2 = L(t3), h3 = d2[0], g2 = d2[1], p2 = d2[2], f4 = (d2[3], d2[4], d2[5]), m3 = d2[6];
              e4 == "circle" ? (r3 = 0.5523 * (n2 = Number(t3.getAttribute("r").trim())), o3 = z ? new To.Circle(Number(t3.getAttribute("r")), h3, g2, p2) : new To.Blob(h3, g2, p2, 4, n2, r3, "mirror", null, P, null, null, null, null, null, null, null, null, null, null, B)) : e4 == "rect" ? o3 = z ? new To.Rectangle(Number(t3.getAttribute("width")), Number(t3.getAttribute("height")), h3, g2, p2, Number(t3.getAttribute("rx"))) : (s6 = Number(t3.getAttribute("width")), c3 = Number(t3.getAttribute("height")), d2 = Number(t3.getAttribute("rx")), n2 = Number(t3.getAttribute("ry")), d2 && n2 ? (r3 = 0.5523 * d2, l2 = 0.5523 * n2, new To.Blob(h3, g2, p2, [[d2, 0, 0, 0, -r3, 0, 0, 0, "free"], [s6 - d2, 0, 0, 0, 0, 0, r3, 0, "free"], [s6, n2, 0, 0, 0, -l2, 0, 0, "free"], [s6, c3 - n2, 0, 0, 0, 0, 0, l2, "free"], [s6 - d2, c3, 0, 0, r3, 0, 0, 0, "free"], [d2, c3, 0, 0, 0, 0, -r3, 0, "free"], [0, c3 - n2, 0, 0, 0, l2, 0, 0, "free"], [0, n2, 0, 0, 0, 0, 0, -l2, "free"]], null, null, null, null, P, null, null, null, null, null, null, null, null, null, null, B)) : new To.Blob(h3, g2, p2, [[0, 0], [s6, 0], [s6, c3], [0, c3]], null, null, null, null, P, null, null, null, null, null, null, null, null, null, null, B)) : e4 == "line" ? o3 = new To.Squiggle(g2, p2, [[Number(t3.getAttribute("x1")), Number(t3.getAttribute("y1"))], [Number(t3.getAttribute("x2")), Number(t3.getAttribute("y2"))]], null, null, null, null, P, null, null, null, null, null, null, null, null, null, null, B) : e4 == "polygon" || e4 == "polyline" ? (u2 = (u2 = (u2 = t3.getAttribute("points")).replace(/-/g, " -")).replace(/\s+/g, " "), i3 = [], u2.indexOf(",") != -1 ? To.loop(u2.split(" "), function(e5) {
                e5 = e5.split(",");
                i3.push([Number(e5[0].trim()), Number(e5[1].trim())]);
              }) : To.loop(u2.split(" "), function(e5, t4) {
                (t4 + 1) % 2 == 0 && i3.push([a2, e5.trim()]), a2 = e5.trim();
              }), o3 = e4 == "polygon" ? new Blob(h3, g2, p2, i3) : new To.Squiggle(g2, p2, i3, null, null, null, null, P, null, null, null, null, null, null, null, null, null, null, B)) : e4 == "ellipse" && (o3 = new To.Blob(h3, g2, p2, (s6 = l2 = 0, c3 = Number(t3.getAttribute("rx")), u2 = Number(t3.getAttribute("ry")), [[l2 - c3, s6, 0, 0, l2, (e4 = s6 + u2) + (h3 = 0.5522848 * u2) - u2, l2, s6 - h3, "mirror"], [l2, s6 - u2, 0, 0, l2 - (g2 = 0.5522848 * c3), s6, (p2 = l2 + c3) + g2 - c3, s6, "mirror"], [p2, s6, 0, 0, l2, s6 - h3, l2 + g2 - g2, e4 + h3 - u2, "mirror"], [l2, e4, 0, 0, p2 - c3 + g2, s6, l2 - g2, s6, "mirror"]]), null, null, null, null, P, null, null, null, null, null, null, null, null, null, null, B)), o3.loc(f4, m3, E);
              t3 = t3.getAttribute("transform");
              (t3 || O) && j2(o3, t3 || O), !B || o3.type != "Rectangle" && o3.type != "Circle" || o3.transform({ showReg: false, visible: P });
            }, j2 = function(r3, e4) {
              e4 = e4.split(")");
              To.loop(e4, function(e5) {
                var t3, o3, n2;
                e5 != "" && (t3 = (o3 = e5.trim().split("("))[0].trim().toLowerCase(), e5 = o3[1].trim().toLowerCase().replace("px", "").replace("deg", ""), t3 == "translate" && (o3 = e5.split(","), r3.mov(Number(o3[0].trim()), o3[1] ? Number(o3[1].trim()) : 0)), t3 == "scale" && (n2 = e5.split(","), r3.type == "Blob" || r3.type == "Squiggle" ? n2.length == 1 ? r3.transformPoints("scale", Number(n2[0].trim())) : n2.length == 2 && (r3.transformPoints("scaleX", Number(n2[0].trim())), r3.transformPoints("scaleY", Number(n2[1].trim()))) : n2.length == 1 ? r3.sca(Number(n2[0].trim())) : n2.length == 2 && r3.sca(Number(n2[0].trim()), Number(n2[1].trim()))), t3 == "rotate" && ((n2 = e5.split(",")).length == 1 ? n2.push(0, 0) : n2.length == 2 && n2.push(0), r3.rot(Number(n2[0].trim()), Number(n2[1].trim()), Number(n2[2].trim()))), t3 == "skewX" && (r3.skewX = e5), t3 == "skewY" && (r3.skewY = e5));
              });
            };
            var v = v2, w = w2, j = j2;
            if (e3.replace && (e3 = e3.replace(/style\s?=[^"]*"[^"]*"/gi, "")), b = zot(e3.draggable) ? (e3.getAttribute || (i2 = new DOMParser(), e3 = i2.parseFromString(e3, "image/svg+xml").documentElement), this.svg = e3) : (i2 = new DOMParser(), b = (e3 = e3.innerHTML ? i2.parseFromString(e3.innerHTML, "text/xml") : e3).getElementsByTagName("svg"), this.svg = b ? e3.getElementsByTagName("svg")[0] : null), zot(b) || (a = b.getAttribute("width"), l = b.getAttribute("height")), a = a && Number(a.trim()), l = l && Number(l.trim()), this.zimContainer_constructor(a, l), this.type = "SVGContainer", zot(b))
              return;
            var O, s5 = To.black, c2 = To.black, u = To.black, d = To.black, h2 = 2, g = 2, p = 1, f3 = 1, m2 = 1, y = 1;
            var b = e3.getElementsByTagName("svg");
            b.length == 0 && (b = [e3]), function l2(e4) {
              To.loop(e4, function(e5) {
                var t3, o3, n2, r3, i3, a2 = e5.tagName.toLowerCase();
                a2 == "path" && C(e5), a2 == "circle" && w2("circle", e5), a2 == "rect" && w2("rect", e5), a2 == "ellipse" && w2("ellipse", e5), a2 == "line" && w2("line", e5), a2 == "polygon" && w2("polygon", e5), a2 == "polyline" && w2("polyline", e5), a2 == "g" && ((a2 = e5.getAttribute("style")) && (t3 = (i3 = v2(a2))[0], o3 = i3[1], n2 = i3[2], r3 = i3[3], i3 = i3[4]), O = e5.getAttribute("transform"), c2 = e5.getAttribute("fill") ? e5.getAttribute("fill") : zot(t3) ? s5 : t3, d = e5.getAttribute("stroke") ? e5.getAttribute("stroke") : zot(o3) ? u : o3, g = e5.getAttribute("stroke-width") ? e5.getAttribute("stroke-width") : zot(n2) ? h2 : n2, f3 = e5.getAttribute("fill-opacity") ? e5.getAttribute("fill-opacity") : zot(r3) ? p : r3, y = e5.getAttribute("stroke-opacity") ? e5.getAttribute("stroke-opacity") : zot(i3) ? m2 : i3), l2(e5.children), e5.tagName.toLowerCase() == "g" && (c2 = s5, d = u, g = h2, f3 = p, y = m2, O = null);
              });
            }(b);
          }
          function L(e4) {
            var t3, o3, n2, r3, i3, a2 = e4.getAttribute("style");
            a2 && (t3 = (l2 = v(a2))[0], o3 = l2[1], n2 = l2[2], r3 = l2[3], i3 = l2[4]), t3 = e4.getAttribute("fill") ? e4.getAttribute("fill") : zot(t3) ? c2 : t3, o3 = e4.getAttribute("stroke") ? e4.getAttribute("stroke") : zot(o3) ? d : o3, n2 = e4.getAttribute("stroke-width") ? e4.getAttribute("stroke-width") : zot(n2) ? g : n2, r3 = e4.getAttribute("fill-opacity") ? e4.getAttribute("fill-opacity") : zot(r3) ? f3 : r3, i3 = e4.getAttribute("stroke-opacity") ? e4.getAttribute("stroke-opacity") : zot(i3) ? y : i3;
            var a2 = e4.getAttribute("x") ? e4.getAttribute("x") : 0, a2 = e4.getAttribute("cx") ? e4.getAttribute("cx") : a2, l2 = e4.getAttribute("y") ? e4.getAttribute("y") : 0, l2 = e4.getAttribute("cy") ? e4.getAttribute("cy") : l2;
            return zot(r3) || zot(t3) || (t3 = To.convertColor(t3, "rgba", Number(r3))), zot(i3) || zot(o3) || (o3 = To.convertColor(o3, "rgba", Number(i3))), [t3, o3, Number(n2), Number(r3), Number(i3), Number(a2), Number(l2)];
          }
          function C(t3, e4) {
            zot(e4) && (e4 = true);
            var o3, n2, r3, i3, a2, l2, s6 = ["M", "m", "L", "l", "H", "h", "V", "v", "C", "c", "S", "s", "Q", "q", "T", "t", "A", "a", "z", "Z"], c3 = ["m", "l", "h", "v", "c", "s", "q", "t", "a", "z"], u2 = new To.Point(0, 0);
            y2 = (y2 = (y2 = (y2 = (y2 = (y2 = zot(t3.getAttribute) ? t3 : (t3.getAttribute("id"), t3.getAttribute("d"))).replace(/,/g, " ")).replace(/([a-zA-Z])/g, " $1 ")).replace(/-/g, " -")).replace(/\s+/g, " ")).replace(/\.(\d*)\./g, ".$1 ."), e4 && (o3 = L(t3), n2 = o3[0], r3 = o3[1], i3 = o3[2], o3[3], o3[4]);
            var d2, h3 = [], g2 = [0, 0], p2 = new To.Point(0, 0), f4 = new To.Point(0, 0, 0, 0), m3 = new To.Point(0, 0, 0, 0, 0, 0), z2 = new To.Point(0, 0, 0, 0, 0, 0, 0), y2 = y2.split(" "), y2 = y2.slice(1, y2.length), b2 = [], v2 = false, w2 = "", C2 = false, x2 = "squiggle", k = null;
            function T2() {
              w2 = b2[b2.length - 1], 2 <= h3.length && (w2 != "z" && w2 != "Z" || (x2 = "blob")), (a2 = x2 == "squiggle" ? new To.Squiggle(r3, i3, h3, null, null, null, null, P, null, null, null, null, null, null, null, null, null, null, B) : new To.Blob(n2, r3, i3, h3, null, null, null, null, P, null, null, null, null, null, null, null, null, null, null, B)).loc(0, 0, E), w2 = b2[b2.length - 1], b2[b2.length - 2], 0 <= c3.indexOf(w2) ? (g2[0] = h3[h3.length - 1][0], g2[1] = h3[h3.length - 1][1], I2.x = h3[h3.length - 1][0], I2.y = h3[h3.length - 1][1], (h3 = []).push([g2[0], g2[1]])) : (g2 = [0, 0], h3 = [[0, 0]]), b2 = [], w2 != "z" && w2 != "Z" && b2.push(w2), u2.x = 0, u2.y = 0;
              var e5 = t3.getAttribute("transform");
              (e5 || O) && j(a2, e5 || O);
            }
            return To.loop(y2, function(e5, t4) {
              var o4;
              t4 == 0 && (I2.x = 0, I2.y = 0, g2 = [0, 0], w2 = ""), s6.indexOf(e5) == -1 ? (d2 == "lxo" && (d2 = "lx", b2.push("l"), v2 = true), d2 == "lyo" && (d2 = "ly", v2 = true), d2 == "Lxo" && (d2 = "Lx", b2.push("L"), v2 = true), d2 == "Lyo" && (d2 = "Ly", v2 = true), l2 = Number(e5), l2 = Math.round(100 * l2) / 100, d2 == "X" ? (I2.x = l2, d2 = "Y") : d2 == "Y" ? (I2.y = l2, d2 = "Lxo", h3.push([I2.x, I2.y])) : d2 == "x" ? (I2.x = I2.x + l2, d2 = "y") : d2 == "y" && (I2.y = I2.y + l2, d2 = "lxo", h3.push([I2.x, I2.y])), d2 == "H" || d2 == "h" ? (u2.x = h3[h3.length - 1][0], u2.y = h3[h3.length - 1][1], u2.x = u2.x + (d2 == "h" ? l2 : l2 - I2.x), h3.push([u2.x, u2.y]), d2 = "Lx") : d2 != "V" && d2 != "v" || (u2.x = h3[h3.length - 1][0], u2.y = h3[h3.length - 1][1], u2.y = u2.y + (d2 == "v" ? l2 : l2 - I2.y), h3.push([u2.x, u2.y]), d2 = "lx"), d2 == "Lx" ? (p2.x = l2, d2 = "Ly") : d2 == "Ly" ? (p2.y = l2, u2.x = p2.x, u2.y = p2.y, h3.push([u2.x, u2.y]), d2 = "Lx") : d2 == "lx" ? (0 < b2.length && (u2.x != 0 && u2.y != 0 ? (I2.x = u2.x, I2.y = u2.y) : (I2.x = u2.x + I2.x, I2.y = u2.y + I2.y)), p2.x = I2.x + l2, d2 = v2 ? "lyo" : "ly") : d2 == "ly" && (p2.y = I2.y + l2, u2.x = p2.x, u2.y = p2.y, h3.push([u2.x, u2.y]), d2 = "lx"), d2 == "qx" || d2 == "Qx" ? (0 < h3.length ? (I2.x = h3[h3.length - 1][0], I2.y = h3[h3.length - 1][1]) : (I2.x = 0, I2.y = 0), f4.x = d2 == "qx" ? I2.x + l2 : l2, d2 = d2 == "qx" ? "qy" : "Qy") : d2 == "qy" || d2 == "Qy" ? (f4.y = d2 == "qy" ? I2.y + l2 : l2, d2 = d2 == "qy" ? "qz" : "Qz", C2 && (C2 = false, (o4 = h3[h3.length - 1])[6] = -o4[4], o4[7] = -o4[5], o4[8] = "mirror", u2.x = f4.x, u2.y = f4.y, h3[h3.length] = [u2.x, u2.y, 0, 0, -o4[6], o4[7], 0, 0, "free"], d2 = d2 == "qy" ? "qx" : "Qx")) : d2 == "qz" || d2 == "Qz" ? (f4.z = d2 == "qz" ? I2.x + l2 : l2, d2 = d2 == "qz" ? "qq" : "Qq") : d2 != "qq" && d2 != "Qq" || (f4.w = d2 == "qq" ? I2.y + l2 : l2, o4 = h3[h3.length - 1], u2.x = o4[0], u2.y = o4[1], h3.length == 1 ? (o4[2] = 0, o4[3] = 0, o4[4] = 0, o4[5] = 0, o4[6] = 2 / 3 * (f4.x - u2.x), o4[7] = 2 / 3 * (f4.y - u2.y), o4[8] = "free") : h3[h3.length] = [u2.x, u2.y, 0, 0, 0, 0, 2 / 3 * (f4.x - u2.x), 2 / 3 * (f4.y - u2.y), "free"], u2.x = f4.z, u2.y = f4.w, h3[h3.length] = [u2.x, u2.y, 0, 0, 2 / 3 * (f4.x - u2.x), 2 / 3 * (f4.y - u2.y), 0, 0, "free"], d2 = d2 == "qq" ? "qx" : "Qx"), d2 == "cx" || d2 == "Cx" ? (0 < h3.length ? (I2.x = h3[h3.length - 1][0], I2.y = h3[h3.length - 1][1]) : (I2.x = 0, I2.y = 0), m3.x = d2 == "cx" ? I2.x + l2 : l2, d2 = d2 == "cx" ? "cy" : "Cy") : d2 == "cy" || d2 == "Cy" ? (m3.y = d2 == "cy" ? I2.y + l2 : l2, d2 = d2 == "cy" ? "cz" : "Cz") : d2 == "cz" || d2 == "Cz" ? (m3.z = d2 == "cz" ? I2.x + l2 : l2, d2 = d2 == "cz" ? "cq" : "Cq") : d2 == "cq" || d2 == "Cq" ? (m3.q = d2 == "cq" ? I2.y + l2 : l2, d2 = d2 == "cq" ? "cr" : "Cr", C2 && ((o4 = h3[h3.length - 1])[2] = 0, o4[3] = 0, zot(o4[4]) && (o4[4] = 0), zot(o4[5]) && (o4[5] = 0), o4[6] = -o4[4], o4[7] = -o4[5], o4[8] = "mirror", u2.x = m3.z, u2.y = m3.q, h3[h3.length] = [u2.x, u2.y, 0, 0, m3.x - u2.x, m3.y - u2.y, 0, 0, "free"], d2 = d2 == "cr" ? "cx" : "Cx")) : d2 == "cr" || d2 == "Cr" ? (m3.r = d2 == "cr" ? I2.x + l2 : l2, d2 = d2 == "cr" ? "cs" : "Cs") : d2 == "cs" || d2 == "Cs" ? (m3.s = d2 == "cs" ? I2.y + l2 : l2, o4 = h3[h3.length - 1], h3.length == 1 && (o4[2] = 0, o4[3] = 0, o4[4] = 0, o4[5] = 0), o4[6] = m3.x - o4[0], o4[7] = m3.y - o4[1], o4[8] = "free", u2.x = m3.r, u2.y = m3.s, h3[h3.length] = [u2.x, u2.y, 0, 0, m3.z - u2.x, m3.q - u2.y, 0, 0, "free"], d2 = d2 == "cs" ? "cx" : "Cx") : d2 == "ax" || d2 == "Ax" ? (0 < h3.length ? (I2.x = h3[h3.length - 1][0], I2.y = h3[h3.length - 1][1]) : (I2.x = 0, I2.y = 0), z2.x = l2, d2 = d2 == "ax" ? "ay" : "Ay") : d2 == "ay" || d2 == "Ay" ? (z2.y = l2, d2 = d2 == "ay" ? "az" : "Az") : d2 == "az" || d2 == "Az" ? (z2.z = l2, d2 = d2 == "az" ? "aq" : "Aq") : d2 == "aq" || d2 == "Aq" ? (z2.q = l2, d2 = d2 == "aq" ? "ar" : "Ar") : d2 == "ar" || d2 == "Ar" ? (z2.r = l2, d2 = d2 == "ar" ? "as" : "As") : d2 == "as" || d2 == "As" ? (z2.s = d2 == "as" ? I2.x + l2 : l2, d2 = d2 == "as" ? "at" : "At") : d2 != "at" && d2 != "At" || (z2.t = d2 == "at" ? I2.y + l2 : l2, t4 = (S2 = S2 || M())({ px: I2.x, py: I2.y, cx: z2.s, cy: z2.t, rx: z2.x, ry: z2.y, xAxisRotation: z2.z, largeArcFlag: z2.q, sweepFlag: z2.r }), loop(t4, function(e6, t5) {
                o4 = h3[h3.length - 1], h3.length == 1 && (o4[2] = 0, o4[3] = 0, o4[4] = 0, o4[5] = 0), t5 == 0 && h3.length == 1 ? (o4[6] = e6.x1 - u2.x - I2.x, o4[7] = e6.y1 - u2.y - I2.y) : (o4[6] = e6.x1 - u2.x, o4[7] = e6.y1 - u2.y), o4[8] = "free", u2.x = e6.x, u2.y = e6.y, h3[h3.length] = [u2.x, u2.y, 0, 0, e6.x2 - u2.x, e6.y2 - u2.y, 0, 0, "free"];
              }), d2 = d2 == "at" ? "ax" : "Ax")) : (b2.push(e5), e5 != "s" && (C2 = false), 1 < b2.length && (e5 != "M" && e5 != "m" || (T2(), e5 == "M" ? (I2.x = 0, I2.y = 0) : (I2.x = h3[h3.length - 1][0], I2.y = h3[h3.length - 1][1]), h3 = [], (b2 = []).push(e5))), e5 == "M" ? d2 = "X" : e5 == "m" ? d2 = "x" : e5 == "L" ? (d2 = "Lx", A3 && k && k != "l" && T2(), k = "l") : e5 == "l" ? (d2 = "lx", A3 && k && k != "l" && T2(), k = "l") : e5 == "H" ? (d2 = "H", A3 && k && k != "l" && T2(), k = "l") : e5 == "h" ? (d2 = "h", A3 && k && k != "l" && T2(), k = "l") : e5 == "V" ? (d2 = "V", A3 && k && k != "l" && T2(), k = "l") : e5 == "v" ? (d2 = "v", A3 && k && k != "l" && T2(), k = "l") : e5 == "C" ? (d2 = "Cx", A3 && k && k != "c" && T2(), k = "c") : e5 == "c" ? (d2 = "cx", A3 && k && k != "c" && T2(), k = "c") : e5 == "S" ? (C2 = true, d2 = "Cx", A3 && k && k != "c" && T2(), k = "c") : e5 == "s" ? (C2 = true, d2 = "cx", A3 && k && k != "c" && T2(), k = "c") : e5 == "Q" ? (d2 = "Qx", A3 && k && k != "q" && T2(), k = "q") : e5 == "q" ? (d2 = "qx", A3 && k && k != "q" && T2(), k = "q") : e5 == "T" ? (C2 = true, d2 = "Qx", A3 && k && k != "q" && T2(), k = "q") : e5 == "t" ? (C2 = true, d2 = "qx", A3 && k && k != "q" && T2(), k = "q") : e5 == "A" ? (d2 = "Ax", A3 && k && k != "a" && T2(), k = "a") : e5 == "a" ? (d2 = "ax", A3 && k && k != "a" && T2(), k = "a") : e5 != "z" && e5 != "Z" || (x2 = "blob"));
            }), e4 && T2(), h3;
          }
          !(E.processPath = function(e4) {
            return C(e4, false);
          }) !== t2 && To.styleTransforms(this, r2), this.clone = function() {
            return E.cloneProps(new To.SVGContainer(e3, A3, z, P, B, t2, this.group, n));
          };
        }, To.extend(To.SVGContainer, To.Container, "clone", "zimContainer", false), To.CustomShape = function(e3, t2, o2, n) {
          To.zimCustomShapeCheck || (z_d("50.97"), To.zimCustomShapeCheck = true), this.zimContainer_constructor(e3, t2, o2, n, false);
          var r2 = this;
          this.mouseChildren = false, r2._dashedOffset = 5, Object.defineProperty(r2, "color", { get: function() {
            return r2._color;
          }, set: function(e4) {
            zot(e4) && (e4 = "black"), (r2._color = e4) && e4.type ? r2.specialColor(r2.colorCommand, e4) : r2.colorCommand.style = e4;
          } }), this.setColorRange = function(e4, t3) {
            return zot(t3) ? (r2.startColor = r2.color, r2.endColor = e4) : (zot(e4) ? r2.startColor = r2.color : r2.startColor = e4, r2.endColor = t3), r2;
          }, r2._colorRange = 0, Object.defineProperty(r2, "colorRange", { get: function() {
            return r2._colorRange;
          }, set: function(e4) {
            r2._colorRange = e4, zot(r2.startColor) || zot(r2.endColor) || (r2.color = To.colorRange(r2.startColor, r2.endColor, e4));
          } }), Object.defineProperty(r2, "borderColor", { get: function() {
            return r2._borderColor;
          }, set: function(e4) {
            (r2._borderColor = e4) && !r2.borderWidth && (r2.borderWidth = 1), r2.borderColorCommand ? e4 && e4.type ? r2.specialColor(r2.borderColorCommand, e4) : r2.borderColorCommand.style = e4 : r2.drawShape();
          } }), Object.defineProperty(r2, "borderWidth", { get: function() {
            return r2._borderWidth;
          }, set: function(e4) {
            0 < e4 || (e4 = 0), r2._borderWidth = e4, r2.borderWidthCommand && r2._borderWidth != 0 ? (r2.borderWidthCommand.width = r2._borderWidth, r2._dashed && (r2.borderDashedCommand.segments = r2._dashed, r2.borderDashedCommand.offset = r2._dashedOffset)) : (r2.borderWidthCommand = null, r2.drawShape());
          } }), Object.defineProperty(r2, "thickness", { get: function() {
            return r2._thickness;
          }, set: function(e4) {
            0 < e4 || (e4 = 0), r2._thickness = e4, r2.thicknessCommand && r2._thickness != 0 ? (r2.thicknessCommand.width = r2._thickness, r2._dashed && (r2.dashedCommand.segments = r2._dashed, r2.dashedCommand.offset = r2._dashedOffset)) : r2.drawShape();
          } }), Object.defineProperty(r2, "dashed", { get: function() {
            return r2._dashed;
          }, set: function(e4) {
            if ((r2._dashed = e4) && !Array.isArray(r2._dashed) && (r2.dashed = [10, 10]), r2.type == "Squiggle" || r2.type == "Line") {
              if (!r2.thicknessCommand || r2._thickness == 0)
                return;
              var t3 = r2.dashedCommand;
            } else {
              if (!r2.borderWidthCommand || r2._borderWidth == 0)
                return;
              t3 = r2.borderDashedCommand;
            }
            t3 ? r2._dashed ? (t3.segments = r2._dashed, t3.offset = r2._dashedOffset) : (t3.segments = null, t3.offset = null) : r2.drawShape();
          } }), Object.defineProperty(r2, "dashedOffset", { get: function() {
            return r2._dashedOffset;
          }, set: function(e4) {
            if (isNaN(e4) && (e4 = 5), r2._dashedOffset = e4, r2.type == "Squiggle" || r2.type == "Line") {
              if (!r2.thicknessCommand || r2._thickness == 0)
                return;
              var t3 = r2.dashedCommand;
            } else {
              if (!r2.borderWidthCommand || r2._borderWidth == 0)
                return;
              t3 = r2.borderDashedCommand;
            }
            t3 ? r2._dashed ? (t3.segments = r2._dashed, t3.offset = r2._dashedOffset) : (t3.segments = null, t3.offset = null) : r2.drawShape();
          } }), Object.defineProperty(r2, "corner", { get: function() {
            return r2._corner;
          }, set: function(e4) {
            r2._corner = e4, r2.drawShape();
          } }), this.linearGradient = function(e4, t3, o3, n2, r3, i2) {
            return this.linearGradientParams = Array.prototype.slice.call(arguments), this.colorCommand.linearGradient(e4, t3, o3, n2, r3, i2), this;
          }, this.radialGradient = function(e4, t3, o3, n2, r3, i2, a, l) {
            return this.radialGradientParams = Array.prototype.slice.call(arguments), this.colorCommand.radialGradient(e4, t3, o3, n2, r3, i2, a, l), this;
          }, this.cloneAll = function(e4, t3, o3, n2) {
            var r3 = this.getBounds();
            zot(r3) && (r3 = { x: null, y: null, width: null, height: null });
            e4 = this.cloneChildren(this.cloneProps(new To.Container(r3.x, r3.y, r3.width, r3.height, t3, o3, n2)), e4);
            return e4.mouseChildren = false, e4.type = this.type, e4;
          };
        }, To.extend(To.CustomShape, To.Container, null, "zimContainer", false), To.Circle = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u) {
          if (p = zob(To.Circle, arguments, "radius, color, borderColor, borderWidth, dashed, percent, percentClose, strokeObj, style, group, inherit", this))
            return p;
          z_d("51"), this.zimCustomShape_constructor(null, null, null, null, false), this.type = "Circle", this.group = c2;
          var d = s5 === false ? {} : To.getStyle(this.type, this.group, u);
          zot(e3) && (e3 = d.radius != null ? d.radius : 50), zot(r2) && (r2 = d.dashed != null && d.dashed), zot(o2) && (o2 = d.borderColor != null ? d.borderColor : null), zot(n) && (n = d.borderWidth != null ? d.borderWidth : null), o2 < 0 || n < 0 ? o2 = n = null : o2 != null && n == null && (n = 1), zot(t2) && (t2 = d.color != null ? d.color : 0 < n ? "rgba(0,0,0,0)" : "black"), zot(i2) && (i2 = d.percent != null ? d.percent : 100), zot(a) && (a = d.percentClose == null || d.percentClose), zot(l) && (l = d.strokeObj != null ? d.strokeObj : {});
          var h2 = function() {
            return arguments;
          }(e3, t2, o2, n, i2);
          e3 = To.Pick.choose(e3), t2 = To.Pick.choose(t2), o2 = To.Pick.choose(o2), n = To.Pick.choose(n), i2 = To.Pick.choose(i2);
          var g = this;
          g._radius = e3, g._color = t2, g._borderColor = o2, g._borderWidth = n, g._dashed = r2, g._dashed && !Array.isArray(g._dashed) && (g._dashed = [10, 10]);
          var p = this.shape = new createjs.Shape();
          this.addChild(p);
          var f3 = p.graphics;
          g.drawShape = function() {
            f3.c(), g.colorCommand = f3.f(g._color).command, g._color && g._color.type && g.specialColor(g.colorCommand, g._color), (zot(g._borderWidth) || 0 < g._borderWidth) && (zot(g._borderColor) && zot(g._borderWidth) || (zot(g._borderColor) && (g._borderColor = "black"), g.borderColorCommand = f3.s(g._borderColor).command, g._borderColor && g._borderColor.type && g.specialColor(g.borderColorCommand, g._borderColor), g.borderWidthCommand = f3.ss(g._borderWidth, l.caps, l.joints, l.miterLimit, l.ignoreScale).command, g._dashed && (g.borderDashedCommand = f3.sd(Array.isArray(g._dashed) ? g._dashed : [10, 10], g._dashedOffset).command)));
            var e4, t3 = 2 * g._radius;
            typeof i2 == "number" && 0 <= i2 && i2 < 100 ? (e4 = 360 * i2 / 100 / 2, f3.arc(0, 0, g._radius, (-e4 - 90) * Math.PI / 180, (e4 - 90) * Math.PI / 180, false), a && f3.cp(), t3 = g._radius - Math.cos(e4 * Math.PI / 180) * g._radius) : f3.dc(0, 0, g._radius), g.setBounds(-g._radius, -g._radius, 2 * g._radius, t3);
          }, g.drawShape(), Object.defineProperty(g, "radius", { get: function() {
            return g._radius;
          }, set: function(e4) {
            g._radius = e4, g.drawShape();
          } }), Object.defineProperty(g, "percentage", { get: function() {
            return i2;
          }, set: function(e4) {
            i2 = e4, g.drawShape();
          } }), Object.defineProperty(g, "percentClose", { get: function() {
            return a;
          }, set: function(e4) {
            a = e4, g.drawShape();
          } }), s5 !== false && To.styleTransforms(this, d), this.clone = function(e4, t3) {
            e4 = g.cloneProps(new To.Circle(e4 || !To.isPick(h2[0]) ? g.radius : h2[0], e4 || !To.isPick(h2[1]) ? g.color : h2[1], e4 || !To.isPick(h2[2]) ? g.borderColor : h2[2], e4 || !To.isPick(h2[3]) ? g.borderWidth : h2[3], g.dashed, e4 || !To.isPick(h2[4]) ? i2 : h2[4], a, l, s5, this.group, u));
            return g.linearGradientParams && e4.linearGradient.apply(e4, g.linearGradientParams), g.radialGradientParams && e4.radialGradient.apply(e4, g.radialGradientParams), e4;
          };
        }, To.extend(To.Circle, To.CustomShape, "clone", "zimCustomShape", false), To.Rectangle = function(t2, o2, e3, n, r2, i2, a, l, s5, c2, u) {
          if (p = zob(To.Rectangle, arguments, "width, height, color, borderColor, borderWidth, corner, dashed, strokeObj, style, group, inherit", this))
            return p;
          z_d("52"), this.zimCustomShape_constructor(null, null, null, null, false), this.type = "Rectangle", this.group = c2;
          var d = s5 === false ? {} : To.getStyle(this.type, this.group, u);
          zot(t2) && (t2 = d.width != null ? d.width : null), zot(o2) && (o2 = d.height != null ? d.height : zot(t2) ? 100 : t2), zot(t2) && (t2 = o2), zot(i2) && (i2 = d.corner != null ? d.corner : 0), zot(a) && (a = d.dashed != null && d.dashed), zot(n) && (n = d.borderColor != null ? d.borderColor : null), zot(r2) && (r2 = d.borderWidth != null ? d.borderWidth : null), n < 0 || r2 < 0 ? n = r2 = null : n != null && r2 == null && (r2 = 1), zot(e3) && (e3 = d.color != null ? d.color : 0 < r2 ? "rgba(0,0,0,0)" : "black"), zot(l) && (l = d.strokeObj != null ? d.strokeObj : {});
          var h2 = function() {
            return arguments;
          }(t2, o2, e3, n, r2);
          t2 = To.Pick.choose(t2), o2 = To.Pick.choose(o2), e3 = To.Pick.choose(e3), n = To.Pick.choose(n), r2 = To.Pick.choose(r2);
          var g = this;
          g._color = e3, g._borderColor = n, g._borderWidth = r2, g._dashed = a, g._dashed && !Array.isArray(g._dashed) && (g._dashed = [10, 10]), g._corner = i2;
          var p = this.shape = new createjs.Shape();
          this.addChild(p);
          var f3 = p.graphics;
          g.drawShape = function() {
            f3.c(), g.colorCommand = f3.f(g._color).command, e3 && e3.type && g.specialColor(g.colorCommand, e3), (zot(g._borderWidth) || 0 < g._borderWidth) && (zot(g._borderColor) && zot(g._borderWidth) || (zot(g._borderColor) && (g._borderColor = "black"), g.borderColorCommand = f3.s(g._borderColor).command, g._borderColor && g._borderColor.type && g.specialColor(g.borderColorCommand, g._borderColor), g.borderWidthCommand = f3.ss(g._borderWidth, l.caps, l.joints, l.miterLimit, l.ignoreScale).command, g._dashed && (g.borderDashedCommand = f3.sd(Array.isArray(g._dashed) ? g._dashed : [10, 10], g._dashedOffset).command))), Array.isArray(g._corner) ? f3.rc(0, 0, t2, o2, g._corner[0], g._corner[1], g._corner[2], g._corner[3]) : 0 < g._corner ? f3.rr(0, 0, t2, o2, g._corner) : f3.r(0, 0, t2, o2), g.setBounds(0, 0, t2, o2);
          }, g.drawShape(), s5 !== false && To.styleTransforms(this, d), this.clone = function(e4) {
            return g.cloneProps(new To.Rectangle(e4 || !To.isPick(h2[0]) ? t2 : h2[0], e4 || !To.isPick(h2[1]) ? o2 : h2[1], e4 || !To.isPick(h2[2]) ? g.color : h2[2], e4 || !To.isPick(h2[3]) ? g.borderColor : h2[3], e4 || !To.isPick(h2[4]) ? g.borderWidth : h2[4], i2, g._dashed, l, s5, this.group, u));
          };
        }, To.extend(To.Rectangle, To.CustomShape, "clone", "zimCustomShape", false), To.Triangle = function(l, s5, t2, e3, o2, n, c2, u, d, r2, h2, i2, a, g) {
          if (z = zob(To.Triangle, arguments, "a, b, c, color, borderColor, borderWidth, corner, center, adjust, dashed, strokeObj, style, group, inherit", this))
            return z;
          z_d("53"), this.zimCustomShape_constructor(null, null, null, null, false), this.type = "Triangle", this.group = a;
          var p = i2 === false ? {} : To.getStyle(this.type, this.group, g);
          zot(l) && (l = p.a != null ? p.a : 100), zot(s5) && (s5 = p.b != null ? p.b : l), zot(t2) && (t2 = p.c != null ? p.c : s5), t2 == -1 && (t2 = Math.sqrt(Math.pow(l, 2) + Math.pow(s5, 2))), zot(c2) && (c2 = p.corner != null ? p.corner : 0), zot(u) && (u = p.center == null || p.center), zot(d) && (d = p.adjust != null ? p.adjust : 0), zot(o2) && (o2 = p.borderColor != null ? p.borderColor : null), zot(n) && (n = p.borderWidth != null ? p.borderWidth : null), o2 < 0 || n < 0 ? o2 = n = null : o2 != null && n == null && (n = 1), zot(e3) && (e3 = p.color != null ? p.color : 0 < n ? "rgba(0,0,0,0)" : "black"), zot(d) && (d = p.adjust != null ? p.adjust : 0), zot(h2) && (h2 = p.strokeObj != null ? p.strokeObj : {});
          var f3 = function() {
            return arguments;
          }(l, s5, t2, e3, o2, n);
          l = To.Pick.choose(l), s5 = To.Pick.choose(s5), t2 = To.Pick.choose(t2), this.a = l, this.b = s5, this.c = t2, e3 = To.Pick.choose(e3), o2 = To.Pick.choose(o2), n = To.Pick.choose(n);
          var m2 = this;
          m2._color = e3, m2._borderColor = o2, m2._borderWidth = n, m2._dashed = r2, m2._dashed && !Array.isArray(m2._dashed) && (m2._dashed = [10, 10]), m2._corner = c2;
          var z = [l, s5, t2];
          z.sort(function(e4, t3) {
            return t3 - e4;
          });
          var y, b, v = z[0], w = z[1], C = z[2], x2 = [z.indexOf(l), z.indexOf(s5), z.indexOf(t2)];
          w + C < v ? zog("zim display - Triangle(): invalid triangle lengths") : (y = this.shape = new createjs.Shape(), this.adjusted = d, this.addChild(y), b = y.graphics, m2.drawShape = function() {
            var e4 = [];
            Array.isArray(m2._corner) ? e4 = m2._corner : e4.push(m2._corner, m2._corner, m2._corner);
            for (var t3 = 0; t3 < 3; t3++)
              (c2[t3] < 0 || typeof c2[t3] != "number") && (c2[t3] = 0);
            b.c(), m2.colorCommand = b.f(m2._color).command, m2._color && m2._color.type && m2.specialColor(m2.colorCommand, m2._color), (zot(m2._borderWidth) || 0 < m2._borderWidth) && (zot(m2._borderColor) && zot(m2._borderWidth) || (zot(m2._borderColor) && (m2._borderColor = "black"), m2.borderColorCommand = b.s(m2._borderColor).command, m2._borderColor && m2._borderColor.type && m2.specialColor(m2.borderColorCommand, m2._borderColor), m2.borderWidthCommand = b.ss(m2._borderWidth, h2.caps, h2.joints, h2.miterLimit, h2.ignoreScale).command, m2._dashed && (m2.borderDashedCommand = b.sd(Array.isArray(m2._dashed) ? m2._dashed : [10, 10], m2._dashedOffset).command))), m2.one = { x: 0, y: 0 }, m2.two = { x: l, y: 0 };
            var o3 = 180 * Math.acos((Math.pow(w, 2) + Math.pow(C, 2) - Math.pow(v, 2)) / (2 * w * C)) / Math.PI, n2 = 180 * Math.asin(w * Math.sin(o3 * Math.PI / 180) / v) / Math.PI, r3 = [o3, n2, 180 - o3 - n2];
            m2.angles = [r3[x2[1]], r3[x2[2]], r3[x2[0]]];
            var i3 = m2.angles[1], a2 = Math.cos(i3 * Math.PI / 180) * s5, o3 = Math.sin(i3 * Math.PI / 180) * s5, n2 = Math.max(l, l - a2), r3 = o3;
            m2.setBounds(0, d, n2, r3), y.y = r3, m2.three = { x: l - a2, y: 0 - o3 };
            i3 = l * e4[0] / (e4[0] + e4[1] || 1);
            b.mt(i3, 0).at(l, 0, l - a2, 0 - o3, e4[1]).at(l - a2, 0 - o3, 0, 0, e4[2]).at(0, 0, l, 0, e4[0]).lt(i3, 0), b.cp(), u && (m2.regX = n2 / 2, m2.regY = r3 / 2), d && (m2.shape.y += d);
          }, m2.drawShape(), i2 !== false && To.styleTransforms(this, p), this.clone = function(e4) {
            e4 = m2.cloneProps(new To.Triangle(e4 || !To.isPick(f3[0]) ? l : f3[0], e4 || !To.isPick(f3[1]) ? s5 : f3[1], e4 || !To.isPick(f3[2]) ? t2 : f3[2], e4 || !To.isPick(f3[3]) ? m2.color : f3[3], e4 || !To.isPick(f3[4]) ? m2.borderColor : f3[4], e4 || !To.isPick(f3[5]) ? m2.borderWidth : f3[5], c2, u, d, r2, h2, i2, this.group, g));
            return m2.linearGradientParams && e4.linearGradient.apply(e4, m2.linearGradientParams), m2.radialGradientParams && e4.radialGradient.apply(e4, m2.radialGradientParams), e4;
          });
        }, To.extend(To.Triangle, To.CustomShape, "clone", "zimCustomShape"), To.Poly = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u) {
          if (p = zob(To.Poly, arguments, "radius, sides, pointSize, color, borderColor, borderWidth, dashed, strokeObj, style, group, inherit", this))
            return p;
          z_d("53.1"), this.zimCustomShape_constructor(null, null, null, null, false), this.type = "Poly", this.group = c2;
          var d = s5 === false ? {} : To.getStyle(this.type, this.group, u);
          zot(e3) && (e3 = d.radius != null ? d.radius : 50), zot(t2) && (t2 = d.sides != null ? d.sides : 5), zot(o2) && (o2 = d.pointSize != null ? d.pointSize : 0), zot(a) && (a = d.dashed != null && d.dashed), zot(r2) && (r2 = d.borderColor != null ? d.borderColor : null), zot(i2) && (i2 = d.borderWidth != null ? d.borderWidth : null), r2 < 0 || i2 < 0 ? r2 = i2 = null : r2 != null && i2 == null && (i2 = 1), zot(n) && (n = d.color != null ? d.color : 0 < i2 ? "rgba(0,0,0,0)" : "black"), zot(l) && (l = d.strokeObj != null ? d.strokeObj : {});
          var h2 = function() {
            return arguments;
          }(e3, t2, o2, n, r2, i2);
          e3 = To.Pick.choose(e3), t2 = To.Pick.choose(t2), o2 = To.Pick.choose(o2), n = To.Pick.choose(n), r2 = To.Pick.choose(r2), i2 = To.Pick.choose(i2);
          var g = this;
          g._radius = e3, g._color = n, g._sides = t2, g._pointSize = o2, g._borderColor = r2, g._borderWidth = i2, g._dashed = a, g._dashed && !Array.isArray(g._dashed) && (g._dashed = [10, 10]);
          var p = this.shape = new createjs.Shape();
          this.addChild(p), p.rotation = -90;
          var f3 = p.graphics;
          g.drawShape = function() {
            f3.c(), g.colorCommand = f3.f(g._color).command, g._color && g._color.type && g.specialColor(g.colorCommand, g._color), (zot(g._borderWidth) || 0 < g._borderWidth) && (zot(g._borderColor) && zot(g._borderWidth) || (zot(g._borderColor) && (g._borderColor = "black"), g.borderColorCommand = f3.s(g._borderColor).command, g._borderColor && g._borderColor.type && g.specialColor(g.borderColorCommand, g._borderColor), g.borderWidthCommand = f3.ss(g._borderWidth, l.caps, l.joints, l.miterLimit, l.ignoreScale).command, g._dashed && (g.borderDashedCommand = f3.sd(Array.isArray(g._dashed) ? g._dashed : [10, 10], g._dashedOffset).command))), f3.dp(0, 0, g._radius, g._sides, g._pointSize), g.setBounds(-g._radius, -g._radius, 2 * g._radius, 2 * g._radius);
          }, g.drawShape(), Object.defineProperty(g, "radius", { get: function() {
            return g._radius;
          }, set: function(e4) {
            g._radius = e4, g.drawShape();
          } }), Object.defineProperty(g, "sides", { get: function() {
            return g._sides;
          }, set: function(e4) {
            g._sides = e4, g.drawShape();
          } }), Object.defineProperty(g, "pointSize", { get: function() {
            return g._pointSize;
          }, set: function(e4) {
            g._pointSize = e4, g.drawShape();
          } }), s5 !== false && To.styleTransforms(this, d), this.clone = function(e4, t3) {
            e4 = g.cloneProps(new To.Poly(e4 || !To.isPick(h2[0]) ? g.radius : h2[0], e4 || !To.isPick(h2[1]) ? g.sides : h2[1], e4 || !To.isPick(h2[2]) ? g.pointSize : h2[2], e4 || !To.isPick(h2[3]) ? g.color : h2[3], e4 || !To.isPick(h2[4]) ? g.borderColor : h2[4], e4 || !To.isPick(h2[5]) ? g.borderWidth : h2[5], g.dashed, l, s5, this.group, u));
            return g.linearGradientParams && e4.linearGradient.apply(e4, g.linearGradientParams), g.radialGradientParams && e4.radialGradient.apply(e4, g.radialGradientParams), e4;
          };
        }, To.extend(To.Poly, To.CustomShape, "clone", "zimCustomShape", false), To.Line = function(e3, o2, v, w, C, t2, x2, r2, n, k, T2, i2, a, l, s5) {
          if (h2 = zob(To.Line, arguments, "length, thickness, color, startHead, endHead, dashed, strokeObj, lineType, lineOrientation, curveH, curveV, points, style, group, inherit", this))
            return h2;
          z_d("53.15"), this.zimCustomShape_constructor(null, null, null, null, false), this.type = "Line", this.group = l;
          var c2 = a === false ? {} : To.getStyle(this.type, this.group, s5);
          zot(e3) && (e3 = c2.length != null ? c2.length : 100), zot(t2) && (t2 = c2.dashed != null && c2.dashed), zot(o2) && (o2 = c2.thickness != null ? c2.thickness : 3), zot(v) && (v = c2.color != null ? c2.color : "black"), zot(w) && (w = c2.startHead != null ? c2.startHead : null), zot(C) && (C = c2.endHead != null ? c2.endHead : null), zot(x2) && (x2 = c2.strokeObj != null ? c2.strokeObj : {}), zot(r2) && (r2 = c2.lineType != null ? c2.lineType : "straight"), r2 !== "corner" && r2 != "curve" && (r2 = "straight"), zot(n) && (n = c2.lineOrientation != null ? c2.lineOrientation : "auto"), n !== "vertical" && n != "horizontal" && (n = "auto"), zot(k) && (k = c2.curveH != null ? c2.curveH : 20), zot(T2) && (T2 = c2.curveV != null ? c2.curveV : 20), zot(x2) && (x2 = c2.strokeObj != null ? c2.strokeObj : {});
          var u = function() {
            return arguments;
          }(e3, v, o2, w, C);
          e3 = To.Pick.choose(e3), v = To.Pick.choose(v), o2 = To.Pick.choose(o2), w = To.Pick.choose(w), C = To.Pick.choose(C), w && w.clone && (w = w.clone()), C && C.clone && (C = C.clone());
          var A3 = this;
          function d(e4, t3) {
            t3 == "triangle" || t3 == "arrow" ? (A3["_" + e4 + "Head"] = new To.Triangle(4 * o2, 4 * o2, 4 * o2, v)).rotation = 90 : t3 == "circle" && (A3["_" + e4 + "Head"] = new To.Circle(2.2 * o2, v)), zot(A3["_" + e4 + "Head"].startAngle) && (A3["_" + e4 + "Head"].startAngle = A3["_" + e4 + "Head"].rotation);
          }
          A3._length = e3, A3._color = v, A3._thickness = o2, A3._dashed = t2, A3._dashed && !Array.isArray(A3._dashed) && (A3._dashed = [10, 10]), A3._startX = 0, A3._startY = 0, A3._endX = e3, A3._endY = 0, A3._startHead = w, A3._endHead = C, A3._points = i2, A3._lineOrientation = n, A3.angle = 0, A3.lineType = r2, A3._startHead && d("start", A3._startHead), A3._endHead && d("end", A3._endHead), w = A3._startHead, C = A3._endHead, w && w.type == "Triangle" && (w.startRegY = w.regY), C && C.type == "Triangle" && (C.startRegY = C.regY);
          var h2 = this.shape = new createjs.Shape();
          this.addChild(h2);
          var P = h2.graphics;
          A3.drawShape = function(e4, t3) {
            var o3;
            if (P.c(), A3.colorCommand = P.s(A3._color).command, v && v.type && A3.specialColor(A3.colorCommand, v), A3.thicknessCommand = P.ss(A3._thickness, x2.caps, x2.joints, x2.miterLimit, x2.ignoreScale).command, A3._dashed && (A3.dashedCommand = P.sd(Array.isArray(A3._dashed) ? A3._dashed : [10, 10], A3._dashedOffset).command), A3._points) {
              var n2 = A3._points[0];
              A3._startX = n2[0], A3._startY = n2[1];
              var r3 = A3._points[A3._points.length - 1], i3 = [r3[r3.length - 2], r3[r3.length - 1]];
              A3._endX = i3[0], A3._endY = i3[1], P.mt(n2[0], n2[1]);
              for (var a2, l2 = 1; l2 < A3._points.length; l2++) {
                var s6 = A3._points[l2];
                l2 == 1 && (o3 = [A3._startX, A3._startY, s6[0], s6[1]]), s6.length == 2 ? P.lt(s6[0], s6[1]) : s6.length == 4 ? P.qt(s6[0], s6[1], s6[2], s6[3]) : s6.length == 6 && P.bt(s6[0], s6[1], s6[2], s6[3], s6[4], s6[5]);
              }
              a2 = 4 <= s6.length ? [s6[s6.length - 4], s6[s6.length - 3], A3._endX, A3._endY] : [(c3 = A3._points[A3._points.length - 2])[c3.lenth - 2], c3[c3.lenth - 1], A3._endX, A3._endY];
            } else {
              var c3, u2, d2, h3, g, p, f3, m2, z, y = A3._startX, b = A3._startY, r3 = A3._endX, i3 = A3._endY;
              A3.lineType == "straight" ? (w && w.type == "Triangle" && ((w.regY = 0) != (u2 = To.dist(y, b, r3, i3)) && (y += A3._startHead.height / 2 * (r3 - y) / u2), u2 != 0 && (b += A3._startHead.height / 2 * (i3 - b) / u2)), C && C.type == "Triangle" && ((C.regY = 0) != (u2 = To.dist(y, b, r3, i3)) && (r3 -= A3._endHead.height / 2 * (r3 - y) / u2), u2 != 0 && (i3 -= A3._endHead.height / 2 * (i3 - b) / u2))) : (e4 ? A3._lineOrientation == "horizontal" || A3.autoOrientation == "horizontal" ? w && w.type == "Triangle" && (w.regY = 0, y = y < r3 ? Math.min(r3, y + A3._startHead.height / 2) : Math.max(r3, y - A3._startHead.height / 2)) : w && w.type == "Triangle" && (w.regY = 0, b = b < i3 ? Math.min(i3, b + A3._startHead.height / 2) : Math.max(i3, b - A3._startHead.height / 2)) : w && w.type == "Triangle" && (w.regY = w.startRegY), t3 ? A3._lineOrientation == "horizontal" || A3.autoOrientation == "horizontal" ? C && C.type == "Triangle" && (C.regY = 0, y < r3 ? r3 -= A3._endHead.height / 2 : r3 += A3._endHead.height / 2) : C && C.type == "Triangle" && (C.regY = 0, b < i3 ? i3 -= A3._endHead.height / 2 : i3 += A3._endHead.height / 2) : C && C.type == "Triangle" && (C.regY = C.startRegY)), A3.lineType == "straight" ? (P.mt(y, b).lt(r3, i3), o3 = a2 = [y, b, r3, i3]) : A3.lineType == "corner" ? (h3 = y + 0.4 * (r3 - y), g = b + 0.4 * (i3 - b), A3._lineOrientation == "auto" && (A3.autoOrientation = Math.abs(y - r3) > Math.abs(b - i3) ? "horizontal" : "vertical"), A3._lineOrientation == "horizontal" || A3.autoOrientation == "horizontal" ? (o3 = a2 = [y, b, h3, b], P.mt(y, b).lt(h3, b).lt(h3, i3).lt(r3, i3)) : (o3 = a2 = [y, b, y, g], P.mt(y, b).lt(y, g).lt(r3, g).lt(r3, i3))) : (n2 = r3 < y ? -1 : 1, c3 = i3 < b ? -1 : 1, u2 = y, d2 = b, e4 = Math.abs(y - r3), t3 = Math.abs(b - i3), h3 = Math.min(k, 0.5 * e4), g = Math.min(T2, 0.5 * t3), A3._lineOrientation == "auto" && (A3.autoOrientation = Math.abs(y - r3) > Math.abs(b - i3) ? "horizontal" : "vertical"), A3._lineOrientation == "horizontal" || A3.autoOrientation == "horizontal" ? (p = t3 - 2 * g, f3 = (e4 - 2 * h3) / 2, P.mt(u2, d2), 0 < f3 && (u2 += f3 * n2, P.lt(u2, d2)), z = d2, d2 += g * c3, u2 += h3 * n2, P.qt(u2, z, u2, d2), o3 = a2 = [y, b, u2, b], 0 < p && (d2 += p * c3, P.lt(u2, d2)), d2 += g * c3, m2 = u2, u2 += h3 * n2, P.qt(m2, d2, u2, d2), 0 < f3 && (u2 += f3 * n2, P.lt(u2, d2))) : (p = e4 - 2 * h3, f3 = (t3 - 2 * g) / 2, P.mt(u2, d2), 0 < f3 && (d2 += f3 * c3, P.lt(u2, d2)), m2 = u2, u2 += h3 * n2, d2 += g * c3, P.qt(m2, d2, u2, d2), o3 = a2 = [y, b, y, d2], 0 < p && (u2 += p * n2, P.lt(u2, d2)), u2 += h3 * n2, z = d2, d2 += g * c3, P.qt(u2, z, u2, d2), 0 < f3 && (d2 += f3 * c3, P.lt(u2, d2))));
            }
            A3.setBounds(Math.min(A3._startX, A3._endX), Math.min(A3._startY, A3._endY), Math.abs(A3._startX - A3._endX), Math.abs(A3._startY - A3._endY)), A3._length = Math.sqrt(Math.pow(A3._startX - A3._endX, 2) + Math.pow(A3._startY - A3._endY, 2)), A3.angle = 180 * Math.atan2(A3._endY - A3._startY, A3._endX - A3._startX) / Math.PI, A3._startHead && A3._startHead.loc && (A3._startHead.loc(A3._startX, A3._startY, A3), d2 = 180 * Math.atan2(o3[3] - o3[1], o3[2] - o3[0]) / Math.PI, A3._startHead.rotation = d2 - 180 + A3._startHead.startAngle), A3._endHead && A3._endHead.loc && (A3._endHead.loc(A3._endX, A3._endY, A3), a2 = 180 * Math.atan2(a2[3] - a2[1], a2[2] - a2[0]) / Math.PI, A3._endHead.rotation = a2 + A3._endHead.startAngle);
          }, A3.drawShape(), this.setPoints = function(e4, t3, o3, n2, r3, i3) {
            return Array.isArray(e4) && zot(t3) ? A3.points = e4 : (e4 && !zot(e4.x) ? (A3._startX = zot(e4.x) ? A3._startX : e4.x, A3._startY = zot(e4.y) ? A3._startY : e4.y, t3 && (A3._endX = zot(t3.x) ? A3._endX : t3.x, A3._endY = zot(t3.y) ? A3._endY : t3.y)) : (A3._startX = zot(e4) ? A3._startX : e4, A3._startY = zot(t3) ? A3._startY : t3, A3._endX = zot(o3) ? A3._endX : o3, A3._endY = zot(n2) ? A3._endY : n2), A3.drawShape(r3, i3)), A3;
          }, this.from = function(e4, t3) {
            return e4 && !zot(e4.x) ? (A3._startX = zot(e4.x) ? A3._startX : e4.x, A3._startY = zot(e4.y) ? A3._startY : e4.y) : (A3._startX = zot(e4) ? A3._startX : e4, A3._startY = zot(t3) ? A3._startY : t3), A3.drawShape(), A3;
          }, this.to = function(e4, t3) {
            return e4 && !zot(e4.x) ? (A3._endX = zot(e4.x) ? A3._endX : e4.x, A3._endY = zot(e4.y) ? A3._endY : e4.y) : (A3._endX = zot(e4) ? A3._endX : e4, A3._endY = zot(t3) ? A3._endY : t3), A3.drawShape(), A3;
          }, Object.defineProperty(A3, "length", { get: function() {
            return A3._length;
          }, set: function(e4) {
            var t3, o3, n2 = A3.length != 0 ? e4 / A3.length : 0;
            isNaN(n2) || (t3 = A3.scaleX, o3 = A3.scaleY, A3.scaleX *= n2, A3.scaleY *= n2, e4 = A3.localToGlobal(A3._startX, A3._startY), n2 = A3.localToGlobal(A3._endX, A3._endY), A3.scaleX = t3, A3.scaleY = o3, e4 = A3.globalToLocal(e4.x, e4.y), n2 = A3.globalToLocal(n2.x, n2.y), A3.setPoints(e4, n2));
          } }), Object.defineProperty(A3, "startPoint", { get: function() {
            return new To.Point(A3._startX, A3._startY);
          }, set: function(e4) {
            A3._startX = zot(e4.x) ? A3._startX : e4.x, A3._startY = zot(e4.y) ? A3._startY : e4.y, A3.drawShape();
          } }), Object.defineProperty(A3, "endPoint", { get: function() {
            return new To.Point(A3._endX, A3._endY);
          }, set: function(e4) {
            A3._endX = zot(e4.x) ? A3._endX : e4.x, A3._endY = zot(e4.y) ? A3._endY : e4.y, A3.drawShape();
          } }), Object.defineProperty(A3, "startHead", { get: function() {
            return A3._startHead;
          }, set: function(e4) {
            A3._startHead = e4, A3.drawShape();
          } }), Object.defineProperty(A3, "endHead", { get: function() {
            return A3._endHead;
          }, set: function(e4) {
            A3._endHead = e4, A3.drawShape();
          } }), Object.defineProperty(A3, "startX", { get: function() {
            return A3._startX;
          }, set: function(e4) {
            A3._startX = e4 || 0, A3.drawShape();
          } }), Object.defineProperty(A3, "startY", { get: function() {
            return A3._startY;
          }, set: function(e4) {
            A3._startY = e4 || 0, A3.drawShape();
          } }), Object.defineProperty(A3, "endX", { get: function() {
            return A3._endX;
          }, set: function(e4) {
            A3._endX = e4 || 0, A3.drawShape();
          } }), Object.defineProperty(A3, "endY", { get: function() {
            return A3._endY;
          }, set: function(e4) {
            A3._endY = e4 || 0, A3.drawShape();
          } }), Object.defineProperty(A3, "points", { get: function() {
            return A3._points;
          }, set: function(e4) {
            e4 && (A3._points = e4, A3.drawShape());
          } }), Object.defineProperty(A3, "lineOrientation", { get: function() {
            return A3._lineOrientation;
          }, set: function(e4) {
            e4 && (A3._lineOrientation = e4, A3.drawShape());
          } }), a !== false && To.styleTransforms(this, c2), this.clone = function(e4, t3) {
            var o3 = e4 || !To.isPick(u[3]) ? A3._startHead : u[3];
            o3 && o3.clone && ((o3 = o3.clone()).rotation = A3._startHead.startAngle);
            var n2 = e4 || !To.isPick(u[4]) ? A3._endHead : u[4];
            n2 && n2.clone && ((n2 = n2.clone()).rotation = A3._endHead.startAngle);
            n2 = A3.cloneProps(new To.Line(e4 || !To.isPick(u[0]) ? A3.length : u[0], e4 || !To.isPick(u[2]) ? A3.thickness : u[2], e4 || !To.isPick(u[1]) ? A3.color : u[1], o3, n2, A3.dashed, x2, r2, A3._lineOrientation, k, T2, To.copy(i2), a, this.group, s5));
            return A3.points ? n2.setPoints(A3.points) : n2.setPoints(A3._startX, A3._startY, A3._endX, A3._endY), A3.linearGradientParams && n2.linearGradient.apply(n2, A3.linearGradientParams), A3.radialGradientParams && n2.radialGradient.apply(n2, A3.radialGradientParams), n2;
          };
        }, To.extend(To.Line, To.CustomShape, "clone", "zimCustomShape", false), To.Squiggle = function(w, C, x2, k, T2, A3, P, B, S2, E, t2, I2, M, O, j, L, _, e3, Y, D, X, o2, R) {
          if (n = zob(To.Squiggle, arguments, "color, thickness, points, length, controlLength, controlType, lockControlType, showControls, lockControls, handleSize, allowToggle, move, dashed, onTop, stickColor, selectColor, selectPoints, editPoints, interactive, strokeObj, style, group, inherit", this))
            return n;
          z_d("53.2"), this.group = o2;
          var n, W = X === false ? {} : To.getStyle("Squiggle", this.group, R);
          zot(C) && (C = W.thickness != null ? W.thickness : 6), zot(k) && (k = W.length != null ? W.length : 300), zot(x2) && (x2 = W.points != null ? W.points : 5), typeof x2 == "string" && (n = new To.SVGContainer(), x2 = n.processPath(x2));
          var r2, F2, H, N, V, G, q, U, Q, Z2, K, J, i2, $, ee, te, a, l, oe = typeof x2 == "number" ? x2 : x2.length;
          function s5() {
            te && te.removeAllEventListeners(), N.num = oe = typeof x2 == "number" ? x2 : x2.length, oe = Math.max(2, oe), T2 = k / oe, Q = N.shape = new To.Shape({ style: false }).addTo(N);
            var o3 = N.sticks = new To.Shape({ style: false }).addTo(N);
            E <= 0 && o3.removeFrom();
            var m2 = Q.graphics;
            m2.c();
            var z = o3.graphics;
            z.c();
            var e4 = E / 10 * 8, t3 = E;
            N.selectPoints ? (N.selectedBalls = new To.SelectionSet(), N.selectedRect1s = new To.SelectionSet(), N.selectedRect2s = new To.SelectionSet(), N.selectionManager = new To.SelectionManager([N.selectedBalls, N.selectedRect1s, N.selectedRect2s], "ctrl", false)) : N.selectionManager = new To.SelectionManager(null, "ctrl");
            var n2, r3, i3 = To.mobile();
            te = N.controls = new To.Container({ style: false }).addTo(N), N.interactive && te.drag({ onTop: !i3 }), G = [], U = [], q = [];
            for (var a2, l2, s6, c2, u, d, h2 = 0; h2 < oe; h2++)
              (d = new To.Container({ style: false }).addTo(te)).num = h2, typeof x2 == "number" ? (c2 = To.Pick.choose(T2), u = new To.Container(c2, C, null, null, false).addTo(N).loc({ x: h2 * k / (oe - 1) - c2 / 2, y: h2 % 2 * c2 }), a2 = new To.Circle(e4, N.selectPoints && N.selectedBalls.isSelected(h2) ? L : To.light, To.dark, 2, null, null, null, null, false).centerReg(u).loc({ x: c2 / 2, y: 0 }), l2 = new To.Rectangle(t3, t3, N.selectPoints && N.selectedRect1s.isSelected(h2) ? L : b(A3), E == 0 ? null : To.dark, E == 0 ? null : 2, null, null, null, false).centerReg(u).loc({ x: 0, y: 0 }), s6 = new To.Rectangle(t3, t3, N.selectPoints && N.selectedRect2s.isSelected(h2) ? L : b(A3), E == 0 ? null : To.dark, E == 0 ? null : 2, null, null, null, false).centerReg(u).loc({ x: c2, y: 0 }), c2 = u.localToLocal(a2.x, a2.y, te), a2.x = c2.x, a2.y = c2.y, a2.addTo(d, null, false), c2 = u.localToLocal(l2.x, l2.y, te), l2.x = A3 == "none" ? 0 : c2.x - a2.x, l2.y = A3 == "none" ? 0 : c2.y - a2.y, l2.addTo(d, null, false), u = u.localToLocal(s6.x, s6.y, te), s6.x = A3 == "none" ? 0 : u.x - a2.x, s6.y = A3 == "none" ? 0 : u.y - a2.y, s6.addTo(d, null, false), d.x = a2.x, d.y = a2.y, a2.x = 0, a2.y = 0, A3 == "none" && a2.addTo(d, null, false)) : (n2 = (r3 = x2[h2])[8] || A3, d.loc({ x: r3[0], y: r3[1] }), a2 = new To.Circle(e4, To.light, To.dark, 2, null, null, null, null, false).centerReg({ add: false }).addTo(d).loc({ x: r3[2], y: r3[3] }), l2 = new To.Rectangle(t3, t3, b(n2), E == 0 ? null : To.dark, E == 0 ? null : 2, null, null, null, false).centerReg({ add: false }).addTo(d, 0).loc({ x: r3[4], y: r3[5] }), s6 = new To.Rectangle(t3, t3, b(n2), E == 0 ? null : To.dark, E == 0 ? null : 2, null, null, null, false).centerReg({ add: false }).addTo(d, 0).loc({ x: r3[6], y: r3[7] })), a2.mySet = d, a2.rect1 = l2, a2.rect2 = s6, a2.index = h2, i3 ? a2.on("mousedown", f3) : a2.on("dblclick", y), l2.ball = a2, (l2.other = s6).ball = a2, s6.other = l2, E == 0 && (a2.expand(10), l2.expand(10), s6.expand(10)), i3 && (a2.expand(), l2.expand(), s6.expand()), n2 = [d, a2, l2, s6, r3 ? r3[8] : A3], G.push(n2), q.push(a2), U.push(d);
            var g2, p2 = false;
            function f3(e5) {
              p2 ? (e5.preventDefault(), y(e5)) : (p2 = true, setTimeout(function() {
                p2 = false;
              }, 300));
            }
            function y(e5) {
              var t4, o4;
              N.lockControlType || (t4 = e5.target, o4 = G[t4.index][4] || A3, Math.abs(t4.rect1.x) <= 2 && Math.abs(t4.rect1.y) <= 2 && Math.abs(t4.rect2.x) <= 2 && Math.abs(t4.rect2.y) <= 2 && (o4 = "none"), o4 == "none" && t4.parent.addChildAt(t4, 0), (o4 = N.types[(N.types.indexOf(o4) + (N.shiftKey ? -1 : 1) + N.types.length) % N.types.length]) == "none" && (t4.rect1.x = t4.rect1.y = t4.rect2.x = t4.rect2.y = 0, t4.parent.addChild(t4), e5.stopImmediatePropagation()), G[t4.index][4] = o4, t4.rect1.color = b(o4), t4.rect2.color = b(o4), N.drawShape(), (o4 = new createjs.Event("change")).controlType = "bezierSwitch", N.dispatchEvent(o4), t4.stage.update());
            }
            function b(e5) {
              var t4 = { straight: To.pink, free: To.yellow, none: To.blue };
              return t4[e5] || To.purple;
            }
            function v(e5) {
              var t4;
              e5.target.type == "Circle" && (t4 = N.lastSelectedIndex = N.controls.getChildIndex(e5.target.parent), N.controls.numChildren <= 2 || (e5 = N.points, N.selectPoints && (N.lastPoints = To.copy(e5)), e5.splice(t4, 1), N.points = e5, N.stage.update(), N.lastSelected = N.lastSelectedIndex = null));
            }
            N.drawShape = function() {
              m2.c();
              var e5 = To.mobile() ? 10 : 6;
              if (C < e5) {
                m2.s("rgba(0,0,0,.01)").ss(e5);
                var t4 = (i4 = G[0][0]).localToLocal(G[0][1].x, G[0][1].y, Q);
                m2.mt(t4.x, t4.y);
                for (var o4 = 0; o4 < G.length; o4++) {
                  var n3 = o4, r4 = (o4 + 1) % G.length, i4 = G[n3][0], a3 = G[n3][1], l3 = G[n3][2], s7 = G[n3][3], c3 = G[r4][0], u2 = G[r4][1], d2 = G[r4][2], h3 = (G[r4][3], i4.localToLocal(s7.x, s7.y, Q)), g3 = c3.localToLocal(d2.x, d2.y, Q), p3 = c3.localToLocal(u2.x, u2.y, Q);
                  o4 != G.length - 1 && m2.bt(h3.x, h3.y, g3.x, g3.y, p3.x, p3.y);
                }
              }
              N.colorCommand || (N.colorCommand = m2.s(N._color).command, w && w.type && N.specialColor(N.colorCommand, w)), N.thicknessCommand || (N.thicknessCommand = m2.ss(N._thickness, D.caps, D.joints, D.miterLimit, D.ignoreScale).command), N._dashed && (N.dashedCommand || (N.dashedCommand = m2.sd(Array.isArray(N._dashed) ? N._dashed : [10, 10], N._dashedOffset).command)), t4 = (i4 = G[0][0]).localToLocal(G[0][1].x, G[0][1].y, Q), m2.mt(t4.x, t4.y), z.c().s(N.stickColor).ss(1);
              for (o4 = 0; o4 < G.length; o4++) {
                n3 = o4, r4 = (o4 + 1) % G.length, i4 = G[n3][0], a3 = G[n3][1], l3 = G[n3][2], s7 = G[n3][3], c3 = G[r4][0], u2 = G[r4][1], d2 = G[r4][2], h3 = (G[r4][3], i4.localToLocal(s7.x, s7.y, Q)), g3 = c3.localToLocal(d2.x, d2.y, Q), p3 = c3.localToLocal(u2.x, u2.y, Q);
                o4 != G.length - 1 && m2.bt(h3.x, h3.y, g3.x, g3.y, p3.x, p3.y);
                var t4 = i4.localToLocal(a3.x, a3.y, Q), f4 = i4.localToLocal(l3.x, l3.y, Q);
                o4 == 0 && (l3.visible = 0), o4 != 0 && z.mt(t4.x, t4.y).lt(f4.x, f4.y), o4 != G.length - 1 && z.mt(t4.x, t4.y).lt(h3.x, h3.y), o4 == G.length - 1 && (s7.visible = 0);
              }
              N._dashed && m2.append(N.dashedCommand), m2.append(N.thicknessCommand), m2.append(N.colorCommand);
            }, N.drawShape(), te.on("mousedown", function(e5) {
              var t4, o4, n3;
              if ((V = e5.target.stage, !N.lockControls) && (N.selectPoints && (N.keyFocus = true), g2 = { x: e5.target.x, y: e5.target.y }, e5.target.rect1 ? ((n3 = e5.target).startX = n3.x, n3.startY = n3.y, n3.rect1.startX = n3.rect1.x, n3.rect1.startY = n3.rect1.y, n3.rect2.startX = n3.rect2.x, n3.rect2.startY = n3.rect2.y) : ((o4 = e5.target).startX = o4.x, o4.startY = o4.y, t4 = (n3 = o4.ball).index, e5 = A3, zot(G[t4][4]) || (e5 = G[t4][4]), e5 == "straight" && (o4 = (e5 = o4.other).x - n3.x, n3 = e5.y - n3.y, e5.stickLength = Math.sqrt(Math.pow(o4, 2) + Math.pow(n3, 2)))), N.selectPoints)) {
                var r4 = N.selectionManager.currentSet;
                if (r4 && r4.selections && 0 < r4.selections.length)
                  for (var i4 = 0; i4 < r4.selections.length; i4++) {
                    var a3 = N.pointObjects[r4.selections[i4]];
                    a3[1].startX = a3[1].x, a3[1].startY = a3[1].y, a3[2].startX = a3[2].x, a3[2].startY = a3[2].y, a3[3].startX = a3[3].x, a3[3].startY = a3[3].y;
                  }
              }
            }), N.selectPoints && te.tap(function(e5) {
              var t4;
              e5.target.rect1 ? (t4 = e5.target, N.selectedBalls.toggle(t4.parent.num)) : ((e5 = e5.target).color = "white", ((t4 = e5.ball).rect1 == e5 ? N.selectedRect1s : N.selectedRect2s).toggle(t4.parent.num));
              for (var o4 = 0; o4 < N.pointObjects.length; o4++) {
                var n3 = N.pointObjects[o4];
                n3[1].color = N.selectedBalls.isSelected(o4) ? To.white : To.light, n3[2].color = N.selectedRect1s.isSelected(o4) ? To.white : b(n3[4]), n3[3].color = N.selectedRect2s.isSelected(o4) ? To.white : b(n3[4]);
              }
              V.update();
            }), te.on("pressmove", function(e5) {
              if (!N.lockControls)
                if (N.selectPoints) {
                  var t4 = ne();
                  if (t4.indexOf(e5.target) == -1)
                    ee(e5.target), N.drawShape();
                  else if (0 < t4.length) {
                    for (var o4 = e5.target.x - e5.target.startX, n3 = e5.target.y - e5.target.startY, r4 = 0; r4 < t4.length; r4++) {
                      var i4 = t4[r4];
                      i4.x = i4.startX + o4, i4.y = i4.startY + n3, ee(i4);
                    }
                    N.drawShape();
                  }
                } else
                  ee(e5.target), N.drawShape();
            }), te.on("pressup", function(e5) {
              var t4, o4;
              N.lockControls || (t4 = e5.target.x != g2.x || e5.target.y != g2.y, o4 = new createjs.Event("change"), e5.target.rect1 ? (o4.controlType = "bezierPoint", function(e6) {
                if (N.selectPoints) {
                  var t5 = ne();
                  if (t5 && t5.indexOf(e6) == -1)
                    re(e6);
                  else if (t5 && 0 < t5.length)
                    for (var o5 = 0; o5 < t5.length; o5++)
                      re(t5[o5]);
                  else
                    re(e6);
                } else
                  re(e6);
              }(e5.target)) : o4.controlType = "bezierHandle", t4 && N.dispatchEvent(o4));
            }), N.changeControl = function(e5, t4, o4, n3, r4, i4, a3, l3, s7) {
              if (u2 = zob(N.changeControl, arguments, "index, type, rect1X, rect1Y, rect2X, rect2Y, circleX, circleY, update"))
                return u2;
              if (zot(e5))
                for (var c3 = 0; c3 < G.length; c3++)
                  N.changeControl(c3, t4, o4, n3, r4, i4, a3, l3);
              else {
                var u2 = G[e5];
                (u2[4] = t4) == "none" ? (zot(a3) || (u2[2].x = a3), zot(l3) || (u2[2].y = l3), u2[2].x = u2[1].x, u2[2].y = u2[1].y, u2[3].x = u2[1].x, u2[3].y = u2[1].y, u2[1].parent.addChild(u2[1])) : (zot(o4) || (u2[2].x = o4), zot(n3) || (u2[2].y = n3), zot(r4) || (u2[3].x = r4), zot(i4) || (u2[3].y = i4), zot(a3) || (u2[1].x = a3), zot(l3) || (u2[1].y = l3), u2[1].parent.addChildAt(u2[1], 0)), s7 && (N.update(), V && V.update());
              }
            }, N.transformPoints = function(e5, t4, o4, n3) {
              return N.points = To.transformPoints(N.points, e5, t4, o4, n3), N;
            }, N.traverse = function(t4, e5, o4, n3) {
              var r4 = To.copy(N.segmentRatios);
              r4.unshift(0), zot(o4) && (o4 = e5 + 1);
              var i4, a3, l3 = e5 < o4;
              return a3 = l3 ? (i4 = 100 * r4[e5], 100 * r4[o4]) : (i4 = 50 + (100 - 100 * r4[e5]) / 2, 50 + (100 - 100 * r4[o4]) / 2), t4.percentComplete = t4.zimStartPercent = i4, t4.animate({ ease: "linear", props: { path: N }, rewind: !l3, time: n3, events: true }), t4.on("animation", function(e6) {
                (t4.percentComplete > a3 || t4.percentComplete == 0) && (t4.stopAnimate(), e6.remove(), (e6 = new createjs.Event("traversed")).obj = t4, N.dispatchEvent(e6));
              }), N;
            }, N.reversePoints = function() {
              return x2 = To.copy(N.points), N.points = To.reversePoints(To.copy(N.points)), N.update(), N;
            }, N.appendPoints = function(e5, t4) {
              var o4 = To.copy(N.points);
              return N.points = To.appendPoints(o4, e5, t4), N.update(), N;
            }, N.prependPoints = function(e5, t4) {
              var o4 = To.copy(N.points);
              return N.points = To.rependPoints(o4, x2, t4), N.update(), N;
            }, N.splitPoints = function(e5) {
              var t4 = To.copy(N.points);
              if (!(e5 < 1 || e5 > t4.length - 1)) {
                var o4 = To.splitPoints(t4, e5), t4 = o4[0], e5 = o4[1], o4 = N.clone();
                return N.points = t4, N.update(), o4.points = e5, N.parent && o4.addTo(N.parent), o4;
              }
            }, N.makeBlob = function(n3, e5) {
              zot(n3) && (n3 = "mirror"), zot(e5) && (e5 = 5);
              var t4 = To.copy(N.points);
              return To.loop(t4, function(e6, t5, o4) {
                e6[8] || (e6[8] = "mirror"), t5 == 0 && (n3 == "free" && (e6[4] = e6[5] = 0), e6[8] = n3), t5 == o4 - 1 && (n3 == "free" && (e6[6] = e6[7] = 0), e6[8] = n3);
              }), Math.abs(t4[0][0] - t4[t4.length - 1][0]) < e5 && Math.abs(t4[0][1] - t4[t4.length - 1][1]) < e5 && (t4[0][4] = t4[t4.length - 1][4], t4[0][5] = t4[t4.length - 1][5], t4.pop()), new To.Blob({ points: t4, borderColor: N.color, borderWidth: N.thickness, showControls: N.controlsVisible, interactive: N.interactive, onTop: N.onTop, dashed: N.dashed, stickColor: N.stickColor });
            }, N.update = function(e5) {
              return e5 ? N.points = N.pointsAdjusted : N.drawShape(), N.zimAnimateChanged = true, N;
            }, N.interactive && (I2 && Q.drag({ onTop: false }), Z2 = Q.on("mousedown", function(e5) {
              V = e5.target.stage, g2 = { x: Q.x, y: Q.y }, N.selectPoints && (N.keyFocus = true), N.onTop && (e5 = N.parent.numChildren - 1, N.parent.getChildAt(e5).type == "Keyboard" && e5--, N.parent.setChildIndex(N, e5));
            }), K = Q.on("pressmove", function() {
              te.x = Q.x, te.y = Q.y, o3.x = Q.x, o3.y = Q.y;
            }), J = Q.on("pressup", function() {
              var e5 = Q.x != g2.x || Q.y != g2.y, t4 = Q.localToLocal(N.regX, N.regY, N.parent);
              N.x = t4.x, N.y = t4.y, te.x = te.y = o3.x = o3.y = Q.x = Q.y = 0, e5 && ((e5 = new createjs.Event("change")).controlType = "move", N.dispatchEvent(e5)), V && V.update();
            }), N.move || ae(true)), N.toggleEvent = N.on("mousedown", function() {
              N.allowToggle && (F2 || (N.showControls(), N.dispatchEvent("controlsshow")));
            }), N.added(function() {
              V = N.stage, N.toggleStageEvent && V.off("stagemousedown", N.toggleStageEvent), N.toggleStageEvent = V.on("stagemousedown", function(e5) {
                N.allowToggle && N.stage && F2 && !N.hitTestPoint(e5.stageX / To.scaX, e5.stageY / To.scaY, false) && (N.hideControls(), N.dispatchEvent("controlshide"));
              });
            }), N.clickEvent = N.on("click", function() {
              N.ctrlKey && setTimeout(function() {
                N.clone(true).addTo(N.stage).mov(0, 100), N.allowToggle && (N.hideControls(), N.dispatchEvent("controlshide"));
                var e5 = new createjs.Event("change");
                e5.controlType = "move", N.dispatchEvent(e5), N.stage.update();
              }, 50);
            }), N.hideControls = function() {
              return N.toggled = false, te.visible = false, o3.visible = false, F2 = false, N.stage && N.stage.update(), !N.allowToggle && N.move && ae(), N;
            }, B || N.hideControls(), N.showControls = function() {
              return N.toggled = true, te.visible = true, o3.visible = true, F2 = true, te.x = Q.x, te.y = Q.y, o3.x = Q.x, o3.y = Q.y, N.addChildAt(Q, 0), N.move && !N.allowToggle && ie(), N.stage && N.stage.update(), N;
            }, N.toggle = function(e5) {
              return e5 !== true && (e5 === false || F2) ? N.hideControls() : N.showControls(), N;
            }, N.recordData = function(e5) {
              zot(e5) && (e5 = false);
              var t4 = { type: "Blob", index: N.parent ? N.parent.getChildIndex(N) : -1, x: N.x, y: N.y, points: N.recordPoints(), color: N.color, thickness: N.thickness, move: N.move, toggle: N.allowToggle, controlsVisible: F2 };
              return e5 ? JSON.stringify(t4) : t4;
            }, N.setData = function(e5, t4) {
              if (!zot(e5)) {
                if (t4)
                  try {
                    e5 = JSON.parse(e5);
                  } catch (e6) {
                    return;
                  }
                var o4 = e5.index;
                zot(o4) && (o4 = -1), delete e5.index;
                var n3, t4 = e5.points;
                for (n3 in zot(t4) || N.setPoints(t4), delete e5.points, N.num = t4.length, e5)
                  N[n3] = e5[n3];
                return N.parent && N.parent.setChildIndex(N, o4), N.update(), N;
              }
            }, N.recordPoints = function(e5) {
              zot(e5) && (e5 = false);
              var t4 = N.points;
              return e5 && (N.pane || (e5 = N.pane = new To.Pane({ container: N.stage, width: Math.min(500, N.stage.width - 20), height: Math.min(500, N.stage.height - 20), draggable: true }), (N.textArea = new To.TextArea(Math.min(400, N.stage.width - 70), Math.min(400, N.stage.height - 70))).centerReg(e5)), N.textArea.text = JSON.stringify(t4), N.pane.show()), t4;
            }, !(N.setPoints = function(e5) {
              for (var t4, o4, n3 = 0; n3 < e5.length; n3++)
                t4 = G[n3], o4 = e5[n3], zot(t4) || (t4[0].x = o4[0], t4[0].y = o4[1], t4[1].x = o4[2], t4[1].y = o4[3], t4[2].x = o4[4], t4[2].y = o4[5], t4[3].x = o4[6], t4[3].y = o4[7], t4[4] = o4[8]);
              return N.update(), N;
            }) !== X && To.styleTransforms(N, W), N.clone = function(e5, t4) {
              e5 = N.cloneProps(new To.Squiggle(t4 ? N.colorCommand : e5 || !To.isPick(H[0]) ? N.color : H[0], N.thickness, N.recordPoints(), k, T2, A3, P, te.visible, S2, E, N.allowToggle, N.move, M, O, j, L, _, N.editPoints, Y, D, X, N.group, R));
              return N.linearGradientParams && e5.linearGradient.apply(e5, N.linearGradientParams), N.radialGradientParams && e5.radialGradient.apply(e5, N.radialGradientParams), e5;
            }, N.shape.on("mousedown", function(e5) {
              V = e5.target.stage, N.editPoints && (N.controlsVisible ? (N.pressX = e5.stageX / To.scaX, N.pressY = e5.stageY / To.scaX) : (N.pressX = null, N.pressY = null));
            }), N.addPointFactor = 10, N.addMinDistance = 15, N.shape.on("pressup", function(e5) {
              var n3, t4, r4, i4, o4, a3;
              N.editPoints && N.pressX && Math.abs(N.pressX - e5.stageX / To.scaX) < $ && Math.abs(N.pressY - e5.stageY / To.scaY) < $ && (N.selectPoints && (N.lastPoints = To.copy(N.points)), a3 = N.points, n3 = N.globalToLocal(e5.stageX / To.scaX, e5.stageY / To.scaY), t4 = To.closestPointAlongCurve(n3, N.segmentPoints), N.editPoints == "anywhere" ? (a3.splice(t4 + 1, 0, [n3.x, n3.y, 0, 0, 0, 0, 0, 0]), N.points = a3, N.changeControl({ index: t4 + 1, type: "mirror", update: true })) : (o4 = N.pointsAdjusted, e5 = N.getSegmentPoint(o4[t4], o4[(t4 + 1) % o4.length]), o4 = To.distanceAlongCurve(e5), e5 = Math.round(o4 / N.addPointFactor), o4 = N.interpolate(e5, t4, false, a3), r4 = 1e4, To.loop(o4, function(e6, t5) {
                var o5 = To.dist(e6, n3);
                o5 < r4 && (r4 = o5, i4 = t5, 0);
              }), r4 < N.addMinDistance && (o4 = (a3 = N.segmentRatios)[t4], a3 = 0 < t4 ? a3[t4 - 1] : 0, N.addPoint(100 * (a3 + i4 / (e5 + 1) * (o4 - a3))))), N.lastSelectedIndex = t4 + 1, N.lastSelected = N.controls.getChildAt(N.lastSelectedIndex), N.stage.update());
            }), N.controls.on("click", function(e5) {
              N.lastSelected = e5.target.parent;
              N.lastSelectedIndex = N.controls.getChildIndex(e5.target.parent);
              N.editPoints && N.selectionManager.shiftKey && v(e5);
            }), N.controls.hold(v), F2 || N.hideControls(), N.dispatchEvent("update");
          }
          function ne() {
            var e4 = [], t3 = N.selectionManager.currentSet;
            if (t3 && t3.selections && 0 < t3.selections.length)
              for (var o3 = 0; o3 < t3.selections.length; o3++) {
                var n2 = N.pointObjects[t3.selections[o3]];
                t3 == N.selectedBalls ? e4.push(n2[1]) : t3 == N.selectedRect1s ? e4.push(n2[2]) : t3 == N.selectedRect2s && e4.push(n2[3]);
              }
            return e4;
          }
          function re(e4) {
            var t3, o3, n2;
            e4.type == "Circle" && (o3 = (t3 = e4).mySet, n2 = t3.rect1, e4 = t3.rect2, n2.x -= t3.x, n2.y -= t3.y, e4.x -= t3.x, e4.y -= t3.y, o3.x += t3.x, o3.y += t3.y, t3.x = 0, t3.y = 0);
          }
          function ie() {
            N.move != "always" && (i2 || (i2 = true, Q.drag({ onTop: false }), Z2 = Q.on("mousedown", Z2), K = Q.on("pressmove", K), J = Q.on("pressup", J)));
          }
          function ae(e4) {
            N.move != "always" && (e4 || i2) && (i2 = false, Q.noDrag(), Q.off("mousedown", Z2), Q.off("pressmove", K), Q.off("pressup", J));
          }
          function p(e4, t3, o3) {
            return { x: e4.x + (t3.x - e4.x) * o3, y: e4.y + (t3.y - e4.y) * o3 };
          }
          function g(e4, t3, o3, n2, r3, i3, a2, l2) {
            var s6 = e4.length - 1, c2 = 0, u = 0;
            n2 == 100 && N.type == "Squiggle" && (n2 = 99.99), n2 = (n2 + 1e5) % 100, To.loop(o3, function(e5, t4) {
              return n2 / 100 < e5 ? (s6 = t4, u = e5, true) : void (c2 = e5);
            });
            var d = N.segmentPoints[s6], h2 = 0 < u ? (n2 / 100 - c2) / (u - c2) : 0, g2 = To.pointAlongCurve(d, h2, null, l2), o3 = [g2.x, g2.y, 0, 0];
            i3 || (a2 ? N.interpolatedPoints.push({ x: g2.x, y: g2.y, r: n2 / 100 }) : (r3 != "none" && (l2 = p(d[0], d[1], h2), i3 = p(d[1], d[2], h2), a2 = p(d[2], d[3], h2), d = p(l2, i3, h2), h2 = p(i3, a2, h2), o3[4] = d.x - g2.x, o3[5] = d.y - g2.y, o3[6] = h2.x - g2.x, o3[7] = h2.y - g2.y, l2 = N.localToLocal(l2.x, l2.y, t3[s6]), e4[s6][6] = l2.x, e4[s6][7] = l2.y, t3 = N.localToLocal(a2.x, a2.y, t3[(s6 + 1) % e4.length]), e4[(s6 + 1) % e4.length][4] = t3.x, e4[(s6 + 1) % e4.length][5] = t3.y), r3 && (o3[8] = r3), e4.splice(s6 + 1, 0, o3)));
          }
          oe != 0 && (zot(T2) && (T2 = W.controlLength != null ? W.controlLength : k / oe), this.zimCustomShape_constructor(k, T2, null, null, false), this.type = "Squiggle", this.mouseChildren = true, zot(M) && (M = W.dashed != null && W.dashed), zot(w) && (w = W.color != null ? W.color : To.blue), w.style && (this.colorCommand = w, w = "black"), zot(A3) && (A3 = W.controlType != null ? W.controlType : null), zot(r2 = A3) && (A3 = "mirror"), zot(P) && (P = W.lockControlType != null && W.lockControlType), zot(Y) && (Y = W.interactive == null || W.interactive), zot(B) && (B = W.showControls != null ? W.showControls : Y), F2 = B, zot(S2) && (S2 = W.lockControls != null ? W.lockControls : !Y), zot(E) && (E = W.handleSize != null ? W.handleSize : To.mobile() ? 20 : 10), zot(t2) && (t2 = W.allowToggle != null ? W.allowToggle : Y), zot(I2) && (I2 = W.move != null ? W.move : Y), zot(j) && (j = W.stickColor != null ? W.stickColor : "#111"), zot(L) && (L = W.selectColor != null ? W.selectColor : "#fff"), zot(_) && (_ = W.selectPoints != null ? W.selectPoints : Y), this.stickColor = j, zot(O) && (O = W.onTop == null || W.onTop), zot(e3) && (e3 = W.editPoints != null ? W.editPoints : Y), zot(D) && (D = W.strokeObj != null ? W.strokeObj : {}), H = function() {
            return arguments;
          }(w), w = To.Pick.choose(w), (N = this).types = ["mirror", "straight", "free", "none"], this.interactive = Y, this.num = oe, this.onTop = O, this.move = I2, this.editPoints = e3, this.allowToggle = t2, this.lockControlType = P, this.selectPoints = _, this.lockControls = S2, N._color = w, N._thickness = C, N._dashed = M, N._dashed && !Array.isArray(N._dashed) && (N._dashed = [10, 10]), i2 = N.move, $ = 2, r2 && typeof x2 != "number" && To.loop(x2, function(e4) {
            (e4[8] = r2) == "none" && (e4[4] = e4[5] = e4[6] = e4[7] = 0);
          }), s5(), N.selectionManager.on("keydown", function(e4) {
            if (N.selectPoints && N.keyFocus && 37 <= e4.keyCode && e4.keyCode <= 40) {
              var t3 = ne();
              if (0 < t3.length) {
                for (var o3 = 0; o3 < t3.length; o3++) {
                  var n2 = t3[o3];
                  e4.keyCode == 37 ? n2.x -= N.selectionManager.shiftKey ? 10 : 1 : e4.keyCode == 39 ? n2.x += N.selectionManager.shiftKey ? 10 : 1 : e4.keyCode == 38 ? n2.y -= N.selectionManager.shiftKey ? 10 : 1 : e4.keyCode == 40 && (n2.y += N.selectionManager.shiftKey ? 10 : 1), ee(n2);
                }
                N.drawShape(), N.dispatchEvent("update"), N.stage && N.stage.update();
              }
            }
          }), N.selectionManager.on("keyup", function(e4) {
            if (N.selectPoints && N.keyFocus && 37 <= e4.keyCode && e4.keyCode <= 40) {
              var t3 = ne();
              if (0 < t3.length)
                for (var o3 = 0; o3 < t3.length; o3++)
                  re(t3[o3]);
            }
          }), N.selectionManager.on("undo", function() {
            var e4;
            N.selectPoints && N.keyFocus && N.lastPoints && (e4 = To.copy(N.lastPoints), N.lastPoints = To.copy(N.points), N.points = e4, N.stage && N.stage.update());
          }), ee = function(e4) {
            var t3, o3, n2, r3;
            N.lockControls || (e4.rect1 ? (t3 = (o3 = e4).x - o3.startX, n2 = o3.y - o3.startY, o3.rect1.x = o3.rect1.startX + t3, o3.rect1.y = o3.rect1.startY + n2, o3.rect2.x = o3.rect2.startX + t3, o3.rect2.y = o3.rect2.startY + n2) : (t3 = (r3 = e4).other, n2 = (o3 = r3.ball).index, e4 = A3, zot(G[n2][4]) || (e4 = G[n2][4]), e4 != "straight" && e4 != "mirror" || (n2 = r3.x - o3.x, r3 = r3.y - o3.y, e4 == "mirror" ? (t3.x = o3.x - n2, t3.y = o3.y - r3) : (r3 = Math.atan2(r3, n2), n2 = -t3.stickLength * Math.cos(r3 + Math.PI), r3 = -t3.stickLength * Math.sin(r3 + Math.PI), t3.x = o3.x - n2, t3.y = o3.y - r3))));
          }, Object.defineProperty(N, "move", { get: function() {
            return I2;
          }, set: function(e4) {
            I2 != e4 && ((I2 = e4) ? ie : ae)();
          } }), Object.defineProperty(N, "interactive", { get: function() {
            return Y;
          }, set: function(e4) {
            F2 = Y = e4, N.allowToggle = Y, N.editPoints = Y, N.lockControls = !Y, N.selectPoints = Y, N.move = Y, N.points = N.points;
          } }), Object.defineProperty(N, "allowToggle", { get: function() {
            return t2;
          }, set: function(e4) {
            t2 != e4 && ((t2 = e4) ? N.move && ie() : !F2 && N.move && ae());
          } }), a = S2, Object.defineProperty(N, "lockControls", { get: function() {
            return a;
          }, set: function(e4) {
            (a = e4) ? (N.controls.mouseChildren = false, N.controls.mouseEnabled = false) : (N.controls.mouseChildren = true, N.controls.mouseEnabled = true);
          } }), N.lockControls = a, Object.defineProperty(N, "controlsVisible", { get: function() {
            return F2;
          }, set: function(e4) {
            (F2 = e4) ? N.showControls() : N.hideControls();
          } }), KEYFOCUS !== void 0 && (To.KEYFOCUS = KEYFOCUS), Object.defineProperty(this, "keyFocus", { get: function() {
            return To.KEYFOCUS == N;
          }, set: function(e4) {
            To.KEYFOCUS = N;
          } }), To.KEYFOCUS || N.selectPoints && (N.keyFocus = true, (l = document.activeElement) && l.blur()), Object.defineProperty(N, "points", { get: function() {
            for (var e4, t3, o3 = [], n2 = 0; n2 < G.length; n2++)
              t3 = G[n2], e4 = [To.decimals(t3[0].x), To.decimals(t3[0].y), To.decimals(t3[1].x), To.decimals(t3[1].y), To.decimals(t3[2].x), To.decimals(t3[2].y), To.decimals(t3[3].x), To.decimals(t3[3].y)], t3[4] && t3[4] !== "mirror" && e4.push(t3[4]), o3.push(e4);
            return o3;
          }, set: function(e4) {
            var t3 = N.x, o3 = N.y, n2 = N.visible;
            N.dispose(true), x2 = e4, s5(), N.lockControls = a, N.x = t3, N.y = o3, N.visible = n2;
          } }), Object.defineProperty(N, "pointsAdjusted", { get: function() {
            var n2, r3, i3 = [], a2 = N.pointObjects;
            return To.loop(a2.length, function(e4, t3) {
              var o3;
              r3 = a2[e4], n2 = G[e4], r3 = r3[0].rotation == 0 && r3[0].scaleX == 0 && r3[0].scaleY == 0 ? [To.decimals(n2[0].x), To.decimals(n2[0].y), To.decimals(n2[1].x), To.decimals(n2[1].y), To.decimals(n2[2].x), To.decimals(n2[2].y), To.decimals(n2[3].x), To.decimals(n2[3].y)] : (o3 = r3[0].localToLocal(r3[2].x, r3[2].y, r3[0].parent), e4 = r3[0].localToLocal(r3[3].x, r3[3].y, r3[0].parent), [To.decimals(n2[0].x), To.decimals(n2[0].y), To.decimals(n2[1].x), To.decimals(n2[1].y), To.decimals(o3.x - n2[0].x), To.decimals(o3.y - n2[0].y), To.decimals(e4.x - n2[0].x), To.decimals(e4.y - n2[0].y)]), n2[4] && n2[4] !== "mirror" && r3.push(n2[4]), i3.push(r3);
            }), i3;
          }, set: function(e4) {
            zon && zogy("Squiggle() - pointsAdjusted is read only");
          } }), Object.defineProperty(N, "pointObjects", { get: function() {
            return G;
          }, set: function(e4) {
            zon && zog("Squiggle() - pointObjects is read only - but its contents can be manipulated - use squiggle.update() after changes");
          } }), Object.defineProperty(N, "pointControls", { get: function() {
            return U;
          }, set: function(e4) {
            zon && zog("Squiggle() - pointControls is read only - but its contents can be manipulated - use blob.update() after changes");
          } }), Object.defineProperty(N, "pointCircles", { get: function() {
            return q;
          }, set: function(e4) {
            zon && zog("Squiggle() - pointCircles is read only - but its contents can be manipulated - use blob.update() after changes");
          } }), Object.defineProperty(N, "segmentPoints", { get: function() {
            var o3 = [], n2 = N.pointsAdjusted;
            return To.loop(n2.length - 1, function(e4, t3) {
              e4 = N.getSegmentPoint(n2[e4], n2[e4 + 1]);
              o3.push(e4);
            }), o3;
          }, set: function(e4) {
            zon && zog("Squiggle() - segmentPoints is read only");
          } }), Object.defineProperty(N, "segmentRatios", { get: function() {
            var t3 = [], o3 = 0;
            To.loop(N.segmentPoints, function(e4) {
              e4 = To.distanceAlongCurve(e4);
              t3.push(e4), o3 += e4;
            });
            var n2 = [], r3 = 0;
            return To.loop(t3, function(e4) {
              r3 += e4 / o3, n2.push(r3);
            }), n2;
          }, set: function(e4) {
            zon && zog("Squiggle() - segmentRatios is read only");
          } }), N.approximateBounds = function(e4, t3, o3) {
            zot(e4) && (e4 = 80), zot(o3) && (o3 = 0), e4 /= N.num;
            var n2 = N.interpolate(e4, null, true, null, true), e4 = To.boundsAroundPoints(n2);
            if (N.setBounds(e4.x - o3, e4.y - o3, e4.width + 2 * o3, e4.height + 2 * o3), t3) {
              if (!N.parent)
                return zon && zogy("approximateBounds() - add to stage to first to see points"), N;
              N.hitPathPoints ? N.hitPathPoints.removeAllChildren() : N.hitPathPoints = new To.Container().addTo(), N.hitPathPoints.top();
              for (var r3 = 0; r3 < n2.length; r3++) {
                var i3 = n2[r3], i3 = N.localToGlobal(i3.x, i3.y);
                new To.Circle(3).loc(i3.x, i3.y, N.hitPathPoints);
              }
            }
            return N;
          }, N.getPointAngle = function(e4) {
            var t3, o3 = N.pointObjects[e4][0], n2 = N.pointObjects[e4][2], e4 = N.pointObjects[e4][3];
            return e4 = o3 == N.stage ? (t3 = new To.Point(n2.x, n2.y), new To.Point(e4.x, e4.y)) : (t3 = o3.localToGlobal(n2.x, n2.y), o3.localToGlobal(e4.x, e4.y)), To.angle(t3.x, t3.y, e4.x, e4.y);
          }, N.getSegmentPoint = function(e4, t3) {
            if (!zot(e4) && !zot(t3)) {
              e4[2] == 0 && e4[3] == 0 || (e4[4] -= e4[2], e4[5] -= e4[3], e4[6] -= e4[2], e4[7] -= e4[3], e4[0] += e4[2], e4[1] += e4[3], e4[2] = 0, e4[3] = 0), t3[2] == 0 && t3[3] == 0 || (t3[4] -= t3[2], t3[5] -= t3[3], t3[6] -= t3[2], t3[7] -= t3[3], t3[0] += t3[2], t3[1] += t3[3], t3[2] = 0, t3[3] = 0);
              var o3 = { x: e4[0], y: e4[1] }, n2 = { x: e4[0] + e4[6], y: e4[1] + e4[7] }, e4 = { x: t3[0] + t3[4], y: t3[1] + t3[5] }, t3 = { x: t3[0], y: t3[1] };
              return te.x == 0 && te.y == 0 || (o3.x += te.x, n2.x += te.x, e4.x += te.x, t3.x += te.x, o3.y += te.y, n2.y += te.y, e4.y += te.y, t3.y += te.y), [o3, n2, e4, t3];
            }
          }, N.getAdjacentSegmentData = function(e4) {
            zot(e4) && (e4 = 0);
            var t3 = N.pointsAdjusted;
            return N.num == 2 ? [[N.getSegmentPoint(t3[0], t3[1])], [0]] : e4 == 0 ? [[N.getSegmentPoint(t3[0], t3[1]), N.getSegmentPoint(t3[1], t3[2])], [0, 1]] : e4 >= N.num - 2 ? [[N.getSegmentPoint(t3[N.num - 3], t3[N.num - 2]), N.getSegmentPoint(t3[N.num - 2], t3[N.num - 1])], [N.num - 3, N.num - 2]] : [[N.getSegmentPoint(t3[e4 - 1], t3[e4]), N.getSegmentPoint(t3[e4], t3[e4 + 1]), N.getSegmentPoint(t3[e4 + 1], t3[e4 + 2])], [e4 - 1, e4, e4 + 1]];
          }, N.getCurvePoint = function(o3, e4, t3, n2, r3) {
            (zot(o3) || isNaN(o3)) && (o3 = 0), zot(e4) && (e4 = N.segmentRatios), zot(t3) && (t3 = N.segmentPoints), zot(n2) && (n2 = false), zot(r3) && (r3 = false);
            var i3 = e4, r3 = t3, e4 = To.loop(i3, function(e5, t4) {
              if (o3 <= e5)
                return t4;
            }), t3 = 0 < e4 ? i3[e4 - 1] : 0, i3 = 0 < e4 ? i3[e4] - i3[e4 - 1] : i3[e4];
            if (i3) {
              i3 = (o3 - t3) / i3, i3 = To.pointAlongCurve(r3[e4], i3, n2, true), n2 = N.localToGlobal(i3.x, i3.y);
              return n2.angle = i3.angle, n2.z = e4, zot(n2) ? void 0 : n2;
            }
          }, this.addPoint = function(e4, t3) {
            zot(e4) && (e4 = 100);
            var o3 = N.points, n2 = N.segmentRatios;
            return g(o3, N.pointControls, n2, e4, t3 = t3 || r2), N.points = o3, N.num = o3.length, N;
          }, this.addPoints = function(r3, i3, a2, l2, s6, c2, u) {
            zot(c2) && (c2 = To.copy(N.points));
            var d, e4 = To.copy(N.segmentRatios), h2 = 0;
            return s6 && (N.interpolatedPoints = []), l2 && (d = e4.length * r3), To.loop(e4, function(t3, o3) {
              s6 && g(c2, N.pointControls, N.segmentRatios, 100 * h2, i3, !zot(a2) && o3 != a2, s6, u);
              var e5 = l2 ? Math.round(d * (t3 - h2)) : r3, n2 = 1 / (e5 + 1);
              To.loop(e5, function(e6) {
                e6 = h2 + (t3 - h2) * n2 * (e6 + 1);
                g(c2, N.pointControls, N.segmentRatios, 100 * e6, i3, !zot(a2) && o3 != a2, s6, u), !s6 && 0 < r3 && (N.points = c2);
              }), h2 = t3;
            }), s6 && N.type == "Squiggle" && g(c2, N.pointControls, N.segmentRatios, 100, i3, false, s6, u), N.stage && N.stage.update(), N.num = c2.length, N;
          }, this.interpolate = function(e4, t3, o3, n2, r3) {
            return zot(e4) && (e4 = 1), N.addPoints(e4, "none", t3, o3, true, n2, r3), N.interpolatedPoints;
          }, this.dispose = function(e4, t3, o3) {
            if (N.shape) {
              if (To.gD(N), V && N.toggleStageEvent && V.off("stagemousedown", N.toggleStageEvent), N.controls.noDrag(), N.controls.removeAllEventListeners(), N.selectPoints && N.selectionManager && N.selectionManager.dispose(), N.selectedBalls = null, N.selectedRect1s = null, N.selectedRect2s = null, N.selectionManager = null, N.off("mousedown", N.toggleEvent), N.off("click", N.clickEvent), e4) {
                N.shape.dispose(), N.shape = null;
                for (var n2 = 0; n2 < N.points.length; n2++)
                  N.pointObjects[n2][0].removeAllEventListeners(), N.pointObjects[n2][1].removeAllEventListeners(), N.pointObjects[n2][2].removeAllEventListeners(), N.pointObjects[n2][3].removeAllEventListeners();
                N.controls.removeFrom(N), N.sticks.dispose(), q = G = null;
              } else
                N.removeAllEventListeners(), q = G = null, o3 || this.zimCustomShape_dispose(true);
              return true;
            }
          });
        }, To.extend(To.Squiggle, To.CustomShape, ["clone", "dispose"], "zimCustomShape", false), To.Blob = function(w, e3, t2, C, x2, k, T2, A3, o2, P, B, n, S2, E, I2, M, O, j, r2, L, _, Y, i2, D) {
          if (l = zob(To.Blob, arguments, "color, borderColor, borderWidth, points, radius, controlLength, controlType, lockControlType, showControls, lockControls, handleSize, allowToggle, move, dashed, onTop, stickColor, selectColor, selectPoints, editPoints, interactive, strokeObj, style, group, inherit", this))
            return l;
          z_d("53.5"), this.group = i2;
          var X = Y === false ? {} : To.getStyle("Blob", this.group, D);
          zot(x2) && (x2 = X.radius != null ? X.radius : 100), this.zimCustomShape_constructor(-x2, -x2, 2 * x2, 2 * x2, false), this.type = "Blob", this.mouseChildren = true, zot(E) && (E = X.dashed != null && X.dashed), zot(e3) && (e3 = X.borderColor != null ? X.borderColor : null), zot(t2) && (t2 = X.borderWidth != null ? X.borderWidth : null), e3 < 0 || t2 < 0 ? e3 = t2 = null : e3 != null && t2 == null && (t2 = 1), zot(w) && (w = X.color != null ? X.color : 0 < t2 ? "rgba(0,0,0,0)" : To.green), w.style && (this.colorCommand = w, w = "black"), e3 && e3.style && (this.borderColorCommand = e3, e3 = "black"), zot(C) && (C = X.points != null ? X.points : 4);
          var R = typeof C == "number" ? C : C.length, W = k;
          zot(k) && (k = X.controlLength != null ? X.controlLength : 4 * x2 / R), zot(T2) && (T2 = X.controlType != null ? X.controlType : null);
          var a = T2;
          zot(T2) && (T2 = "straight"), zot(A3) && (A3 = X.lockControlType != null && X.lockControlType), zot(L) && (L = X.interactive == null || X.interactive), zot(o2) && (o2 = X.showControls != null ? X.showControls : L);
          var F2 = o2;
          zot(P) && (P = X.lockControls != null ? X.lockControls : !L), zot(B) && (B = X.handleSize != null ? X.handleSize : To.mobile() ? 20 : 10), zot(n) && (n = X.allowToggle != null ? X.allowToggle : L), zot(S2) && (S2 = X.move != null ? X.move : L), zot(M) && (M = X.stickColor != null ? X.stickColor : "#111"), zot(O) && (O = X.selectColor != null ? X.selectColor : "#fff"), zot(j) && (j = X.selectPoints != null ? X.selectPoints : L), this.stickColor = M, zot(I2) && (I2 = X.onTop == null || X.onTop), zot(r2) && (r2 = X.editPoints != null ? X.editPoints : L), zot(_) && (_ = X.strokeObj != null ? X.strokeObj : {});
          var H = function() {
            return arguments;
          }(w, e3);
          w = To.Pick.choose(w), e3 = To.Pick.choose(e3);
          var N = this;
          this.interactive = L, this.num = R, this.editPoints = r2, this.selectPoints = j, this.lockControls = P, this.onTop = I2, this.move = S2, this.allowToggle = n, this.lockControlType = A3;
          var V, G, q, U, Q, Z2, K, J;
          this.types = ["mirror", "straight", "free", "none"];
          N._color = w, N._borderColor = e3, N._borderWidth = t2, N._dashed = E, N._dashed && !Array.isArray(N._dashed) && (N._dashed = [10, 10]);
          var $, ee, l, s5 = N.move, te = 2;
          function c2(e4) {
            var t3;
            if (e4 != "circle" && e4 != "rectangle" && e4 != "triangle" || (e4 == "circle" && (e4 = new To.Circle(x2)), e4 == "rectangle" && (e4 = new To.Rectangle(2 * x2, 2 * x2).centerReg({ add: false })), e4 == "triangle" && (e4 = new To.Triangle(2 * x2, 2 * x2, 2 * x2))), e4.type != "Circle" && e4.type != "Rectangle" && e4.type != "Triangle")
              return e4;
            var o3 = e4.getBounds();
            return e4.type == "Circle" ? (t3 = 4, W = k = 2 * x2 * 0.5523) : e4.type == "Rectangle" ? (e4.centerReg({ add: false }), t3 = [[o3.x - o3.width / 2, o3.y - o3.height / 2], [o3.x + o3.width / 2, o3.y - o3.height / 2], [o3.x + o3.width / 2, o3.y + o3.height / 2], [o3.x - o3.width / 2, o3.y + o3.height / 2]], N.setBounds(o3.x - o3.width / 2, o3.y - o3.height / 2, o3.width, o3.height), N.regX = e4.regX - o3.width / 2, N.regY = e4.regY - o3.height / 2) : e4.type == "Triangle" && (t3 = [[e4.three.x - e4.width / 2, e4.three.y + e4.height / 2 + e4.adjusted], [e4.two.x - e4.width / 2, e4.two.y + e4.height / 2 + e4.adjusted], [e4.one.x - e4.width / 2, e4.one.y + e4.height / 2 + e4.adjusted]], N.setBounds(o3.x - o3.width / 2, o3.y - o3.height / 2, o3.width, o3.height)), t3;
          }
          function u() {
            if (ee && ee.removeAllEventListeners(), N.selectPoints ? (N.selectedBalls = new To.SelectionSet(), N.selectedRect1s = new To.SelectionSet(), N.selectedRect2s = new To.SelectionSet(), N.selectionManager = new To.SelectionManager([N.selectedBalls, N.selectedRect1s, N.selectedRect2s], "ctrl", false)) : N.selectionManager = new To.SelectionManager(null, "ctrl"), !((R = typeof C == "number" ? C : C.length) <= 0)) {
              zot(W) && (k = 4 * x2 / R), U = N.shape = new To.Shape({ style: false }).addTo(N);
              var o3 = N.sticks = new To.Shape({ style: false }).addTo(N);
              B <= 0 && o3.removeFrom();
              var u2 = U.graphics;
              u2.c();
              var d2 = o3.graphics;
              d2.c();
              var e4, t3, n2, r3, i3, a2 = B / 10 * 8, l2 = B, s6 = To.mobile();
              ee = N.controls = new To.Container({ style: false }).addTo(N), N.interactive && ee.drag({ onTop: !s6 }), V = [], q = [], G = [];
              for (var c3, h2, g2, p2 = 0; p2 < R; p2++)
                (g2 = new To.Container({ style: false }).addTo(ee)).num = p2, typeof C == "number" ? (c3 = To.Pick.choose(k), (h2 = new To.Container(c3, x2, null, null, false).reg(c3 / 2, x2).addTo(N)).rotation = p2 / R * 360, n2 = new To.Circle(a2, N.selectPoints && N.selectedBalls.isSelected(p2) ? O : To.light, To.dark, 2, null, null, null, null, false).centerReg(h2).loc({ x: c3 / 2, y: 0 }), e4 = new To.Rectangle(l2, l2, N.selectPoints && N.selectedRect1s.isSelected(p2) ? O : b(T2), B == 0 ? null : To.dark, B == 0 ? null : 2, null, null, null, false).centerReg(h2).loc({ x: 0, y: 0 }), t3 = new To.Rectangle(l2, l2, N.selectPoints && N.selectedRect2s.isSelected(p2) ? O : b(T2), B == 0 ? null : To.dark, B == 0 ? null : 2, null, null, null, false).centerReg(h2).loc({ x: c3, y: 0 }), c3 = h2.localToLocal(n2.x, n2.y, ee), n2.x = c3.x, n2.y = c3.y, n2.addTo(g2, null, false), c3 = h2.localToLocal(e4.x, e4.y, ee), e4.x = T2 == "none" ? 0 : c3.x - n2.x, e4.y = T2 == "none" ? 0 : c3.y - n2.y, e4.addTo(g2, null, false), h2 = h2.localToLocal(t3.x, t3.y, ee), t3.x = T2 == "none" ? 0 : h2.x - n2.x, t3.y = T2 == "none" ? 0 : h2.y - n2.y, t3.addTo(g2, null, false), g2.x = n2.x, g2.y = n2.y, n2.x = 0, n2.y = 0, T2 == "none" && n2.addTo(g2, null, false)) : (r3 = (i3 = C[p2])[8] || T2, g2.loc({ x: i3[0], y: i3[1] }), n2 = new To.Circle(a2, To.light, To.dark, 2, null, null, null, null, false).centerReg({ add: false }).addTo(g2).loc({ x: i3[2], y: i3[3] }), e4 = new To.Rectangle(l2, l2, b(r3), B == 0 ? null : To.dark, B == 0 ? null : 2, null, null, null, false).centerReg({ add: false }).addTo(g2, 0).loc({ x: i3[4], y: i3[5] }), t3 = new To.Rectangle(l2, l2, b(r3), B == 0 ? null : To.dark, B == 0 ? null : 2, null, null, null, false).centerReg({ add: false }).addTo(g2, 0).loc({ x: i3[6], y: i3[7] })), n2.mySet = g2, n2.rect1 = e4, n2.rect2 = t3, n2.index = p2, B == 0 && (n2.expand(10), e4.expand(10), t3.expand(10)), s6 ? n2.on("mousedown", z) : n2.on("dblclick", y), e4.ball = n2, (e4.other = t3).ball = n2, t3.other = e4, s6 && (n2.expand(), e4.expand(), t3.expand()), r3 = [g2, n2, e4, t3, i3 ? i3[8] : T2], V.push(r3), G.push(n2), q.push(g2);
              var f3, m2 = false;
              N.drawShape = function() {
                u2.c(), N.colorCommand || (N.colorCommand = u2.f(N._color).command, w && w.type && N.specialColor(N.colorCommand, w)), (zot(N._borderWidth) || 0 < N._borderWidth) && (zot(N._borderColor) && zot(N._borderWidth) || (zot(N._borderColor) && (N._borderColor = "black"), N.borderColorCommand || (N.borderColorCommand = u2.s(N._borderColor).command, N._borderColor && N._borderColor.type && N.specialColor(N.borderColorCommand, N._borderColor)), N.borderWidthCommand || (N.borderWidthCommand = u2.ss(N._borderWidth, _.caps, _.joints, _.miterLimit, _.ignoreScale).command), N._dashed && (N.borderDashedCommand || (N.borderDashedCommand = u2.sd(Array.isArray(N._dashed) ? N._dashed : [10, 10], N._dashedOffset).command))));
                var e5 = (n3 = V[0][0]).localToLocal(V[0][1].x, V[0][1].y, U);
                u2.mt(e5.x, e5.y), d2.c().s(N.stickColor).ss(1);
                for (var t4 = 0; t4 < V.length; t4++) {
                  var o4 = (t4 + 1) % V.length, n3 = V[t4][0], r4 = V[t4][1], i4 = V[t4][2], a3 = V[t4][3], l3 = V[o4][0], s7 = V[o4][1], c4 = V[o4][2], a3 = (V[o4][3], n3.localToLocal(a3.x, a3.y, U)), c4 = l3.localToLocal(c4.x, c4.y, U), s7 = l3.localToLocal(s7.x, s7.y, U);
                  u2.bt(a3.x, a3.y, c4.x, c4.y, s7.x, s7.y);
                  e5 = n3.localToLocal(r4.x, r4.y, U), i4 = n3.localToLocal(i4.x, i4.y, U);
                  d2.mt(e5.x, e5.y).lt(i4.x, i4.y), d2.mt(e5.x, e5.y).lt(a3.x, a3.y);
                }
                u2.cp(), u2.append(N.colorCommand), N._dashed && u2.append(N.borderDashedCommand), N.borderWidthCommand && u2.append(N.borderWidthCommand), N.borderColorCommand && u2.append(N.borderColorCommand);
              }, N.drawShape(), ee.on("mousedown", function(e5) {
                var t4, o4, n3;
                if (!N.lockControls && (N.selectPoints && (N.keyFocus = true), f3 = { x: e5.target.x, y: e5.target.y }, e5.target.rect1 ? ((n3 = e5.target).startX = n3.x, n3.startY = n3.y, n3.rect1.startX = n3.rect1.x, n3.rect1.startY = n3.rect1.y, n3.rect2.startX = n3.rect2.x, n3.rect2.startY = n3.rect2.y) : ((o4 = e5.target).startX = o4.x, o4.startY = o4.y, t4 = (n3 = o4.ball).index, e5 = T2, zot(V[t4][4]) || (e5 = V[t4][4]), e5 == "straight" && (o4 = (e5 = o4.other).x - n3.x, n3 = e5.y - n3.y, e5.stickLength = Math.sqrt(Math.pow(o4, 2) + Math.pow(n3, 2)))), N.selectPoints)) {
                  var r4 = N.selectionManager.currentSet;
                  if (r4 && r4.selections && 0 < r4.selections.length)
                    for (var i4 = 0; i4 < r4.selections.length; i4++) {
                      var a3 = N.pointObjects[r4.selections[i4]];
                      a3[1].startX = a3[1].x, a3[1].startY = a3[1].y, a3[2].startX = a3[2].x, a3[2].startY = a3[2].y, a3[3].startX = a3[3].x, a3[3].startY = a3[3].y;
                    }
                }
              }), N.selectPoints && ee.tap(function(e5) {
                var t4, o4;
                e5.target.rect1 ? (o4 = e5.target, N.selectedBalls.toggle(o4.parent.num)) : ((t4 = e5.target).color = "white", ((o4 = t4.ball).rect1 == t4 ? N.selectedRect1s : N.selectedRect2s).toggle(o4.parent.num));
                for (var n3 = 0; n3 < N.pointObjects.length; n3++) {
                  var r4 = N.pointObjects[n3];
                  r4[1].color = N.selectedBalls.isSelected(n3) ? To.white : To.light, r4[2].color = N.selectedRect1s.isSelected(n3) ? To.white : b(r4[4]), r4[3].color = N.selectedRect2s.isSelected(n3) ? To.white : b(r4[4]);
                }
                e5.target.stage.update();
              }), ee.on("pressmove", function(e5) {
                if (!N.lockControls)
                  if (N.selectPoints) {
                    var t4 = oe();
                    if (t4.indexOf(e5.target) == -1)
                      $(e5.target), N.drawShape();
                    else if (0 < t4.length) {
                      for (var o4 = e5.target.x - e5.target.startX, n3 = e5.target.y - e5.target.startY, r4 = 0; r4 < t4.length; r4++) {
                        var i4 = t4[r4];
                        i4.x = i4.startX + o4, i4.y = i4.startY + n3, $(i4);
                      }
                      N.drawShape();
                    }
                  } else
                    $(e5.target), N.drawShape();
              }), ee.on("pressup", function(e5) {
                var t4, o4;
                N.lockControls || (t4 = e5.target.x != f3.x || e5.target.y != f3.y, o4 = new createjs.Event("change"), e5.target.rect1 ? (o4.controlType = "bezierPoint", function(e6) {
                  if (N.selectPoints) {
                    var t5 = oe();
                    if (t5 && t5.indexOf(e6) == -1)
                      ne(e6);
                    else if (t5 && 0 < t5.length)
                      for (var o5 = 0; o5 < t5.length; o5++)
                        ne(t5[o5]);
                    else
                      ne(e6);
                  } else
                    ne(e6);
                }(e5.target)) : o4.controlType = "bezierHandle", t4 && N.dispatchEvent(o4));
              }), N.changeControl = function(e5, t4, o4, n3, r4, i4, a3, l3, s7) {
                if (u3 = zob(N.changeControl, arguments, "index, type, rect1X, rect1Y, rect2X, rect2Y, circleX, circleY, update"))
                  return u3;
                if (zot(e5)) {
                  for (var c4 = 0; c4 < V.length; c4++)
                    N.changeControl(c4, t4, o4, n3, r4, i4, a3, l3);
                  return N;
                }
                var u3 = V[e5];
                return (u3[4] = t4) == "none" ? (zot(a3) || (u3[1].x = a3), zot(l3) || (u3[1].y = l3), u3[2].x = u3[1].x, u3[2].y = u3[1].y, u3[3].x = u3[1].x, u3[3].y = u3[1].y, u3[1].parent.addChild(u3[1])) : (zot(a3) || (u3[1].x = a3), zot(l3) || (u3[1].y = l3), zot(o4) || (u3[2].x = o4), zot(n3) || (u3[2].y = n3), zot(r4) || (u3[3].x = r4), zot(i4) || (u3[3].y = i4), u3[1].parent.addChildAt(u3[1], 0)), u3[2].color = b(t4), u3[3].color = b(t4), s7 && (N.update(), N.stage && N.stage.update()), N;
              }, N.transformPoints = function(e5, t4, o4, n3) {
                return N.points = To.transformPoints(N.points, e5, t4, o4, n3), N;
              }, N.traverse = function(t4, e5, o4, n3) {
                var r4 = To.copy(N.segmentRatios);
                r4.unshift(0), zot(o4) && (o4 = e5 + 1);
                var i4, a3, l3 = e5 < o4;
                return a3 = l3 ? (i4 = 100 * r4[e5], 100 * r4[o4]) : (i4 = 50 + (100 - 100 * r4[e5]) / 2, 50 + (100 - 100 * r4[o4]) / 2), t4.percentComplete = i4, t4.animate({ ease: "linear", props: { path: N }, rewind: !l3, time: n3, events: true }), t4.on("animation", function(e6) {
                  (t4.percentComplete > a3 || t4.percentComplete == 0) && (t4.stopAnimate(), e6.remove(), (e6 = new createjs.Event("traversed")).obj = t4, N.dispatchEvent(e6));
                }), N;
              }, N.reversePoints = function(e5) {
                return zot(e5) && (e5 = true), (C = To.copy(N.points)).reverse(), e5 && C.unshift(C.pop()), loop(C, (e6) => {
                  var t4 = e6[6];
                  e6[6] = e6[4], e6[4] = t4;
                  t4 = e6[7];
                  e6[7] = e6[5], e6[5] = t4;
                }), N.points = C, N.update(), N;
              }, N.splitPoints = function(e5) {
                var t4 = To.copy(N.points);
                if (!(e5 < 1 || e5 > t4.length - 1)) {
                  var o4 = To.copy(t4.slice(0, e5 + 1)), t4 = To.copy(t4.slice(e5));
                  To.trimPointEnds(o4), To.trimPointEnds(t4);
                  e5 = N.clone();
                  return N.points = o4, N.update(), e5.points = t4, N.parent && e5.addTo(N.parent), e5;
                }
              }, N.makeSquiggle = function(e5) {
                var t4 = To.copy(N.points);
                zot(e5) && (e5 = 0), e5 = (e5 + 1e3 * t4.length) % t4.length;
                var o4 = To.copy(t4.slice(e5)), e5 = To.copy(t4.slice(0, e5 + 1)), t4 = o4.concat(e5);
                return To.trimPointEnds(t4), new To.Squiggle({ points: t4, color: N.borderColor, thickness: N.borderWidth, showControls: N.controlsVisible, interactive: N.interactive, onTop: N.onTop, dashed: N.dashed, stickColor: N.stickColor });
              }, N.update = function(e5) {
                return e5 ? N.points = N.pointsAdjusted : N.drawShape(), N.zimAnimateChanged = true, N;
              }, N.move && N.interactive && U.drag({ onTop: false }), Q = U.on("mousedown", function(e5) {
                J = e5.target.stage, f3 = { x: U.x, y: U.y }, N.selectPoints && (N.keyFocus = true), N.onTop && (e5 = N.parent.numChildren - 1, N.parent.getChildAt(e5).type == "Keyboard" && e5--, N.parent.setChildIndex(N, e5));
              }), Z2 = U.on("pressmove", function() {
                ee.x = U.x, ee.y = U.y, o3.x = U.x, o3.y = U.y;
              }), K = U.on("pressup", function() {
                var e5 = U.x != f3.x || U.y != f3.y, t4 = U.localToLocal(N.regX, N.regY, N.parent);
                N.x = t4.x, N.y = t4.y, ee.x = ee.y = o3.x = o3.y = U.x = U.y = 0, e5 && ((e5 = new createjs.Event("change")).controlType = "move", N.dispatchEvent(e5)), J.update();
              }), S2 || ie(true), N.toggleEvent = N.on("mousedown", function() {
                N.allowToggle && (F2 || (N.showControls(), N.dispatchEvent("controlsshow")));
              }), N.added(function() {
                J = N.stage, N.toggleStageEvent && N.stage.off("stagemousedown", N.toggleStageEvent), N.toggleStageEvent = N.stage.on("stagemousedown", function(e5) {
                  N.allowToggle && N.stage && F2 && !N.hitTestPoint(e5.stageX / To.scaX, e5.stageY / To.scaY, false) && (N.hideControls(), N.dispatchEvent("controlshide"));
                });
              }), N.clickEvent = N.on("click", function() {
                N.ctrlKey && setTimeout(function() {
                  N.clone(true).addTo(N.stage).mov(100), N.allowToggle && (N.hideControls(), N.dispatchEvent("controlshide"));
                  var e5 = new createjs.Event("change");
                  e5.controlType = "move", N.dispatchEvent(e5), N.stage.update();
                }, 50);
              }), N.hideControls = function() {
                return N.toggled = false, ee.visible = false, o3.visible = false, F2 = false, N.stage && N.stage.update(), !N.allowToggle && N.move && ie(), N;
              }, F2 || N.hideControls(), N.showControls = function() {
                return N.toggled = true, ee.visible = true, o3.visible = true, F2 = true, ee.x = U.x, ee.y = U.y, o3.x = U.x, o3.y = U.y, N.addChildAt(U, 0), N.move && !N.allowToggle && re(), N.stage && N.stage.update(), N;
              }, N.toggle = function(e5) {
                return e5 !== true && (e5 === false || F2) ? N.hideControls() : N.showControls(), N;
              }, N.recordData = function(e5) {
                zot(e5) && (e5 = false);
                var t4 = { type: "Blob", index: N.parent ? N.parent.getChildIndex(N) : -1, x: N.x, y: N.y, points: N.recordPoints(), color: N.color, borderColor: N.borderColor, borderWidth: N.borderWidth, move: N.move, toggle: N.allowToggle, controlsVisible: F2 };
                return e5 ? JSON.stringify(t4) : t4;
              }, N.setData = function(e5, t4) {
                if (!zot(e5)) {
                  if (t4)
                    try {
                      e5 = JSON.parse(e5);
                    } catch (e6) {
                      return;
                    }
                  var o4 = e5.index;
                  zot(o4) && (o4 = -1), delete e5.index;
                  var n3, t4 = e5.points;
                  for (n3 in zot(t4) || N.setPoints(t4), delete e5.points, this.num = t4.length, e5)
                    N[n3] = e5[n3];
                  return N.parent && N.parent.setChildIndex(N, o4), N;
                }
              }, N.recordPoints = function(e5) {
                zot(e5) && (e5 = false);
                var t4, o4, n3 = N.points;
                return e5 && (t4 || (t4 = N.pane = new To.Pane({ displayClose: false, container: N.stage, width: Math.min(500, N.stage.width - 20), height: Math.min(500, N.stage.height - 20), draggable: true }), (o4 = N.textArea = new To.TextArea(Math.min(400, N.stage.width - 70), Math.min(400, N.stage.height - 70))).centerReg(t4)), t4.show(), o4.text = JSON.stringify(n3)), n3;
              }, !(N.setPoints = function(e5) {
                for (var t4, o4, n3 = 0; n3 < e5.length; n3++)
                  t4 = V[n3], o4 = e5[n3], zot(t4) || (t4[0].x = o4[0], t4[0].y = o4[1], t4[1].x = o4[2], t4[1].y = o4[3], t4[2].x = o4[4], t4[2].y = o4[5], t4[3].x = o4[6], t4[3].y = o4[7], t4[4] = o4[8], t4[2].color = b(t4[4]), t4[3].color = b(t4[4]));
                return N.update(), N;
              }) !== Y && To.styleTransforms(N, X), N.clone = function(e5, t4) {
                e5 = N.cloneProps(new To.Blob(t4 ? N.colorCommand : e5 || !To.isPick(H[0]) ? N.color : H[0], t4 ? N.borderColorCommand : e5 || !To.isPick(H[1]) ? N.borderColor : H[1], N.borderWidth, N.recordPoints(), x2, k, T2, A3, ee.visible, P, B, N.allowToggle, N.move, E, I2, M, O, j, N.editPoints, L, _, Y, N.group, D));
                return N.linearGradientParams && e5.linearGradient.apply(e5, N.linearGradientParams), N.radialGradientParams && e5.radialGradient.apply(e5, N.radialGradientParams), e5;
              }, N.shapeMousedownEvent = N.shape.on("mousedown", function(e5) {
                J = e5.target.stage, N.editPoints && (N.controlsVisible ? (N.pressX = e5.stageX / To.scaX, N.pressY = e5.stageY / To.scaY) : (N.pressX = null, N.pressY = null));
              }), N.addPointFactor = 10, N.addMinDistance = 15, N.shapePressupEvent = N.shape.on("pressup", function(e5) {
                var n3, t4, r4, i4, o4, a3;
                N.editPoints && N.pressX && Math.abs(N.pressX - e5.stageX / To.scaX) < te && Math.abs(N.pressY - e5.stageY / To.scaY) < te && (N.selectPoints && (N.lastPoints = To.copy(N.points)), a3 = N.points, n3 = N.globalToLocal(e5.stageX / To.scaX, e5.stageY / To.scaY), t4 = To.closestPointAlongCurve(n3, N.segmentPoints), N.editPoints == "anywhere" ? (a3.splice(t4 + 1, 0, [n3.x, n3.y, 0, 0, 0, 0, 0, 0]), N.points = a3, N.changeControl({ index: t4 + 1, type: "mirror", update: true })) : (o4 = N.pointsAdjusted, e5 = N.getSegmentPoint(o4[t4], o4[(t4 + 1) % o4.length]), o4 = To.distanceAlongCurve(e5), e5 = Math.round(o4 / N.addPointFactor), o4 = N.interpolate(e5, t4, false, a3), r4 = 1e4, To.loop(o4, function(e6, t5) {
                  var o5;
                  t5 == 0 || (o5 = To.dist(e6, n3)) < r4 && (r4 = o5, i4 = t5, 0);
                }), r4 < N.addMinDistance && (o4 = (a3 = N.segmentRatios)[t4], a3 = 0 < t4 ? a3[t4 - 1] : 0, N.addPoint(100 * (a3 + i4 / (e5 + 1) * (o4 - a3))))), N.lastSelectedIndex = t4 + 1, N.lastSelected = N.controls.getChildAt(N.lastSelectedIndex), N.stage.update());
              }), N.controlsClickEvent = N.controls.on("click", function(e5) {
                N.lastSelected = e5.target.parent;
                N.lastSelectedIndex = N.controls.getChildIndex(e5.target.parent);
                N.editPoints && N.selectionManager.shiftKey && v(e5);
              }), N.controls.hold(v), F2 || N.hideControls(), N.dispatchEvent("update");
            }
            function z(e5) {
              m2 ? (e5.preventDefault(), y(e5)) : (m2 = true, setTimeout(function() {
                m2 = false;
              }, 300));
            }
            function y(e5) {
              var t4, o4;
              N.lockControlType || (t4 = e5.target, o4 = V[t4.index][4] || T2, Math.abs(t4.rect1.x) <= 2 && Math.abs(t4.rect1.y) <= 2 && Math.abs(t4.rect2.x) <= 2 && Math.abs(t4.rect2.y) <= 2 && (o4 = "none"), o4 == "none" && t4.parent.addChildAt(t4, 0), (o4 = N.types[(N.types.indexOf(o4) + (N.shiftKey ? -1 : 1) + N.types.length) % N.types.length]) == "none" && (t4.rect1.x = t4.rect1.y = t4.rect2.x = t4.rect2.y = 0, t4.parent.addChild(t4), e5.stopImmediatePropagation()), V[t4.index][4] = o4, t4.rect1.color = b(o4), t4.rect2.color = b(o4), N.drawShape(), (o4 = new createjs.Event("change")).controlType = "bezierSwitch", N.dispatchEvent(o4), t4.stage.update());
            }
            function b(e5) {
              var t4 = { mirror: To.purple, free: To.yellow, none: To.blue };
              return t4[e5] || To.pink;
            }
            function v(e5) {
              var t4;
              e5.target.type == "Circle" && (t4 = N.lastSelectedIndex = N.controls.getChildIndex(e5.target.parent), N.controls.numChildren <= 2 || (e5 = N.points, N.selectPoints && (N.lastPoints = To.copy(e5)), e5.splice(t4, 1), N.points = e5, N.stage.update(), N.lastSelected = N.lastSelectedIndex = null));
            }
          }
          function oe() {
            var e4 = [], t3 = N.selectionManager.currentSet;
            if (t3 && t3.selections && 0 < t3.selections.length)
              for (var o3 = 0; o3 < t3.selections.length; o3++) {
                var n2 = N.pointObjects[t3.selections[o3]];
                t3 == N.selectedBalls ? e4.push(n2[1]) : t3 == N.selectedRect1s ? e4.push(n2[2]) : t3 == N.selectedRect2s && e4.push(n2[3]);
              }
            return e4;
          }
          function ne(e4) {
            var t3, o3, n2;
            N.selectPoints && e4.type == "Circle" && (o3 = (t3 = e4).mySet, n2 = t3.rect1, e4 = t3.rect2, n2.x -= t3.x, n2.y -= t3.y, e4.x -= t3.x, e4.y -= t3.y, o3.x += t3.x, o3.y += t3.y, t3.x = 0, t3.y = 0);
          }
          function re() {
            N.move != "always" && (s5 || (s5 = true, U.drag({ onTop: false }), Q = U.on("mousedown", Q), Z2 = U.on("pressmove", Z2), K = U.on("pressup", K)));
          }
          function ie(e4) {
            N.move != "always" && (e4 || s5) && (s5 = false, U.noDrag(), U.off("mousedown", Q), U.off("pressmove", Z2), U.off("pressup", K));
          }
          typeof (C = c2(C)) == "string" && (l = new To.SVGContainer(), C = l.processPath(C)), a && typeof C != "number" && To.loop(C, function(e4) {
            (e4[8] = a) == "none" && (e4[4] = e4[5] = e4[6] = e4[7] = 0);
          }), u(), N.selectionManager.on("keydown", function(e4) {
            if (N.selectPoints && N.keyFocus && 37 <= e4.keyCode && e4.keyCode <= 40) {
              var t3 = oe();
              if (0 < t3.length) {
                for (var o3 = 0; o3 < t3.length; o3++) {
                  var n2 = t3[o3];
                  e4.keyCode == 37 ? n2.x -= N.selectionManager.shiftKey ? 10 : 1 : e4.keyCode == 39 ? n2.x += N.selectionManager.shiftKey ? 10 : 1 : e4.keyCode == 38 ? n2.y -= N.selectionManager.shiftKey ? 10 : 1 : e4.keyCode == 40 && (n2.y += N.selectionManager.shiftKey ? 10 : 1), $(n2);
                }
                N.drawShape(), N.dispatchEvent("update"), N.stage && N.stage.update();
              }
            }
          }), N.selectionManager.on("keyup", function(e4) {
            if (N.selectPoints && N.keyFocus && 37 <= e4.keyCode && e4.keyCode <= 40) {
              var t3 = oe();
              if (0 < t3.length)
                for (var o3 = 0; o3 < t3.length; o3++)
                  ne(t3[o3]);
            }
          }), N.selectionManager.on("undo", function() {
            var e4;
            N.selectPoints && N.keyFocus && N.lastPoints && (e4 = To.copy(N.lastPoints), N.lastPoints = To.copy(N.points), N.points = e4, N.stage && N.stage.update());
          }), $ = function(e4) {
            var t3, o3, n2, r3;
            N.lockControls || (e4.rect1 ? (t3 = (o3 = e4).x - o3.startX, n2 = o3.y - o3.startY, o3.rect1.x = o3.rect1.startX + t3, o3.rect1.y = o3.rect1.startY + n2, o3.rect2.x = o3.rect2.startX + t3, o3.rect2.y = o3.rect2.startY + n2) : (t3 = (r3 = e4).other, n2 = (o3 = r3.ball).index, e4 = T2, zot(V[n2][4]) || (e4 = V[n2][4]), e4 != "straight" && e4 != "mirror" || (n2 = r3.x - o3.x, r3 = r3.y - o3.y, e4 == "mirror" ? (t3.x = o3.x - n2, t3.y = o3.y - r3) : (r3 = Math.atan2(r3, n2), n2 = -t3.stickLength * Math.cos(r3 + Math.PI), r3 = -t3.stickLength * Math.sin(r3 + Math.PI), t3.x = o3.x - n2, t3.y = o3.y - r3))));
          }, Object.defineProperty(N, "move", { get: function() {
            return S2;
          }, set: function(e4) {
            S2 != e4 && ((S2 = e4) ? re : ie)();
          } }), Object.defineProperty(N, "interactive", { get: function() {
            return L;
          }, set: function(e4) {
            F2 = L = e4, N.allowToggle = L, N.editPoints = L, N.lockControls = !L, N.selectPoints = L, N.move = L, N.points = N.points;
          } }), Object.defineProperty(N, "allowToggle", { get: function() {
            return n;
          }, set: function(e4) {
            n != e4 && ((n = e4) ? N.move && re() : !F2 && N.move && ie());
          } }), Object.defineProperty(N, "controlsVisible", { get: function() {
            return F2;
          }, set: function(e4) {
            (F2 = e4) ? N.showControls() : N.hideControls();
          } });
          var d = P;
          function p(e4, t3, o3) {
            return { x: e4.x + (t3.x - e4.x) * o3, y: e4.y + (t3.y - e4.y) * o3 };
          }
          function g(e4, t3, o3, n2, r3, i3, a2, l2) {
            var s6 = e4.length - 1, c3 = 0, u2 = 0;
            n2 == 100 && N.type == "Squiggle" && (n2 = 99.99), n2 = (n2 + 1e5) % 100, To.loop(o3, function(e5, t4) {
              return n2 / 100 < e5 ? (s6 = t4, u2 = e5, true) : void (c3 = e5);
            });
            var d2 = N.segmentPoints[s6], h2 = 0 < u2 ? (n2 / 100 - c3) / (u2 - c3) : 0, g2 = To.pointAlongCurve(d2, h2, null, l2), o3 = [g2.x, g2.y, 0, 0];
            i3 || (a2 ? N.interpolatedPoints.push({ x: g2.x, y: g2.y, r: n2 / 100 }) : (r3 != "none" && (l2 = p(d2[0], d2[1], h2), i3 = p(d2[1], d2[2], h2), a2 = p(d2[2], d2[3], h2), d2 = p(l2, i3, h2), h2 = p(i3, a2, h2), o3[4] = d2.x - g2.x, o3[5] = d2.y - g2.y, o3[6] = h2.x - g2.x, o3[7] = h2.y - g2.y, l2 = N.localToLocal(l2.x, l2.y, t3[s6]), e4[s6][6] = l2.x, e4[s6][7] = l2.y, t3 = N.localToLocal(a2.x, a2.y, t3[(s6 + 1) % e4.length]), e4[(s6 + 1) % e4.length][4] = t3.x, e4[(s6 + 1) % e4.length][5] = t3.y), r3 && (o3[8] = r3), e4.splice(s6 + 1, 0, o3)));
          }
          Object.defineProperty(N, "lockControls", { get: function() {
            return d;
          }, set: function(e4) {
            (d = e4) ? (N.controls.mouseChildren = false, N.controls.mouseEnabled = false) : (N.controls.mouseChildren = true, N.controls.mouseEnabled = true);
          } }), N.lockControls = d, KEYFOCUS !== void 0 && (To.KEYFOCUS = KEYFOCUS), Object.defineProperty(this, "keyFocus", { get: function() {
            return To.KEYFOCUS == N;
          }, set: function(e4) {
            To.KEYFOCUS = N;
          } }), N.selectPoints && !To.KEYFOCUS && function() {
            N.keyFocus = true;
            var e4 = document.activeElement;
            e4 && e4.blur();
          }(), Object.defineProperty(N, "points", { get: function() {
            for (var e4, t3, o3 = [], n2 = 0; n2 < V.length; n2++)
              t3 = V[n2], e4 = [To.decimals(t3[0].x), To.decimals(t3[0].y), To.decimals(t3[1].x), To.decimals(t3[1].y), To.decimals(t3[2].x), To.decimals(t3[2].y), To.decimals(t3[3].x), To.decimals(t3[3].y)], t3[4] && t3[4] !== "straight" && e4.push(t3[4]), o3.push(e4);
            return o3;
          }, set: function(e4) {
            var t3 = N.x, o3 = N.y, n2 = N.visible;
            N.dispose(true), C = c2(e4), N.shape && (N.shape.graphics.clear(), N.sticks.graphics.clear(), N.controls.noDrag(), N.removeAllChildren(), delete N.shape, delete N.sticks, delete N.controls), N.visible = false, u(), N.lockControls = d, N.x = t3, N.y = o3, N.visible = n2;
          } }), Object.defineProperty(N, "pointsAdjusted", { get: function() {
            var n2, r3, i3 = [], a2 = N.pointObjects;
            return To.loop(a2.length, function(e4, t3) {
              var o3;
              r3 = a2[e4], n2 = V[e4], r3 = r3[0].rotation == 0 && r3[0].scaleX == 0 && r3[0].scaleY == 0 ? [To.decimals(n2[0].x), To.decimals(n2[0].y), To.decimals(n2[1].x), To.decimals(n2[1].y), To.decimals(n2[2].x), To.decimals(n2[2].y), To.decimals(n2[3].x), To.decimals(n2[3].y)] : (o3 = r3[0].localToLocal(r3[2].x, r3[2].y, r3[0].parent), e4 = r3[0].localToLocal(r3[3].x, r3[3].y, r3[0].parent), [To.decimals(n2[0].x), To.decimals(n2[0].y), To.decimals(n2[1].x), To.decimals(n2[1].y), To.decimals(o3.x - n2[0].x), To.decimals(o3.y - n2[0].y), To.decimals(e4.x - n2[0].x), To.decimals(e4.y - n2[0].y)]), n2[4] && n2[4] !== "mirror" && r3.push(n2[4]), i3.push(r3);
            }), i3;
          }, set: function(e4) {
            zon && zogy("Blob() - pointsAdjusted is read only");
          } }), Object.defineProperty(N, "pointObjects", { get: function() {
            return V;
          }, set: function(e4) {
            zon && zog("Blob() - pointObjects is read only - but its contents can be manipulated - use blob.update() after changes");
          } }), Object.defineProperty(N, "pointControls", { get: function() {
            return q;
          }, set: function(e4) {
            zon && zog("Blob() - pointControls is read only - but its contents can be manipulated - use blob.update() after changes");
          } }), Object.defineProperty(N, "pointCircles", { get: function() {
            return G;
          }, set: function(e4) {
            zon && zog("Blob() - pointCircles is read only - but its contents can be manipulated - use blob.update() after changes");
          } }), Object.defineProperty(N, "segmentPoints", { get: function() {
            var o3 = N.pointsAdjusted, n2 = [];
            return To.loop(o3.length, function(e4, t3) {
              e4 = N.getSegmentPoint(o3[e4], o3[e4 < t3 - 1 ? e4 + 1 : 0]);
              n2.push(e4);
            }), n2;
          }, set: function(e4) {
            zon && zog("Blob() - segmentPoints is read only");
          } }), Object.defineProperty(N, "segmentRatios", { get: function() {
            var t3 = [], o3 = 0;
            To.loop(N.segmentPoints, function(e4) {
              e4 = To.distanceAlongCurve(e4);
              t3.push(e4), o3 += e4;
            });
            var n2 = [], r3 = 0;
            return To.loop(t3, function(e4) {
              r3 += e4 / o3, n2.push(r3);
            }), n2;
          }, set: function(e4) {
            zon && zog("Blob() - segmentRatios is read only");
          } }), N.approximateBounds = function(e4, t3) {
            zot(e4) && (e4 = 80), e4 /= N.num;
            var o3 = N.interpolate(e4, null, true, null, true), e4 = To.boundsAroundPoints(o3);
            if (N.setBounds(e4.x, e4.y, e4.width, e4.height), t3) {
              if (!N.parent)
                return zon && zogy("approximateBounds() - add to stage to first to see points"), N;
              N.hitPathPoints ? N.hitPathPoints.removeAllChildren() : N.hitPathPoints = new To.Container().addTo(), N.hitPathPoints.top();
              for (var n2 = 0; n2 < o3.length; n2++) {
                var r3 = o3[n2], r3 = N.localToGlobal(r3.x, r3.y);
                new To.Circle(3).loc(r3.x, r3.y, N.hitPathPoints);
              }
            }
            return N;
          }, N.getPointAngle = function(e4) {
            var t3, o3 = N.pointObjects[e4][0], n2 = N.pointObjects[e4][2], e4 = N.pointObjects[e4][3];
            return e4 = o3 == N.stage ? (t3 = new To.Point(n2.x, n2.y), new To.Point(e4.x, e4.y)) : (t3 = o3.localToGlobal(n2.x, n2.y), o3.localToGlobal(e4.x, e4.y)), To.angle(t3.x, t3.y, e4.x, e4.y);
          }, N.getSegmentPoint = function(e4, t3) {
            if (!zot(e4) && !zot(t3)) {
              e4[2] == 0 && e4[3] == 0 || (e4[4] -= e4[2], e4[5] -= e4[3], e4[6] -= e4[2], e4[7] -= e4[3], e4[0] += e4[2], e4[1] += e4[3], e4[2] = 0, e4[3] = 0), t3[2] == 0 && t3[3] == 0 || (t3[4] -= t3[2], t3[5] -= t3[3], t3[6] -= t3[2], t3[7] -= t3[3], t3[0] += t3[2], t3[1] += t3[3], t3[2] = 0, t3[3] = 0);
              var o3 = { x: e4[0], y: e4[1] }, n2 = { x: e4[0] + e4[6], y: e4[1] + e4[7] }, e4 = { x: t3[0] + t3[4], y: t3[1] + t3[5] }, t3 = { x: t3[0], y: t3[1] };
              return ee.x == 0 && ee.y == 0 || (o3.x += ee.x, n2.x += ee.x, e4.x += ee.x, t3.x += ee.x, o3.y += ee.y, n2.y += ee.y, e4.y += ee.y, t3.y += ee.y), [o3, n2, e4, t3];
            }
          }, N.getAdjacentSegmentData = function(e4) {
            zot(e4) && (e4 = 0);
            var t3 = N.pointsAdjusted;
            if (N.num == 2)
              return [[N.getSegmentPoint(t3[0], t3[1]), N.getSegmentPoint(t3[1], t3[0])], [0, 1]];
            if (e4 == 0)
              return [[N.getSegmentPoint(t3[N.num - 1], t3[0]), N.getSegmentPoint(t3[0], t3[1]), N.getSegmentPoint(t3[1], t3[2])], [N.num - 1, 0, 1]];
            if (e4 >= N.num - 1)
              return [[N.getSegmentPoint(t3[N.num - 2], t3[N.num - 1]), N.getSegmentPoint(t3[N.num - 1], t3[0]), N.getSegmentPoint(t3[0], t3[1])], [N.num - 2, N.num - 1, 0]];
            var o3 = e4 + 2 >= N.num ? 0 : e4 + 2;
            return [[N.getSegmentPoint(t3[e4 - 1], t3[e4]), N.getSegmentPoint(t3[e4], t3[e4 + 1]), N.getSegmentPoint(t3[e4 + 1], t3[o3])], [e4 - 1, e4, e4 + 1]];
          }, N.getCurvePoint = function(o3, e4, t3, n2) {
            zot(e4) && (e4 = N.segmentRatios), zot(t3) && (t3 = N.segmentPoints), zot(n2) && (n2 = false);
            var r3 = e4, i3 = t3, e4 = To.loop(r3, function(e5, t4) {
              if (o3 <= e5)
                return t4;
            }), t3 = 0 < e4 ? r3[e4 - 1] : 0, r3 = 0 < e4 ? r3[e4] - r3[e4 - 1] : r3[e4], r3 = (o3 - t3) / r3, r3 = To.pointAlongCurve(i3[e4], r3, n2, true);
            if (!zot(r3)) {
              n2 = N.localToGlobal(r3.x, r3.y);
              return n2.angle = r3.angle, n2.z = e4, zot(n2) ? void 0 : n2;
            }
          }, this.addPoint = function(e4, t3) {
            zot(e4) && (e4 = 100);
            var o3 = N.points, n2 = N.segmentRatios;
            return g(o3, N.pointControls, n2, e4, t3 = t3 || a), N.points = o3, N.num = o3.length, N;
          }, this.addPoints = function(r3, i3, a2, l2, s6, c3, u2) {
            zot(c3) && (c3 = To.copy(N.points));
            var d2, e4 = To.copy(N.segmentRatios), h2 = 0;
            return s6 && (N.interpolatedPoints = []), l2 && (d2 = e4.length * r3), To.loop(e4, function(t3, o3) {
              s6 && g(c3, N.pointControls, N.segmentRatios, 100 * h2, i3, !zot(a2) && o3 != a2, s6, u2);
              var e5 = l2 ? Math.round(d2 * (t3 - h2)) : r3, n2 = 1 / (e5 + 1);
              To.loop(e5, function(e6) {
                e6 = h2 + (t3 - h2) * n2 * (e6 + 1);
                g(c3, N.pointControls, N.segmentRatios, 100 * e6, i3, !zot(a2) && o3 != a2, s6, u2), !s6 && 0 < r3 && (N.points = c3);
              }), h2 = t3;
            }), s6 && N.type == "Squiggle" && g(c3, N.pointControls, N.segmentRatios, 100, i3, null, s6, u2), N.stage && N.stage.update(), N.num = c3.length, N;
          }, this.interpolate = function(e4, t3, o3, n2, r3) {
            return zot(e4) && (e4 = 1), N.addPoints(e4, "none", t3, o3, true, n2, r3), N.interpolatedPoints;
          }, this.dispose = function(e4, t3, o3) {
            if (N.shape) {
              if (To.gD(N), J && N.toggleStageEvent && J.off("stagemousedown", N.toggleStageEvent), N.controls.noDrag(), N.controls.removeAllEventListeners(), N.selectPoints && N.selectionManager && N.selectionManager.dispose(), N.selectedBalls = null, N.selectedRect1s = null, N.selectedRect2s = null, N.selectionManager = null, N.off("mousedown", N.toggleEvent), N.off("click", N.clickEvent), e4) {
                N.shape.dispose(), N.shape = null;
                for (var n2 = 0; n2 < N.points.length; n2++)
                  N.pointObjects[n2][0].removeAllEventListeners(), N.pointObjects[n2][1].removeAllEventListeners(), N.pointObjects[n2][2].removeAllEventListeners(), N.pointObjects[n2][3].removeAllEventListeners();
                N.controls.removeFrom(N), N.sticks.dispose(), G = V = null;
              } else
                N.removeAllEventListeners(), G = V = null, o3 || this.zimCustomShape_dispose(true);
              return true;
            }
          };
        }, To.extend(To.Blob, To.CustomShape, ["clone", "dispose"], "zimCustomShape", false), To.Flare = function(B, l, s5, S2, e3, E, I2, t2, M, O, o2, n, r2, i2, a, c2, u, d, j, L, _, Y, D, X, R, W, F2, H, N, V, h2, g, p) {
          if (w = zob(To.Flare, arguments, "color, borderColor, borderWidth, crossAngle, thickness, thicknessA, thicknessB, pin, startX, startY, lengths, angles, anglesA, anglesB, anglesEnd, cross, crossColors, close, dashed, strokeObj, spineColor, spineBorderWidth, spineBorderColor, spineDashed, spineStrokeObj, closeColor, closeBorderWidth, closeBorderColor, closeDashed, closeStrokeObj, style, group, inherit", this))
            return w;
          z_d("53.6"), this.zimContainer_constructor(), this.type = "Flare", this.group = g;
          var f3 = h2 === false ? {} : To.getStyle(this.type, this.group, p), G = this;
          zot(l) && (l = f3.borderColor != null ? f3.borderColor : null), zot(s5) && (s5 = f3.borderWidth != null ? f3.borderWidth : null), l < 0 || s5 < 0 ? l = s5 = null : l != null && s5 == null && (s5 = 1), zot(B) && (B = f3.color != null ? f3.color : 0 < s5 ? "rgba(0,0,0,0)" : "black"), (zot(s5) || 0 < s5) && (zot(l) && zot(s5) || zot(l) && (l = "black")), zot(S2) && (S2 = f3.crossAngle != null ? f3.crossAngle : 0);
          var m2, z, y = S2;
          function b(d2, h3, g2, p2, f4, e4, m3, o3) {
            G.removeAllChildren();
            var n2, r3, i3 = G.shape = new To.Shape().addTo(G);
            G.colorCommand = i3.c().f(B).command, B && B.type && G.specialColor(G.colorCommand, B), (zot(s5) || 0 < s5) && (zot(l) && zot(s5) || (zot(l) && (l = "black"), G.borderColorCommand = i3.s(l).command, l && l.type && G.specialColor(G.borderColorCommand, l), G.borderWidthCommand = i3.ss(s5, L.caps, L.joints, L.miterLimit, L.ignoreScale).command, j && (G.borderDashedCommand = i3.sd([10, 10], 5).command))), i3.mt(0, 0), 0 < Y && (n2 = G.spineShape = new To.Shape().addTo(G), G.spineColorCommand = n2.c().f(_).command, _ && _.type && G.specialColor(G.spineColorCommand, _), (zot(Y) || 0 < Y) && (zot(D) && zot(Y) || (zot(D) && (D = "black"), G.spineBorderColorCommand = n2.s(D).command, D && D.type && G.specialColor(G.spineBorderColorCommand, D), G.spineBorderWidthCommand = n2.ss(Y, R.caps, R.joints, R.miterLimit, R.ignoreScale).command, X && (G.spineBorderDashedCommand = n2.sd([10, 10], 5).command)))), zot(W) || (r3 = G.closeShape = new To.Shape().addTo(G), G.closeColorCommand = r3.c().f(W).command, W && W.type && G.specialColor(G.closeColorCommand, W), (zot(F2) || 0 < F2) && (zot(H) && zot(F2) || (zot(H) && (H = "black"), G.closeBorderColorCommand = r3.s(H).command, closeBorder && closeBorder.type && G.specialColor(G.closeBorderCommand, H), G.closeBorderWidthCommand = r3.ss(F2, V.caps, V.joints, V.miterLimit, V.ignoreScale).command, N && (G.closeBorderDashedCommand = r3.sd([10, 10], 5).command))), i3.mt(0, 0));
            var z2, y2, c3 = M, u2 = O, b2 = S2, v2 = b2 - 180, w2 = E, C = I2, x2 = h3[0], t3 = Math.max(d2.length, h3.length, g2.length, p2.length, f4.length), x2 = v2, k = [], T2 = [], A3 = [], a2 = (G.points = [], G.pinPoints = []);
            function P(e5, t4, o4, n3, r4) {
              var i4 = r4 - 90, a3 = 180 - n3 - (90 - i4), r4 = Math.tan(i4 * To.RAD) * o4, r4 = (e5 - t4 - r4) / Math.sin(a3 * To.RAD) * Math.sin(n3 * To.RAD) + Math.sqrt(Math.pow(o4, 2) + Math.pow(r4, 2));
              return { x: r4 * Math.sin(i4 * To.RAD), y: r4 * Math.cos(i4 * To.RAD), t: r4 };
            }
            To.loop(t3, function(e5, t4) {
              var o4 = function(e6) {
                var t5 = h3[e6], o5 = d2[e6], n4 = g2[e6], r5 = p2[e6], i5 = f4[e6];
                m3 && (u3 = m3[e6]);
                zot(t5) && (t5 = x2, G.angles[e6] = t5);
                zot(o5) && (o5 = 200, G.lengths[e6] = o5);
                zot(n4) && (n4 = 0, G.anglesA[e6] = n4);
                zot(r5) && (r5 = 0, G.anglesB[e6] = r5);
                zot(i5) && (i5 = 0, G.anglesEnd[e6] = i5);
                m3 && zot(u3) && (u3 = B, G.crossColors[e6] = u3);
                var a4 = 180 - (i5 += 90), l3 = Math.cos((x2 - t5) * To.RAD), s7 = Math.sin((x2 - t5) * To.RAD), c4 = new To.Point(0, 0), e6 = new To.Point(o5, 0);
                {
                  var u3;
                  u3 = zot(z2) ? new To.Point(Math.cos(b2 * To.RAD) * w2, Math.sin(b2 * To.RAD) * w2) : new To.Point(z2.x * l3 - z2.y * s7, z2.x * s7 + z2.y * l3);
                }
                n4 = P(o5, u3.x, u3.y, n4, a4), a4 = new To.Point(o5 - n4.x, -n4.y);
                l3 = zot(y2) ? new To.Point(Math.cos(v2 * To.RAD) * w2, Math.sin(v2 * To.RAD) * C) : new To.Point(y2.x * l3 - y2.y * s7, y2.x * s7 + y2.y * l3);
                r5 = P(o5, l3.x, l3.y, r5, i5), i5 = new To.Point(o5 - r5.x, r5.y);
                return z2 = new To.Point(a4.x - o5, a4.y), y2 = new To.Point(i5.x - o5, i5.y), { a: x2 = t5, A: u3, B: a4, C: i5, D: l3, E: e6, F: c4, tA: n4.t, tB: r5.t };
              }(e5), n3 = Math.cos(o4.a * To.RAD), r4 = Math.sin(o4.a * To.RAD), i4 = new To.Point(c3 + o4.A.x * n3 - o4.A.y * r4, u2 + o4.A.x * r4 + o4.A.y * n3), a3 = new To.Point(c3 + o4.B.x * n3 - o4.B.y * r4, u2 + o4.B.x * r4 + o4.B.y * n3), l2 = new To.Point(c3 + o4.C.x * n3 - o4.C.y * r4, u2 + o4.C.x * r4 + o4.C.y * n3), s6 = new To.Point(c3 + o4.D.x * n3 - o4.D.y * r4, u2 + o4.D.x * r4 + o4.D.y * n3);
              k.push(i4, a3), T2.unshift(l2, s6), A3.push([i4, a3, l2, s6]);
              s6 = new To.Point(c3 + o4.F.x * n3 - o4.F.y * r4, u2 + o4.F.x * r4 + o4.F.y * n3), n3 = new To.Point(c3 + o4.E.x * n3 - o4.E.y * r4, u2 + o4.E.x * r4 + o4.E.y * n3);
              e5 == 0 && G.pinPoints.push(s6), G.pinPoints.push(n3), c3 = n3.x, u2 = n3.y, w2 = o4.tA, C = o4.tB;
            }), G.points = k.concat(T2), e4 ? (To.loop(A3, function(e5, t4) {
              i3.mt(e5[0].x, e5[0].y), zot(m3) || zot(m3[t4]) || i3.f(m3[t4]).mt(e5[0].x, e5[0].y), i3.lt(e5[1].x, e5[1].y).lt(e5[2].x, e5[2].y).lt(e5[3].x, e5[3].y).cp();
            }), o3 && i3.mt(A3[A3.length - 1][1].x, A3[A3.length - 1][1].y).lt(A3[A3.length - 1][2].x, A3[A3.length - 1][2].y).lt(A3[0][3].x, A3[0][3].y).lt(A3[0][0].x, A3[0][0].y).cp()) : (To.loop(k, function(e5, t4) {
              t4 == 0 ? i3.mt(e5.x, e5.y) : i3.lt(e5.x, e5.y);
            }), o3 && (i3.lt(k[0].x, k[0].y), i3.cp()), To.loop(T2, function(e5, t4) {
              t4 == 0 && o3 ? i3.mt(e5.x, e5.y) : i3.lt(e5.x, e5.y);
            }), o3 && i3.lt(T2[0].x, T2[0].y), i3.cp()), n2 && (To.loop(a2, function(e5, t4) {
              t4 == 0 ? n2.mt(e5.x, e5.y) : n2.lt(e5.x, e5.y);
            }), o3 && n2.lt(a2[0].x, a2[0].y).cp()), zot(W) || (To.loop(T2, function(e5, t4) {
              t4 == 0 ? r3.mt(e5.x, e5.y) : r3.lt(e5.x, e5.y);
            }), o3 && r3.lt(T2[0].x, T2[0].y).cp());
          }
          S2 -= 90, zot(e3) && (e3 = f3.thickness != null ? f3.thickness : null), zot(E) && (E = f3.thicknessA != null ? f3.thicknessA : null), zot(I2) && (I2 = f3.thicknessB != null ? f3.thicknessB : null), zot(e3) ? zot(I2) && !zot(E) ? I2 = E : zot(E) && !zot(I2) ? E = I2 : I2 = E = 10 : zot(I2) && !zot(E) ? I2 = e3 - E : zot(E) && !zot(I2) ? E = e3 - I2 : I2 = E = e3 / 2, G.thickness = E + I2, zot(c2) && (c2 = f3.cross == null || f3.cross), zot(u) && (u = f3.crossColors != null ? f3.crossColors : null), zot(u) || Array.isArray(u) || (u = [u]), zot(d) && (d = f3.close != null && f3.close), zot(M) && (M = f3.startX != null ? f3.startX : 0), zot(O) && (O = f3.startY != null ? f3.startY : 0), zot(o2) && (o2 = f3.lengths != null ? f3.lengths : [200]), Array.isArray(o2) || (o2 = [o2]), zot(n) && (n = f3.angles != null ? f3.angles : [0]), Array.isArray(n) || (n = [n]), zot(r2) && (r2 = f3.anglesA != null ? f3.anglesA : [10]), Array.isArray(r2) || (r2 = [r2]), zot(i2) && (i2 = f3.anglesB != null ? f3.anglesB : To.copy(r2)), Array.isArray(i2) || (i2 = [i2]), zot(a) && (a = f3.anglesEnd != null ? f3.anglesEnd : [0]), Array.isArray(a) || (a = [a]), zot(L) && (L = f3.strokeObj != null ? f3.strokeObj : { miterLimit: 2 }), zot(D) && (D = f3.spineBorderColor != null ? f3.spineBorderColor : null), zot(Y) && (Y = f3.spineBorderWidth != null ? f3.spineBorderWidth : null), D < 0 || Y < 0 ? D = Y = null : D != null && Y == null && (Y = 1), zot(_) && (_ = f3.spineColor != null ? f3.spineColor : 0 < Y ? "rgba(0,0,0,0)" : "black"), zot(X) && (X = f3.spineDashed != null ? f3.spineDashed : null), zot(R) && (R = f3.spineStrokeObj != null ? f3.spineStrokeObj : { miterLimit: 2 }), (zot(Y) || 0 < Y) && (zot(D) && zot(Y) || zot(D) && (D = l || "black")), zot(H) && (H = f3.closeBorderColor != null ? f3.closeBorderColor : null), zot(F2) && (F2 = f3.closeBorderWidth != null ? f3.closeBorderWidth : null), H < 0 || F2 < 0 ? H = F2 = null : H != null && F2 == null && (F2 = 1), zot(W) && (W = f3.closeColor != null ? f3.closeColor : 0 < F2 ? "rgba(0,0,0,0)" : null), zot(N) && (N = f3.closeDashed != null ? f3.closeDashed : null), zot(V) && (V = f3.closeStrokeObj != null ? f3.closeStrokeObj : { miterLimit: 2 }), (zot(F2) || 0 < F2) && (zot(H) && zot(F2) || zot(H) && (H = l || "black")), this.thicknessA = E, this.thicknessB = I2, this.cross = c2, this.close = d, this.lengths = o2, this.angles = n, this.anglesA = r2, this.anglesB = i2, this.anglesEnd = a, this.crossColors = u, b(o2, n, r2, i2, a, c2, u, d), this.add = function(e4, t3, o3, n2, r3, i3, a2, l2) {
            var s6;
            return (s6 = zob(G.add, arguments, "lengths, angles, anglesA, anglesB, anglesEnd, cross, crossColors, close")) ? s6 : (zot(i3) || (G.cross = i3), zot(l2) || (G.close = l2), zot(e4) || (Array.isArray(e4) || (e4 = [e4]), zot(G.lengths) ? G.lengths = e4 : G.lengths = G.lengths.concat(e4)), zot(t3) || (Array.isArray(t3) || (t3 = [t3]), zot(G.angles) ? G.angles = t3 : G.angles = G.angles.concat(t3)), zot(o3) || (Array.isArray(o3) || (o3 = [o3]), zot(G.anglesA) ? G.anglesA = o3 : G.anglesA = G.anglesA.concat(o3)), zot(n2) || (Array.isArray(n2) || (n2 = [n2]), zot(G.anglesB) ? G.anglesB = n2 : G.anglesB = G.anglesB.concat(n2)), zot(r3) || (Array.isArray(r3) || (r3 = [r3]), zot(G.anglesEnd) ? G.anglesEnd = r3 : G.anglesEnd = G.anglesEnd.concat(r3)), zot(a2) || (zot(G.crossColors) ? zon && zogy("Flare() - must set crossColor for original object parameters") : (Array.isArray(a2) || (a2 = [a2]), zot(G.crossColors) ? G.crossColors = a2 : G.crossColors = G.crossColors.concat(a2))), G.remake(), G);
          }, this.remake = function() {
            return E = this.thicknessA, I2 = this.thicknessB, b(G.lengths, G.angles, G.anglesA, G.anglesB, G.anglesEnd, G.cross, G.crossColors, G.close), G;
          }, Object.defineProperty(G, "color", { get: function() {
            return B;
          }, set: function(e4) {
            zot(e4) && (e4 = "black"), (B = e4) && e4.type ? G.specialColor(G.colorCommand, e4) : G.colorCommand.style = e4;
          } }), this.setColorRange = function(e4, t3) {
            return z = zot(t3) ? (m2 = G.color, e4) : (m2 = zot(e4) ? G.color : e4, t3), G;
          };
          var v = 0;
          Object.defineProperty(G, "colorRange", { get: function() {
            return v;
          }, set: function(e4) {
            v = e4, zot(m2) || zot(z) || (G.color = To.colorRange(m2, z, e4));
          } }), Object.defineProperty(G, "borderColor", { get: function() {
            return l;
          }, set: function(e4) {
            l = e4, G.borderColorCommand ? e4 && e4.type ? G.specialColor(G.borderColorCommand, e4) : G.borderColorCommand.style = e4 : b();
          } }), Object.defineProperty(G, "borderWidth", { get: function() {
            return s5;
          }, set: function(e4) {
            0 < e4 || (e4 = 0), s5 = e4, G.borderWidthCommand && s5 != 0 ? (G.borderWidthCommand.width = s5, j && (G.borderDashedCommand.segments = [20, 10], G.borderDashedCommand.offset = 5)) : b();
          } }), Object.defineProperty(G, "spineColor", { get: function() {
            return _;
          }, set: function(e4) {
            zot(e4) && (e4 = "black"), _ = e4, G.spineColorCommand ? e4 && e4.type ? G.specialColor(G.spineColorCommand, e4) : G.spineColorCommand.style = e4 : b();
          } }), Object.defineProperty(G, "spineBorderColor", { get: function() {
            return D;
          }, set: function(e4) {
            D = e4, G.spineBorderColorCommand ? e4 && e4.type ? G.specialColor(G.spineBorderColorCommand, e4) : G.spineBorderColorCommand.style = e4 : b();
          } }), Object.defineProperty(G, "spineBorderWidth", { get: function() {
            return Y;
          }, set: function(e4) {
            0 < e4 || (e4 = 0), Y = e4, G.spineBorderWidthCommand && Y != 0 ? (G.spineBorderWidthCommand.width = Y, X && (G.spineBorderDashedCommand.segments = [20, 10], G.spineBorderDashedCommand.offset = 5)) : b();
          } }), Object.defineProperty(G, "closeColor", { get: function() {
            return W;
          }, set: function(e4) {
            zot(e4) && (e4 = "black"), W = e4, G.closeColorCommand ? e4 && e4.type ? G.specialColor(G.closeColorCommand, e4) : G.closeColorCommand.style = e4 : b();
          } }), Object.defineProperty(G, "closeBorderColor", { get: function() {
            return H;
          }, set: function(e4) {
            H = e4, G.closeBorderColorCommand ? e4 && e4.type ? G.specialColor(G.closeBorderColorCommand, e4) : G.closeBorderColorCommand.style = e4 : b();
          } }), Object.defineProperty(G, "closeBorderWidth", { get: function() {
            return F2;
          }, set: function(e4) {
            0 < e4 || (e4 = 0), F2 = e4, G.closeBorderWidthCommand && F2 != 0 ? (G.closeBorderWidthCommand.width = F2, N && (G.closeBorderDashedCommand.segments = [20, 10], G.closeBorderDashedCommand.offset = 5)) : b();
          } }), Object.defineProperty(G, "pin", { get: function() {
            return t2;
          }, set: function(e4) {
            0 < e4 || (e4 = 0), e4 > G.pinPoints.length - 1 && (t2 = 0), t2 = e4;
            e4 = G.pinPoints[t2];
            e4 && (G.regX = e4.x, G.regY = e4.y);
          } });
          var w = To.boundsAroundPoints(G.points);
          this.setBounds(w.x, w.y, w.width, w.height), zot(t2) || (G.pin = t2), (this.mouseChildren = false) !== h2 && To.styleTransforms(this, f3), this.clone = function() {
            return G.cloneProps(new To.Flare(B, l, s5, y, To.copy(e3), To.copy(E), To.copy(I2), t2, M, O, To.copy(o2), To.copy(n), To.copy(r2), To.copy(i2), To.copy(a), c2, To.copy(u), d, j, L, _, Y, D, X, R, W, F2, H, N, V, h2, this.group, p));
          };
        }, To.extend(To.Flare, To.Container, ["clone"], "zimContainer", false), To.MultiFlare = function(n, r2, i2, a, e3, t2, o2) {
          if (l = zob(To.MultiFlare, arguments, "flares, pins, angles, endToEnd, style, group, inherit", this))
            return l;
          z_d("53.7"), this.zimContainer_constructor(), this.type = "MultiFlare", this.group = t2;
          var l = e3 === false ? {} : To.getStyle(this.type, this.group, o2), s5 = this;
          zot(n) && (n = l.flares != null ? l.flares : []), Array.isArray(n) || (n = [n]), zot(r2) && (r2 = l.pins != null ? l.pins : null), zot(i2) && (i2 = l.angles != null ? l.angles : null), zot(a) && (a = l.endToEnd != null && l.endToEnd), s5.flares = n, s5.pins = r2, s5.angles = i2, s5.endToEnd = a, s5.mouseChildren = false, s5.add = function(e4, t3) {
            return zot(e4) || (zot(t3) && (t3 = true), Array.isArray(e4) || (e4 = [e4]), To.loop(e4, function(e5) {
              t3 ? s5.flares.push(e5.clone()) : s5.flares.push(e5);
            }), s5.remake(), s5.stage && s5.stage.update()), s5;
          }, s5.remove = function(e4) {
            return zot(e4) || (Array.isArray(e4) || (e4 = [e4]), To.loop(e4, function(e5) {
              e5 = s5.flares.indexOf(e5);
              0 <= e5 && s5.flares.splice(e5, 1);
            }), s5.remake(), s5.stage && s5.stage.update()), s5;
          }, s5.remake = function() {
            s5.removeAllChildren(), To.loop(s5.flares, function(e4, t3) {
              var o3;
              r2 && !zot(r2[t3]) && (e4.pin = r2[t3]), i2 && !zot(i2[t3]) && (e4.rotation = i2[t3]), e4.addTo(s5), s5.flares.push(e4), a && 0 < t3 && (t3 = (o3 = n[t3 - 1]).pinPoints[o3.pinPoints.length - 1], o3 = o3.localToLocal(t3.x, t3.y, s5), t3 = e4.pinPoints[0], t3 = e4.localToLocal(t3.x, t3.y, s5), e4.mov(o3.x - t3.x, o3.y - t3.y));
            });
          }, s5.remake(), e3 !== false && To.styleTransforms(this, l), this.clone = function() {
            return s5.cloneProps(new To.MultiFlare(To.copy(n, true), To.copy(r2), To.copy(i2), a, e3, this.group, o2));
          };
        }, To.extend(To.MultiFlare, To.Container, ["clone"], "zimContainer", false), To.FlareBox = function(o2, n, e3, t2, r2, i2, a, l, s5, c2, u) {
          if (d = zob(To.FlareBox, arguments, "width, height, color, borderColor, borderWidth, flares, corners, pins, style, group, inherit", this))
            return d;
          z_d("53.8"), this.group = c2;
          var d = s5 === false ? {} : To.getStyle("FlareBox", this.group, u);
          zot(o2) && (o2 = d.width != null ? d.width : 220), zot(n) && (n = d.height != null ? d.height : 80), this.zimContainer_constructor(o2, n), this.type = "FlareBox";
          var h2 = this;
          if (this.mouseChildren = false, zot(t2) && (t2 = d.borderColor != null ? d.borderColor : null), zot(r2) && (r2 = d.borderWidth != null ? d.borderWidth : null), t2 < 0 || r2 < 0 ? t2 = r2 = null : t2 != null && r2 == null && (r2 = 1), zot(e3) && (e3 = d.color != null ? d.color : 0 < r2 ? "rgba(0,0,0,0)" : "black"), (zot(r2) || 0 < r2) && (zot(t2) && zot(r2) || zot(t2) && (t2 = "black")), zot(i2) && (i2 = d.flares != null ? d.flares : null), zot(a) && (a = d.corners != null ? d.corners : null), zot(l) && (l = d.pins != null ? d.pins : null), h2.backing = new To.Rectangle(o2, n, e3, t2, r2).addTo(this), !zot(i2)) {
            if (i2.type != "MultiFlare") {
              if (!Array.isArray(i2)) {
                if (i2.type != "Flare")
                  return;
                i2 = [i2];
              }
              i2 = new To.MultiFlare(i2, l);
            }
            i2.addTo(h2), h2.multiFlare = i2, h2.flares = h2.multiFlare.flares, i2.loop(function(e4, t3) {
              l && !zot(l[t3]) ? e4.pin = l[t3] : zot(e4.pin) && (e4.pin = 0), a && !zot(a[t3]) ? e4.corner = a[t3] : zot(e4.corner) && (e4.corner = 0), e4.corner == 1 ? e4.loc(o2, 0) : e4.corner == 2 ? e4.loc(o2, n) : e4.corner == 3 ? e4.loc(0, n) : e4.loc(0, 0), e4.rot(90 * (e4.corner - e4.pin));
            }), s5 !== false && To.styleTransforms(this, d), this.clone = function() {
              return h2.cloneProps(new To.FlareBox(o2, n, e3, t2, r2, To.copy(i2, true), To.copy(a), To.copy(l), s5, this.group, u));
            };
          }
        }, To.extend(To.FlareBox, To.Container, ["clone"], "zimContainer", false), To.Label = function(e3, i2, t2, o2, n, r2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j) {
          var L;
          if (L = zob(To.Label, arguments, "text, size, font, color, rollColor, shadowColor, shadowBlur, align, valign, bold, italic, variant, lineWidth, lineHeight, backing, outlineColor, outlineWidth, backgroundColor, backgroundBorderColor, backgroundBorderWidth, corner, backgroundDashed, padding, paddingHorizontal, paddingVertical, shiftHorizontal, shiftVertical, rollPersist, labelWidth, labelHeight, maxSize, splitWords, style, group, inherit", this))
            return L;
          z_d("54"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Label", this.group = O;
          var _ = M === false ? {} : To.getStyle(this.type, this.group, j);
          zot(e3) && (e3 = _.text != null ? _.text : "LABEL"), zot(i2) && (i2 = _.size != null ? _.size : 36), zot(t2) && (t2 = _.font != null ? _.font : "arial"), zot(o2) && (o2 = _.color != null ? _.color : "black"), zot(c2) && (c2 = _.bold != null && _.bold), zot(u) && (u = _.italic != null && _.italic);
          var Y = function() {
            return arguments;
          }(e3, i2, t2, o2, c2, u);
          e3 = To.Pick.choose(e3);
          var D = false;
          e3 === "" && (e3 = " ", D = true), i2 = To.Pick.choose(i2), t2 = To.Pick.choose(t2), o2 = To.Pick.choose(o2), c2 = To.Pick.choose(c2), u = To.Pick.choose(u), zot(n) && (n = _.rollColor != null ? _.rollColor : null), !zot(r2) && r2 != "ignore" || (r2 = _.shadowColor != null && r2 != "ignore" ? _.shadowColor : -1), !zot(a) && a != "ignore" || (a = _.shadowBlur != null && a != "ignore" ? _.shadowBlur : 14), zot(l) && (l = _.align != null ? _.align : "left"), zot(s5) && (s5 = _.valign != null ? _.valign : "top"), zot(f3) && zot(_.outlineColor) || !zot(m2) || (m2 = _.outlineWidth != null ? _.outlineWidth : Math.round(0.2 * i2)), zot(m2) && zot(_.outlineWidth) || !zot(f3) || (f3 = _.outlineColor != null ? _.outlineColor : "#000000"), zot(m2) && (m2 = _.outlineWidth != null ? _.outlineWidth : 0), !zot(z) && z != "ignore" || (z = _.backgroundColor != null && z != "ignore" ? _.backgroundColor : null), !zot(C) && C != "ignore" || (C = _.padding != null && C != "ignore" ? _.padding : 10), zot(x2) && (x2 = _.paddingHorizontal != null ? _.paddingHorizontal : C), zot(k) && (k = _.paddingVertical != null ? _.paddingVertical : C), zot(T2) && (T2 = _.shiftHorizontal != null ? _.shiftHorizontal : 0), zot(A3) && (A3 = _.shiftVertical != null ? _.shiftVertical : 0), zot(d) && (d = _.variant != null && _.variant), zot(h2) && (h2 = _.lineWidth != null ? _.lineWidth : null), zot(g) && (g = _.lineHeight != null ? _.lineHeight : null), !zot(p) && p != "ignore" || (p = _.backing != null && p != "ignore" ? _.backing.clone() : null), zot(P) && (P = _.rollPersist != null && _.rollPersist), _.labelWidth != null && (h2 = _.labelWidth), zot(B) || (h2 = B), l == "middle" && (l = "center"), zot(S2) && (S2 = _.labelHeight != null ? _.labelHeight : null), zot(E) && (E = _.maxSize != null ? _.maxSize : null), i2 = E ? Math.min(i2, E) : i2, zot(I2) && (I2 = _.splitWords != null && _.splitWords);
          var X = zdf !== void 0 && zdf.retina, R = this;
          this.mouseChildren = false, this.paddingVertical = k, this.paddingHorizontal = x2;
          var W = [];
          W[0] = u ? "italic" : "normal", W[1] = d ? "small-caps" : "normal", W[2] = c2 ? "bold" : "normal", W[3] = i2 + "px", W[4] = t2;
          var F2, H, N, V, G, q = W.join(" "), e3 = String(e3), U = false, Q = h2, Z2 = S2;
          function K(e4) {
            e4 = new createjs.Text(e4, q, o2);
            return e4.lineWidth = Q, e4.lineHeight = g, e4;
          }
          if (zot(p) && zot(z) ? (N = new createjs.Shape(), R.hitArea = N) : (Q && (Q -= 2 * x2), Z2 && (Z2 -= 2 * k)), F2 = K(e3), I2 && 1.2 * i2 < Q)
            for (var J = F2.getMetrics(), $ = 0; J.width > Q && $ < 1e3; )
              $++, To.loop(J.lines, function(e4, t3) {
                var o3 = K(e4 = e4.replace(/^[\s\t]+/, "")), o3 = o3.getMeasuredWidth();
                if (Q < o3) {
                  e4 = function(e5, t4) {
                    var o4 = Math.ceil(Q / e5 * t4.length), n2 = t4.substr(0, o4), r3 = K(n2), i3 = r3.getMeasuredWidth();
                    if (Q < i3)
                      for (; Q < i3; )
                        o4--, i3 = (r3 = K(n2 = t4.substr(0, o4))).getMeasuredWidth();
                    else if (i3 < Q) {
                      for (; i3 < Q; )
                        o4++, i3 = (r3 = K(n2 = t4.substr(0, o4))).getMeasuredWidth();
                      o4--, n2 = t4.substr(0, o4);
                    }
                    return { endIndex: o4, start: n2, end: t4.substr(o4, t4.length) };
                  }(o3, e4);
                  return J.lines[t3] = e4.start, J.lines.length > t3 + 1 ? (e4.end.trim(), J.lines[t3 + 1] = e4.end + " " + J.lines[t3 + 1]) : J.lines.push(e4.end), J = (F2 = K(J.lines.join(" "))).getMetrics(), false;
                }
              });
          function ee() {
            R.removeChild(R.background), R.background = new To.Rectangle(R.getBounds().width + 2 * x2, R.getBounds().height + 2 * k, z, y, b, v, w, null, false), To.center(R.background, R, 0), R.setBounds(R.background.x, R.background.y, R.background.width, R.background.height);
          }
          function te() {
            var e4, t3, o3 = F2.getBounds(), n2 = o3.y, r3 = o3.height;
            Q && (e4 = o3.x, l == "right" ? e4 = o3.x - Q + o3.width : l == "center" && (e4 = -Q / 2), F2.setBounds(e4, n2, Q, r3), o3 = F2.getBounds()), s5 == "baseline" ? t3 = o3.y : s5 == "top" ? (F2.y = i2 - i2 / 6, t3 = 0) : s5 == "center" || s5 == "middle" ? (t3 = -o3.height / 2, F2.y = 0.3 * i2) : t3 = -o3.height, R.setBounds(o3.x, t3, _.width ? _.width - 2 * C : o3.width, _.height ? _.height - 2 * C : o3.height), R.hitArea && R.hitArea.graphics.c().f("black").r(R.getBounds().x, R.getBounds().y, R.getBounds().width, R.getBounds().height), s5 != "center" && s5 != "middle" || (To.pos(F2, null, 0), To.mov(F2, 0, 1)), S2 || (p ? U && oe() : zot(z) || ee()), s5 == "baseline" || X || (F2.y += i2 / 32), ne();
          }
          function oe() {
            var e4 = p.boundsToGlobal(), e4 = R.boundsToGlobal(e4, true);
            R.setBounds(e4.x, e4.y, e4.width, e4.height);
          }
          function ne() {
            To.pos(F2, l == "left" || l == "right" ? p || R.background ? x2 : 0 : null, s5 == "top" || s5 == "baseline" || s5 == "bottom" ? p || R.background ? k : 0 : null, l == "right", s5 == "bottom"), F2.x += T2, F2.y += A3;
          }
          function re() {
            H && (H.x = F2.x, H.y = F2.y, R.addChildAt(H, R.background || R.backing ? 1 : 0));
          }
          (this.label = F2).textAlign = l, F2.textBaseline = "alphabetic", 0 < m2 && ((H = this.outlineLabel = F2.clone()).color = f3, H.outline = m2), r2 != -1 && 0 < a && (F2.shadow = new createjs.Shadow(r2, 3, 3, a)), this.addChild(F2), te(), zot(p) || (p.type == "Pattern" ? (R.backing = new To.Container(R.width + 2 * x2, R.height + 2 * k, null, null, false).centerReg(null, null, false), r2 != -1 && 0 < a && (new To.Rectangle(R.width + 2 * x2 - 2, R.height + k - 2, "#666", null, null, v, null, null, false).center(R.backing).shadow = new createjs.Shadow(r2, 3, 3, a)), N = new To.Rectangle(R.width + 2 * x2, R.height + 2 * k, z, null, null, v, null, null, false).addTo(R.backing), p.centerReg(N), p.setMask(N), R.backing.pattern = p) : R.backing = p, R.backing.center(R, 0), p = R.backing, oe(), U = true), ne(), re(), Object.defineProperty(R, "text", { get: function() {
            return F2.text == " " && D ? "" : F2.text;
          }, set: function(e4) {
            D = false, e4 === "" && (e4 = " ", D = true), F2.text = String(e4), F2.setBounds(null), R.setBounds(null), te(), H && (H.text = String(e4)), zot(h2) || zot(S2) || (le(), H && re());
          } }), Object.defineProperty(R, "size", { get: function() {
            return i2;
          }, set: function(e4) {
            i2 = E ? Math.min(e4, E) : e4, W[3] = i2 + "px", this.label.font = W.join(" "), H && (H.font = W.join(" ")), F2.setBounds(null), R.setBounds(null), te();
          } }), Object.defineProperty(R, "bold", { get: function() {
            return Boolean(this.label.font.match("bold"));
          }, set: function(e4) {
            c2 = e4, W[2] = e4 ? "bold" : "normal", this.label.font = W.join(" "), H && (H.font = W.join(" "));
          } }), Object.defineProperty(R, "italic", { get: function() {
            return Boolean(this.label.font.match("italic"));
          }, set: function(e4) {
            u = e4, W[0] = e4 ? "italic" : "normal", this.label.font = W.join(" "), H && (H.font = W.join(" "));
          } }), Object.defineProperty(R, "variant", { get: function() {
            return Boolean(this.label.font.match("small-caps"));
          }, set: function(e4) {
            d = e4, W[1] = e4 ? "small-caps" : "normal", this.label.font = W.join(" "), H && (H.font = W.join(" "));
          } }), Object.defineProperty(R, "font", { get: function() {
            return W[4];
          }, set: function(e4) {
            zot(e4) || (t2 = e4, W[4] = e4, this.label.font = W.join(" "), H && (H.font = W.join(" ")));
          } }), Object.defineProperty(R, "align", { get: function() {
            return l;
          }, set: function(e4) {
            zot(e4) || (l = e4, this.label.textAlign = l, H && (H.textAlign = l), te());
          } }), Object.defineProperty(R, "valign", { get: function() {
            return s5;
          }, set: function(e4) {
            zot(e4) || (s5 = e4, te());
          } }), Object.defineProperty(R, "color", { get: function() {
            return o2;
          }, set: function(e4) {
            n == o2 && (n = e4), o2 = e4, F2.color = o2, To.OPTIMIZE || !zns && OPTIMIZE || !R.stage || R.stage.update();
          } }), this.setColorRange = function(e4, t3) {
            return G = zot(t3) ? (V = R.color, e4) : (V = zot(e4) ? R.color : e4, t3), R;
          };
          var ie = 0;
          function ae() {
            R.mouseoverEvent = R.on("mouseover", function(e4) {
              R.showRollColor && R.showRollColor();
            }), R.mouseoutEvent = R.on("mouseout", function(e4) {
              R.rollPersist || R.showRollColor(false);
            }), R.pressupEvent = R.on("pressup", function(e4) {
              R.rollPersist && R.showRollColor(false);
            });
          }
          function le() {
            R.size = 200;
            for (var e4 = 0; g < Z2 / 2 && (R.height > Z2 || R.width > Q) && (e4++, R.size = R.size / 2, !(50 < e4)); )
              ;
            for (e4 = 0; R.height <= Z2 && R.width <= Q && (e4++, R.size = Math.ceil(R.size + 1), !(50 < e4)); )
              ;
            R.size = R.size - 1, re(), F2.setBounds(null);
            var t3 = F2.getBounds(), o3 = t3.y, n2 = t3.height;
            Z2 && (s5 == "bottom" ? o3 = t3.y - Z2 + t3.height : s5 == "center" && (o3 = -Z2 / 2), n2 = Z2), F2.setBounds(t3.x, o3, t3.width, n2), p ? U && oe() : zot(z) || ee();
          }
          Object.defineProperty(R, "colorRange", { get: function() {
            return ie;
          }, set: function(e4) {
            ie = e4, zot(V) || zot(G) || (R.color = To.colorRange(V, G, e4));
          } }), Object.defineProperty(R, "backgroundColor", { get: function() {
            return z;
          }, set: function(e4) {
            z = e4, R.background ? R.background.color = e4 : R.backing ? R.backing.color = e4 : ee(), To.OPTIMIZE || !zns && OPTIMIZE || !R.stage || R.stage.update();
          } }), Object.defineProperty(R, "outlineColor", { get: function() {
            return f3;
          }, set: function(e4) {
            f3 = e4, H && (H.color = f3), To.OPTIMIZE || !zns && OPTIMIZE || !R.stage || R.stage.update();
          } }), Object.defineProperty(R, "rollColor", { get: function() {
            return n;
          }, set: function(e4) {
            !R.mouseoverEvent && e4 && ae(), e4 == null && R.mouseoverEvent && (R.off("mouseover", R.mouseoverEvent), R.off("mouseout", R.mouseoutEvent), R.off("pressup", R.pressupEvent)), n = e4;
          } }), this._enabled = true, Object.defineProperty(R, "enabled", { get: function() {
            return R._enabled;
          }, set: function(e4) {
            Ge(R, e4), F2.color = o2, R.mouseChildren = false, To.OPTIMIZE || !zns && OPTIMIZE || !R.stage || R.stage.update();
          } }), this.showRollColor = function(e4) {
            return zot(e4) && (e4 = true), F2.color = e4 ? n : o2, R.stage && R.stage.update(), R;
          }, n && ae(), Object.defineProperty(R, "labelWidth", { get: function() {
            return h2;
          }, set: function(e4) {
            0 < e4 && (Q = h2 = e4, zot(p) && zot(z) || Q && (Q -= 2 * x2), R.label.lineWidth = Q, H && (H.lineWidth = Q), F2.setBounds(null), R.setBounds(null), te(), S2 && le(), To.OPTIMIZE || !zns && OPTIMIZE || !R.stage || R.stage.update());
          } }), Object.defineProperty(R, "labelHeight", { get: function() {
            return S2;
          }, set: function(e4) {
            0 < e4 && (Z2 = S2 = e4, zot(p) && zot(z) || Z2 && (Z2 -= 2 * k), h2 && le(), R.setBounds(null), To.OPTIMIZE || !zns && OPTIMIZE || !R.stage || R.stage.update());
          } }), zot(h2) || zot(S2) || le(), To.styleTransforms(this, _), this.clone = function(e4) {
            return R.cloneProps(new To.Label(e4 || !To.isPick(Y[0]) ? R.text : Y[0], e4 || !To.isPick(Y[1]) ? i2 : Y[1], e4 || !To.isPick(Y[2]) ? t2 : Y[2], e4 || !To.isPick(Y[3]) ? o2 : Y[3], n, r2, a, l, s5, e4 || !To.isPick(Y[4]) ? c2 : Y[4], e4 || !To.isPick(Y[5]) ? u : Y[5], d, h2, g, zot(p) ? null : p.clone(e4), f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, this.group, j));
          };
        }, To.extend(To.Label, To.Container, "clone", "zimContainer"), To.LabelOnPath = function(o2, i2, a, l, e3, t2, n, r2, s5, c2, u) {
          if (d = zob(To.LabelOnPath, arguments, "label, path, percentAngle, percents, showPath, allowToggle, interactive, onTop, style, group, inherit", this))
            return d;
          z_d("54.5"), this.zimContainer_constructor(null, null, null, null, false), this.type = "LabelOnPath", this.group = c2;
          var d = s5 === false ? {} : To.getStyle(this.type, this.group, u);
          zot(o2) && (o2 = d.label != null ? d.label : new To.Label("Label on Path")), zot(i2) && (i2 = d.path != null ? d.path : new To.Squiggle({ points: [[0, 0, 0, 0, -86, 57, 86, -57], [300, 150, 0, 0, -133, 21, 133, -21]] })), zot(a) && (a = d.percentAngle != null ? d.percentAngle : 100), zot(l) && (l = d.percents != null ? d.percents : null), zot(e3) && (e3 = d.showPath == null || d.showPath), zot(t2) && (t2 = d.allowToggle == null || d.allowToggle), zot(n) && (n = d.interactive == null || d.interactive), zot(r2) && (r2 = d.onTop != null && d.onTop);
          var h2 = o2.color;
          i2.addTo(this);
          var g = this;
          this.path = i2, this.allowToggle = t2, i2.interactive = n, typeof o2 == "string" && (o2 = new To.Label(o2));
          var p = i2.alpha;
          e3 || i2.alp(0), i2.onTop = r2;
          var f3 = this.letters = new To.Container().addTo(this);
          if (!l) {
            l = [];
            for (var m2 = 0; m2 < o2.text.length; m2++)
              l.push(To.decimals(1 / (o2.text.length - (i2.type == "Blob" ? 0 : 1)) * 100 * m2));
          }
          function z() {
            for (var e4 = f3.numChildren - 1; 0 <= e4; e4--)
              f3.getChildAt(e4).dispose();
            g.numLetters = o2.text.length;
            for (e4 = 0; e4 < g.numLetters; e4++) {
              var t3 = o2.clone();
              t3.text = o2.text[e4], t3.centerReg(f3).reg(null, t3.height), t3.text != "" && t3.text != " " && t3.expand(0), g.allowToggle && (t3.cursor = "pointer"), t3.on("mousedown", function() {
                g.allowToggle && g.toggle();
              });
            }
            g.resize();
          }
          this.percents = l, this.resize = function() {
            for (var e4 = i2.segmentRatios, t3 = i2.segmentPoints, o3 = 0; o3 < this.numLetters; o3++) {
              var n2, r3 = i2.getCurvePoint(l[o3] / 100, e4, t3, true);
              r3 && ((n2 = this.globalToLocal(r3.x, r3.y)) && f3.getChildAt(o3).loc(n2).rot((180 < r3.angle ? r3.angle - 360 : r3.angle) * a / 100));
            }
            return this;
          }, z(), this.showPath = function(e4) {
            return this.toggle(true), i2.toggle(e4), this;
          }, this.hidePath = function() {
            return this.toggle(false), this;
          }, Object.defineProperty(g, "text", { get: function() {
            return o2.text;
          }, set: function(e4) {
            o2.text = e4, l = [];
            for (var t3 = 0; t3 < o2.text.length; t3++)
              l.push(To.decimals(1 / (o2.text.length - (i2.type == "Blob" ? 0 : 1)) * 100 * t3));
            z();
          } }), Object.defineProperty(this, "color", { get: function() {
            return h2;
          }, set: function(e4) {
            h2 = e4;
            for (var t3 = 0; t3 < g.letters.numChildren; t3++)
              g.letters.getChildAt(t3).color = h2;
            g.stage && g.stage.update();
          } }), Object.defineProperty(g, "interactive", { get: function() {
            return n;
          }, set: function(e4) {
            n = e4, i2.interactive = e4, this.ticker && To.Ticker.remove(this.ticker), n && (this.ticker = To.Ticker.add(function() {
              g.resize();
            }));
          } }), this.interactive && (this.ticker = To.Ticker.add(function() {
            g.resize();
          }));
          var y = g.toggled = e3;
          this.toggle = function(e4) {
            if (this.allowToggle)
              return (y = zot(e4) ? !y : !!e4) ? (i2.alp(p), this.interactive && (i2.showControls(), f3.mouseEnabled = false, f3.mouseChildren = false, f3.cursor = "default", this.controlHideEvent && i2.off("controlshide", this.controlHideEvent), this.controlHideEvent = i2.on("controlshide", function() {
                f3.mouseEnabled = true, f3.mouseChildren = true, f3.cursor = "pointer", p = i2.alpha, i2.alp(0), y = false, g.toggled = y, g.stage && g.stage.update();
              }, null, true))) : (p = i2.alpha, i2.alp(0), f3.mouseEnabled = true, f3.mouseChildren = true, f3.cursor = "pointer"), g.toggled = y, g.stage && g.stage.update(), g;
          }, g.toggle(true), To.styleTransforms(this, d), this.clone = function() {
            return g.cloneProps(new To.LabelOnPath(g.label.clone(), g.path.clone(), a, To.copy(l), e3, t2, n, r2, s5, this.group, u));
          }, this.dispose = function(e4, t3, o3) {
            return this.ticker && To.Ticker.remove(this.ticker), o3 || this.zimContainer_dispose(true), true;
          };
        }, To.extend(To.LabelOnPath, To.Container, ["clone", "dispose"], "zimContainer", false), To.LabelOnArc = function(n, e3, t2, o2, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2) {
          if (v = zob(To.LabelOnArc, arguments, "label, size, font, color, radius, flip, spacing, letterSpacing, angles, showCircle, arcColor, arcBorderColor, arcBorderWidth, radiusSpread, style, group, inherit", this))
            return v;
          z_d("54.55"), this.group = f3;
          var z = p === false ? {} : To.getStyle("LabelOnArc", this.group, m2);
          zot(e3) && (e3 = z.size != null ? z.size : 30), zot(n) && (n = z.label != null ? z.label : new To.Label("Label on Arc", e3)), zot(t2) && (t2 = z.font != null ? z.font : "verdana"), zot(o2) && (o2 = z.color != null ? z.color : "white"), zot(r2) && (r2 = z.radius != null ? z.radius : 100), zot(i2) && (i2 = z.flip != null && z.flip), zot(a) && (a = z.spacing != null ? z.spacing : 0), zot(l) && (l = z.letterSpacing != null ? z.letterSpacing : 5), zot(s5) && (s5 = z.angles != null ? z.angles : null);
          var y = !zot(s5), b = To.copy(s5);
          zot(c2) && (c2 = z.showCircle != null && z.showCircle), zot(u) && (u = z.arcColor != null ? z.arcColor : null), zot(d) && (d = z.arcBorderColor != null ? z.arcBorderColor : null), zot(h2) && (h2 = z.arcBorderWidth != null ? z.arcBorderWidth : null), zot(g) && (g = z.radiusSpread != null && z.radiusSpread);
          var v = this.outerRadius = r2 + a + n.height;
          this.innerRadius = r2 + a, this.zimContainer_constructor(-v, -v, 2 * v, 2 * v, false), this.type = "LabelOnArc";
          var w, C, x2, k, T2, A3, P = this;
          function B() {
            var e4;
            P.disposeAllChildren(), i2 && (e4 = n.text.split("").reverse().join(""), n.text = e4), w = P.letters = new To.Container(P.width, P.height).centerReg(P), P.numLetters = n.text.length, P.letterHeight = n.height, C = P.labels = [];
            for (var t3 = 0; t3 < P.numLetters; t3++) {
              var o3 = n.clone();
              C.push(o3), o3.text = n.text[t3], o3.letterHolder = new To.Container(o3.width, o3.height), o3.centerReg(o3.letterHolder).rot(i2 ? 180 : 0);
            }
            if (k = P.circle = new To.Circle(r2), c2 && k.addTo(P), x2 = P.arc = new To.Shape().addTo(P), S2(), s5) {
              for (t3 = T2 = 0; t3 < s5.length; t3++)
                T2 += s5[t3];
              T2 += s5[s5.length - 1] / 2;
            }
            E();
          }
          function S2() {
            for (A3 = [T2 = 0], I = 0; I < P.numLetters; I++) {
              var e4 = C[I], t3 = 180 * Math.atan((e4.width + l) / 2 / (r2 + a)) / Math.PI * 2;
              A3.push(t3), T2 += t3, e4.letterHolder.centerReg(w).reg(null, r2 + a + e4.height + (i2 ? 0.13 * e4.height : 0));
            }
            P.circle.radius = r2, (u || d || h2) && (0 < h2 && zot(d) ? d = "#000000" : zot(h2) && !zot(d) && (h2 = 2), x2.graphics.c().f(null).s(d).ss(h2).arc(0, 0, r2, (startAngle - 90) * Math.PI / 180, (startAngle - 90 + T2) * Math.PI / 180));
          }
          function E() {
            if (!y) {
              s5 = [];
              for (var e4 = 0; e4 < A3.length - 1; e4++)
                s5[e4] = Math.round((A3[e4] + A3[e4 + 1]) / 2 * 100) / 100;
            }
            P.angles = s5;
            for (var t3 = P.startAngle = -T2 / 2, e4 = 0; e4 < w.numChildren; e4++)
              var o3 = w.getChildAt(e4), t3 = (s5[e4], o3.rotation = t3 + s5[e4]);
          }
          n.type != "Label" && (n = new To.Label(n, e3, t2, o2)), n.text, B(), Object.defineProperty(this, "radius", { get: function() {
            return r2;
          }, set: function(e4) {
            r2 = e4, S2(), y || g || E();
          } }), Object.defineProperty(this, "color", { get: function() {
            return o2;
          }, set: function(e4) {
            o2 = e4;
            for (var t3 = 0; t3 < P.labels.length; t3++)
              P.labels[t3].color = o2;
            P.stage && P.stage.update();
          } }), Object.defineProperty(P, "text", { get: function() {
            return n.text;
          }, set: function(e4) {
            n.text = e4, s5 = b ? To.copy(b) : null, B();
          } }), To.styleTransforms(this, z), this.clone = function() {
            return P.cloneProps(new To.LabelOnArc(n, e3, t2, o2, r2, i2, a, l, s5, c2, u, d, h2, g, p, this.group, m2));
          };
        }, To.extend(To.LabelOnArc, To.Container, "clone", "zimContainer", false), To.LabelLetters = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p) {
          if (z = zob(To.LabelLetters, arguments, "label, align, valign, letterSpacing, letterSpacings, lineSpacing, lineSpacings, lineHeight, lineAlign, lineValign, cache, rtl, style, group, inherit", this))
            return z;
          z_d("54.57"), this.group = g;
          var f3 = h2 === false ? {} : To.getStyle("LabelLetters", this.group, p);
          zot(e3) && (e3 = f3.label != null ? f3.label : new To.Label("Label Letters")), zot(t2) && (t2 = f3.align != null ? f3.align : "center"), zot(o2) && (o2 = f3.valign != null ? f3.valign : "center"), zot(n) && (n = f3.letterSpacing != null ? f3.letterSpacing : 5), zot(r2) && (r2 = f3.letterSpacings != null ? f3.letterSpacings : null), zot(l) && (l = f3.lineHeight != null ? f3.lineHeight : null), zot(i2) && (i2 = f3.lineSpacing != null ? f3.lineSpacing : 5), zot(a) && (a = f3.lineSpacings != null ? f3.lineSpacings : null), zot(d) && (d = f3.rtl != null && f3.rtl), zot(s5) && (s5 = f3.lineAlign != null ? f3.lineAlign : d ? "right" : "left"), zot(c2) && (c2 = f3.lineValign != null ? f3.lineValign : "bottom"), zot(u) && (u = f3.cache != null && f3.cache), this.zimContainer_constructor(null, null, null, null, false), this.type = "LabelLetters";
          var m2 = this, z = m2.letterData = [];
          function y(o3) {
            var n2, i3 = [];
            d && (G = -1, n2 = (o3 = (o3 = (o3 = (o3 = (o3 = o3.replace(/[\u0591-\u07FF]+/gi, function(e5) {
              return e5.split("").reverse().join("");
            })).replace(/([^\u0591-\u07FF ])([\u0591-\u07FF])/gi, "$1-!!-$2")).replace(/([\u0591-\u07FF])([^\u0591-\u07FF ])/gi, "$1-!!-$2")).replace(/([^\u0591-\u07FF]) ([\u0591-\u07FF])/gi, "$1-!!- -!!-$2")).replace(/([\u0591-\u07FF]) ([^\u0591-\u07FF])/gi, "$1-!!- -!!-$2")).split(/-!!-/g), loop(n2, function(e5, t3) {
              e5.match(/[\u0591-\u07FF]/i) && (n2[t3] = e5.split(" ").reverse().join(" "));
            }), o3 = n2.join("")), o3 = (o3 = (o3 = (o3 = (o3 = (o3 = (o3 = (o3 = (o3 = (o3 = (o3 = (o3 = (o3 = o3.replace(/\n|\r/g, "<br>")).replace(/<strong>|<strong \/>|<strong\/>/gi, "<b>")).replace(/<\/strong>/gi, "</b>")).replace(/<em>|<em \/>|<em\/>/gi, "<i>")).replace(/<\/em>/gi, "</i>")).replace(/\\n|\\r/g, "<br>")).replace(/<br>|<br \/>|<br\/>(<\/br>)?/gi, "<br>")).replace(/<b/gi, "<b")).replace(/<i/gi, "<i")).replace(/<u/gi, "<u")).replace(/<br/gi, "<br")).replace(/<a/gi, "<a")).replace(/<font/gi, "<font");
            var r3, a2 = [/<(a|i|u|f|br|\/a|\/i|\/u|\/f|\/b)[^>]*>/g, /<(a|i|u|f|br|\/a|\/i|\/u|\/f|b)[^>]*>/g, /<(b|i|u|f|br|\/b|\/i|\/u|\/f|\/a)[^>]*>/g, /<(b|i|u|f|br|\/b|\/i|\/u|\/f|a)[^>]*>/g, /<(b|a|u|f|br|\/b|\/a|\/u|\/f|\/i)[^>]*>/g, /<(b|a|u|f|br|\/b|\/a|\/u|\/f|i)[^>]*>/g, /<(b|a|i|f|br|\/b|\/a|\/i|\/f|\/u)[^>]*>/g, /<(b|a|i|f|br|\/b|\/a|\/i|\/f|u)[^>]*>/g, /<(b|a|i|u|br|\/b|\/a|\/i|\/u|\/f)[^>]*>/g, /<(b|a|i|u|br|\/b|\/a|\/i|\/u|f)[^>]*>/g];
            To.loop(["b", "a", "i", "u", "font"], function(e5, t3) {
              r3 = o3.replace(a2[2 * t3], ""), l2(e5 == "font" ? r3.split("<font ") : e5 == "a" ? r3.split("<a ") : r3.split("<" + e5 + ">"), e5, 0), l2((r3 = o3.replace(a2[2 * t3 + 1], "")).split("</" + e5 + ">"), e5, 1);
            }), r3 = (r3 = o3.replace(/<br>/gi, "@^#")).replace(/<(b|a|i|u|f|\/b|\/a|\/i|\/u|\/f)[^>]*>/g, ""), arr = r3.split("@^#");
            var e4 = arr.join("\n");
            function l2(e5, o4, n3) {
              var t3, r4;
              1 < e5.length && (o4 != "font" && o4 != "a" || n3 != 0 ? (e5.pop(), t3 = 0, To.loop(e5, function(e6) {
                t3 += e6.length;
                e6 = i3[t3];
                e6 || (i3[t3] = []), (e6 = i3[t3])[n3] ? e6[n3].push(o4) : e6[n3] = [o4];
              })) : (r4 = e5[0].length, To.loop(e5, function(e6, t4) {
                t4 != 0 && ((t4 = i3[r4]) || (i3[r4] = []), t4 = i3[r4], e6 = e6.split(">"), t4[n3] ? t4[n3].push(o4 + " " + e6[0]) : t4[n3] = [o4 + " " + e6[0]], r4 += e6[1].length);
              })));
            }
            return r3 = arr.join(""), l2(arr, "br", 0), { text: r3, data: i3, original: e4 };
          }
          e3.type != "Label" ? (data = y(e3), z = data.data, e3 = new To.Label(data.text)) : (data = y(e3.text), z = data.data, e3.text = data.text), m2.text = data.original, m2._color = e3.color, m2.numLetters = e3.text.length;
          var b = !zot(r2);
          if (r2 && !Array.isArray(r2) && (r2 = null), r2)
            for (v = 0; v < m2.numLetters; v++)
              zot(r2[v]) && (r2[v] = n);
          else {
            r2 = [];
            for (var v = 0; v < m2.numLetters; v++)
              r2.push(n);
          }
          if (m2.letterSpacings = r2, a && !Array.isArray(a) && (a = null), a)
            for (v = 0; v < m2.numLetters - 1; v++)
              zot(a[v]) && (a[v] = i2);
          else {
            a = [];
            for (var v = 0; v < m2.numLetters - 1; v++)
              a.push(i2);
          }
          m2.lineSpacings = a, m2.labels = [], m2.lines = [[]];
          var w = [], C = [], x2 = [0], k = 0, T2 = 0, A3 = 0, P = 0, B = 0, S2 = z, E = false, I2 = false, M = false, O = false, j = false, L = false, _ = false, Y = false, D = (e3.group, false), X = false, R = false, W = false;
          m2.rolls = [[]];
          for (v = 0; v < m2.numLetters; v++) {
            var F2, O = false;
            S2[v] && (S2[v][1] && (0 <= S2[v][1].indexOf("b") && (E = false), 0 <= S2[v][1].indexOf("i") && (I2 = false), 0 <= S2[v][1].indexOf("u") && (M = false), To.loop(S2[v][1], function(e4) {
              return e4.match(/^font/i) ? (R = j = false, W && m2.rolls.push([]), void (_ = Y = L = W = false)) : void (e4.match(/^a/i) && (X = D = false));
            })), S2[v][0] && (0 <= S2[v][0].indexOf("b") && (E = true), 0 <= S2[v][0].indexOf("i") && (I2 = true), 0 <= S2[v][0].indexOf("u") && (M = true), O = 0, To.loop(S2[v][0], function(e4) {
              e4 == "br" && O++;
            }), To.loop(S2[v][0], function(e4) {
              var t3, o3;
              return e4.match(/^font/i) ? ((o3 = e4.match(/ color\s?=\s?(\S*)/i)) && (j = o3[1], 0 <= (t3 = To.colors.indexOf(j)) && (j = To.colorsHex[t3]), j = j.replace(/'/g, "")), (o3 = e4.match(/size\s?=\s?(\S*)/i)) && (L = o3[1]), (o3 = e4.match(/backgroundColor\s?=\s?(\S*)/i)) && (R = o3[1], 0 <= (t3 = To.colors.indexOf(R)) && (R = To.colorsHex[t3]), R = R.replace(/'/g, "")), (o3 = e4.match(/rollBackgroundColor\s?=\s?(\S*)/i)) && (W = o3[1], 0 <= (t3 = To.colors.indexOf(W)) && (W = To.colorsHex[t3]), W = W.replace(/'/g, "")), (o3 = e4.match(/group\s?=\s?(\S*)/i)) && (_ = o3[1]), void ((o3 = e4.match(/family\s?=\s?(.*)/i)) && (Y = (Y = o3[1]).split(/\ssize\s?=|\scolor\s?=|\sgroup\s?=/i)[0]))) : void (e4.match(/^a/i) && ((o3 = e4.match(/href\s?=\s?(\S*)/i)) && (D = o3[1]), (o3 = e4.match(/target\s?=\s?(\S*)/i)) && (X = o3[1])));
            }))), _ ? F2 = new Label({ text: e3.text[v], group: _ }) : (F2 = e3.clone()).text = e3.text[v], m2.labels.push(F2), E && (F2.bold = true), I2 && (F2.italic = true), j && (F2.color = j), R && (F2.backgroundColor = R);
            var H = b || zot(F2.backgroundColor) ? r2[v] : -0.5;
            W && (F2.rollIndex = m2.rolls.length - 1, F2.zrbc = W, F2.zobc = F2.backgroundColor, m2.rolls[F2.rollIndex].push(F2), F2.expand(0), F2.on("mouseover", N), F2.on("mouseout", V)), D && (F2.expand(H, 0), F2.zurl = D, F2.ztar = X, F2.cur(), F2.on("click", function(e4) {
              var t3 = e4.currentTarget;
              V(e4), t3.ztar || (t3.ztar = "_self"), zgo(t3.zurl, t3.ztar);
            })), L && (F2.size = L), Y && (F2.font = Y), O && (k += (zot(l) ? A3 : l) + a[P], x2.push(k), C.push(zot(l) ? A3 : l), w.push(T2), B = Math.max(B, T2)), O && (1 < O && To.loop(O - 1, function(e4) {
              m2.lines.push([]), k += (zot(l) ? A3 : l) + a[P], x2.push(k), C.push(zot(l) ? A3 : l), w.push(0), P++;
            }), T2 = A3 = 0, m2.lines.push([]), P++), T2 += F2.width + H, A3 = Math.max(A3, F2.height), v == m2.numLetters - 1 && (w.push(T2), C.push(A3), B = Math.max(B, T2)), m2.lines[P].push(F2), M && (F2.underline = new To.Line(F2.width + H + 1, 1, F2.color).center(F2, this).mov(0, F2.height / 2));
          }
          function N(e4) {
            var t3 = e4.currentTarget, e4 = m2.rolls[t3.rollIndex];
            To.loop(e4, function(e5) {
              e5.backgroundColor = t3.zrbc;
            }), t3.stage && t3.stage.update();
          }
          function V(e4) {
            var t3 = e4.currentTarget, e4 = m2.rolls[t3.rollIndex];
            To.loop(e4, function(e5) {
              e5.backgroundColor = t3.zobc;
            }), t3.stage && t3.stage.update();
          }
          for (var G = 0, q = 0; q < m2.lines.length; q++) {
            var U, Q = m2.lines[q], T2 = w[q], A3 = C[q], k = x2[q];
            for (K = s5 == "left" ? 0 : s5 == "right" ? B - T2 : (B - T2) / 2, U = k, v = 0; v < Q.length; v++) {
              G++, u && F2.cache(), (F2 = Q[v]).regX = t2 == "left" ? 0 : t2 == "right" ? F2.width : F2.width / 2, F2.regY = o2 == "top" ? 0 : o2 == "bottom" ? F2.height : F2.height / 2;
              var Z2 = U + (o2 == "top" ? 0 : o2 == "bottom" ? F2.height : F2.height / 2);
              c2 == "center" || c2 == "middle" ? Z2 += (C[q] - F2.height) / 2 : c2 == "bottom" && (Z2 += C[q] - F2.height);
              var H = b || zot(F2.backgroundColor) ? r2[G - 1] : -0.5, K = t2 == "left" ? (F2.loc(K, Z2, this), F2.x + F2.width + H) : t2 == "right" ? (F2.loc(K + F2.width, Z2, this), F2.x + H) : (F2.loc(K + F2.width / 2, Z2, this), F2.x + F2.width / 2 + H);
            }
          }
          this.getBounds() || this.setBounds(0, 0, 0, 0), this.regX = this.getBounds().x, this.regY = this.getBounds().y, Object.defineProperty(this, "color", { get: function() {
            return this._color;
          }, set: function(e4) {
            this._color = e4;
            for (var t3 = 0; t3 < m2.numChildren; t3++)
              m2.getChildAt(t3).color = this._color;
            m2.stage && m2.stage.update();
          } }), this.dispose = function() {
            To.gD(this), To.loop(m2.labels, function(e4) {
              e4.removeFrom(), e4.dispose();
            }), m2.removeFrom();
          }, To.styleTransforms(this, f3), this.clone = function() {
            return m2.cloneProps(new To.LabelLetters(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, this.group, p));
          };
        }, To.extend(To.LabelLetters, To.Container, "clone", "zimContainer", false), To.Button = function(n, r2, t2, i2, a, o2, l, s5, c2, e3, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, D, X, R, W, F2, H, N, V, G, q, U, Q, Z2, K) {
          if (ee = zob(To.Button, arguments, "width, height, label, backgroundColor, rollBackgroundColor, color, rollColor, borderColor, borderRollColor, borderWidth, corner, shadowColor, shadowBlur, hitPadding, gradient, gloss, dashed, backing, rollBacking, rollPersist, icon, rollIcon, toggle, toggleBackgroundColor, rollToggleBackgroundColor, toggleColor, rollToggleColor, toggleBacking, rollToggleBacking, toggleIcon, rollToggleIcon, toggleEvent, wait, waitTime, waitBackgroundColor, rollWaitBackgroundColor, waitColor, rollWaitColor, waitModal, waitEnabled, waitBacking, rollWaitBacking, waitIcon, rollWaitIcon, align, valign, indent, indentHorizontal, indentVertical, style, group, inherit", this))
            return ee;
          z_d("55"), this.group = Z2;
          var J = Q === false ? {} : To.getStyle("Button", Z2, K);
          zot(n) && (n = J.width != null ? J.width : 200), zot(r2) && (r2 = J.height != null ? J.height : 60), this.zimContainer_constructor(n, r2, null, null, false), this.type = "Button", zot(i2) && (i2 = J.backgroundColor != null ? J.backgroundColor : "#C60"), zot(a) && (a = J.rollBackgroundColor != null ? J.rollBackgroundColor : "#F93");
          var $ = o2, ee = l;
          zot(o2) && (o2 = J.color != null ? J.color : "white"), zot(l) && (l = J.rollColor != null ? J.rollColor : "white");
          var te = function() {
            return arguments;
          }(i2, a, o2, l);
          i2 = zik(i2), a = zik(a), o2 = zik(o2), l = zik(l);
          var oe = s5, ne = e3;
          zot(s5) && (s5 = J.borderColor != null ? J.borderColor : null), zot(e3) && (e3 = J.borderWidth != null ? J.borderWidth : null), s5 < 0 || e3 < 0 ? s5 = e3 = null : s5 != null && e3 == null && (e3 = 1), zot(c2) && (c2 = J.borderRollColor != null ? J.borderRollColor : s5), zot(u) && (u = J.corner != null ? J.corner : 20), zot(d) && (d = J.shadowColor != null ? J.shadowColor : "rgba(0,0,0,.3)"), zot(h2) && (h2 = J.shadowBlur != null ? J.shadowBlur : 14), zot(g) && (g = J.hitPadding != null ? J.hitPadding : 0), zot(N) && (N = J.align != null ? J.align : "center"), zot(V) && (V = J.valign != null ? J.valign : "center"), zot(G) && (G = J.indent != null ? J.indent : 10), zot(q) && (q = J.indentHorizontal != null ? J.indentHorizontal : G), zot(U) && (U = J.indentVertical != null ? J.indentVertical : G), zot(p) && (p = J.gradient != null ? J.gradient : 0), zot(f3) && (f3 = J.gloss != null ? J.gloss : 0), zot(t2) && (t2 = zot(v) ? J.label != null ? J.label : "PRESS" : "");
          var re = (!zot(C) || !zot(P) || !zot(B) || !zot(S2) || !zot(E)) && zot(M) && zot(R) && zot(W);
          re && zot(I2) && (I2 = To.mobile() ? "mousedown" : "click"), typeof t2 != "string" && typeof t2 != "number" || (t2 = new To.Label({ text: t2, size: J.size != null ? J.size : 36, font: J.font != null ? J.font : "arial", color: J.color != null && $ == null ? J.color : o2, rollColor: J.rollColor && ee == null != null ? J.rollColor : l, align: N, valign: V, rollPersist: J.rollPersist != null && J.rollPersist, backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", shiftVertical: J.shiftVertical != null ? J.shiftVertical : 0, shiftHorizontal: J.shiftHorizontal != null ? J.shiftHorizontal : 0, style: false, group: this.group })), zot(b) && (b = J.rollPersist != null && J.rollPersist), this.rollPersist = b, zot(m2) && (m2 = J.dashed != null && J.dashed), zot(C) || C.type != "Label" || zon && zogy("Button() - do not pass Label to toggle parameter - just pass a String"), zot(x2) && (x2 = J.toggleBackgroundColor != null ? J.toggleBackgroundColor : i2), zot(k) && (k = J.rollToggleBackgroundColor != null ? J.rollToggleBackgroundColor : a), zot(T2) && (T2 = J.toggleColor != null ? J.toggleColor : t2.color), zot(A3) && (A3 = J.rollToggleColor != null ? J.rollToggleColor : t2.rollColor), zot(j) && (j = J.waitBackgroundColor != null ? J.waitBackgroundColor : i2), zot(L) && (L = J.rollWaitBackgroundColor != null ? J.rollWaitBackgroundColor : a), zot(_) && (_ = J.waitColor != null ? J.waitColor : t2.color), zot(Y) && (Y = J.rollWaitColor != null ? J.rollWaitColor : t2.rollColor);
          var ie = this;
          this.mouseChildren = false, this.cursor = "pointer", ie.focus = false, ie.rolled = false;
          var ae = Ao(O);
          zot(z) && (z = J.backing != null ? J.backing.clone() : null), zot(z) ? ie.backing = new To.Rectangle(n, r2, i2, null, null, u, m2, null, false).centerReg(null, null, false) : ie.backing = z, ie.rollBacking = zot(y) ? J.rollBacking != null ? J.rollBacking.clone() : null : y, ie.waitBacking = zot(R) ? J.waitBacking != null ? J.waitBacking.clone() : null : R, ie.rollWaitBacking = zot(W) ? J.rollWaitBacking != null ? J.rollWaitBacking.clone() : null : W, ie.toggleBacking = zot(P) ? J.toggleBacking != null ? J.toggleBacking.clone() : null : P, ie.rollToggleBacking = zot(B) ? J.rollToggleBacking != null ? J.rollToggleBacking.clone() : null : B;
          for (var le, se, ce = ["backing", "rollBacking", "toggleBacking", "rollToggleBacking", "waitBacking", "rollWaitBacking"], ue = 0; ue < ce.length; ue++)
            le = ce[ue], (se = ie[le]) && (se.type == "Pattern" ? se = de(le, se) : d != -1 && 0 < h2 && (se.shadow = new createjs.Shadow(d, 3, 3, h2)), se.x = n / 2, se.y = r2 / 2);
          function de(e4, t3) {
            ie[e4] = new To.Container(n, r2, null, null, false).centerReg(null, null, false), d != -1 && 0 < h2 && (new To.Rectangle(n - 2, r2 - 2, "#666", null, null, u, null, null, false).center(ie[e4]).shadow = new createjs.Shadow(d, 3, 3, h2));
            var o3 = ie[e4].mask = new To.Rectangle(n, r2, 0 <= e4.indexOf("roll") ? a : i2, null, null, u, null, null, false).addTo(ie[e4]);
            return t3.centerReg(o3), t3.setMask(o3.shape), ie[e4].pattern = t3, ie[e4];
          }
          ie.addChild(ie.backing), e3 && (ie.border = new To.Rectangle(n, r2, "rgba(0,0,0,0)", s5, e3, u, m2, null, false), ie.addChild(ie.border)), ie.icon = zot(v) ? J.icon != null ? J.icon.clone() : null : v, ie.rollIcon = zot(w) ? J.rollIcon != null ? J.rollIcon.clone() : null : w, ie.waitIcon = zot(F2) ? J.waitIcon != null ? J.waitIcon.clone() : null : F2, ie.rollWaitIcon = zot(H) ? J.rollWaitIcon != null ? J.rollWaitIcon.clone() : null : H, ie.toggleIcon = zot(S2) ? J.toggleIcon != null ? J.toggleIcon.clone() : null : S2, ie.rollToggleIcon = zot(E) ? J.rollToggleIcon != null ? J.rollToggleIcon.clone() : null : E;
          for (var he, ge, pe, fe, me, ze, ye = ["icon", "rollIcon", "toggleIcon", "rollToggleIcon", "waitIcon", "rollWaitIcon"], ue = 0; ue < ye.length; ue++) {
            var be = ye[ue], be = ie[be];
            be && (be.x = n / 2, be.y = r2 / 2);
          }
          function ve() {
            (pe = new createjs.Shape()).graphics.f("#000").r(-g, -g, n + 2 * g, r2 + 2 * g), ie.hitArea = ge = pe;
          }
          function we() {
            ie.toggled ? (zot(C) || (ie.label.text = C === true ? fe : C), zot(T2) || (ie.label.color = T2), zot(A3) || (ie.label.rollColor = A3), ie.rolled ? (ie.rollToggleBacking ? Oe("rollToggleBacking", ie.rollToggleBacking) : ie.toggleBacking && Oe("toggleBacking", ie.toggleBacking), ie.rollToggleIcon ? Oe("rollToggleIcon", ie.rollToggleIcon) : ie.toggleIcon && Oe("toggleIcon", ie.toggleIcon), zot(z) && zot(ie.rollToggleBacking) && (ie.backing.color = k)) : (ie.toggleBacking && Oe("toggleBacking", ie.toggleBacking), ie.toggleIcon && Oe("toggleIcon", ie.toggleIcon), zot(z) && (ie.backing.color = x2))) : (ie.label.color = me, ie.label.rollColor = ze, ie.label.text = fe, Ce()), ie.stage && ie.stage.update();
          }
          function Ce() {
            ie.rolled ? (zot(z) && !ie.rollBacking && (ie.backing.color = a), ie.rollBacking ? Oe("rollBacking", ie.rollBacking) : ie.backing && Oe("backing", ie.backing), ie.rollIcon ? Oe("rollIcon", ie.rollIcon) : ie.icon ? Oe("icon", ie.icon) : Oe("icon")) : (zot(z) && (ie.backing.color = i2), ie.backing && Oe("backing", ie.backing), ie.icon ? Oe("icon", ie.icon) : Oe("icon"));
          }
          ie.icon && ie.addChild(ie.icon), Array.isArray(u) || (u = [u, u, u, u]), 0 < p && ((he = new createjs.Shape()).graphics.lf(["rgba(255,255,255," + p + ")", "rgba(0,0,0," + p + ")"], [0, 1], 0, 0, 0, r2 - e3), he.graphics.rc(e3 / 2, e3 / 2, n - e3, r2 - e3, u[0], u[1], u[2], u[3]), this.addChild(he)), 0 < f3 && ((he = new createjs.Shape()).graphics.f("rgba(255,255,255," + f3 + ")"), he.graphics.rc(e3 / 2, e3 / 2, n - e3, (r2 - e3) / 2, u[0], u[1], 0, 0), he.graphics.f("rgba(0,0,0," + f3 + ")"), he.graphics.rc(e3 / 2, r2 / 2, n - e3, (r2 - e3) / 2, 0, 0, u[2], u[3]), this.addChild(he)), 0 < g && ve(), this.addChild(t2), t2.center(this), t2.y += 1, this.label = t2, To.pos(t2, N == "left" || N == "right" ? q : null, V == "top" || V == "bottom" ? U : null, N == "right", V == "bottom"), this.toggled = false, re && (fe = t2.text, me = t2.color, ze = t2.rollColor, this.on(I2, function() {
            ie.toggled = !ie.toggled, we();
          }));
          var xe, ke, Te, Ae, Pe = !(this.toggle = function(e4) {
            return re ? (zot(e4) ? ie.toggled = !ie.toggled : ie.toggled = e4, we()) : zon && zogy("Button() - can't toggle with wait parameters provided"), ie;
          }), Be = ie.waiting = false, Se = ie.label.color, Ee = ie.label.rollColor, Ie = this.on("mousedown", function() {
            Pe = true, Me();
          });
          function Me() {
            zot(M) && zot(R) && zot(W) || ie.waiting || (Be = true, zot(X) && (X = true), D && (Ae = ie.stage.on("stagemousedown", function(e4) {
              ie.hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY) || ie.clearWait();
            }, null, true)), setTimeout(function() {
              ie.waiting = true;
            }, 50), ke = t2.text, zot(_) || (ie.label.color = _), zot(Y) || (ie.label.rollColor = Y), Te = ie.enabled, !X && ie.enabled && (ie.enabled = false), zot(M) || (ie.label.text = M), ie.rolled ? (zot(z) && !ie.rollWaitBacking && (ie.backing.color = L), ie.rollWaitBacking ? Oe("rollWaitBacking", ie.rollWaitBacking) : ie.waitBacking && Oe("waitBacking", ie.waitBacking), ie.rollWaitIcon ? Oe("rollWaitIcon", ie.rollWaitIcon) : ie.waitIcon && Oe("waitIcon", ie.waitIcon)) : (zot(z) && !ie.waitBacking && (ie.backing.color = j), ie.waitBacking && Oe("waitBacking", ie.waitBacking), ie.waitIcon && Oe("waitIcon", ie.waitIcon)), zot(O) && (O = ae == "s" ? 5 : 5e3), xe && xe.clear(), xe = To.timeout(O, function() {
              ie.enabled || (ie.enabled = Te), ie.clearWait(), ie.dispatchEvent("waited");
            }), ie.stage && ie.stage.update());
          }
          function Oe(e4) {
            if (0 <= e4.indexOf("con")) {
              for (var t3 = 0; t3 < ye.length; t3++) {
                var o3 = ye[t3], o3 = ie[o3];
                ie.removeChild(o3);
              }
              ie[e4] && ie.addChildAt(ie[e4], 1);
            } else if (ie[e4]) {
              for (t3 = 0; t3 < ce.length; t3++) {
                var n2 = ce[t3], n2 = ie[n2];
                ie.removeChild(n2);
              }
              ie[e4] && ie.addChildAt(ie[e4], 0);
            }
          }
          this.wait = function() {
            Me();
          }, this.clearWait = function() {
            return xe && (Ae && ie.stage.off("stagemousedown", Ae), xe.clear(), ie.label.text = ke, Ce(), ie.label.color = Se, ie.label.rollColor = Ee, setTimeout(function() {
              ie.waiting = false;
            }, 55), Be = false, ie.stage && ie.stage.update()), ie;
          }, this.removeWait = function() {
            return ie.clearWait(), M = null, ie.waitBacking = null, ie.rollWaitBacking = null, ie.off("mousedown", Ie), ie;
          }, this.on("pressup", function() {
            Pe = false, ie.rollPersist && !je && Xe();
          });
          var je = false;
          function Le() {
            ie.rolled = true, je = true, Be ? (zot(z) && zot(ie.rollWaitBacking) && (ie.backing.color = zot(L) ? a : L), Oe("rollWaitBacking", ie.rollWaitBacking), ie.rollWaitIcon && Oe("rollWaitIcon", ie.rollWaitIcon)) : re && ie.toggled ? (zot(z) && zot(ie.rollToggleBacking) && (ie.backing.color = k), Oe("rollToggleBacking", ie.rollToggleBacking), ie.rollToggleIcon && Oe("rollToggleIcon", ie.rollToggleIcon)) : (zot(z) ? ie.backing.color = a : zot(z.mask) || (ie.backing.mask.color = a), Oe("rollBacking", ie.rollBacking), ie.rollIcon && Oe("rollIcon", ie.rollIcon)), ie.border && (ie.border.borderColor = c2), ie.label.showRollColor && ie.label.showRollColor(), ie.stage && ie.stage.update();
          }
          this.on("mouseover", function(e4) {
            ie.stage && ie.stage.frame.leftMouseDown && !_e || Le();
          });
          var _e = false, Ye = false;
          function De(e4) {
            je = false, ie.off("mouseout", De), ie.rollPersist && Pe || Xe();
          }
          function Xe() {
            ie.rolled = false, Be || ie.waiting ? (zot(z) && zot(ie.waitBacking) && (ie.backing.color = zot(j) ? i2 : j), ie.waitBacking ? Oe("waitBacking", ie.waitBacking) : Oe("backing", ie.backing), ie.waitIcon ? Oe("waitIcon", ie.waitIcon) : ie.icon ? Oe("icon", ie.icon) : Oe("icon")) : ie.toggled && re ? (zot(z) && zot(ie.toggleBacking) && (ie.backing.color = x2), ie.toggleBacking ? Oe("toggleBacking", ie.toggleBacking) : Oe("backing", ie.backing), ie.toggleIcon ? Oe("toggleIcon", ie.toggleIcon) : ie.icon ? Oe("icon", ie.icon) : Oe("icon")) : (zot(z) ? ie.backing.color = i2 : zot(z.mask) || (ie.backing.mask.color = i2), Oe("backing", ie.backing), ie.icon ? Oe("icon", ie.icon) : Oe("icon")), ie.border && (ie.border.borderColor = s5), ie.label.showRollColor && ie.label.showRollColor(false), ie.stage && ie.stage.update();
          }
          function Re(e4, t3) {
            return zot(e4) || (ie.contains(ie[e4]) && (ie.removeChild(ie[e4]), t3 && ie.addChildAt(t3, 0 <= e4.indexOf("con") ? ie.numChildren - 1 : 0), ie.stage && ie.stage.update()), t3 ? (zot(z) && e4 == "backing" && (z = t3), t3.type == "Pattern" && (t3 = de(e4, t3)), ie[e4] = t3, ie[e4].x = n / 2, ie[e4].y = r2 / 2) : ie[e4] = null), ie;
          }
          this.on("mousedown", function(e4) {
            _e = true, ie.rolled || (Ye = true, Le());
          }), this.on("pressup", function(e4) {
            _e = false, Ye && (Ye = false, De());
          }), this.on("pressmove", function(e4) {
            var t3 = ie.stage ? ie.stage.frame : zdf, t3 = ie.hitTestPoint(t3.mouseX, t3.mouseY);
            _e && !t3 ? (De(), _e = false) : !_e && t3 && (Le(), _e = true);
          }), this.on("mouseout", De), Object.defineProperty(ie, "text", { get: function() {
            return t2.text == " " ? "" : t2.text;
          }, set: function(e4) {
            t2.text = e4, fe = fe && e4, t2.center(this), t2.y += 1, To.pos(t2, N == "left" || N == "right" ? q : null, V == "top" || V == "bottom" ? U : null, N == "right", V == "bottom");
          } }), Object.defineProperty(ie, "color", { get: function() {
            return o2;
          }, set: function(e4) {
            o2 = e4, me = me && o2, ie.label && !zot(ie.label.color) && (ie.label.color = o2), To.OPTIMIZE || !zns && OPTIMIZE || !ie.stage || ie.stage.update();
          } }), Object.defineProperty(ie, "rollColor", { get: function() {
            return l;
          }, set: function(e4) {
            l = e4, ze = ze && l, ie.label && (ie.label.rollColor = l);
          } }), Object.defineProperty(ie, "backgroundColor", { get: function() {
            return i2;
          }, set: function(e4) {
            i2 = e4, ie.backing.color ? ie.backing.color = i2 : ie.backing.mask && (ie.backing.mask.color = i2), To.OPTIMIZE || !zns && OPTIMIZE || !ie.stage || ie.stage.update();
          } }), Object.defineProperty(ie, "rollBackgroundColor", { get: function() {
            return a;
          }, set: function(e4) {
            a = e4, ie.rollBacking && ie.rollBacking.color ? ie.rollBacking.color = a : ie.rollBacking && ie.rollBacking.mask && (ie.rollBacking.mask.color = a);
          } }), Object.defineProperty(ie, "borderColor", { get: function() {
            return s5;
          }, set: function(e4) {
            s5 = e4, ie.rolled || (ie.backing && ie.backing.borderColor && (ie.backing.borderColor = e4), ie.border && (ie.border.borderColor = e4));
          } }), Object.defineProperty(ie, "borderRollColor", { get: function() {
            return c2;
          }, set: function(e4) {
            c2 = e4, ie.rolled && (ie.backing && ie.backing.borderColor && (ie.backing.borderColor = e4), ie.border && (ie.border.borderColor = e4));
          } }), Object.defineProperty(ie, "hitPadding", { get: function() {
            return g;
          }, set: function(e4) {
            (g = e4) == 0 ? ge && (this.hitArea = null) : ve();
          } }), this._enabled = true, this.startMouseChildren = this.mouseChildren, Object.defineProperty(ie, "enabled", { get: function() {
            return ie._enabled;
          }, set: function(e4) {
            ie._enabled && (ie.startMouseChildren = ie.mouseChildren), e4 ? (Ge(ie, e4), ie.mouseChildren = ie.startMouseChildren) : (Xe(), Ge(ie, e4)), t2.color = t2.color, To.OPTIMIZE || !zns && OPTIMIZE || !ie.stage || ie.stage.update();
          } }), this.setBacking = function(e4, t3) {
            Re(e4, t3);
          }, !(this.setIcon = function(e4, t3) {
            Re(e4, t3);
          }) !== Q && To.styleTransforms(this, J), this.clone = function(e4) {
            e4 = new To.Button(n, r2, t2.clone(), e4 || !To.isPick(te[0]) ? i2 : te[0], e4 || !To.isPick(te[1]) ? a : te[1], e4 || !To.isPick(te[2]) ? o2 : te[2], e4 || !To.isPick(te[3]) ? l : te[3], oe, c2, ne, u, d, h2, g, p, f3, m2, zot(z) ? null : ie.backing.clone(), zot(y) ? null : ie.rollBacking.clone(), b, zot(v) ? null : v.clone(), zot(w) ? null : w.clone(), C, x2, k, T2, A3, zot(P) ? null : P.clone(), zot(B) ? null : B.clone(), zot(S2) ? null : S2.clone(), zot(E) ? null : E.clone(), I2, M, O, j, L, _, Y, D, X, zot(R) ? null : R.clone(), zot(W) ? null : W.clone(), zot(F2) ? null : F2.clone(), zot(H) ? null : H.clone(), N, V, G, q, U, Q, this.group, K);
            return ie.cloneProps(e4);
          }, this.doDispose = function(e4, t3, o3) {
            return ie.icon && ie.icon.dispose(), ie.rollIcon && ie.rollIcon.dispose(), ie.waitIcon && ie.waitIcon.dispose(), ie.rollWaitIcon && ie.rollWaitIcon.dispose(), ie.toggleIcon && ie.toggleIcon.dispose(), ie.rollToggleIcon && ie.rollToggleIcon.dispose(), ie.icon = ie.rollIcon = ie.waitIcon = ie.rollWaitIcon = ie.toggleIcon = ie.rollToggleIcon = null, o3 || this.zimContainer_dispose(true), true;
          };
        }, To.extend(To.Button, To.Container, ["clone", "dispose"], "zimContainer", false), To.Button.prototype.dispose = function(e3) {
          return this.doDispose(null, null, e3);
        }, To.CheckBox = function(t2, o2, e3, n, r2, i2, a, l, s5, c2, u, d, h2, g, p) {
          if (b = zob(To.CheckBox, arguments, "size, label, startChecked, color, backgroundColor, borderColor, borderWidth, corner, margin, indicatorType, indicatorColor, tap, style, group, inherit", this))
            return b;
          z_d("56"), this.zimContainer_constructor(null, null, null, null, false), this.type = "CheckBox", this.group = g;
          var f3 = h2 === false ? {} : To.getStyle(this.type, this.group, p);
          zot(t2) && (t2 = f3.size != null ? f3.size : 60), zot(o2) && (o2 = f3.label != null ? f3.label : null), zot(e3) && (e3 = f3.startChecked != null && f3.startChecked);
          var m2 = e3;
          zot(n) && (n = f3.color != null ? f3.color : "#111"), zot(r2) && (r2 = f3.backgroundColor != null ? f3.backgroundColor : "rgba(255,255,255,.8)"), zot(i2) && (i2 = f3.borderColor != null ? f3.borderColor : "#111"), zot(a) && (a = f3.borderWidth != null ? f3.borderWidth : t2 / 10), i2 < 0 || a < 0 ? i2 = a = null : i2 != null && a == null && (a = t2 / 10), zot(l) && (l = f3.corner != null ? f3.corner : 0), typeof o2 != "string" && typeof o2 != "number" || (o2 = new To.Label({ text: o2, size: 5 * t2 / 6, color: n, valign: "center", backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", style: h2, group: this.group })), zot(s5) && (s5 = f3.margin != null ? f3.margin : t2 / 5), c2 != "box" && c2 != "square" && c2 != "x" && (c2 = f3.indicatorType != null ? f3.indicatorType : "check"), zot(u) && (u = f3.indicatorColor != null ? f3.indicatorColor : 0 < a ? i2 : "black"), this.setBounds(-s5, -s5, t2 + 2 * s5, t2 + 2 * s5), zot(d) && (d = f3.tap != null && f3.tap);
          var z = this;
          this.cursor = "pointer";
          var y = this.box = new To.Rectangle(t2, t2, r2, null, null, l), b = this.box2 = new To.Rectangle(5 * t2 / 7, 5 * t2 / 7, "rgba(0,0,0,0)", i2, a, l);
          b.x = t2 / 7, b.y = t2 / 7, this.addChild(y, b);
          y = t2;
          o2 && (o2.center(z), o2.x = z.getBounds().width, this.label = o2, this.setBounds(-s5, -s5, t2 + 3 * s5 + o2.getBounds().width, Math.max(t2 + 2 * s5, o2.getBounds().height)), y = o2.x + o2.width);
          b = new To.Shape({ style: false });
          b.graphics.f("rgba(0,0,0,.01)").r(this.getBounds().x, this.getBounds().y, y + 2 * s5, this.getBounds().height), this.hitArea = b;
          var v = new To.Shape({ style: false }), w = v.graphics;
          c2 == "check" ? w.f(u).p("AnQAdICBiaIEEDZIF8nfICfB4In/KPg") : c2 == "box" || c2 == "square" ? w.f(u).dr(-35, -35, 70, 70) : w.f(u).p("AmJEVIEUkTIkXkWIB4h5IEWEYIETkTIB4B3IkTESIEQERIh4B4IkRkRIkSEVg");
          v.setBounds(-47.5, -47.5, 95, 95);
          var C = t2 / 161;
          function x2(e4) {
            m2 = !m2, z.setChecked(m2), z.dispatchEvent("change");
          }
          v.scaleX = v.scaleY = C, v.alpha = 0.9, v.x = t2 / 2, v.y = t2 / 2, m2 && this.addChild(v), d ? this.tap(x2) : this.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", x2), Object.defineProperty(z, "checked", { get: function() {
            return m2;
          }, set: function(e4) {
            z.setChecked(e4);
          } }), this.toggle = function(e4) {
            zot(e4) && (e4 = !m2), z.setChecked(e4);
          }, Object.defineProperty(z, "toggled", { get: function() {
            return m2;
          }, set: function(e4) {
            z.setChecked(e4);
          } }), Object.defineProperty(z, "text", { get: function() {
            return o2 ? o2.text : null;
          }, set: function(e4) {
            o2 && (o2.text = e4, To.OPTIMIZE || !zns && OPTIMIZE || !z.stage || z.stage.update());
          } }), Object.defineProperty(v, "indicatorColor", { get: function() {
            return u;
          }, set: function(e4) {
            m2 && z.removeChild(v), v = new createjs.Shape(), w = v.graphics, u = e4, w.f(u).p("AnQAdICBiaIEEDZIF8nfICfB4In/KPg"), v.scaleX = v.scaleY = C, v.alpha = 0.9, v.x = t2 / 2, v.y = t2 / 2, m2 && z.addChild(v), To.OPTIMIZE || !zns && OPTIMIZE || !z.stage || z.stage.update();
          } }), Object.defineProperty(z, "indicator", { get: function() {
            return v;
          }, set: function(e4) {
            zog("ZIM CheckBox - check is read only");
          } }), this._enabled = true, Object.defineProperty(z, "enabled", { get: function() {
            return z._enabled;
          }, set: function(e4) {
            Ge(z, e4);
          } }), !(this.setChecked = function(e4) {
            return zot(e4) && (e4 = true), (m2 = e4) ? z.addChild(v) : z.removeChild(v), To.OPTIMIZE || !zns && OPTIMIZE || !z.stage || z.stage.update(), z;
          }) !== h2 && To.styleTransforms(this, f3), this.clone = function() {
            return z.cloneProps(new To.CheckBox(t2, o2 ? o2.clone() : "", e3, n, r2, i2, a, l, s5, c2, u, d, h2, this.group, p));
          };
        }, To.extend(To.CheckBox, To.Container, "clone", "zimContainer", false), To.RadioButtons = function(a, i2, l, s5, c2, u, d, h2, g, o2, p, n, f3, e3, r2) {
          var t2;
          if (t2 = zob(To.RadioButtons, arguments, "size, buttons, vertical, color, backgroundColor, borderColor, borderWidth, spacing, margin, always, indicatorColor, selectedIndex, style, group, inherit", this))
            return t2;
          z_d("57"), this.zimContainer_constructor(null, null, null, null, false), this.type = "RadioButtons", this.group = e3;
          var m2 = f3 === false ? {} : To.getStyle(this.type, this.group, r2);
          zot(a) && (a = m2.size != null ? m2.size : 60), a = Math.max(5, a), zot(i2) && (i2 = m2.buttons != null ? m2.buttons : ["A", "B", "C"]), zot(l) && (l = m2.vertical == null || m2.vertical), zot(s5) && (s5 = m2.color != null ? m2.color : "#111"), zot(c2) && (c2 = m2.backgroundColor != null ? m2.backgroundColor : "rgba(255,255,255,.8)"), zot(u) && (u = m2.borderColor != null ? m2.borderColor : "#111"), zot(d) && (d = m2.borderWidth != null ? m2.borderWidth : a / 9), u < 0 || d < 0 ? u = d = null : u != null && d == null && (d = a / 10), zot(h2) && (h2 = l ? m2.spacing != null ? m2.spacing : 0.2 * a : m2.spacing != null ? m2.spacing : a), zot(g) && (g = m2.margin != null ? m2.margin : a / 5), zot(o2) && (o2 = m2.always != null && m2.always), zot(p) && (p = m2.indicatorColor != null ? m2.indicatorColor : 0 < d ? u : "black");
          var z, y = this;
          if (this.cursor = "pointer", this.labels = [], this.indicators = [], typeof i2 == "string") {
            var b = i2;
            i2 = [];
            for (var v = 0; v < b.length; v++)
              i2.push({ label: b[v] });
          }
          var w = new To.Container({ style: false });
          function C(e4) {
            e4 = w.getChildIndex(e4.target);
            o2 && y.selectedIndex == e4 || (y.setSelected(e4), y.dispatchEvent("change"));
          }
          this.addChild(w), function() {
            for (var e4, t3 = false, o3 = i2.length - 1; 0 <= o3; o3--)
              (e4 = i2[o3]).selected && e4.selected === true && (t3 ? e4.selected = "false" : (t3 = true, y.id = e4.id));
            w.removeAllChildren(), y.buttons = [];
            for (var n2, r3 = 0, o3 = 0; o3 < i2.length; o3++)
              typeof (e4 = i2[o3]) != "string" && typeof e4 != "number" || (n2 = { selected: false, label: new To.Label({ text: e4, size: 5 * a / 6, color: m2.color != null ? m2.color : s5, valign: "center", backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", style: f3, group: y.group }) }, e4 = n2), (e4.label && typeof e4.label == "string" || typeof e4.label == "number") && (e4.label = new To.Label({ text: e4.label, size: m2.size != null ? m2.size : 5 * a / 6, color: m2.color != null ? m2.color : s5, valign: "center", style: f3 })), y.labels.push(e4.label), e4.index = o3, i2[o3] = e4, (n2 = function(e5, t4) {
                var o4 = new To.Container({ style: false });
                y.buttons.push(o4), o4.mouseChildren = false, o4.setBounds(-g, -g, a + 2 * g, a + 2 * g);
                var n3 = new To.Shape({ style: false }), r4 = n3.graphics;
                r4.f(c2).dc(a / 2, a / 2, a / 1.85), r4.s(u).ss(d).dc(a / 2, a / 2, a / 2 - a / 2 / 5), o4.addChild(n3);
                var i3 = o4.check = new To.Circle(a / 5.2, p, null, null, null, null, null, null, false);
                y.indicators.push(i3), i3.mouseEnabled = false, i3.alpha = 0.95, i3.regX = i3.regY = -a / 2;
                n3 = a;
                t4 && (o4.addChild(t4), t4.x = o4.getBounds().width, t4.y = a / 2, o4.setBounds(-g, -g, a + 2 * g + t4.getBounds().width, Math.max(a + 2 * g, t4.getBounds().height)), n3 = t4.x + t4.width, o4.text = t4.text);
                e5 && (o4.addChild(i3), y.label = t4, y.label && (y.text = t4.text));
                t4 = new To.Shape({ style: false });
                return (r4 = t4.graphics).f("rgba(0,0,0,.01)").r(o4.getBounds().x, o4.getBounds().y, n3 + 2 * g, o4.getBounds().height), o4.hitArea = t4, o4;
              }(e4.selected, e4.label)).type = "RadioButton", (n2.obj = e4).selected && (z = n2.obj), w.addChild(n2), l ? (n2.y = r3, r3 += n2.getBounds().height + h2) : (n2.x = r3, r3 += n2.getBounds().width + h2);
          }();
          for (var x2 = 0; x2 < w.numChildren; x2++)
            w.getChildAt(x2).on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", C);
          this.getBounds() || this.setBounds(0, 0, a, a), this.setBounds(-g, -g, this.getBounds().width + 2 * g, this.getBounds().height), this.setSelected = function(e4) {
            if (zot(e4) && (e4 = -1), e4 == -1 || w.getChildAt(e4)) {
              for (var t3, o3, n2 = 0; n2 < w.numChildren; n2++)
                (t3 = w.getChildAt(n2)).removeChild(t3.check);
              return 0 <= e4 && (t3 = w.getChildAt(e4), o3 = -2, z && (o3 = z.index), z = t3.obj), e4 == -1 || o3 == z.index ? (z = null, y.id = null, y.label = null, y.text = "") : (t3.addChild(t3.check), y.id = z.id, y.label = z.label, y.label && (y.text = y.label.text)), To.OPTIMIZE || !zns && OPTIMIZE || !y.stage || y.stage.update(), y;
            }
          }, Object.defineProperty(y, "selected", { get: function() {
            return z;
          }, set: function(e4) {
            zog("ZIM RadioButton - selected is read only");
          } }), Object.defineProperty(y, "selectedIndex", { get: function() {
            return z ? z.index : -1;
          }, set: function(e4) {
            o2 && y.selectedIndex == e4 || y.setSelected(e4);
          } }), this._enabled = true, Object.defineProperty(y, "enabled", { get: function() {
            return y._enabled;
          }, set: function(e4) {
            Ge(y, e4);
          } }), zot(n) && (n = m2.selectedIndex != null ? m2.selectedIndex : 0), y.selectedIndex = n, To.styleTransforms(this, m2), this.clone = function() {
            for (var e4 = To.copy(i2), t3 = 0; t3 < e4.length; t3++)
              e4[t3].label = e4[t3].label.clone();
            return y.cloneProps(new To.RadioButtons(a, e4, l, s5, c2, u, d, h2, g, o2, p, n, f3, this.group, r2));
          };
        }, To.extend(To.RadioButtons, To.Container, "clone", "zimContainer", false), To.Toggle = function(o2, n, e3, t2, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w) {
          if (x2 = zob(To.Toggle, arguments, "width, height, label, startToggled, backgroundColor, margin, indicatorType, indicatorColor, tap, toggleBackgroundColor, color, borderColor, borderWidth, corner, indicatorCorner, shadowColor, shadowBlur, time, labelLeft, style, group, inherit", this))
            return x2;
          z_d("57.5"), this.group = v;
          var C = b === false ? {} : To.getStyle("Toggle", this.group, w);
          zot(o2) && (o2 = C.width != null ? C.width : 80), zot(n) && (n = C.height != null ? C.height : 50), this.zimContainer_constructor(o2, n, null, null, false), this.type = "Toggle", zot(r2) && (r2 = C.backgroundColor != null ? C.backgroundColor : "#C60"), zot(i2) && (i2 = C.margin != null ? C.margin : 10), zot(a) && (a = C.indicatorType != null ? C.indicatorType : "circle"), zot(l) && (l = C.indicatorColor != null ? C.indicatorColor : "#fff"), zot(c2) && (c2 = C.toggleBackgroundColor != null ? C.toggleBackgroundColor : "#F93"), zot(u) && (u = C.color != null ? C.color : "#111"), zot(d) && (d = C.borderColor != null ? C.borderColor : null), zot(h2) && (h2 = C.borderWidth != null ? C.borderWidth : null), d < 0 || h2 < 0 ? d = h2 = null : d != null && h2 == null && (h2 = 1), zot(g) && (g = C.corner != null ? C.corner : a != "circle" ? 0 : 25), zot(p) && (p = C.indicatorCorner != null ? C.indicatorCorner : 0), zot(f3) && (f3 = C.shadowColor != null ? C.shadowColor : "rgba(0,0,0,.3)"), zot(m2) && (m2 = C.shadowBlur != null ? C.shadowBlur : 14), zot(t2) && (t2 = C.startToggled != null && C.startToggled);
          var x2 = Ao(z);
          zot(z) && (z = C.time != null ? C.time : x2 == "s" ? 0.1 : 100), zot(e3) && (e3 = C.label != null ? C.label : null), zot(y) && (y = C.labelLeft != null ? C.labelLeft : null);
          var k = this;
          k.cursor = "pointer", typeof e3 != "string" && typeof e3 != "number" || (e3 = this.label = new To.Label({ text: e3, size: C.size || 5 * n / 6, color: u, valign: "center", backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", group: this.group })), typeof y != "string" && typeof y != "number" || (y = this.labelLeft = new To.Label({ text: y, size: C.size || 5 * n / 6, color: u, valign: "center", backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", group: this.group })), this.background = new To.Rectangle(o2, n, r2, d, h2, g).addTo(this), this.indicator = a == "rectangle" || a == "square" ? new To.Rectangle(0.65 * n, 0.65 * n, l, null, null, p).center(this.background).pos(0.2 * n, null, t2) : new To.Circle(0.35 * n, l).center(this.background).pos(0.175 * n, null, t2);
          var T2 = t2;
          function A3(e4) {
            var t3, o3 = k.indicator.x, e4 = e4 === true ? 0 : z;
            a == "rectangle" || a == "square" ? k.indicator.pos(0.2 * n, null, T2) : k.indicator.pos(0.175 * n, null, T2), 0 < z && k.indicator.animate({ props: { x: o3 }, from: true, time: e4 }), k.background.color = T2 ? c2 : r2, k.text = T2 ? k.label ? k.label.text : "on" : k.labelLeft ? k.labelLeft.text : "off", k.zimAccessibility && (t3 = "Toggle set to " + (T2 ? k.label ? k.label.text + "." : "on." : k.labelLeft ? k.labelLeft.text + "." : "off."), setTimeout(function() {
              k.zimAccessibility.talk(t3);
            }, 50));
          }
          k.background.color = T2 ? c2 : r2, f3 != -1 && 0 < m2 && (this.background.shadow = new createjs.Shadow(f3, 3, 3, m2)), e3 && (this.addChild(e3), e3.x = o2 + 2 + i2 + h2, e3.y = n / 2, this.label = e3, this.setBounds(-i2, -i2, o2 + 3 * i2 + h2 + e3.getBounds().width, Math.max(n + 2 * i2, e3.getBounds().height))), y && (this.addChild(y), y.x = 0, k.background.x += y.width + 3 + i2 + h2, k.label.x += y.width + 3 + i2 + h2, y.y = n / 2, this.labelLeft = y, this.setBounds(-i2, -i2, k.getBounds().width + y.width + 3 + i2 + h2, k.getBounds().height)), this.expand(To.mobile() ? 20 : 10), this.tap(function(e4) {
            if (y) {
              var t3 = k.localToGlobal(y.width + 3 + i2 + h2 + o2 / 2, 0);
              if (e4.stageX / To.scaX < t3.x - o2 / 2 && !T2 || e4.stageX / To.scaX >= t3.x + o2 / 2 && T2)
                return;
            }
            T2 = !T2, A3(), k.dispatchEvent("change");
          }, To.mobile() ? 20 : 10), new To.Swipe(this, 20, x2 == "s" ? 0.2 : 200).on("swipe", function(e4) {
            e4.swipeX != 0 && (e4.swipeX == 1 && T2 || e4.swipeX == -1 && !T2 || (T2 = !T2, A3(), k.dispatchEvent("change")));
          }), Object.defineProperty(k, "textLeft", { get: function() {
            return y ? y.text : null;
          }, set: function(e4) {
            y && (y.text = e4, To.OPTIMIZE || !zns && OPTIMIZE || !k.stage || k.stage.update());
          } }), k.toggle = function(e4, t3) {
            var o3 = T2;
            return zot(e4) && (e4 = true), o3 != (T2 = e4) && A3(t3), k;
          }, k.text = T2 ? k.label ? k.label.text : "on" : k.labelLeft ? k.labelLeft.text : "off", Object.defineProperty(k, "toggled", { get: function() {
            return T2;
          }, set: function(e4) {
            k.toggle(e4);
          } }), this._enabled = true, Object.defineProperty(k, "enabled", { get: function() {
            return k._enabled;
          }, set: function(e4) {
            Ge(k, e4);
          } }), b !== false && To.styleTransforms(this, C), this.clone = function() {
            return k.cloneProps(new To.Toggle(o2, n, e3 ? e3.clone() : "", t2, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y ? y.clone() : "", b, this.group, w));
          };
        }, To.extend(To.Toggle, To.Container, "clone", "zimContainer", false), To.Tip = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, D, X, R, W) {
          var F2;
          if (F2 = zob(To.Tip, arguments, "text, align, valign, margin, marginH, marginV, outside, target, size, font, color, rollColor, shadowColor, shadowBlur, textAlign, textValign, lineWidth, lineHeight, backing, outlineColor, outlineWidth, backgroundColor, backgroundBorderColor, backgroundBorderWidth, corner, backgroundDashed, padding, paddingHorizontal, paddingVertical, shiftHorizontal, shiftVertical, rollPersist, labelWidth, labelHeight, maxSize, bold, italic, variant, splitWords, style, group, inherit", this))
            return F2;
          z_d("57.6"), this.group = R;
          var H = X === false ? {} : To.getStyle("Tip", this.group, W);
          zot(e3) && (e3 = H.text != null ? H.text : "Here's a tip!"), zot(n) && (n = H.margin != null ? H.margin : 40), zot(r2) && (r2 = H.marginH != null ? H.marginH : n), zot(i2) && (i2 = H.marginV != null ? H.marginV : n), zot(t2) && (t2 = H.align != null ? H.align : "right"), zot(o2) && (o2 = H.valign != null ? H.valign : "bottom"), zot(a) && (a = H.outside != null && H.outside), zot(w) && (w = H.backgroundColor != null ? H.backgroundColor : To.blue), zot(u) && (u = H.color != null ? H.color : To.white), zot(k) && (k = H.corner != null ? H.corner : 25), zot(k) && (k = H.corner != null ? H.corner : 25), zot(k) && (k = H.corner != null ? H.corner : 25), zot(P) && (P = H.paddingHorizontal != null ? H.paddingHorizontal : 14 + (Array.isArray(k) ? k[0] : k)), !zot(h2) && h2 != "ignore" || (h2 = H.shadowColor != null && h2 != "ignore" ? H.shadowColor : "rgba(0,0,0,.3)"), !zot(g) && g != "ignore" || (g = H.shadowBlur != null && g != "ignore" ? H.shadowBlur : 1), this.zimLabel_constructor(e3, s5, c2, u, d, null, null, p, f3, L, _, Y, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, D, X, R, To.copy(H)), this.type = "Tip", a && (r2 = -r2, i2 = -i2);
          var N = this;
          N.align = t2, N.valign = o2, this.background.sha(h2, 3, 5, g), this.show = function(e4, o3) {
            var t3 = Ao(o3);
            zot(e4) && (e4 = H.delay != null ? H.delay : 0), zot(o3) && (o3 = H.time != null ? H.time : t3 == "s" ? 2 : 2e3);
            if (zot(l)) {
              if (!zdf)
                return N;
              l = zdf.stage;
            } else {
              if (!l.getBounds)
                return N;
              if (zot(l.stage))
                return zog("zim display - Waiter(): The container must have a stage property"), N;
            }
            function n2() {
              var e5;
              e5 = l.boundsToGlobal ? l.boundsToGlobal() : l.getBounds();
              var t4 = new To.Container(e5.x, e5.y, e5.width, e5.height);
              t4.zimTemp = true, t4.loc(0, 0, l.stage), N.align != "center" && N.align != "middle" && N.valign != "center" && N.valign != "middle" || N.center(t4), N.pos(N.align == "center" || N.align == "middle" ? null : r2, N.valign == "center" || N.valign == "middle" ? null : i2, N.align == "right", N.valign == "bottom", t4), a && (N.align == "right" ? N.x += N.width : N.align == "left" && (N.x -= N.width), N.valign == "bottom" ? N.y += N.height : N.valign == "top" && (N.y -= N.height)), N.addTo(t4.stage), t4.zimTemp && t4.removeFrom && (t4.removeFrom(), t4 = null), t4 = N.stage, N.timeoutID && N.timeoutID.clear(), N.timeoutID = To.timeout(o3, function() {
                N.hide(), t4.stage.update();
              }), N.upID && t4.stage.off("stagemouseup", N.upID), N.upID = t4.stage.on("stagemouseup", function() {
                N.hide(), t4.stage && t4.stage.update();
              }), t4.stage && t4.stage.update();
            }
            return 0 < e4 ? N.showID = To.timeout(e4, n2) : n2(), N;
          }, this.hide = function() {
            return this.removeFrom(), this.timeoutID && this.timeoutID.clear(), this.upID && l.stage && l.stage.off("stagemouseup", this.downID), N;
          }, !(this.clear = function() {
            N.showID && N.showID.clear(), N.hide();
          }) !== X && To.styleTransforms(this, H), this.clone = function() {
            return N.cloneProps(new To.Tip(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, D, X, this.group, W));
          };
        }, To.extend(To.Tip, To.Label, "clone", "zimLabel", false), To.Pane = function(r2, i2, n, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, e3, v, w, C, x2, k, T2, A3, t2, P) {
          if (S2 = zob(To.Pane, arguments, "width, height, label, backgroundColor, color, draggable, resets, modal, corner, backdropColor, shadowColor, shadowBlur, center, displayClose, backdropClose, backing, fadeTime, container, titleBar, titleBarColor, titleBarBackgroundColor, titleBarHeight, close, closeColor, style, group, inherit", this))
            return S2;
          z_d("58"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Pane";
          var o2 = "zim display - Pane(): Please pass in a reference to a container with bounds set as first parameter";
          if (zot(e3)) {
            if (!zdf)
              return void zog(o2);
            e3 = zdf.stage;
          } else {
            if (!e3.getBounds)
              return void zog(o2);
            if (zot(e3.getStage))
              return void zog("zim display - Pane(): The container must have a stage property");
          }
          this.group = t2;
          var B = A3 === false ? {} : To.getStyle(this.type, this.group, P);
          zot(r2) && (r2 = B.width != null ? B.width : 200), zot(i2) && (i2 = B.height != null ? B.height : 200), zot(n) && (n = B.label != null ? B.label : null), typeof n != "string" && typeof n != "number" || (n = new To.Label({ text: n, size: B.size != null ? B.size : 40, align: B.align != null ? B.align : "center", valign: B.valign != null ? B.valign : "center", color: B.color != null ? B.color : l, backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", group: this.group })), zot(a) && (a = B.backgroundColor != null ? B.backgroundColor : "white"), zot(s5) && (s5 = B.draggable != null && B.draggable), zot(c2) && (c2 = B.resets == null || B.resets), zot(u) && (u = B.modal == null || B.modal), zot(d) && (d = B.corner != null ? B.corner : 20), zot(v) && (v = B.titleBar != null ? B.titleBar : null), zot(w) && (w = B.titleBarColor != null ? B.titleBarColor : null), zot(C) && (C = B.titleBarBackgroundColor != null ? B.titleBarBackgroundColor : null), zot(x2) && (x2 = B.titleBarHeight != null ? B.titleBarHeight : null), zot(h2) && (h2 = B.backdropColor != null ? B.backdropColor : "rgba(0,0,0,.2)"), zot(g) && (g = B.shadowColor != null ? B.shadowColor : "rgba(0,0,0,.3)"), zot(p) && (p = B.shadowBlur != null ? B.shadowBlur : 20), zot(f3) && (f3 = B.center == null || B.center), zot(m2) && (m2 = B.displayClose == null || B.displayClose), s5 && (m2 = false), zot(z) && (z = B.backdropClose == null || B.backdropClose), zot(b) && (b = B.fadeTime != null ? B.fadeTime : 0), zot(k) && (k = B.close != null && B.close), zot(T2) && (T2 = B.closeColor != null ? B.closeColor : "#555");
          var S2 = this.backdrop = new To.Shape({ style: false });
          S2.type = "CreateJS_Shape";
          o2 = S2.graphics;
          o2.f(h2), o2.drawRect(-5e3, -5e3, 1e4, 1e4), this.setBounds(-r2 / 2, -i2 / 2, r2, i2);
          var E = this;
          E.container = e3, S2.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", z ? Y : function(e4) {
            e4.stopImmediatePropagation();
          });
          var I2, M, O, j, L, _ = new To.Dictionary(true);
          function Y(e4) {
            E.dispatchEvent("closing"), setTimeout(function() {
              D(), E.dispatchEvent("close");
            }, 10), e4.stopImmediatePropagation();
          }
          function D() {
            function e4() {
              E.container.removeChild(E);
              for (var e5, t3, o3 = 0; o3 < E.numChildren; o3++)
                (t3 = E.getChildAt(o3)).type != "TextArea" && t3.type != "Loader" && t3.type != "Tag" || (e5 = { obj: t3, depth: E.getChildIndex(t3) }, _.add(t3, e5));
              for (var n2, o3 = E.numChildren - 1; 0 <= o3; o3--)
                (t3 = E.getChildAt(o3)).type != "TextArea" && t3.type != "Loader" && t3.type != "Tag" || E.removeChild(t3);
              To.OPTIMIZE || !zns && OPTIMIZE || E.container.stage.update(), c2 && (isNaN(E.resetX) || (E.x = E.resetX), isNaN(E.resetY) || (E.y = E.resetY)), E.zimAccessibility && ((n2 = E.zimAccessibility).resize(E), (L || E.zimTabTag.nextSibling).focus(), setTimeout(function() {
                n2.talk("Pane has been closed.");
              }, 50));
            }
            0 < b ? E.animate({ obj: { alpha: 0 }, time: b, call: function() {
              e4(), E.dispatchEvent("fadedout");
            } }) : e4();
          }
          S2.on("mousedown", function(e4) {
            e4.stopImmediatePropagation();
          }), u && this.addChild(S2), zot(y) ? I2 = this.backing = this.display = new To.Rectangle({ width: r2, height: i2, color: a, corner: d, style: false }) : (y.type == "Pattern" ? (j = y, I2 = new To.Rectangle(r2, i2, a, null, null, d, null, null, false), j.centerReg(I2), j.setMask(I2.shape)) : I2 = y, E.display = E.backing = I2), m2 && (I2.cursor = "pointer", I2.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", Y)), g != -1 && 0 < p && (I2.shadow = new createjs.Shadow(g, 8, 8, p)), I2.on("click", function(e4) {
            e4.stopImmediatePropagation();
          }), this.resetX, this.resetY, s5 && (I2.cursor = "pointer", I2.on("mousedown", function(e4) {
            e4.target.stage, isNaN(E.resetX) && (E.resetX = E.x), isNaN(E.resetY) && (E.resetY = E.y), M = e4.stageX / To.scaX - E.x, O = e4.stageY / To.scaY - E.y, I2.cursor = "pointer";
          }), I2.on("pressmove", function(e4) {
            var t3, o3, e4 = (t3 = e4.stageX / To.scaX - M, e4 = e4.stageY / To.scaY - O, t3 = Math.max(r2 / 2, Math.min(E.container.getBounds().width - r2 / 2, t3)), e4 = Math.max(i2 / 2, Math.min(E.container.getBounds().height - i2 / 2, e4)), { x: t3, y: e4 });
            E.x = e4.x, E.y = e4.y;
            for (var n2 = 0; n2 < E.numChildren; n2++)
              (o3 = E.getChildAt(n2)).type != "TextArea" && o3.type != "Loader" && o3.type != "Tag" || o3.resize();
            E.stage.update();
          }), this.on("pressup", function(e4) {
            I2.cursor = "pointer", E.stage && E.stage.update();
          })), I2.centerReg(this), n && (this.addChild(n), To.center(n, this), this.label = n, this.text = n.text, n.mouseEnabled = false), zot(v) || (typeof v == "string" && (v = new To.Label(v, null, null, w)), j = E.titleBarLabel = v, zot(x2) && (x2 = 1.5 * j.height), zot(w) && (w = "black"), zot(C) && (C = "rgba(0,0,0,.2)"), E.titleBar = v = new To.Container(r2, x2, null, null, false).centerReg(E).mov(0, -i2 / 2 + x2 / 2), v.mouseEnabled = false, v.mouseChildren = false, E.titleBar.backing = new To.Rectangle(r2, x2, C, null, null, [0.95 * d, 0.95 * d, 0, 0], null, null, false).addTo(v), j.center(v).pos({ x: Math.max(d / 2, 10), reg: true })), k && ((k = E.close = new To.Shape(-40, -40, 80, 80, null, false)).graphics.f(T2).p("AmJEVIEUkTIkXkWIB4h5IEWEYIETkTIB4B3IkTESIEQERIh4B4IkRkRIkSEVg"), (v ? k.addTo(E).scaleTo(v, null, 50).mov(r2 / 2 - Math.max(d / 2, 10) - k.width / 2, -i2 / 2 + x2 / 2) : k.addTo(E).sca(0.3).mov(r2 / 2 - k.width - 3, -i2 / 2 + k.height)).expand(40), k.cursor = "pointer", k.expand(), k.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", Y)), Object.defineProperty(E, "text", { get: function() {
            return n.text == " " ? "" : n.text;
          }, set: function(e4) {
            n.text = e4;
          } }), this._enabled = true, Object.defineProperty(E, "enabled", { get: function() {
            return E._enabled;
          }, set: function(e4) {
            Ge(E, e4);
          } }), this.hide = function(e4) {
            return D(), E.toggled = false, e4 && E.dispatchEvent("close"), E;
          }, this.show = function() {
            f3 && isNaN(E.resetX) && (E.x = E.container.getBounds().width / 2, E.y = E.container.getBounds().height / 2), E.container.addChild(E);
            for (var e4, t3 = 0; t3 < _.length; t3++)
              E.addChildAt(_.values[t3].obj, _.values[t3].depth);
            return 0 < b ? (E.alpha = 0, E.animate({ props: { alpha: 1 }, time: b, call: function() {
              E.dispatchEvent("fadedin");
            } })) : setTimeout(function() {
              E.container.stage && E.container.stage.update();
            }, 10), E.zimAccessibility && (e4 = E.zimAccessibility, setTimeout(function() {
              e4.activatedObject && (L = e4.activatedObject.zimTabTag);
            }, 50), e4.resize(E), e4.tabIndex = E.zimTabIndex), E.toggled = true, E;
          }, !(this.toggle = function(e4) {
            return e4 !== true && (e4 === false || E.container.contains(E)) ? E.hide() : E.show(), E;
          }) !== A3 && To.styleTransforms(this, B), this.clone = function() {
            var e4 = n.x, t3 = n.y, o3 = E.cloneProps(new To.Pane(r2, i2, n.clone(), a, l, s5, c2, u, d, h2, g, p, f3, m2, z, zot(y) ? y.clone() : null, b, E.container, v, w, C, x2, k, T2, A3, this.group, P));
            return o3.label.x = e4, o3.label.y = t3, o3;
          };
        }, To.extend(To.Pane, To.Container, "clone", "zimContainer", false), To.Panel = function(t2, e3, o2, a, l, n, s5, c2, r2, i2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2) {
          if (E = zob(To.Panel, arguments, "width, height, titleBar, titleBarColor, titleBarBackgroundColor, titleBarHeight, backgroundColor, borderColor, borderWidth, corner, close, closeColor, arrow, align, shadowColor, shadowBlur, draggable, boundary, extraButton, collapse, collapsed, style, group, inherit", this))
            return E;
          z_d("57.7"), this.group = C;
          var k = w === false ? {} : To.getStyle("Panel", this.group, x2);
          zot(t2) && (t2 = k.width != null ? k.width : 250), zot(e3) && (e3 = k.height != null ? k.height : 300), this.zimContainer_constructor(t2, e3, null, null, false), this.type = "Panel", zot(o2) && (o2 = k.titleBar != null ? k.titleBar : "PANEL"), zot(a) && (a = k.titleBarColor != null ? k.titleBarColor : "#fff"), zot(l) && (l = k.titleBarBackgroundColor != null ? k.titleBarBackgroundColor : "#555"), zot(n) && (n = k.titleBarHeight != null ? k.titleBarHeight : 30), zot(s5) && (s5 = k.backgroundColor != null ? k.backgroundColor : "#eee"), zot(c2) && (c2 = k.borderColor != null ? k.borderColor : "#888"), zot(r2) && (r2 = k.borderWidth != null ? k.borderWidth : null), c2 < 0 || r2 < 0 ? c2 = r2 = null : c2 != null && r2 == null && (r2 = 1), zot(i2) && (i2 = k.corner != null ? k.corner : 5), zot(g) && (g = k.align != null ? k.align : "left"), zot(p) && (p = k.shadowColor != null ? k.shadowColor : "rgba(0,0,0,.3)"), zot(f3) && (f3 = k.shadowBlur != null ? k.shadowBlur : 14), zot(m2) && (m2 = k.draggable != null && k.draggable), zot(z) && (z = k.boundary != null ? k.boundary : null), zot(u) && (u = k.close != null && k.close), zot(d) && (d = k.closeColor != null ? k.closeColor : zot(a) ? "#555" : a), zot(h2) && (h2 = k.arrow != null ? k.arrow : To.vee(o2)), Array.isArray(i2) || (i2 = [i2, i2, i2, i2]), zot(b) && (b = k.collapse != null && k.collapse), zot(v) && (v = k.collapsed != null && k.collapsed);
          var T2 = this, A3 = this.background = new To.Rectangle(t2, e3, s5, c2, r2, i2).addTo(this);
          p != -1 && 0 < f3 && (this.background.shadow = new createjs.Shadow(p, 3, 3, f3));
          var P = o2, B = To.Pick.choose(P), S2 = To.Pick.choose(a), E = To.Pick.choose(l);
          To.Pick.choose(s5), To.Pick.choose(c2);
          typeof B == "string" && (B = new To.Label({ text: B, color: S2, size: k.size != null ? k.size : 20, bold: k.bold != null && k.bold, backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", group: this.group }));
          var I2 = T2.titleBarLabel = B;
          zot(E) && (E = "rgba(0,0,0,.2)"), T2.titleBar = o2 = new To.Container(t2, n, null, null, false).loc(0, 0, T2);
          var M, O = T2.titleBar.backing = new To.Rectangle(t2 + r2, n, E, null, null, [0.95 * i2[0], 0.95 * i2[1], 0, 0], true, null, false).center(o2);
          function j() {
            g == "right" ? I2.center(o2).pos(Math.max(i2[0] / 2, 10), null, true) : g == "center" || g == "middle" ? I2.center(o2) : I2.center(o2).loc(Math.max(i2[0] / 2, 10)), I2.mov(0, 2);
          }
          o2 && j(), T2.label = B, T2.text = B.text, u && ((u = T2.close = new To.Shape(-40, -40, 80, 80, null, false)).graphics.f(d).p("AmJEVIEUkTIkXkWIB4h5IEWEYIETkTIB4B3IkTESIEQERIh4B4IkRkRIkSEVg"), o2 ? (u.centerReg(o2).scaleTo(o2, null, 50), g == "right" ? u.pos(Math.max(i2[1] / 2, 15)) : u.pos(Math.max(i2[1] / 2, 15), null, true)) : u.addTo(T2).sca(0.3).mov(t2 / 2 - u.width - 3, -e3 / 2 + u.height), u.expand(40), u.cursor = "pointer", u.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function() {
            var e4 = T2.stage;
            T2.removeFrom(), T2.dispatchEvent("close"), e4.update();
          })), b && (v && (T2.collapsed = true), T2.collapseEvent = T2.titleBar.on("dblclick", function() {
            v = !v, T2.collapsed = v;
          })), this.nextPanel = function(e4, t3) {
            var o3 = zot(e4) || zot(P.array) ? To.Pick.choose(P) : P.array[e4], n2 = zot(e4) || zot(a.array) ? To.Pick.choose(a) : a.array[e4], r3 = zot(e4) || zot(l.array) ? To.Pick.choose(l) : l.array[e4], i3 = zot(e4) || zot(s5.array) ? To.Pick.choose(s5) : s5.array[e4], e4 = zot(e4) || zot(c2.array) ? To.Pick.choose(c2) : c2.array[e4];
            typeof o3 == "string" && (o3 = new To.Label({ text: o3, color: n2, size: k.size != null ? k.size : 20, backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", group: this.group })), T2.label = o3, T2.text = o3.text, I2.removeFrom(), I2 = T2.titleBarLabel = o3, j(), O.color = r3, T2.background.color = i3, T2.background.borderColor = e4, t3 && T2.dispatchEvent("change"), !OPTIMIZE && T2.stage && T2.stage.update();
          }, m2 && (o2.cursor = "pointer", o2.on("mousedown", function() {
            T2.drag({ rect: z, currentTarget: true });
          }), o2.on("pressup", function() {
            T2.noDrag(false);
          })), 0 < h2 && (B = u ? u.width + 15 : 0, (M = T2.arrow = new To.Shape(-20, -20, 40, 40, null, false)).graphics.f(a).p("AiJieIETCeIkTCfg"), M.centerReg(o2).scaleTo(o2, null, 70).alp(0.8).hov(1).expand(), g == "right" ? M.pos(Math.max(i2[1] / 2, 10) + B) : M.pos(Math.max(i2[1] / 2, 10) + B, null, true), M.cursor = "pointer", M.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function() {
            T2.nextPanel(), T2.dispatchEvent("change");
          })), zot(y) || (y = T2.extraButton = new To.Button({ label: "R", width: 50, height: 50, corner: 5, group: "PanelExtra" }).scaleTo(o2, null, 70).centerReg(o2).expand(), g == "left" ? y.pos(0 < h2 ? M.x - M.width - 25 : Math.max(i2[1] / 2, 10)) : y.pos(0 < h2 && g != "center" ? M.x + M.width : Math.max(i2[1] / 2, 10)));
          T2.overlay = new To.Rectangle(t2, e3, null, null, null, i2).alp(0.3);
          Object.defineProperty(T2, "panelHeight", { get: function() {
            return T2.background.height;
          }, set: function(e4) {
            A3.removeFrom(), A3 = this.background = new To.Rectangle(t2, e4, s5, c2, r2, i2).addTo(this).bot(), p != -1 && 0 < f3 && (this.background.shadow = new createjs.Shadow(p, 3, 3, f3)), T2.setBounds(t2, e4), !OPTIMIZE && T2.stage && T2.stage.update();
          } }), Object.defineProperty(T2, "collapsed", { get: function() {
            return v;
          }, set: function(e4) {
            (v = e4) ? T2.setMask(T2.titleBar.backing, true) : T2.setMask(null), T2.stage && T2.stage.update();
          } }), this._enabled = true, Object.defineProperty(T2, "enabled", { get: function() {
            return T2._enabled;
          }, set: function(e4) {
            Ge(T2, e4), e4 ? T2.overlay.removeFrom() : T2.overlay.addTo(T2), !OPTIMIZE && T2.stage && T2.stage.update();
          } }), w !== false && To.styleTransforms(this, k), this.clone = function() {
            return T2.cloneProps(new To.Toggle(t2, e3, o2 ? o2.clone() : "", a, l, n, s5, c2, r2, i2, u, d, h2, g, p, f3, m2, z, y, b, v, w, this.group, x2));
          }, this.doDispose = function(e4, t3, o3) {
            return b && this.titleBar.off("dblclick", this.collapseEvent), o3 || this.zimContainer_dispose(true), true;
          };
        }, To.extend(To.Panel, To.Container, ["clone", "dispose"], "zimContainer", false), To.Panel.prototype.dispose = function(e3) {
          return this.doDispose(null, null, e3);
        }, To.Window = function(a, l, o2, e3, s5, n, c2, u, d, h2, t2, r2, i2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, D, X, R) {
          if (W = zob(To.Window, arguments, "width, height, backgroundColor, borderColor, borderWidth, padding, corner, swipe, scrollBarActive, scrollBarDrag, scrollBarColor, scrollBarAlpha, scrollBarFade, scrollBarH, scrollBarV, slide, slideDamp, slideSnap, interactive, shadowColor, shadowBlur, paddingHorizontal, paddingVertical, scrollWheel, damp, titleBar, titleBarColor, titleBarBackgroundColor, titleBarHeight, draggable, boundary, onTop, close, closeColor, cancelCurrentDrag, fullSize, fullSizeColor, resizeHandle, style, group, inherit", this))
            return W;
          z_d("58.1"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Window", this.group = X;
          var W = D === false ? {} : To.getStyle(this.type, this.group, R);
          zot(a) && (a = W.width != null ? W.width : 300), zot(l) && (l = W.height != null ? W.height : 200), zot(o2) && (o2 = W.backgroundColor != null ? W.backgroundColor : "#333");
          var F2 = e3, H = s5;
          zot(e3) && (e3 = W.borderColor != null ? W.borderColor : "#999"), zot(s5) && (s5 = W.borderWidth != null ? W.borderWidth : 1), zot(n) && (n = W.padding != null ? W.padding : 0), zot(c2) && (c2 = W.corner != null ? W.corner : 0), zot(u) && (u = W.swipe == null || W.swipe), zot(d) && (d = W.scrollBarActive == null || W.scrollBarActive), zot(h2) && (h2 = W.scrollBarDrag != null && W.scrollBarDrag), zot(t2) && (t2 = W.scrollBarColor != null ? W.scrollBarColor : e3), zot(r2) && (r2 = W.scrollBarAlpha != null ? W.scrollBarAlpha : 0.3), zot(i2) && (i2 = W.scrollBarFade == null || W.scrollBarFade), zot(g) && (g = W.scrollBarH == null || W.scrollBarH), zot(p) && (p = W.scrollBarV == null || W.scrollBarV), h2 && (i2 = W.scrollBarFade != null && W.scrollBarFade), zot(f3) && (f3 = W.slide == null || W.slide), zot(m2) && (m2 = W.slideDamp != null ? W.slideDamp : 0.6), zot(z) && (z = W.slideSnap != null ? W.slideSnap : "vertical"), zot(y) && (y = W.interactive == null || W.interactive), zot(b) && (b = W.shadowColor != null ? W.shadowColor : "rgba(0,0,0,.3)"), zot(v) && (v = W.shadowBlur != null ? W.shadowBlur : 20), zot(C) && (C = W.paddingVertical != null ? W.paddingVertical : n), zot(w) && (w = W.paddingHorizontal != null ? W.paddingHorizontal : n), zot(x2) && (x2 = W.scrollWheel == null || W.scrollWheel), zot(T2) && (T2 = W.titleBar != null ? W.titleBar : null), zot(A3) && (A3 = W.titleBarColor != null ? W.titleBarColor : null), zot(P) && (P = W.titleBarBackgroundColor != null ? W.titleBarBackgroundColor : null), zot(B) && (B = W.titleBarHeight != null ? W.titleBarHeight : null), zot(S2) && (S2 = W.draggable != null ? W.draggable : null), zot(E) && (E = W.boundary != null ? W.boundary : null), zot(I2) && (I2 = W.onTop != null ? W.onTop : null), zot(M) && (M = W.close != null ? W.close : null), zot(O) && (O = W.closeColor != null ? W.closeColor : null), zot(j) && (j = W.cancelCurrentDrag != null && W.cancelCurrentDrag), zot(L) && (L = W.fullSize != null ? W.fullSize : null), zot(_) && (_ = W.fullSizeColor != null ? W.fullSizeColor : null), zot(Y) && (Y = W.resizeHandle != null ? W.resizeHandle : null), T2 === false && (T2 = null), zot(T2) || (zot(B) && (B = 30), l -= B);
          var N = this;
          this.scrollX = this.scrollY = this.scrollXMax = this.scrollYMax = 0;
          var V = this.backing = new To.Shape({ style: false });
          this.addChild(V);
          var G = new createjs.Shape();
          G.type = "WindowBacking";
          var q = G.graphics;
          this.addChild(G);
          var U, Q, Z2 = this.content = new To.Container({ style: false });
          this.addChild(Z2), Z2.mask = G, y || (U = new createjs.Shape()), 0 < s5 && (Q = new createjs.Shape(), this.addChild(Q));
          var K = T2 ? 0 : c2;
          function J() {
            N.setBounds(0, 0, a, l), V.graphics.c().f(o2).rc(0, 0, a, l, K, K, c2, c2), b != -1 && 0 < v && (V.shadow = new createjs.Shadow(b, 4, 4, v)), 0 < s5 && (c2 ? Q.graphics.c().s(e3).ss(s5, "square", "miter").rc(0, 0, a, l, K, K, c2, c2) : Q.graphics.c().s(e3).ss(s5, "square", "miter").dr(0, 0, a, l)), zot(ge) || (ge = T2.backing.widthOnly = N.width, N.setBounds(0, -B, N.width, l + B)), N.close && (T2 ? M.pos({ x: a - Math.max(c2 / 2, 10) - M.width / 2, y: B / 2, reg: true }) : M.pos(Math.max(c2 / 2, 10) / 2, M.height / 2, true, false, N)), N.fullSize && (L.pos({ x: a - Math.max(c2 / 2, 10) - L.width / 2, y: B / 2, reg: true }), N.close && L.mov(-M.width - 10));
          }
          J();
          var $, ee, te, oe, ne, re, ie, ae, le, se, ce, ue, de, he, ge, pe, fe, me, ze, ye, be, ve = this.scrollBar = {};
          function we() {
            be.loc(0, 0, N).top().alp(0.01).mov(N.width, N.height - (N.titleBar ? N.titleBar.height : 0));
          }
          function Ce(e4) {
            e4.align == "right" ? (e4.x = w, e4.resize(N.width - (ae ? ve.size + 2 * ve.spacing : w) - 2 * w)) : (e4.align == "center" || e4.align, e4.resize(N.width - (ae ? ve.size + 2 * ve.spacing : 0) - 2 * w)), e4.alpha = e4.wrapperLastAlpha;
          }
          function xe(e4) {
            zot(ke) && (ke = N.stage || zimDefaultFrame.stage), zot(e4) && (e4 = true), e4 ? To.dragBoundary(Z2, new createjs.Rectangle(0, 0, ie ? -N.scrollXMax : 0, ae ? -N.scrollYMax : 0)) : To.dragBoundary(Z2, new createjs.Rectangle(-1e3, -1e3, ke.width + 2e3, ke.height + 2e3));
          }
          ve.color = t2, ve.size = 6, ve.minSize = 2 * ve.size, ve.spacing = 3.5 + s5 / 2, ve.margin = 0, ve.corner = ve.size / 2, ve.showTime = 0.5, ve.fadeTime = 3, d && ($ = ve.horizontal = new To.Shape({ style: false }), ee = $.graphics, $.alpha = r2, this.addChild($), h2 && $.drag({ localBounds: true }), te = ve.vertical = new To.Shape({ style: false }), oe = te.graphics, te.alpha = r2, this.addChild(te), h2 && te.drag({ localBounds: true })), this.update = function() {
            d && (ee.clear(), oe.clear()), le = d ? ve.size + 2 * ve.spacing : 0, se = Z2.getBounds() ? Z2.getBounds().width : 0, ce = Z2.getBounds() ? Z2.getBounds().height : 0, ie = g && a - w < se && (d || u === true || u == "auto" || u == "horizontal"), ae = p && l - C < ce && (d || u === true || u == "auto" || u == "vertical"), N.scrollXMax = se + 2 * w - a + (ae ? le + ve.margin : 0), N.scrollYMax = ce + 2 * C - l + (ie ? le + ve.margin : 0), q.clear();
            var e4 = s5 / 2, t3 = s5 / 2, o3 = a - (ae && d ? ve.size + 2 * ve.spacing : 0) - (ae ? 0 : s5), n2 = l - (ie && d ? ve.size + 2 * ve.spacing : 0) - (ie ? 0 : s5);
            q.f("rgba(0,0,0,0)").rc(e4, t3, o3, n2, K, K, ae && d ? 0 : c2, ie && d ? 0 : c2), G.setBounds(N.getBounds().x, N.getBounds().y, N.getBounds().width, N.getBounds().height), To.expand(G, 0), y || (U.graphics.c().f("red").dr(e4, t3, o3, n2), Z2.hitArea = U);
            var r3, i3, e4 = Math.max(c2, Math.min(ve.corner, ve.spacing)), t3 = e4 + s5 / 2, o3 = e4 + (ae ? le : 0) + s5 / 2, n2 = e4 + s5 / 2, e4 = e4 + (ie ? le : 0) + s5 / 2;
            ie && d && (r3 = Math.max(ve.minSize, (a - t3 - o3) * (a - t3 - o3) / (se + w + ve.margin)), ee.f(ve.color).rr(0, 0, r3, ve.size, ve.corner), $.x = t3, $.y = l - ve.size - ve.spacing, ne = new To.Proportion(-N.scrollXMax, 0, t3, a - r3 - o3, -1), h2 && ($.setBounds(0, 0, r3, ve.size), i3 = new createjs.Rectangle(t3, $.y, a - r3 - t3 - o3, 0), $.dragBoundary(i3), $.proportion = new To.Proportion(i3.x, i3.x + i3.width, 0, -N.scrollXMax), $.off("pressmove", ue), ue = $.on("pressmove", function() {
              N.dispatchEvent("scrolling"), U && (U.x = -Z2.x, U.y = -Z2.y), Z2.x = $.proportion.convert($.x);
            }))), ae && d && (r3 = Math.max(ve.minSize, (l - n2 - e4) * (l - n2 - e4) / (ce + C + ve.margin)), oe.f(ve.color).rr(0, 0, ve.size, r3, ve.corner), te.x = a - ve.size - ve.spacing, te.y = n2, re = new To.Proportion(-N.scrollYMax, 0, n2, l - r3 - e4, -1), h2 && (te.setBounds(0, 0, ve.size, r3), i3 = new createjs.Rectangle(te.x, n2, 0, l - r3 - n2 - e4), te.dragBoundary(i3), te.proportion = new To.Proportion(i3.y, i3.y + i3.height, 0, -N.scrollYMax), te.off("pressmove", de), de = te.on("pressmove", function() {
              N.dispatchEvent("scrolling"), U && (U.x = -Z2.x, U.y = -Z2.y), Fe = Z2.y = te.proportion.convert(te.y);
            }))), De(), clearTimeout(N.d2Timeout), N.d2Timeout = setTimeout(function() {
              $ && $.proportion && (Z2.x = $.proportion.convert($.x)), te && te.proportion && (Z2.y = te.proportion.convert(te.y));
            }, 50), clearTimeout(N.dTimeout), N.dTimeout = setTimeout(function() {
              xe();
            }, 300), xe();
          }, this.resize = function(e4, t3) {
            zot(e4) && (e4 = a), zot(t3) && (t3 = l);
            var o3 = 20;
            T2 && (o3 = he.x + he.width + 10), e4 < o3 && (e4 = o3), t3 < 20 && (t3 = 20), a = e4, l = t3, J();
            for (var n2 = 0; n2 < Z2.numChildren; n2++) {
              var r3 = Z2.getChildAt(n2);
              r3.type == "Wrapper" && Ce(r3);
            }
            return N.update(), Fe = Z2.y, k && He.immediate(Fe), N;
          }, zot(T2) || (zot(S2) && (S2 = true), typeof T2 == "string" && (T2 = new To.Label({ text: T2, color: A3, size: W.size != null ? W.size : 20, backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", group: this.group })), he = N.titleBarLabel = T2, zot(P) && (P = "rgba(0,0,0,.2)"), N.titleBar = T2 = new To.Container(a, B, null, null, false).centerReg(N).mov(0, -l / 2 - B / 2), ge = N.titleBar.backing = new To.Rectangle(a + s5, B, P, null, null, [0.95 * c2, 0.95 * c2, 0, 0], true, null, false).center(T2), he.center(T2).pos({ x: Math.max(c2 / 2, Math.max(10, n)), reg: true }), N.regX = 0, N.regY = -B, N.setBounds(0, -B, a, l + B), S2 ? (T2.cursor = "pointer", T2.on("mousedown", function() {
            N.drag({ rect: E, currentTarget: true, onTop: I2 });
          }), T2.on("pressup", function() {
            N.noDrag(false);
          })) : T2.on("mousedown", function() {
          })), M && (zot(O) && (O = "#555"), (M = N.close = new To.Shape(-40, -40, 80, 80, null, false)).graphics.f(O).p("AmJEVIEUkTIkXkWIB4h5IEWEYIETkTIB4B3IkTESIEQERIh4B4IkRkRIkSEVg"), (T2 ? M.centerReg(N).scaleTo(T2, null, 50).pos({ x: a - Math.max(c2 / 2, 10) - M.width / 2, y: B / 2, reg: true }) : M.sca(0.3).pos(Math.max(c2 / 2, 10) / 2, M.height / 2, true, false, N)).expand(40), M.cursor = "pointer", M.expand(), M.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function() {
            var e4 = N.stage;
            N.removeFrom(), N.dispatchEvent("close"), e4 && e4.update();
          })), zot(T2) || L && (zot(_) && (_ = "#555"), L = N.fullSize = new To.Rectangle(80, 80, To.faint, _, 16), pe = new To.Shape().s(_).ss(16).mt(-19.6, -20.6).lt(-19.6, -40).lt(40, -40).lt(40, 20.7).lt(19.6, 20.7).lt(19.6, 40).lt(-40, 40).lt(-40, -20.6).lt(-19.6, -20.6).lt(19.6, -20.6).lt(19.6, 20.7).addTo(N.fullSize).mov(40, 40).alp(0), L.centerReg(N).scaleTo(T2, null, 42).pos({ x: a - Math.max(c2 / 2, 10) - L.width / 2, y: B / 2, reg: true }).expand(40), N.close && L.mov(-M.width - 10), L.cursor = "pointer", L.expand(), N.fullCheck = false, fe = a, me = l, ze = N.x, ye = N.y, L.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function() {
            N.fullCheck ? (N.resize(fe, me - T2.height), N.x = ze, N.y = ye, N.fullCheck = false, pe.alpha = 0, N.fullSize.getChildAt(0).alpha = 1) : (fe = N.width, me = N.height, ze = N.x, ye = N.y, N.resize(N.parent.width, N.parent.height), N.x = 0, N.y = 0, N.fullCheck = true, pe.alpha = 1, N.fullSize.getChildAt(0).alpha = 0.01), N.stage && N.stage.update();
          })), Y && ((be = N.resizeHandle = new To.Rectangle(25, 25, To.grey, To.white).alp(0.01).centerReg().rot(45).hov(0.5).loc(0, 0, N).mov(N.width, N.height - (N.titleBar ? N.titleBar.height : 0)).drag()).on("pressmove", function() {
            N.resize(be.x, be.y);
          }), be.on("pressup", we), N.titleBar && N.titleBar.on("pressup", we)), this.add = function(e4, t3) {
            if (Ve(e4), e4.getBounds())
              return t3 && N.removeAll(), Z2.addChild(e4), e4.type == "Wrapper" && (te.alpha = 0, g = false, e4.wrapperLastAlpha = e4.alpha, e4.alpha = 0, this.added(function() {
                Ce(e4), N.resize(), $.alpha = 1, te.alpha = 1;
              })), e4.x == 0 && (e4.x = w), e4.y == 0 && (e4.y = C), N.update(), N;
            zog("SwipeBox.add() - please add content with bounds set");
          }, this.remove = function(e4) {
            return Z2.removeChild(e4), N.update(), N;
          };
          var ke, Te, Ae, Pe, Be, Se, Ee, Ie, Me, Oe, je, Le, _e = !(this.removeAll = function() {
            return Z2.removeAllChildren(), N.update(), N;
          });
          function Ye() {
            Fe = Z2.y, k && He.immediate(Fe), d && De();
          }
          function De() {
            N.dispatchEvent("scrolling"), U && (U.x = -Z2.x, U.y = -Z2.y), ie && d && ($.x = ne.convert(Z2.x)), ae && d && (te.y = re.convert(Z2.y));
          }
          function Xe(e4) {
            zot(e4) && (e4 = 100), Ve(N), u && setTimeout(function() {
              Z2 && (To.drag({ obj: Z2, currentTarget: true, localBounds: true, slide: f3, slideDamp: m2, slideSnap: !((!g || u !== true && u != "auto" && u != "horizontal") && (!p || u !== true && u != "auto" && u != "vertical")) && z }), Z2.removeAllEventListeners("slidestart"), Z2.on("slidestart", function() {
                N.dispatchEvent("slidestart");
              }), Z2.removeAllEventListeners("slidestop"), Z2.on("slidestop", function(e5) {
                f3 && Re(), N.dispatchEvent("slidestop");
              }), Z2.getBounds() && 0 < Z2.getBounds().width && xe());
            }, e4);
          }
          function Re(e4) {
            To.Ticker.remove(Ye), _e = false, ie && i2 && d && To.animate($, { alpha: 0 }, ve.fadeTime), ae && i2 && d && To.animate(te, { alpha: 0 }, ve.fadeTime);
          }
          function We() {
            if (!Z2.stage)
              return Le || (N.dispatchEvent("hoverout"), Le = true), void To.Ticker.remove(We);
            Math.abs(Se - N.windowMouseX) > je || Math.abs(Ee - N.windowMouseY) > je ? (Le || (N.dispatchEvent("hoverout"), Le = true), Be = Date.now(), Se = N.windowMouseX, Ee = N.windowMouseY) : Date.now() - Be > Oe && ((Math.abs(Ie - N.windowMouseX) > je || Math.abs(Me - N.windowMouseY) > je) && (N.contentMouse = Z2.globalToLocal(N.windowMouseX, N.windowMouseY), N.dispatchEvent("hoverover"), Ie = N.windowMouseX, Me = N.windowMouseY, Le = false), Be = Date.now());
          }
          u && Z2.on("mousedown", function() {
            _e || To.Ticker.add(Ye, Z2.stage), _e = true, ie && d && i2 && To.animate($, { alpha: r2 }, ve.showTime), ae && d && i2 && To.animate(te, { alpha: r2 }, ve.showTime);
          }), this.on("added", function() {
            Xe(50);
          }, null, true), this.cancelCurrentDrag = function() {
            N.content && N.content.noDrag(false), setTimeout(function() {
              Z2 && (To.drag({ obj: Z2, currentTarget: true, localBounds: true, slide: f3, slideDamp: m2, slideSnap: !((!g || u !== true && u != "auto" && u != "horizontal") && (!p || u !== true && u != "auto" && u != "vertical")) && z }), Z2.getBounds() && 0 < Z2.getBounds().width && xe());
            }, 300);
          }, this.added(function(e4) {
            Te = (ke = e4).on("stagemousemove", function(e5) {
              N.windowMouseX = e5.stageX / To.scaX, N.windowMouseY = e5.stageY / To.scaY;
            });
          }), f3 ? Z2.on("slidestop", Re) : Z2.on("mousedown", function() {
            Z2.stage.on("stagemouseup", Re, null, true);
          }), j && (N.blurEvent = function() {
            N.cancelCurrentDrag(), Re();
          }, document.window.addEventListener("blur", N.blurEvent)), y && (Z2.on("mousedown", function(e4) {
            ke = e4.target.stage, Ae = e4.stageX / To.scaX, Pe = Date.now();
          }), Z2.on("click", function(e4) {
            Date.now() - Pe < 600 && Math.abs(e4.stageX / To.scaX - Ae) < 5 && (N.contentMouse = Z2.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY), N.dispatchEvent("select"));
          }), Z2.on("mouseover", function() {
            Be = Date.now(), To.Ticker.add(We, Z2.stage);
          }), Z2.on("mouseout", function() {
            Le || (N.dispatchEvent("hoverout"), Le = true);
            To.Ticker.remove(We);
          }), Me = Ie = Ee = Se = 0, Oe = 300, Le = !(je = 2));
          var Fe = N.scrollY;
          N.scrollWindow = function(e4) {
            var t3;
            ae && N.stage && N.hitTestPoint(N.windowMouseX, N.windowMouseY) && N.contains(N.stage.getObjectUnderPoint(N.windowMouseX * To.scaX, N.windowMouseY * To.scaY)) && (zot(e4) && (e4 = event), zot(t3 = e4.detail ? -19 * e4.detail : e4.wheelDelta) && (t3 = -19 * e4.deltaY), Fe += t3, Fe = Math.max(-N.scrollYMax, Math.min(0, Fe)), k || (N.scrollY = Fe, Z2.stage.update()));
          }, x2 && (window.addEventListener("mousewheel", N.scrollWindow), window.addEventListener("wheel", N.scrollWindow), window.addEventListener("DOMMouseScroll", N.scrollWindow));
          var He, Ne = false;
          function Ve(e4) {
            k && !Ne && e4.stage && (Ne = true, He = new To.Damp(N.scrollY, k), N.dampTicker = To.Ticker.add(function() {
              _e || zot(Fe) || (N.scrollY = He.convert(Fe));
            }, e4.stage));
          }
          this._enabled = true, Object.defineProperty(N, "enabled", { get: function() {
            return N._enabled;
          }, set: function(e4) {
            e4 ? Xe() : (clearTimeout(N.dTimeout), To.noDrag(Z2)), Ge(N, e4);
          } }), this._scrollEnabled = true, Object.defineProperty(N, "scrollEnabled", { get: function() {
            return N._scrollEnabled;
          }, set: function(e4) {
            e4 ? (Xe(), h2 && (ue && ($.mouseEnabled = true), de && (te.mouseEnabled = true)), window.addEventListener("mousewheel", N.scrollWindow), window.addEventListener("wheel", N.scrollWindow), window.addEventListener("DOMMouseScroll", N.scrollWindow)) : (clearTimeout(N.dTimeout), To.noDrag(Z2), h2 && (ue && ($.mouseEnabled = false), de && (te.mouseEnabled = false)), window.removeEventListener("mousewheel", N.scrollWindow), window.removeEventListener("wheel", N.scrollWindow), window.removeEventListener("DOMMouseScroll", N.scrollWindow)), N._scrollEnabled = e4;
          } }), Object.defineProperty(N, "scrollX", { get: function() {
            return Z2.x;
          }, set: function(e4) {
            Z2.x = e4, clearTimeout(N.d2Timeout), Z2.zimDragImmediate && Z2.zimDragImmediate(Z2.x, Z2.y), De();
          } }), Object.defineProperty(N, "scrollY", { get: function() {
            return Z2.y;
          }, set: function(e4) {
            Z2.y = e4, clearTimeout(N.d2Timeout), Z2.zimDragImmediate && Z2.zimDragImmediate(Z2.x, Z2.y), De();
          } }), Object.defineProperty(N, "backgroundColor", { get: function() {
            return o2;
          }, set: function(e4) {
            o2 = e4, J();
          } }), D !== false && To.styleTransforms(this, W), this.clone = function(e4) {
            zot(e4) && (e4 = true);
            var t3 = N.cloneProps(new To.Window(a, l, o2, F2, H, n, c2, u, d, h2, ve.color, r2, i2, g, p, f3, m2, z, y, b, v, w, C, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, D, X, R));
            return e4 && (N.content.cloneChildren(t3.content), t3.update()), t3;
          }, this.doDispose = function(e4, t3, o3) {
            return x2 && (window.removeEventListener("mousewheel", N.scrollWindow), window.removeEventListener("wheel", N.scrollWindow), window.removeEventListener("DOMMouseScroll", N.scrollWindow)), Te && ke && ke.off("stagemousemove", Te), N.resizeHandle && N.resizeHandle.removeAllEventListeners(), N.blurEvent && document.window.removeEventListener("blur", N.blurEvent), To.Ticker.remove(We), zot(Ye) || To.Ticker.remove(Ye), o3 || this.zimContainer_dispose(true), !(Z2 = N.content = null);
          };
        }, To.extend(To.Window, To.Container, ["clone", "dispose"], "zimContainer", false), To.Window.prototype.dispose = function(e3) {
          return this.doDispose(null, null, e3);
        }, To.Page = function(o2, n, r2, i2, a, l, s5, c2, u, d, h2) {
          if (t2 = zob(To.Page, arguments, "width, height, color, color2, vertical, pattern, scalePattern, cache, style, group, inherit", this))
            return t2;
          z_d("58.3"), this.group = d;
          var e3 = u === false ? {} : To.getStyle("Page", this.group, h2);
          zot(o2) && (o2 = (e3.width != null ? e3 : zdf).width), zot(n) && (n = (e3.height != null ? e3 : zdf).height), this.zimContainer_constructor(0, 0, o2, n, false), this.type = "Page";
          var g = this;
          zot(a) && (a = e3.vertical == null || e3.vertical), zot(r2) && (r2 = e3.color != null ? e3.color : To.light), zot(i2) && (i2 = e3.color2 != null ? e3.color2 : null), zot(l) && (l = e3.pattern != null ? e3.pattern : null), zot(s5) && (s5 = e3.scalePattern != null ? e3.scalePattern : "fill"), zot(c2) && (c2 = e3.cache != null && e3.cache), zot(i2) || (r2 = new To.GradientColor([r2, i2], [0, 1], 0, 0, a ? 0 : o2, a ? n : 0), i2 = null);
          var t2 = this.backing = new To.Rectangle({ width: o2, height: n, color: r2, style: false }).addTo(this);
          !zot(c2) || zot(i2) && zot(l) || (c2 = true), c2 && t2.cache(), zot(l) || (this.pattern = l.addTo(this), s5 && l.scaleTo(this, 100, 100, s5).center(this), c2 && l.cache()), Object.defineProperty(g, "color", { get: function() {
            return r2;
          }, set: function(e4) {
            zot(e4) && (e4 = "black"), r2 = e4, g.backing.color = e4;
          } }), u !== false && To.styleTransforms(this, e3), this.clone = function(e4) {
            zot(e4) && (e4 = false), r2.type && (i2 = null);
            var t3 = g.cloneProps(new To.Page(o2, n, r2, i2, a, l, s5, c2, u, d, h2));
            return e4 && g.cloneChildren(t3), t3;
          };
        }, To.extend(To.Page, To.Container, ["clone"], "zimContainer", false), To.Layer = function(e3, t2, n, l, s5, c2, o2, r2, u, d, i2, a, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B) {
          if (Y = zob(To.Layer, arguments, "width, height, titleBar, titleBarContainer, backgroundColor, rollBackgroundColor, selectedBackgroundColor, selectedRollBackgroundColor, color, rollColor, selectedColor, selectedRollColor, borderWidth, borderColor, dashed, transformObject, titleBarWidth, titleBarHeight, titleBarX, titleBarY, titleBarDraggable, close, closeColor, closeBackgroundColor, closeIndicatorColor, anchor, style, group, inherit", this))
            return Y;
          z_d("58.5"), this.group = P;
          var S2 = A3 === false ? {} : To.getStyle("Layer", this.group, B);
          zot(e3) && (e3 = S2.width != null ? S2.width : 500), zot(t2) && (t2 = S2.height != null ? S2.height : 500), this.zimContainer_constructor(0, 0, e3, t2, false), this.type = "Layer";
          var E = this;
          E.distX = 40, E.distY = 0, zot(n) && (n = S2.titleBar != null ? S2.titleBar : "LAYER");
          var I2 = n, M = n, O = true;
          zot(s5) && (s5 = S2.backgroundColor != null ? S2.backgroundColor : "#eee"), zot(c2) && (c2 = S2.rollBackgroundColor != null ? S2.rollBackgroundColor : "#fff"), zot(o2) && (o2 = S2.selectedBackgroundColor != null ? S2.selectedBackgroundColor : "#666"), zot(u) && (u = S2.color != null ? S2.color : "#666"), zot(d) && (d = S2.rollColor != null ? S2.rollColor : "#666"), zot(i2) && (i2 = S2.selectedColor != null ? S2.selectedColor : "#ddd"), zot(h2) && (h2 = S2.borderWidth != null ? S2.borderWidth : 1), zot(g) && (g = S2.borderColor != null ? S2.borderColor : s5), (g < 0 || h2 < 0) && (g = h2 = null), zot(p) && (p = S2.dashed == null || S2.dashed), zot(f3) && (f3 = S2.titleBar != null ? S2.titleBar : null), zot(m2) && (m2 = S2.titleBarWidth != null ? S2.titleBarWidth : 100);
          var j = m2;
          if (zot(z) && (z = S2.titleBarHeight != null ? S2.titleBarHeight : 40), zot(y) && (y = S2.titleBarX != null ? S2.titleBarX : null), zot(b) && (b = S2.titleBarY != null ? S2.titleBarY : null), zot(v) && (v = S2.titleBarDraggable == null || S2.titleBarDraggable), zot(w) && (w = S2.close == null || S2.close), zot(C) && (C = S2.closeColor != null ? S2.closeColor : o2), zot(x2) && (x2 = S2.closeBackgroundColor != null ? S2.closeBackgroundColor : o2), zot(k) && (k = S2.closeIndicatorColor != null ? S2.closeIndicatorColor : i2), zot(T2) && (T2 = S2.anchor == null || S2.anchor), v || (T2 = false), E.anchor = T2, w && (m2 += 30), f3 = To.merge({ borderColor: o2 }, f3, { events: true, visible: false, ghostColor: g, ghostWidth: h2, ghostDashed: p, ghostHidden: true }), zot(l) && (l = S2.titleBarContainer != null ? S2.titleBarContainer : null), zot(l)) {
            if (!zdf)
              return void zog("zim Layer(): Please pass in a reference to a container with bounds set.");
            l = zdf.stage;
          }
          var L;
          E.active = false, E.turnOff = function(e4, t3) {
            E.active = false, w && (E.checkBox.visible = false), E.transformControls.remove(), E.mouseChildren = true, E.button.backgroundColor = s5, E.button.rollBackgroundColor = c2, E.button.color = u, E.button.rollColor = u, E.transformControls.allowToggleOff(), E.resizeChildren && E.resizeChildren();
          }, E.turnOn = function() {
            E.active = true, w && (E.checkBox.visible = true, E.checkBox.checked = true), E.button.backgroundColor = o2, E.button.rollBackgroundColor = o2, E.button.color = i2, E.button.rollColor = i2, E.mouseChildren = false, E.transformControls.add(), E.transformControls.allowToggleOn();
          }, E.titleBarPos = function(e4, t3) {
            if (E.titleBar)
              return E.titleBar.pos ? (E.titleBar.pos(e4, t3, arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]), L.update()) : (E.distX = e4, E.distY = t3), O = false, E;
          };
          var _ = E.visible;
          E.visible = false;
          var Y = Ao();
          this.added(function(a2) {
            L = a2, E.transform(f3), 0 <= h2 && E.transformControls.hideGhost(), setTimeout(function() {
              E.visible = _, 0 <= h2 && setTimeout(function() {
                E.transformControls.showGhost(), E.stage && E.stage.update();
              }, 100), L = a2;
              var e4, t3, r3 = E.titleBar = new To.Container(m2, z).reg(0, z).loc(E, null, l).mov(E.distX, E.distY);
              function o3(e5) {
                var t4, o4, n3;
                O && v && (t4 = l.localToLocal(r3.x - E.distX, r3.y - E.distY, E.parent), o4 = E.localToLocal(E.regX, E.regY, E.parent), n3 = E.localToLocal(0, 0, E.parent), E.x = t4.x + (o4.x - n3.x), E.y = t4.y + (o4.y - n3.y), E.transformControls.resize(e5), i3(E));
              }
              function i3(e5) {
                e5.loop(function(e6) {
                  e6.type == "Layer" && (E.titleBarDraggable && e6.move(), e6.transformControls.ghost && e6.transformControls.resize(), i3(e6));
                });
              }
              function n2() {
                return r3.x == 0 || (r3.y == r3.height || (r3.x == l.width - r3.width || r3.y == l.height));
              }
              v && r3.drag({ all: true, boundary: new To.Boundary(0, z, l.width - m2, l.height - z), localBounds: true }), E.distX == 40 && E.distY == 0 || r3.pos(E.distX, E.distY), w && (E.checkBox = new To.CheckBox({ borderColor: C, backgroundColor: x2, indicatorColor: k, size: 20, startChecked: true }).center(r3).pos(0, null, true).change(function() {
                E.turnOff(true, true);
              }), E.checkBox.visible = false), r3.mouseChildren = true, (r3.layer = E).resetTitleBar = function() {
                E.distX = 40, E.distY = 0, O = true, E.move(true), E.stage && E.stage.update();
              }, typeof M != "string" && typeof M != "number" || (M = new To.Label({ text: M, color: u, rollColor: d, size: S2.size != null ? S2.size : 18, group: this.group })), E.label = M, E.label.center(r3), E.button = new To.Button({ shadowBlur: -1, width: j, height: z - 1, label: E.label, color: u, rollColor: d, backgroundColor: s5, rollBackgroundColor: c2, corner: S2.corner != null ? S2.corner : 0, inherit: To.copy(S2) }).addTo(r3), E.button.on("mousedown", function() {
                l.loop(function(e5) {
                  e5 && e5 != r3 && e5.layer && e5.layer.turnOff && e5.layer.active && e5.layer.turnOff(true, true);
                }), E.active || E.turnOn(), r3.top();
              }), E.button.on("pressmove", function() {
                o3();
              }), E.button.on("pressup", function() {
                o3(true);
                var e5 = E.localToLocal(0, 0, l);
                E.distX = r3.x - e5.x, E.distY = r3.y - e5.y, r3.top(), !n2() && v && (e5 = E.localToGlobal(0, 0), E.button.hitTestPoint(e5.x, e5.y) && E.resetTitleBar());
              }), E.button.on("dblclick", function() {
                v && E.resetTitleBar();
              }), E.turnOff(), E.on("transformed", function(e5) {
                e5.transformType != "move" && e5.transformType != "size" && e5.transformType != "stretch" && e5.transformType != "rotate" || (v && E.move(), i3(E));
              }), E.move = function(e5) {
                !e5 && !O && E.anchor && n2() || (r3.loc(E.localToLocal(0, 0, l)).mov(E.distX, E.distY), r3.x < 0 && (O = false, r3.x = 0), r3.y < r3.height && (O = false, r3.y = r3.height), r3.x > l.width - r3.width && (O = false, r3.x = l.width - r3.width), r3.y > l.height && (O = false, r3.y = l.height), E.anchor || (O = true));
              }, E.on("transformhide", function() {
                E.turnOff(true, true), l.loop(function(e5) {
                  e5 && e5 != r3 && e5.layer && e5.layer.turnOff && e5.layer.active && e5.layer.turnOff();
                });
              }), E.resizeChildren = function(e5) {
                E.transformControls.resize(e5), E.loop(function(e6) {
                  e6.transformControls && (e6.transformControls.visible && e6.transformControls.hide(), e6.type == "Layer" ? e6.resizeChildren() : e6.transformControls.resize());
                });
              }, E.resize = function(e5) {
                return E.move(), E.resizeChildren(e5), E;
              }, E.toggled = false, E.toggle = function(e5) {
                return zot(e5) ? E.toggled = !E.toggled : E.toggled = e5, E.toggled ? (l.loop(function(e6) {
                  e6 && e6 != r3 && e6.layer && e6.layer.turnOff && e6.layer.active && e6.layer.turnOff();
                }), E.turnOn()) : (r3.top(), E.turnOff(), l.loop(function(e6) {
                  e6 && e6 != r3 && e6.layer && e6.layer.turnOff && e6.layer.active && e6.layer.turnOff();
                })), E.stage && E.stage.update(), E;
              }, Object.defineProperty(E, "titleBarDraggable", { get: function() {
                return v;
              }, set: function(e5) {
                (v = e5) ? r3.drag({ all: true, boundary: To.Boundary(0, 40, l.width - m2, l.height - z), localBounds: true }) : r3.noDrag(false);
              } }), E.stageUpEvent = L.on("stagemouseup", function() {
                E.transformControls.visible && r3.top();
              }), zot(y) && zot(b) || (O = false, e4 = zot(y) ? r3.x : y, t3 = zot(b) ? r3.y - z : b, E.titleBarStartX = y, E.titleBarStartY = b, E.titleBarPos(e4, t3), t3 = E.parent.localToLocal(E.x, E.y, l), E.distX = r3.x - t3.x, E.distY = r3.y - t3.y);
            });
          }, Y == "s" ? 0.05 : 50), A3 !== false && To.styleTransforms(this, S2), this.clone = function() {
            return E.cloneProps(new To.Layer(e3, t2, I2, l, s5, c2, o2, r2, u, d, i2, a, h2, g, p, f3, j, z, y, b, v, w, C, x2, k, T2, A3, this.group, B));
          }, this.dispose = function(e4, t3, o3) {
            return E.stageUpEvent && L.off("stagemouseup", E.stageUpEvent), l && l.loop(function(e5) {
              e5.layer = null;
            }), E.transformControls.dispose(), E.transformControls = null, o3 || this.zimContainer_dispose(true), E.titleBar.layer = null, E.titleBar.dispose(), E.checkBox = E.button = null, !(n = E.titleBar = f3 = null);
          };
        }, To.extend(To.Layer, To.Container, ["clone", "dispose"], "zimContainer", false), To.Waiter = function(a, l, e3, t2, o2, n, r2, s5, i2, c2, u) {
          if (z = zob(To.Waiter, arguments, "container, speed, foregroundColor, backgroundColor, corner, shadowColor, shadowBlur, fadeTime, style, group, inherit", this))
            return z;
          z_d("59"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Waiter", this.group = c2;
          var d = i2 === false ? {} : To.getStyle(this.type, this.group, u), h2 = Ao(l);
          zot(l) && (l = d.speed != null ? d.speed : h2 == "s" ? 0.6 : 600), zot(e3) && (e3 = d.foregroundColor != null ? d.foregroundColor : "white"), zot(t2) && (t2 = d.backgroundColor != null ? d.backgroundColor : "orange"), zot(o2) && (o2 = d.corner != null ? d.corner : 16), zot(n) && (n = d.shadowColor != null ? d.shadowColor : "rgba(0,0,0,.3)"), zot(r2) && (r2 = d.shadowBlur != null ? d.shadowBlur : 14), zot(s5) && (s5 = d.fadeTime != null ? d.fadeTime : 0);
          this.setBounds(-52, -20, 104, 40);
          var g, p = this, f3 = this.display = new To.Shape({ style: false });
          this.addChild(f3), f3.setBounds(0, 0, 104, 40), f3.regX = 52, f3.regY = 20;
          var m2 = f3.graphics;
          m2.f(t2);
          var z = o2;
          Array.isArray(z) || (z = [o2, o2, o2, o2]), m2.rc(0, 0, 104, 40, z[0], z[1], z[2], z[3]), n != -1 && 0 < r2 && (f3.shadow = new createjs.Shadow(n, 3, 3, r2)), f3.on("click", function(e4) {
            e4.stopImmediatePropagation();
          });
          var y, b = new To.Container({ style: false });
          this.addChild(b);
          for (var v, w = 0; w < 3; w++)
            (y = new createjs.Shape()).graphics.f(e3).dc(0, 0, 12), y.x = 32 * (w - 1), b.addChild(y), y.cache(-12, -12, 24, 24), y.alpha = 0;
          this.hide = function() {
            function e4() {
              var e5;
              p.parent && p.parent.removeChild(p), (g = p.stage) && g.update(), p.zimAccessibility && ((e5 = p.zimAccessibility).resize(p), (v || p.zimTabTag.nextSibling).focus(), setTimeout(function() {
                e5.talk("Waiter has finished.");
              }, 50));
            }
            return 0 < s5 ? p.animate({ obj: { alpha: 0 }, time: s5, call: e4 }) : e4(), p.toggled = false, p;
          };
          var C = [];
          this.show = function() {
            var e4, t3 = "zim display - Waiter(): Please pass in a reference to a container with bounds set as first parameter to Waiter";
            if (zot(a)) {
              if (!zdf)
                return void zog(t3);
              a = zdf.stage;
            } else {
              if (!a.getBounds)
                return void zog(t3);
              if (zot(a.stage))
                return void zog("zim display - Waiter(): The container must have a stage property");
            }
            for (var o3, n2 = 0, r3 = l * (h2 == "s" ? 1e3 : 1), i3 = 0; i3 < b.numChildren; i3++)
              b && C.push(setTimeout(function() {
                e4 = b.getChildAt(n2), createjs.Tween.get(e4, { loop: true }).to({ alpha: 1 }, r3 / 3 / 2).wait(r3 / 3).to({ alpha: 0 }, r3 / 3).wait(r3 - r3 / 3 - r3 / 3 / 2), n2++;
              }, i3 * r3 / 3));
            return p.ticker = createjs.Ticker.on("tick", function() {
              a.stage.update();
            }), p.x = a.getBounds().width / 2, p.y = a.getBounds().height / 2, a.addChild(p), 0 < s5 && (p.alpha = 0, p.animate({ alpha: 1 }, s5)), p.zimAccessibility && (o3 = p.zimAccessibility, setTimeout(function() {
              o3.activatedObject && (v = o3.activatedObject.zimTabTag);
            }, 50), o3.resize(p), o3.talk(p.zimTabTag.getAttribute("aria-label"))), p.toggled = true, p;
          }, !(p.toggle = function(e4) {
            return e4 !== true && (e4 === false || p.parent) ? p.hide() : p.show(), p;
          }) !== i2 && To.styleTransforms(this, d), this.clone = function() {
            return p.cloneProps(new To.Waiter(a, l, e3, t2, o2, n, r2, s5, i2, this.group, u));
          }, this.dispose = function(e4, t3, o3) {
            p.ticker && createjs.Ticker.off("tick", p.ticker), createjs.Tween.removeTweens(p), p.removeFrom();
            for (var n2 = 0; n2 < b.numChildren; n2++) {
              var r3 = b.getChildAt(n2);
              clearInterval(C[n2]), createjs.Tween.removeTweens(r3);
            }
            return o3 || this.zimContainer_dispose(true), true;
          };
        }, To.extend(To.Waiter, To.Container, ["clone", "dispose"], "zimContainer", false), To.ProgressBar = function(t2, o2, n, r2, i2, a, l, e3, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v) {
          if (T2 = zob(To.ProgressBar, arguments, "barType, foregroundColor, backgroundColor, borderColor, borderWidth, padding, label, color, labelPosition, percentage, corner, shadowColor, shadowBlur, backing, delay, fastClose, container, autoHide, style, group, inherit", this))
            return T2;
          z_d("59.5"), this.zimContainer_constructor(null, null, null, null, false), this.type = "ProgressBar", this.group = b;
          var w = y === false ? {} : To.getStyle(this.type, this.group, v);
          zot(o2) && (o2 = w.foregroundColor != null ? w.foregroundColor : "#acd241"), zot(n) && (n = w.backgroundColor != null ? w.backgroundColor : "#444"), zot(r2) && (r2 = w.borderColor != null ? w.borderColor : n), zot(i2) && (i2 = w.borderWidth != null ? w.borderWidth : null), zot(s5) && (s5 = w.labelPosition != null ? w.labelPosition : "bottom"), zot(t2) && (t2 = w.barType != null ? w.barType : "circle"), zot(a) && (a = w.padding != null ? w.padding : t2 == "circle" ? 2 : -0.5), zot(u) && (u = w.corner != null ? w.corner : 15), zot(d) && (d = w.shadowColor != null ? w.shadowColor : "rgba(0,0,0,.3)"), zot(h2) && (h2 = w.shadowBlur != null ? w.shadowBlur : 14), zot(g) && (g = w.backing != null ? w.backing.clone() : null), zot(f3) && (f3 = w.fastClose == null || w.fastClose), r2 < 0 || i2 < 0 ? r2 = i2 = null : r2 != null && i2 == null && (i2 = t2 == "circle" ? 10 : 2);
          var C = Ao(p);
          zot(p) && (p = w.delay != null ? w.delay : C == "s" ? 0.1 : 100), zot(z) && (z = w.autoHide == null || w.autoHide), zot(l) && (l = w.label != null ? w.label : null), zot(e3) && (e3 = w.color != null ? w.color : o2), typeof l != "string" && typeof l != "number" || (l = new To.Label({ text: l, color: e3, backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", group: this.group }));
          l && l.text, !zot(c2) && zot(l) && (l = new To.Label("")), this.label = l;
          var x2, k, T2, A3, P, B, S2 = 30, E = this, I2 = 0;
          function M(e4) {
            var t3, o3;
            return E.backing ? (t3 = E.getChildIndex(E.backing), E.removeChild(E.backing)) : t3 = E.numChildren, E.border && E.removeChild(E.border), zot(e4) || e4.type != "Pattern" ? e4 = E.backing = (zot(e4) ? new To.Rectangle(x2, S2, n, r2, i2, u, null, null, false) : g).addTo(E, t3) : (o3 = e4, ((e4 = E.backing = new To.Rectangle(x2, S2, n, null, null, u, null, null, false).addTo(E, t3)).pattern = o3).center(e4), e4.getBounds(), o3.setMask(e4.shape), i2 && (E.border = new To.Rectangle(x2, S2, "rgba(0,0,0,0)", r2, i2, u, null, null, false).addTo(E, t3 + 1))), e4;
          }
          function O(e4) {
            t2 == "circle" ? A3.graphics.c().mt(0, 0).s(o2).ss(i2 - 2 * a + 0.5).a(0, 0, x2, 0, 360 * e4 / 100 * Math.PI / 180) : (P.sca(e4 / 100, 1), A3.setMask(P)), zot(c2) || (l.text = l.startText + " " + Math.min(Math.round(e4), 100) + "%"), z && f3 && 100 <= Math.round(e4) && (E.timeOut = setTimeout(function() {
              E.hide();
            }, 200)), !E.dispatched && 100 <= Math.round(e4) && (E.dispatchEvent("complete"), E.dispatched = true, setTimeout(function() {
              E && (E.dispatched = false);
            }, 100)), E.stage && E.stage.update();
          }
          E.visible = false, setTimeout(function() {
            E.visible = true, E.stage && E.stage.update();
          }, p), t2 == "circle" ? (x2 = 20, g = this.backing = new To.Circle(x2, "rgba(0,0,0,0)", n, i2, null, null, null, null, false).addTo(E), A3 = this.bar = new To.Shape({ style: false }).addTo(E).loc(g.x, g.y).rot(-90)) : (x2 = 200, d != -1 && 0 < h2 && (new To.Rectangle(x2 - 2, S2 - 2, n, null, null, u, null, null, false).addTo(this).shadow = new createjs.Shadow(d, 3, 3, h2)), g = M(g), k = u, Array.isArray(k) || (k = [u, u, u, u]), T2 = 1.2 * (a + i2 / 2), A3 = this.bar = new To.Rectangle(x2 - 1.8 * (a + i2 / 2), S2 - 1.8 * (a + i2 / 2), o2, null, null, [k[0] - T2, k[1] - T2, k[2] - T2, k[3] - T2], null, null, false).center(this), P = this.mask = new To.Rectangle(x2 - 1.8 * (a + i2 / 2), S2 - 1.8 * (a + i2 / 2), null, null, null, null, null, null, false).center(this).alp(0).sca(0, 1), A3.setMask(P)), E.setBacking = function(e4) {
            M(e4), E.stage && E.stage.update();
          }, g.on("click", function(e4) {
            e4.stopImmediatePropagation();
          }), zot(l) || (l.scaleX = l.scaleY = 0.8, l.startText = l.text, zot(c2) || (l.text = l.startText + "  0%"), l.center(E), s5 == "above" ? l.y -= 60 : l.y += 60, l.alpha = 0.8), this.hide = function() {
            var e4, t3 = E.stage;
            return E.parent && E.parent.removeChild(E), E.backing.type == "Pattern" && E.backing.pauseInterval && E.backing.pauseInterval(), t3 && t3.update(), E.zimAccessibility && ((e4 = E.zimAccessibility).resize(E), (B || E.zimTabTag.nextSibling).focus(), setTimeout(function() {
              e4.talk("Progress Bar has finished.");
            }, 50)), E.toggled = false, E;
          }, this.show = function() {
            var e4, t3 = "zim display - ProgressBar(): Please pass in a reference to a container with bounds set as first parameter of the ProgressBar";
            if (zot(m2)) {
              if (!zdf)
                return void zog(t3);
              m2 = zdf.stage;
            } else {
              if (!m2.getBounds)
                return void zog(t3);
              if (zot(m2.stage))
                return void zog("zim display - Waiter(): The container must have a stage property");
            }
            return E.timeOut && clearTimeout(E.timeOut), O(0), E.zimActiveLoader && E.zimActiveLoader.on("progress", function(e5) {
              O(I2 = 100 * e5.progress);
            }), E.center(m2), E.backing.type == "Pattern" && E.backing.pauseInterval && E.backing.pauseInterval(false), E.zimAccessibility && (e4 = E.zimAccessibility, setTimeout(function() {
              e4.activatedObject && (B = e4.activatedObject.zimTabTag);
            }, 50), e4.resize(E), e4.talk(E.zimTabTag.getAttribute("aria-label"))), E.toggled = true, E;
          }, E.toggle = function(e4) {
            return e4 !== true && (e4 === false || E.parent) ? E.hide() : E.show(), E;
          }, E.run = function(e4, t3) {
            zot(t3) || (z = t3), zot(e4) && (e4 = C == "s" ? 3 : 3e3), Po(e4, C);
            var o3 = e4 * (C == "s" ? 1e3 : 1);
            E.toggle(true), E.runInterval && clearInterval(E.runInterval), E.percent = 0;
            var n2 = Date.now();
            return E.runInterval = setInterval(function() {
              E.percent = (Date.now() - n2) / o3 * 100, 100 <= E.percent && (E.percent = 100, clearInterval(E.runInterval));
            }, 30), E;
          }, E.dispatched = false, Object.defineProperty(E, "percent", { get: function() {
            return I2;
          }, set: function(e4) {
            O(I2 = e4);
          } }), y !== false && To.styleTransforms(this, w), this.clone = function() {
            return E.cloneProps(new To.ProgressBar(t2, o2, n, r2, i2, a, l, e3, s5, c2, u, d, h2, g, p, f3, m2, z, y, this.group, v));
          }, this.dispose = function(e4, t3, o3) {
            return E.backing.type == "Pattern" && E.backing.clearInterval && E.backing.clearInterval(), E.runInterval && clearInterval(E.runInterval), o3 || this.zimContainer_dispose(true), true;
          };
        }, To.extend(To.ProgressBar, To.Container, ["clone", "dispose"], "zimContainer", false), To.Indicator = function(e3, t2, n, r2, i2, o2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b) {
          if (k = zob(To.Indicator, arguments, "width, height, num, foregroundColor, backgroundColor, borderColor, borderWidth, backdropColor, corner, indicatorType, fill, scale, lightScale, interactive, shadowColor, shadowBlur, selectedIndex, style, group, inherit", this))
            return k;
          z_d("60"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Indicator", this.group = y;
          var v = z === false ? {} : To.getStyle(this.type, this.group, b);
          zot(e3) && (e3 = v.width != null ? v.width : 300), zot(t2) && (t2 = v.height != null ? v.height : 50), zot(n) && (n = v.num != null ? v.num : 6), zot(r2) && (r2 = v.foregroundColor != null ? v.foregroundColor : "#f58e25"), zot(i2) && (i2 = v.backgroundColor != null ? v.backgroundColor : "#666"), i2 < 0 && (i2 = v.backgroundColor != null ? v.backgroundColor : "rgba(0,0,0,.01)"), zot(o2) && (o2 = v.borderColor != null ? v.borderColor : null), zot(a) && (a = v.borderWidth != null ? v.borderWidth : null), o2 < 0 || a < 0 ? o2 = a = null : o2 != null && a == null && (a = 1), zot(l) && (l = v.backdropColor != null ? v.backdropColor : -1), zot(s5) && (s5 = v.corner != null ? v.corner : 0), zot(c2) && (c2 = v.indicatorType != null ? v.indicatorType : "dot"), zot(u) && (u = v.fill != null && v.fill), zot(d) && (d = v.scale != null ? v.scale : 1), zot(h2) && (h2 = v.lightScale != null ? v.lightScale : 1), zot(g) && (g = v.interactive != null && v.interactive), zot(p) && (p = v.shadowColor != null ? v.shadowColor : "rgba(0,0,0,.3)"), zot(f3) && (f3 = v.shadowBlur != null ? v.shadowBlur : 5);
          var w, C = (zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", x2 = this;
          this.lights = [];
          var k;
          new To.Container({ style: false });
          l != -1 && (k = x2.backdrop = new To.Rectangle(e3, t2, l, o2, a, s5, null, null, false), this.addChild(k));
          var T2, A3 = this.lightsContainer = new To.Container({ style: false });
          this.addChild(A3);
          var P = 0.5 * t2, B = e3 / (n + 1), S2 = new createjs.Shape();
          c2 == "square" || c2 == "box" ? S2.graphics.f("black").dr(-B / 2 / h2 + P / 2, -t2 / 2 + P / 2, B / h2, t2) : S2.graphics.f("black").dr(-B / 2 / h2, -t2 / 2, B / h2, t2);
          for (var E = 0; E < n; E++)
            c2 == "square" || c2 == "box" ? ((T2 = new To.Rectangle(P, P, i2, o2, a, null, null, null, false)).regX = T2.width / 2, T2.regY = T2.height / 2) : T2 = new To.Circle(P / 2, i2, o2, a, null, null, null, null, false), this.lights.push(T2), T2.znum = E, T2.scaleX = T2.scaleY = h2, T2.hitArea = S2, T2.x = B + B * E, T2.y = t2 / 2, A3.addChild(T2);
          function I2(e4) {
            var t3;
            n <= e4 && (e4 = -1);
            for (var o3 = 0; o3 < n; o3++)
              t3 = o3 == e4 ? r2 : u && o3 < e4 ? r2 : i2, A3.getChildAt(o3).color = t3;
            x2.zimAccessibility && x2.zimAccessibility.changeTitle(x2), To.OPTIMIZE || !zns && OPTIMIZE || !x2.stage || x2.stage.update();
          }
          A3.setBounds(0, 0, e3, t2), A3.regX = A3.x = e3 / 2, A3.regY = A3.y = t2 / 2, this.addChild(A3), p != -1 && 0 < f3 && (A3.shadow = new createjs.Shadow(p, 2, 2, f3)), g && (A3.cursor = "pointer", A3.on(C, function(e4) {
            w != e4.target.znum && (I2(w = e4.target.znum), x2.dispatchEvent("change"));
          })), A3.scaleX = A3.scaleY = d, Object.defineProperty(this, "selectedIndex", { get: function() {
            return w;
          }, set: function(e4) {
            w = Math.floor(e4), I2(w = To.constrain(w, -1, n - 1));
          } }), Object.defineProperty(this, "num", { get: function() {
            return n;
          }, set: function(e4) {
            zon && zogy("Indicator() - num is read only");
          } }), this._enabled = true, Object.defineProperty(x2, "enabled", { get: function() {
            return x2._enabled;
          }, set: function(e4) {
            Ge(x2, e4);
          } }), zot(m2) && (m2 = v.selectedIndex != null ? v.selectedIndex : 0), x2.selectedIndex = m2, z !== false && To.styleTransforms(this, v), this.clone = function() {
            return x2.cloneProps(new To.Indicator(e3, t2, n, r2, i2, o2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, this.group, b));
          };
        }, To.extend(To.Indicator, To.Container, "clone", "zimContainer", false), To.TextInput = function(t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, e3, _) {
          if (R = zob(To.TextInput, arguments, "width, height, placeholder, text, size, font, color, backgroundColor, borderColor, borderWidth, maxLength, password, selectionColor, selectionAlpha, cursorColor, cursorSpeed, shadowColor, shadowBlur, align, corner, padding, paddingHorizontal, paddingVertical, shiftHorizontal, shiftVertical, multiline, wrap, scrollBarActive, scrollBarDrag, scrollBarColor, scrollBarAlpha, scrollBarFade, scrollBarH, scrollBarV, style, group, inherit", this))
            return R;
          z_d("54.2"), this.group = e3;
          var Y = L === false ? {} : To.getStyle("TextInput", this.group, _);
          zot(i2) && (i2 = Y.size != null ? Y.size : 36), !zot(w) && w != "ignore" || (w = Y.padding != null && w != "ignore" ? Y.padding : 5), zot(C) && (C = Y.paddingHorizontal != null ? Y.paddingHorizontal : w), zot(x2) && (x2 = Y.paddingVertical != null ? Y.paddingVertical : w), zot(t2) && (t2 = Y.width != null ? Y.width : 300), zot(o2) && (o2 = Y.height != null ? Y.height : i2 + 2 * x2), zot(n) && (n = Y.placeholder != null ? Y.placeholder : null), zot(r2) && (r2 = Y.text != null ? Y.text : ""), zot(a) && (a = Y.font != null ? Y.font : "arial"), zot(l) && (l = Y.color != null ? Y.color : To.dark), zot(s5) && (s5 = Y.backgroundColor != null ? Y.backgroundColor : To.lighter), zot(c2) && (c2 = Y.borderColor != null ? Y.borderColor : null), zot(u) && (u = Y.borderWidth != null ? Y.borderWidth : null);
          var D = function() {
            return arguments;
          }(t2, o2, n, r2, l, s5, c2);
          t2 = To.Pick.choose(t2), o2 = To.Pick.choose(o2), n = To.Pick.choose(n), r2 = To.Pick.choose(r2), l = To.Pick.choose(l), s5 = To.Pick.choose(s5), c2 = To.Pick.choose(c2), zot(g) && (g = Y.selectionColor != null ? Y.selectionColor : l), zot(p) && (p = Y.selectionAlpha != null ? Y.selectionAlpha : 0.2), zot(f3) && (f3 = Y.cursorColor != null ? Y.cursorColor : l), zot(m2) && (m2 = Y.cursorSpeed != null ? Y.cursorSpeed : 0.5), zot(z) && (z = Y.shadowColor != null ? Y.shadowColor : "rgba(0,0,0,.3)"), zot(y) && (y = Y.shadowBlur != null ? Y.shadowBlur : 20), zot(b) && (b = Y.align != null ? Y.align : "left"), zot(v) && (v = Y.corner != null ? Y.corner : 0), zot(k) && (k = Y.shiftHorizontal != null ? Y.shiftHorizontal : 0), zot(h2) && (h2 = Y.password != null && Y.password), zot(T2) && (T2 = Y.shiftVertical != null ? Y.shiftVertical : h2 ? 0.25 * i2 : 0), zot(d) && (d = Y.maxLength != null ? Y.maxLength : null), zot(A3) && (A3 = Y.multiline != null && Y.multiline), zot(P) && (P = Y.wrap != null && Y.wrap), zot(B) && (B = Y.scrollBarActive != null && Y.scrollBarActive), zot(S2) && (S2 = Y.scrollBarDrag != null && Y.scrollBarDrag), zot(E) && (E = Y.scrollBarColor != null ? Y.scrollBarColor : c2), zot(I2) && (I2 = Y.scrollBarAlpha != null ? Y.scrollBarAlpha : 0.3), zot(M) && (M = Y.scrollBarFade == null || Y.scrollBarFade), zot(O) && (O = Y.scrollBarH == null || Y.scrollBarH), zot(j) && (j = Y.scrollBarV == null || Y.scrollBarV), S2 && (M = Y.scrollBarFade != null && Y.scrollBarFade), this.zimWindow_constructor(t2, o2, s5, c2, u, w, v, false, B, S2, E, I2, M, O, j, false, null, false, true, z, y, C, x2, true, null, null, null, null, null, false, null, null, null, null, null, false, null, false, L, e3, To.copy(Y)), this.type = "TextInput";
          var X = this;
          this.placeholderLabel = new To.Label({ text: n || "", size: i2, color: l }).alp(0.5), r2 == "" && this.add(this.placeholderLabel);
          var R = new Rectangle(t2 - 2 * w, o2 - 2 * w, To.clear).center(this);
          this.cursor = "text";
          var W = this.label = new To.TextInput.LabelInput(r2, i2, d, h2, g, p, f3, m2, a, l, null, null, null, b, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, k, T2, null, null, null, d, null, L, e3, _);
          this.add(W), W.setMask(R), this.htmlTag = this.label.hiddenInput, this.selection = this.label.selection, this.blinker = this.label.blinker, b == "right" && (W.x = t2 - W.width, this.placeholderLabel.x = t2 - this.placeholderLabel.width - C);
          R = new Rectangle(w, o2, To.clear).addTo(this).expand(0);
          R.on("mousedown", function(e4) {
            W.onMousedown(e4), e4.stopImmediatePropagation();
          }), R.on("pressmove", function(e4) {
            W.onPressmove(e4), e4.stopImmediatePropagation();
          }), R.on("dblclick", function(e4) {
            W.onDblclick(e4), e4.stopImmediatePropagation();
          });
          R = new Rectangle(w, o2, To.clear).pos(0, 0, RIGHT, TOP, this).expand(0);
          R.on("mousedown", function(e4) {
            W.onMousedown(e4), e4.stopImmediatePropagation();
          }), R.on("pressmove", function(e4) {
            W.onPressmove(e4), e4.stopImmediatePropagation();
          }), R.on("dblclick", function(e4) {
            W.onDblclick(e4), e4.stopImmediatePropagation();
          });
          var F2 = "";
          this.on("mousedown", function(e4) {
            W.onMousedown(e4), F2 = W.text;
          }), this.on("pressmove", function(e4) {
            W.onPressmove(e4), e4.stopImmediatePropagation();
          }), this.on("dblclick", function(e4) {
            W.onDblclick(e4), e4.stopImmediatePropagation();
          }), this.added(function(e4) {
            e4.on("stagemousedown", function(e5) {
              X.hitTestPoint(e5.stageX, e5.stageY) || (W.focus = false, W.text != F2 && X.dispatchEvent("change"), F2 = W.text);
            });
          }), this.label.on("focus", function() {
            X.dispatchEvent("focus");
          }), this.label.on("blur", function() {
            X.dispatchEvent("blur");
          }), this.label.on("input", function() {
            W.text != "" && X.placeholderLabel.parent && (X.placeholderLabel.removeFrom(), X.stage && X.stage.update()), W.text != "" || X.placeholderLabel.parent || (X.add(X.placeholderLabel), X.stage && X.stage.update()), X.dispatchEvent("input");
          }), this.label.on("keydown", function() {
            X.dispatchEvent("keydown");
          }), this.label.on("blinker", function() {
            var e4 = W.x + W.blinker.x;
            newX = To.constrain(e4, C, t2 - C - W.blinker.width), e4 != newX && (W.x -= e4 - newX), X.stage && X.stage.update();
          }), Object.defineProperty(X, "text", { get: function() {
            return W.hiddenInput.value;
          }, set: function(e4) {
            W.setText(e4), To.OPTIMIZE || !zns && OPTIMIZE || !X.stage || X.stage.update();
          } }), Object.defineProperty(X, "focus", { get: function() {
            return W.focus;
          }, set: function(e4) {
            W.focus = e4;
          } }), Object.defineProperty(X, "color", { get: function() {
            return W.color;
          }, set: function(e4) {
            W.color = e4, To.OPTIMIZE || !zns && OPTIMIZE || !X.stage || X.stage.update();
          } }), Object.defineProperty(X, "size", { get: function() {
            return W.size;
          }, set: function(e4) {
            W.size = e4, W.hiddenInput.style.fontSize = e4 + "px", To.OPTIMIZE || !zns && OPTIMIZE || !X.stage || X.stage.update();
          } }), Object.defineProperty(X, "align", { get: function() {
            return W.align;
          }, set: function(e4) {
            e4 == "center" && (e4 = "left"), b = W.align = e4, W.x = b == "right" ? t2 - W.width : 0, To.OPTIMIZE || !zns && OPTIMIZE || !X.stage || X.stage.update();
          } }), Object.defineProperty(X, "font", { get: function() {
            return W.font;
          }, set: function(e4) {
            W.font = e4, To.OPTIMIZE || !zns && OPTIMIZE || !X.stage || X.stage.update();
          } }), Object.defineProperty(X, "selectionAlpha", { get: function() {
            return W.selectionAlpha;
          }, set: function(e4) {
            W.selectionAlpha = e4, W.selection.alpha != 0 && (W.selection.alpha = e4), To.OPTIMIZE || !zns && OPTIMIZE || !X.stage || X.stage.update();
          } }), To.styleTransforms(this, Y), this.clone = function(e4) {
            return X.cloneProps(e4 || !To.isPick(D[0]) ? t2 : D[0], e4 || !To.isPick(D[1]) ? o2 : D[1], e4 || !To.isPick(D[2]) ? n : D[2], e4 || !To.isPick(D[3]) ? r2 : D[3], i2, a, e4 || !To.isPick(D[4]) ? l : D[4], e4 || !To.isPick(D[5]) ? s5 : D[5], e4 || !To.isPick(D[6]) ? c2 : D[6], u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, this.group, _);
          };
        }, To.extend(To.TextInput, To.Window, "clone", "zimWindow", false), To.TextInput.LabelInput = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, o2, _, Y, D, X) {
          this.zimLabel_constructor(e3, t2, s5, c2, null, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, null, j, L, null, _, Y, D, X), this.type = "LabelInput", zot(c2) && (c2 = To.dark), zot(r2) && (r2 = c2), zot(i2) && (i2 = 0.2), this.selectionAlpha = i2, zot(a) && (a = c2), zot(l) && (l = 0.5), this.hiddenInput = document.createElement("INPUT"), this.hiddenInput.value = e3, this.hiddenInput.type = n ? "password" : "text", 0 < o2 && (this.hiddenInput.maxLength = o2), this.hiddenInput.autocapitalize = "off", this.hiddenInput.autocorrect = "off", this.hiddenInput.autocomplete = "off", this.hiddenInput.spellcheck = false, this.hiddenInput.style.position = "absolute", this.hiddenInput.style.overflow = "hidden", this.hiddenInput.style.left = "-99999px", this.hiddenInput.style.top = "-99999px", this.hiddenInput.style.zIndex = -999, this.hiddenInput.style.opacity = 0, this.hiddenInput.style.width = "1px", this.hiddenInput.style.height = "1px", this.hiddenInput.style.fontSize = "1px", this.onFocus = function() {
            R.zil && window.removeEventListener("keydown", R.zil[0]), this.blinker.alp(1).replayTween(), this.selection.alp(0.2), this.positionBlinkerAndSelection(), this.dispatchEvent("focus");
          }, this.onBlur = function() {
            R.zil && window.addEventListener("keydown", R.zil[0]), this.positionBlinkerAndSelection(), this.blinker.pauseAnimate(true).alp(0), this.selection.alp(0), this.dispatchEvent("blur");
          }, this.onInput = function() {
            this.text = this.hiddenInput.type == "text" ? this.hiddenInput.value : this.hiddenInput.value.replace(/./g, "*"), this.measureText(), this.positionBlinkerAndSelection(), this.dispatchEvent("input");
          }, this.onSelect = function() {
            this.positionBlinkerAndSelection(), this.focus && this.blinker.replayTween();
          };
          var R, W = this;
          this.onKeydown = function() {
            this.blinker.replayTween(), setTimeout(function() {
              W.positionBlinkerAndSelection.call(W), W.dispatchEvent("keydown");
            }, 10);
          }, this.onMousedown = function(e4) {
            this.focus || this.hiddenInput.focus();
            e4 = this.eventPositionGlobalToLocal(e4), e4 = this.mapPointToIndex(e4);
            this.hiddenInput.setSelectionRange(e4, e4), this.positionBlinkerAndSelection();
          }, this.onPressmove = function(e4) {
            this.focus || this.hiddenInput.focus();
            e4 = this.eventPositionGlobalToLocal(e4), e4 = this.mapPointToIndex(e4);
            this.hiddenInput.selectionStart === this.hiddenInput.selectionEnd ? this.hiddenInput.selectionStart <= e4 ? this.hiddenInput.setSelectionRange(this.hiddenInput.selectionStart, e4, "forward") : this.hiddenInput.setSelectionRange(e4, this.hiddenInput.selectionEnd, "backward") : this.hiddenInput.selectionDirection === "forward" ? this.hiddenInput.setSelectionRange(this.hiddenInput.selectionStart, e4, "forward") : this.hiddenInput.setSelectionRange(e4, this.hiddenInput.selectionEnd, "backward"), this.positionBlinkerAndSelection();
          }, this.onDblclick = function() {
            this.hiddenInput.select(), this.positionBlinkerAndSelection();
          }, this.positionBlinkerAndSelection = function() {
            var e4, t3, o3, n2;
            this.focus && (e4 = this.backing || this.background ? this.paddingHorizontal : 0, t3 = this.backing || this.background ? this.paddingVertical : 0, this.hiddenInput.selectionStart !== this.hiddenInput.selectionEnd ? (n2 = this.textWidthArray[this.hiddenInput.selectionStart], o3 = this.textWidthArray[this.hiddenInput.selectionEnd], this.selection.widthOnly = o3 - n2, this.selection.heightOnly = this.textHeight, this.selection.pos(n2 + e4 - 1, t3), this.selection.alp(this.selectionAlpha)) : this.selection.alp(0), this.blinker.heightOnly = this.textHeight, n2 = this.hiddenInput.selectionDirection === "backward" ? this.hiddenInput.selectionStart : this.hiddenInput.selectionEnd, this.blinker.pos(this.textWidthArray[n2] + e4 - 1 + (g == "right" && this.text == "" ? this.width : 0), t3), this.dispatchEvent("blinker")), this.stage && this.stage.update();
          }, this.eventPositionGlobalToLocal = function(e4) {
            e4 = this.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY);
            return e4.x -= g == "right" ? this.label.x - this.width : this.label.x, e4.y -= this.label.y, e4;
          }, this.mapPointToIndex = function(e4) {
            for (var t3 = this.textWidthArray.length - 1, o3 = 0; o3 < this.textWidthArray.length - 1; o3++) {
              var n2 = (this.textWidthArray[o3] + this.textWidthArray[o3 + 1]) / 2;
              if (e4.x <= n2) {
                t3 = o3;
                break;
              }
            }
            return t3;
          }, this.measureText = function() {
            for (var e4 = this.label.clone(), t3 = 0; t3 < this.text.length && t3 < this.previousMeasuredText.length && this.text[t3] === this.previousMeasuredText[t3]; )
              t3++;
            for (this.textWidthArray = this.textWidthArray.slice(0, t3 + 1), t3++; t3 <= this.text.length; t3++)
              e4.text = this.text.slice(0, t3), this.textWidthArray.push(e4.getMeasuredWidth());
            this.previousMeasuredText = this.text, this.textHeight = e4.getMeasuredLineHeight();
          }, this.setText = function(e4) {
            this.hiddenInput.value = e4, this.onInput();
          }, Object.defineProperty(this, "focus", { get: function() {
            return document.activeElement === W.hiddenInput;
          }, set: function(e4) {
            e4 === true ? W.hiddenInput.focus() : W.hiddenInput.blur();
          } }), this.added(function(e4) {
            R = e4.frame, W.hiddenInput.addEventListener("focus", W.onFocus.bind(W)), W.hiddenInput.addEventListener("blur", W.onBlur.bind(W));
          }), this.hiddenInput.addEventListener("input", this.onInput.bind(this)), this.hiddenInput.addEventListener("select", this.onSelect.bind(this)), this.hiddenInput.addEventListener("keydown", this.onKeydown.bind(this)), document.body.appendChild(this.hiddenInput), this.on("mousedown", this.onMousedown.bind(this)), this.on("pressmove", this.onPressmove.bind(this)), this.on("dblclick", this.onDblclick.bind(this)), this.cursor = "text", this.blinker = new To.Rectangle(2, 1, a).animate({ obj: { alpha: 0 }, wait: l, time: 0.1, rewind: true, rewindWait: l, loop: true, loopWait: l }).pauseAnimate(true).alp(0).addTo(this), this.selection = new To.Rectangle(1, 1, r2).alp(0).addTo(this), this.textWidthArray = [0], this.previousMeasuredText = "", this.textHeight = null, this.measureText();
        }, To.extend(To.TextInput.LabelInput, To.Label, null, "zimLabel", false), To.List = function(r2, o2, n, e3, i2, t2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, D, X, R, W, F2, H, N, V, G, q, U, Q, Z2, K, J, $, ee, te, oe, ne, re, ie, ae, le, se, ce, ue, de) {
          if (ge = zob(To.List, arguments, "width, height, list, viewNum, vertical, currentSelected, align, valign, labelAlign, labelValign, labelIndent, labelIndentHorizontal, labelIndentVertical, indent, spacing, backgroundColor, rollBackgroundColor, selectedBackgroundColor, selectedRollBackgroundColor, backdropColor, color, rollColor, selectedColor, selectedRollColor, borderColor, borderWidth, padding, corner, swipe, scrollBarActive, scrollBarDrag, scrollBarColor, scrollBarAlpha, scrollBarFade, scrollBarH, scrollBarV, scrollBarOverlay, slide, slideDamp, slideSnap, shadowColor, shadowBlur, paddingHorizontal, paddingVertical, scrollWheel, damp, titleBar, titleBarColor, titleBarBackgroundColor, titleBarHeight, draggable, boundary, onTop, close, closeColor, excludeCustomTap, organizer, checkBox, pulldown, clone, cancelCurrentDrag, selectedIndex, noScale, style, group, inherit", this))
            return ge;
          z_d("60.5"), this.group = ue;
          var he = ce === false ? {} : To.getStyle("List", this.group, de);
          zot(r2) && (r2 = he.width != null ? he.width : 300), zot(o2) && (o2 = he.height != null ? he.height : zot(oe) ? 200 : 200 + oe.height), zot(n) && (n = he.list != null ? he.list : ["Option 1", "Option 2", "Option 3", "Option 4", "Option 5", "Option 6", "Option 7", "Option 8", "Option 9", "Option 10"]), n.length == 0 && (n = ["%-&"]), this.originalList = n, zot(e3) && (e3 = he.viewNum != null ? he.viewNum : 5), zot(i2) && (i2 = he.vertical == null || he.vertical), zot(t2) && (t2 = he.currentSelected == null || he.currentSelected);
          var ge = !zot(a) || !zot(s5);
          zot(ne) && (ne = he.checkBox != null && he.checkBox), zot(a) && (a = he.align != null ? he.align : ne ? "left" : "center"), zot(l) && (l = he.valign != null ? he.valign : "center"), zot(s5) && (s5 = he.labelAlign != null ? he.labelAlign : a), zot(c2) && (c2 = he.labelValign != null ? he.labelValign : l), zot(g) && (g = he.indent != null ? he.indent : ne ? 0 : 10), zot(u) && (u = he.labelIndent != null ? he.labelIndent : g), zot(d) && (d = he.labelIndentHorizontal != null ? he.labelIndentHorizontal : u), zot(h2) && (h2 = he.labelIndentVertical != null ? he.labelIndentVertical : u), zot(p) && (p = he.spacing != null ? he.spacing : 2), zot(b) && (b = he.backdropColor != null ? he.backdropColor : "#333"), zot(f3) && (f3 = he.backgroundColor != null ? he.backgroundColor : "#777"), zot(m2) && (m2 = he.rollBackgroundColor != null ? he.rollBackgroundColor : "#555"), zot(z) && (z = he.selectedBackgroundColor != null ? he.selectedBackgroundColor : "#444"), zot(y) && (y = he.selectedRollBackgroundColor != null ? he.selectedRollBackgroundColor : "#555"), zot(v) && (v = he.color != null ? he.color : "white"), zot(w) && (w = he.rollColor != null ? he.rollColor : v), zot(C) && (C = he.selectedColor != null ? he.selectedColor : v), zot(x2) && (x2 = he.selectedRollColor != null ? he.selectedRollColor : w), zot(b) && (b = he.backdropColor != null ? he.backdropColor : b);
          var pe = k, fe = T2;
          zot(k) && (k = he.borderColor != null ? he.borderColor : "#999"), zot(T2) && (T2 = he.borderWidth != null ? he.borderWidth : 1), zot(A3) && (A3 = he.padding != null ? he.padding : p), zot(P) && (P = he.corner != null ? he.corner : 0), zot(B) && (B = he.swipe == null || he.swipe), zot(S2) && (S2 = he.scrollBarActive == null || he.scrollBarActive), zot(E) && (E = he.scrollBarDrag == null || he.scrollBarDrag), zot(I2) && (I2 = he.scrollBarColor != null ? he.scrollBarColor : k), zot(M) && (M = he.scrollBarAlpha != null ? he.scrollBarAlpha : 0.3), zot(O) && (O = he.scrollBarFade == null || he.scrollBarFade), zot(j) && (j = he.scrollBarH != null ? he.scrollBarH : !i2), zot(L) && (L = he.scrollBarV != null ? he.scrollBarV : i2), E && (O = he.scrollBarFade != null && he.scrollBarFade), zot(_) && (_ = he.scrollBarOverlay == null || he.scrollBarOverlay), zot(Y) && (Y = he.slide == null || he.slide), zot(D) && (D = he.slideDamp != null ? he.slideDamp : 0.6), zot(X) && (X = he.slideSnap != null ? he.slideSnap : i2 ? "vertical" : "horizontal"), zot(R) && (R = he.shadowColor != null ? he.shadowColor : "rgba(0,0,0,.3)"), zot(W) && (W = he.shadowBlur != null ? he.shadowBlur : 20), zot(H) && (H = he.paddingVertical != null ? he.paddingVertical : A3), zot(F2) && (F2 = he.paddingHorizontal != null ? he.paddingHorizontal : A3), zot(N) && (N = he.scrollWheel == null || he.scrollWheel), zot(G) && (G = he.titleBar != null ? he.titleBar : null), zot(q) && (q = he.titleBarColor != null ? he.titleBarColor : null), zot(U) && (U = he.titleBarBackgroundColor != null ? he.titleBarBackgroundColor : null), zot(Q) && (Q = he.titleBarHeight != null ? he.titleBarHeight : 35), zot(Z2) && (Z2 = he.draggable != null ? he.draggable : null), zot(K) && (K = he.boundary != null ? he.boundary : null), zot(J) && (J = he.onTop != null ? he.onTop : null), zot($) && ($ = he.close != null ? he.close : null), zot(ee) && (ee = he.closeColor != null ? he.closeColor : null), zot(te) && (te = he.excludeCustomTap != null && he.excludeCustomTap), zot(ne) && (ne = he.checkBox != null && he.checkBox), zot(re) && (re = he.pulldown != null && he.pulldown), zot(se) && (se = he.noScale != null && he.noScale), zot(ie) && (ie = he.clone != null && he.clone), G === false && (G = null), this.vertical = i2;
          var me = this, ze = o2;
          ne && To.loop(n, function(e4, t3) {
            n[t3] = To.List.checkItem(e4, null, r2, "left", 10, 10, p, v, w, C, x2, f3, m2, z, y);
          });
          var ye, be, ve, we, Ce, xe, ke, Te, Ae, Pe = Ao();
          n.constructor == {}.constructor && (be = zot(n.shade) ? zot(he.shade) ? 0.2 : he.shade : n.shade, ve = zot(n.dim) ? zot(he.dim) ? 0.1 : he.dim : n.dim, we = zot(n.shift) ? zot(he.shift) ? 15 : he.shift : n.shift, Ce = zot(n.bloom) ? !zot(he.bloom) && he.bloom : n.bloom, xe = zot(n.whither) ? !zot(he.whither) && he.whither : n.whither, ke = zot(n.open) ? !zot(he.open) && he.open : n.open, Te = zot(n.expander) ? zot(he.expander) ? "plus" : he.expander : n.expander, expender = Te.toLowerCase(), Te == "arrows" && (Te = "arrow"), Te != "none" && Te != "arrow" && (Te = "plus"), Ce === true && (Ce = Pe == "s" ? 0.01 : 10), xe === true && (xe = Pe == "s" ? 0.01 : 10), Po(Ce), Po(xe), we === true && (we = 15), be === true && (be = 0.2), ve === true && (ve = 0.1), Ae = zot(n.subStyles) ? zot(he.subStyles) ? {} : he.subStyles : n.subStyles, zot(n.menu) || (n = n.menu), ye = new To.Hierarchy(n, ke), ke && ye.data && ye.data.id0 && (ye.data.id0.open = false), n = ye.getLinearList(), ge || (a = s5 = "left")), re && (e3 = (zot(ye) ? n : ye).length, o2 = e3 * r2 / 620 * 100 + (e3 + 1) * p + (zot(G) ? 0 : Q), T2 = 0, z = f3, b = To.clear, B = false);
          var Be, Se = 0, Ee = 0;
          To.loop(n, function(e4) {
            e4.type == "ListItem" && (e4.width = r2 - 2 * p), se && (e4.width && (Se += e4.width), e4.height && (Ee += e4.height));
          }), Se && (Se += p * (n.length - 1)), Ee && (Ee += p * (n.length - 1)), this.align = a, this.valign = l, this.indent = g, zot(oe) || (o2 -= oe.height, ((oe.list = me).organizer = oe).setButtons(), Q += oe.height), this.zimWindow_constructor(r2, o2, b, k, T2, A3, P, B, S2, E, I2, M, O, j, L, Y, D, X, true, R, W, F2, H, N, V, G, q, U, Q, Z2, K, J, $, ee, ae, false, null, false, ce, ue, To.copy(he)), this.type = "List", zot(G) || (this.titleBarLabel.pos(null, Q - 30, null, true), zot(Q) && (Q = 30), o2 -= Q), zot(oe) || oe.addTo(me).loc(0, -oe.height), Se && se ? (me.itemWidth = i2 ? r2 - 2 * F2 - (!S2 || _ ? 0 : 6) : Se / n.length, me.itemHeight = i2 ? Ee / n.length : o2 - 2 * H - (!S2 || _ ? 0 : 6)) : (me.itemWidth = i2 ? r2 - 2 * F2 - (!S2 || _ ? 0 : 6) : (r2 - 2 * F2) / e3, me.itemHeight = i2 ? (o2 - 2 * H) / e3 : o2 - 2 * H - (!S2 || _ ? 0 : 6));
          var Ie, Me, Oe, je = To.copy(he);
          function Le(e4, t3, o3) {
            e4.listZID = t3, e4.label && (be && new To.Rectangle(we * (o3.level + 1), e4.height).alp(be).pos(0, 0, me.align == "right", false, e4), ve && new To.Rectangle(e4.width, e4.height).alp((o3.level + 1) * ve).addTo(e4).bot().ord(1), we && me.align != "center" && (e4.label.x += (me.align == "right" ? -1 : 1) * we * (o3.level + 1)));
            t3 = ye.getData(t3);
            t3.obj = e4, t3.list && !To.isEmpty(t3.list) && (e4.expander = new To.Label({ size: Te == "arrow" ? 22 : 36, text: t3.open ? Te == "arrow" ? "\u25B2" : "-" : Te == "arrow" ? "\u25BC" : "+", align: "center", color: To.convertColor(v, "rgba", 0.6) }).center(e4).alp(Te == "none" ? 0 : 0.7).pos(15, null, me.align != "right").mov(0, t3.open ? -3 : 0));
          }
          function _e() {
            var n2, o3, t3, r3, i3, a2, l2;
            me.selected.expander && ((n2 = ye.getData(me.selected.listZID)).open ? (me.selected.expander && (me.selected.expander.text = Te == "arrow" ? "\u25BC" : "+", me.selected.expander.mov(0, 3)), n2.open = false, o3 = ye.getNextSibling(me.selected.listZID), t3 = zot(o3) ? me.items.length - 1 : To.loop(me.items, function(e4, t4) {
              if (e4.listZID == o3)
                return t4 - 1;
            }), xe ? (l2 = 0, me.enabled = false, To.interval(xe, function(e4) {
              me.removeAt(1, me.selectedIndex + t3 - me.selectedIndex - l2), l2++, e4.total == e4.count + 1 && (me.enabled = true);
            }, t3 - me.selectedIndex, true)) : me.removeAt(t3 - me.selectedIndex, me.selectedIndex + 1)) : (n2.open = true, me.selected.expander && (me.selected.expander.text = Te == "arrow" ? "\u25B2" : "-", me.selected.expander.mov(0, -3)), r3 = ye.getLinearList(n2.list), i3 = ye.getLinearIDs(n2.list), n2.opened ? Array.isArray(r3) && (Ce ? (l2 = 0, me.enabled = false, To.interval(Ce, function(e4) {
              me.addAt(r3[l2], me.selectedIndex + 1 + l2), e4.total == e4.count + 1 && (me.enabled = true), l2++;
            }, r3.length, true)) : me.addAt(r3, me.selectedIndex + 1)) : (n2.opened = true, zot(a2 = Ae[n2.level]) && (a2 = {}), Array.isArray(r3) && (Ce ? (l2 = 0, me.enabled = false, To.interval(Ce, function(e4) {
              me.addAt(r3[l2], me.selectedIndex + 1 + l2, { backgroundColor: a2.backgroundColor, color: a2.color, rollBackgroundColor: a2.rollBackgroundColor, rollColor: a2.rollColor, selectedBackgroundColor: a2.selectedBackgroundColor, selectedColor: a2.selectedColor, selectedRollBackgroundColor: a2.selectedRollBackgroundColor, selectedRollColor: a2.selectedRollColor });
              var t4 = i3[l2], o4 = me.items[me.selectedIndex + 1 + l2];
              Le(o4, t4, n2), o4.label.backgroundColor = To.clear, e4.total == e4.count + 1 && (me.enabled = true), l2++, me.stage && me.stage.update();
            }, r3.length, true)) : (me.addAt(r3, me.selectedIndex + 1, { backgroundColor: a2.backgroundColor, color: a2.color, rollBackgroundColor: a2.rollBackgroundColor, rollColor: a2.rollColor, selectedBackgroundColor: a2.selectedBackgroundColor, selectedColor: a2.selectedColor, selectedRollBackgroundColor: a2.selectedRollBackgroundColor, selectedRollColor: a2.selectedRollColor }), To.loop(i3, function(e4, t4) {
              t4 = me.items[me.selectedIndex + 1 + t4];
              Le(t4, e4, n2), t4.label.backgroundColor = To.clear;
            }))))));
          }
          function Ye(e4) {
            if (i2) {
              var t3 = -(me.itemHeight + p) * e4 + o2 / 2 - me.itemHeight / 2;
              return (me.itemHeight + p) * me.length < o2 && (t3 = 0), 0 < t3 && (t3 = 0), (me.itemHeight + p) * me.length > o2 && t3 < -me.tabs.height + o2 - 2 * H && (t3 = -me.tabs.height + o2 - 2 * H), t3;
            }
            e4 = -(me.itemWidth + p) * e4 + r2 / 2 - me.itemWidth / 2;
            return (me.itemWidth + p) * me.length < r2 && (e4 = 0), 0 < e4 && (e4 = 0), (me.itemWidth + p) * me.length > r2 && e4 < -me.tabs.width + r2 - 2 * F2 && (e4 = -me.tabs.width + r2 - 2 * F2), e4;
          }
          delete je.borderWidth, delete je.borderColor, Ie = To.copy(n, ie), Be = me.tabs = new To.Tabs({ width: i2 ? me.itemWidth : me.itemWidth * n.length, height: i2 ? me.itemHeight * n.length : me.itemHeight, tabs: Ie, spacing: p, vertical: i2, backgroundColor: f3, rollBackgroundColor: m2, selectedBackgroundColor: z, selectedRollBackgroundColor: y, color: v, rollColor: w, selectedColor: C, selectedRollColor: x2, backdropColor: b, currentEnabled: true, currentSelected: t2, align: a, valign: l, labelAlign: s5, labelValign: c2, labelIndent: u, labelIndentHorizontal: d, labelIndentVertical: h2, indent: g, useTap: true, excludeCustomTap: te, keyWrap: false, style: ce, group: ue, inherit: je }).mov(i2 ? 0 : F2, i2 ? H : 0), me.add(Be), To.loop(Be.labels, function(e4) {
            e4 && (e4.backgroundColor = To.clear);
          }), ye && (ge = ye.getLinearIDs(), To.loop(ge, function(e4, t3) {
            me.tabs.buttons[t3].listZID = e4;
          }), To.loop(me.tabs.buttons, function(e4) {
            var t3 = ye.getData(e4.listZID);
            To.isEmpty(t3.list) || (e4.expander = new To.Label({ size: Te == "arrow" ? 22 : 36, text: Te == "arrow" ? "\u25BC" : "+", align: "center", color: To.convertColor(v, "rgba", 0.6) }).center(e4).alp(Te == "none" ? 0 : 0.7).pos(15, null, me.align != "right"));
          }), Me = ke, me.toggle = function(e4) {
            if (zot(e4))
              e4 = !Me;
            else if (e4 == Me)
              return;
            me.selectedIndex = 0, Me = e4, _e();
          }, Object.defineProperty(me, "toggled", { get: function() {
            return Me;
          }, set: function(e4) {
            Me != e4 && me.toggle();
          } }), me.tap(_e)), Be.tap(function(e4) {
            e4.target.selectedIndex != me.selectedIndex && (me.selectedIndex = Be.selectedIndex, me.dispatchEvent("change"), e4.preventDefault());
          }), Be.on("keychange", function(e4) {
            e4.target.selectedIndex != me.selectedIndex && (me.selectedIndex = Be.selectedIndex, setTimeout(function() {
              var e5;
              i2 ? ((e5 = me.selected.y + me.scrollY) < 0 || e5 > me.height - me.selected.height) && me.animateTo(me.selectedIndex, Pe == "ms" ? 100 : 0.1) : ((e5 = me.selected.x + me.scrollX) < 0 || e5 > me.width - me.selected.width) && me.animateTo(me.selectedIndex, Pe == "ms" ? 100 : 0.1);
            }, 100), me.dispatchEvent("change"));
          }), this.getItemIndex = function(e4) {
            return me.items.indexOf(e4);
          }, this.animateTo = function(e4, t3) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0.05);
            var o3, n2 = Ao(t3), e4 = Ye(me.selectedIndex = e4);
            return i2 ? (o3 = Math.abs(me.scrollY - e4) / me.itemHeight, me.animate({ scrollY: e4 }, o3 * t3 / (n2 == "s" ? 1 : 1e3))) : (o3 = Math.abs(me.scrollX - e4) / me.itemWidth, me.animate({ scrollX: e4 }, o3 * t3 / (n2 == "s" ? 1 : 1e3))), me;
          }, this.addAt = function(e4, t3, o3, n2) {
            return zot(e4) || (e4.type == "ListItem" ? e4.width = r2 - 2 * p : Array.isArray(e4) && To.loop(e4, function(e5) {
              e5.type == "ListItem" && (e5.width = r2 - 2 * p);
            }), e4.clone ? me.tabs.addAt(n2 ? e4.clone() : e4, t3, o3) : me.tabs.addAt(To.copy(e4, n2), t3, o3), me.update()), me;
          }, this.removeAt = function(e4, t3) {
            me.tabs.removeAt(e4, t3), Oe = me.tabs.selectedIndex;
            t3 = Be.getBounds();
            return Be.setBounds(0, 0, t3.width, t3.height), me.update(), me;
          }, n[0] == "%-&" && n.length == 1 && me.removeAt(1, 0), this.clear = function() {
            return me.tabs.removeAt(me.length, 0), me.content.x = 0, me.content.y = 0, me.update(), me;
          }, this.setCheck = function(e4, t3) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = true), me.items[e4].checkBox.checked = t3, me.items[e4].content.zimOut();
          }, this.getCheck = function(e4) {
            return zot(e4) && (e4 = 0), me.items[e4].checkBox.checked;
          }, this.setChecks = function(t3) {
            return To.loop(me.items, function(e4) {
              e4.checkBox.checked = t3, e4.content.zimOut();
            }), me;
          }, Object.defineProperty(me, "items", { get: function() {
            return me.tabs.buttons;
          }, set: function(e4) {
            zon && zogy("List() - items is read only - use addAt() and removeAt() to change");
          } }), Object.defineProperty(me, "list", { get: function() {
            return me.tabs.buttons;
          }, set: function(e4) {
            zon && zogy("List() - list is read only - use addAt() and removeAt() to change");
          } }), Object.defineProperty(me, "length", { get: function() {
            return me.tabs.buttons.length;
          }, set: function(e4) {
            zon && zogy("List() - length is read only");
          } }), Object.defineProperty(me, "selectedIndex", { get: function() {
            return Oe;
          }, set: function(e4) {
            Be.selectedIndex = e4, me.label = Be.label, me.selected = Be.selected, Oe = e4, To.OPTIMIZE || !zns && OPTIMIZE || !me.stage || me.stage.update();
          } }), t2 && (me.selectedIndex = 0), Object.defineProperty(me, "selectedIndexPlusPosition", { get: function() {
            return Oe;
          }, set: function(e4) {
            me.selectedIndex = e4, Oe = e4, i2 ? me.scrollY = Ye(e4) - 2 : me.scrollX = Ye(e4), To.OPTIMIZE || !zns && OPTIMIZE || !me.stage || me.stage.update();
          } }), Object.defineProperty(me, "text", { get: function() {
            return me.label ? me.label.text : null;
          }, set: function(e4) {
            me.label && (me.label.text = e4);
          } }), Object.defineProperty(me, "currentValue", { get: function() {
            return me.label ? me.label.text : null;
          }, set: function(n2) {
            var e4 = To.loop(me.list, function(e5, t3) {
              var o3;
              e5.label && (o3 = e5.label.text), e5.type == "Label" && (o3 = e5.text);
              e5 = new RegExp(n2, "i");
              if (o3 && o3.match(e5))
                return t3;
            });
            e4 !== true && (me.selectedIndexPlusPosition = e4);
          } }), Object.defineProperty(me, "itemDown", { get: function() {
            return me.tabs.buttonDown;
          }, set: function(e4) {
          } }), Object.defineProperty(me, "itemsText", { get: function() {
            for (var e4 = [], t3 = 0; t3 < me.tabs.buttons.length; t3++) {
              var o3 = me.tabs.buttons[t3].label;
              o3 && !zot(o3.text) ? e4.push(o3.text) : e4.push(null);
            }
            return e4;
          }, set: function(e4) {
            zon && zogy("List() - itemsText is read only");
          } }), t2 && (me.selectedIndex = 0), Object.defineProperty(me, "checkBoxes", { get: function() {
            for (var e4 = [], t3 = 0; t3 < me.tabs.buttons.length; t3++) {
              var o3 = me.tabs.buttons[t3].checkBox;
              e4.push(o3);
            }
            return e4;
          }, set: function(e4) {
            zon && zogy("List() - checkBoxes is read only");
          } }), Object.defineProperty(me, "accordionIndex", { get: function() {
            var e4 = me.selected.listZID;
            return e4 ? Number(e4.split("id")[1]) : null;
          }, set: function(e4) {
            zon && zogy("List() - accordionIndex is read only");
          } }), this.last = function() {
            return this.selectedIndexPlusPosition = this.length - 1, this;
          }, this.first = function() {
            return this.selectedIndexPlusPosition = 0, this;
          }, ke && _e && (me.selected = me.items[0], _e()), zot(le) && (le = he.selectedIndex != null ? he.selectedIndex : 0), me.selectedIndex = le, ce !== false && To.styleTransforms(this, he), this.clone = function() {
            return me.cloneProps(new To.List(r2, ze, To.copy(me.originalList, true), e3, i2, t2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, pe, fe, A3, To.copy(P), B, S2, E, I2, M, O, j, L, _, Y, D, X, R, W, F2, H, N, V, G, q, U, Q, Z2, K, J, $, ee, te, oe, ne, re, ie, ae, le, se, ce, this.group, de));
          }, this.dispose = function(e4, t3, o3) {
            return o3 || (me.organizer && me.organizer.dispose(), this.zimWindow_dispose()), true;
          };
        }, To.extend(To.List, To.Window, ["clone", "dispose"], "zimWindow", false), To.List.makeBase = function(e3, t2, o2, n) {
          zot(n) && (n = To.dark), e3.backing = new To.Rectangle(e3.width, e3.height, n).center(e3), t2.type == "Label" ? e3.label = t2 : e3.label = new To.Label(t2, null, null, To.white), e3.text = e3.label.text, e3.label.center(e3).loc(o2);
        }, To.List.slider = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2) {
          var g;
          if (g = zob(To.List.slider, arguments, "label, min, max, val, call, step, obj, property, paddingLeft, paddingRight, factor, offset, backgroundColor"))
            return g;
          var p = new To.Container(620, 100);
          return p.type = "ListItem", p.listItem = "Slider", zot(s5) && (s5 = 20), zot(c2) && (c2 = 30), zot(u) && (u = 1), zot(d) && (d = 0), To.List.makeBase(p, e3, s5, h2), p.slider = new To.Slider({ inside: true, barWidth: 40, barLength: 150, barColor: To.blue, min: t2, max: o2, step: i2 }).sca(1.5).center(p).mov(20).change(function() {
            p.stepper.currentValue = d + Math.round(p.slider.currentValue * u), a && l && (a[l] = p.slider.currentValue), r2 && typeof r2 == "function" && r2(p.slider.currentValue, p.parent), p.slider.stage && p.slider.stage.update();
          }), zot(n) || (p.slider.currentValue = n), p.stepper = new To.Stepper({ corner: 0, arrows: false, stepperType: "number", min: d + t2 * u, max: d + o2 * u, step: i2 }).sca(0.5).center(p).pos(c2, null, true).change(function() {
            p.slider.currentValue = p.stepper.currentValue / (u || 1) - d, a && l && (a[l] = p.slider.currentValue), r2 && typeof r2 == "function" && r2(p.slider.currentValue, p.parent), p.stepper.stage && p.stepper.stage.update();
          }), zot(n) || (p.stepper.currentValue = d + n * u), p;
        }, To.List.checkBox = function(e3, t2, o2, n, r2, i2, a, l) {
          var s5;
          if (s5 = zob(To.List.checkBox, arguments, "label, checked, call, obj, property, paddingLeft, paddingRight, backgroundColor"))
            return s5;
          var c2 = new To.Container(620, 100);
          return c2.type = "ListItem", c2.listItem = "CheckBox", zot(i2) && (i2 = 20), zot(a) && (a = 30), To.List.makeBase(c2, e3, i2, l), c2.checkBox = new To.CheckBox({ startChecked: t2, label: "" }).sca(1.2).center(c2).pos(256 + a, null, true).change(function() {
            n && r2 && (n[r2] = c2.checkBox.checked), o2 && typeof o2 == "function" && o2(c2.checkBox.checked, c2.parent), c2.checkBox.stage && c2.checkBox.stage.update();
          }), c2;
        }, To.List.colorPicker = function(e3, t2, o2, n, r2, i2, a, l, s5) {
          var c2;
          if (c2 = zob(To.List.colorPicker, arguments, "label, color, picker, call, obj, property, paddingLeft, paddingRight, backgroundColor"))
            return c2;
          var u = new To.Container(620, 100);
          return u.type = "ListItem", u.listItem = "ColorPicker", zot(a) && (a = 20), zot(l) && (l = 30), To.List.makeBase(u, e3, a, s5), zot(t2) && (t2 = To.pink), u.colorPicker = o2 || new To.ColorPicker({ alphaPicker: false, selectedColor: t2 }), u.swatch = new To.Rectangle(132, 66, t2, To.lighter, 5).center(u).pos(270, null, true).cur(), u.swatch.on("mousedown", function() {
            u.colorPicker.selectedColor = u.swatch.color, u.colorPicker.show();
          }), u.colorLabel = new To.Label(u.swatch.color.toUpperCase(), 40, null, To.light).center(u).pos(l, null, true), u.colorPicker.on("close", function() {
            var e4 = u.colorPicker.stage;
            u.colorPicker.hide(), e4 && e4.update();
          }), u.colorPicker.on("change", function() {
            var e4 = u.colorPicker.stage;
            u.swatch.color = u.colorPicker.selectedColor, u.colorLabel.text = u.swatch.color.toUpperCase(), u.colorPicker.hide(), r2 && i2 && (r2[i2] = u.colorPicker.selectedColor), n && typeof n == "function" && n(u.colorPicker.selectedColor, u.parent), e4 && e4.update();
          }), u;
        }, To.List.checkItem = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2) {
          if (z = zob(To.List.checkItem, arguments, "label, size, width, align, paddingHorizontal, paddingVertical, spacing, color, rollColor, selectedColor, selectedRollColor, backgroundColor, rollBackgroundColor, selectedBackgroundColor, selectedRollBackgroundColor, group, inherit"))
            return z;
          var z = To.getStyle("CheckBox", f3, m2);
          zot(t2) && (t2 = z.size != null ? z.size : 20);
          z = To.getStyle("List", f3, m2);
          zot(o2) && (o2 = 300), zot(r2) && (r2 = 10), zot(i2) && (i2 = 10), zot(n) && (n = z.align != null ? z.align : "center"), zot(a) && (a = z.spacing != null ? z.spacing : 2), zot(d) && (d = z.backgroundColor != null ? z.backgroundColor : "#777"), zot(h2) && (h2 = z.rollBackgroundColor != null ? z.rollBackgroundColor : "#555"), zot(g) && (g = z.selectedBackgroundColor != null ? z.selectedBackgroundColor : "#444"), zot(p) && (p = z.selectedRollBackgroundColor != null ? z.selectedRollBackgroundColor : "#555"), zot(l) && (l = z.color != null ? z.color : "white"), zot(s5) && (s5 = z.rollColor != null ? z.rollColor : l), zot(c2) && (c2 = z.selectedColor != null ? z.selectedColor : l), zot(u) && (u = z.selectedRollColor != null ? z.selectedRollColor : s5);
          var y = new To.Container();
          return y.type = "CheckItem", y.checkBox = new To.CheckBox({ size: t2, label: e3, color: l, tap: true }), y.backing = new To.Rectangle(o2 - 2 * a, y.checkBox.height + 2 * i2, d).addTo(y), y.checkBox.center(y), n != "center" && n != "middle" && y.checkBox.pos(r2, null, n == "right"), y.backing.tap(function() {
            y.checkBox.toggle(), y.zimOut();
          }), y.checkBox.change(function() {
            y.zimOut();
          }), y.zimOver = function() {
            y.backing.color = y.checkBox.checked ? p : h2, y.checkBox.label.color = y.checkBox.checked ? u : s5, y.stage && y.stage.update();
          }, y.zimOut = function() {
            y.backing.color = y.checkBox.checked ? g : d, y.checkBox.label.color = y.checkBox.checked ? c2 : l, y.stage && y.stage.update();
          }, y.backing.on("mouseover", y.zimOver), y.checkBox.on("mouseover", y.zimOver), y.backing.on("mouseout", y.zimOut), y.checkBox.on("mouseout", y.zimOut), y;
        }, To.Stepper = function(o2, e3, n, t2, r2, i2, a, s5, l, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L) {
          if (_ = zob(To.Stepper, arguments, "list, width, backgroundColor, borderColor, borderWidth, label, color, vertical, arrows, corner, shadowColor, shadowBlur, continuous, display, press, hold, holdDelay, holdSpeed, draggable, dragSensitivity, dragRange, stepperType, min, max, step, step2, arrows2, arrows2Scale, keyEnabled, keyArrows, rightForward, downForward, selectedIndex, style, group, inherit", this))
            return _;
          z_d("61"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Stepper", this.group = j;
          var _ = O === false ? {} : To.getStyle(this.type, this.group, L);
          zot(o2) && (o2 = _.list != null ? _.list : []), zot(e3) && (e3 = _.width != null ? _.width : 200), zot(n) && (n = _.backgroundColor != null ? _.backgroundColor : "white"), zot(t2) && (t2 = _.borderColor != null ? _.borderColor : null), zot(r2) && (r2 = _.borderWidth != null ? _.borderWidth : null), t2 < 0 || r2 < 0 ? t2 = r2 = null : t2 != null && r2 == null && (r2 = 1), zot(a) && (a = _.color != null ? _.color : "#555"), zot(i2) && (i2 = _.label != null ? _.label : ""), typeof i2 != "string" && typeof i2 != "number" || (i2 = new To.Label({ text: i2, size: _.size != null ? 2 * _.size : 64, color: a, align: _.align != null ? _.align : "center", valign: _.valign != null ? _.valign : "center", backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", padding: "ignore", backgroundColor: "ignore", group: this.group })), zot(s5) && (s5 = _.vertical != null && _.vertical), zot(l) && (l = _.arrows == null || _.arrows), zot(c2) && (c2 = _.corner != null ? _.corner : 16), zot(u) && (u = _.shadowColor != null ? _.shadowColor : "rgba(0,0,0,.3)"), zot(d) && (d = _.shadowBlur != null ? _.shadowBlur : 14), zot(h2) && (h2 = _.continuous != null && _.continuous), zot(g) && (g = _.display == null || _.display), zot(p) && (p = _.press == null || _.press), zot(f3) && (f3 = _.hold == null || _.hold);
          var Y = Ao(m2);
          zot(m2) && (m2 = _.holdDelay != null ? _.holdDelay : Y == "s" ? 0.4 : 400), zot(z) && (z = _.holdSpeed != null ? _.holdSpeed : Y == "s" ? 0.2 : 200), Po(z, Y), zot(y) && (y = _.draggable == null || _.draggable), (zot(b) || b <= 0) && (b = _.dragSensitivity != null ? _.dragSensitivity : 0.1), zot(v) && (v = _.dragRange != null ? _.dragRange : 200), zot(w) && (w = _.stepperType != null ? _.stepperType : 0 < o2.length ? "list" : "number"), zot(C) && (C = _.min != null ? _.min : 0), zot(x2) && (x2 = _.max != null ? _.max : 10), zot(k) && (k = _.step != null ? _.step : 1), zot(T2) && (T2 = _.step2 != null ? _.step2 : k), zot(A3) && T2 != k && w == "number" && (A3 = _.arrows2 == null || _.arrows2), zot(P) && (P = _.arrows2Scale != null ? _.arrows2Scale : 0.5), zot(B) && (B = _.keyEnabled == null || _.keyEnabled), zot(S2) && (S2 = _.keyArrows == null || _.keyArrows), zot(E) && (E = _.rightForward == null || _.rightForward), zot(I2) && (I2 = _.downForward != null ? _.downForward : w != "number");
          var D, X = this;
          n = zik(n);
          var R, W, F2, H = k, N = 1;
          function V(e4) {
            e4 = String(e4).split(".")[1];
            return e4 = e4 ? e4.length : 0;
          }
          w == "number" ? (C = Number(C), x2 = Number(x2), C == NaN && (C = 0), x2 == NaN && (x2 = 100), R = x2 < C ? (N = -1, ee = x2, x2 = C, C = ee, x2) : C, this.min = C, this.max = x2, C < 0 && 0 < x2 && (R = 0), k = Math.abs(k), W = Math.max(V(k), V(T2))) : w == "letter" ? (o2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""), typeof C != "string" && (C = "A"), typeof x2 != "string" && (x2 = "Z"), C = C.substr(0, 1).toUpperCase(), x2 = x2.substr(0, 1).toUpperCase(), (te = o2.indexOf(C)) < 0 && (C = "A", te = 0), (oe = o2.indexOf(x2)) < 0 && (x2 = "Z", oe = o2.length), oe < te && (o2.reverse(), te = o2.length - 1 - te, oe = o2.length - 1 - oe), o2 = o2.splice(te, oe - te + 1)) : w = "list";
          var G = 0, q = 0;
          y && this.on("mousedown", function(e4) {
            X.zimAccessibility && X.zimAccessibility.aria || (this.stage.mouseMoveOutside = true, G = e4.rawX / To.scaX, q = e4.rawY / To.scaY, F2 = this.stage.on("stagemousemove", function(e5) {
              G = e5.rawX / To.scaX, q = e5.rawY / To.scaY;
            }));
          }, null, true), (this.label = i2).mouseChildren = false;
          var U, Q, Z2, K, J, $, ee, te, oe, ne, re, ie, ae, le;
          i2.mouseEnabled = false;
          function se(r3, i3, a2, e4, t3) {
            var l2;
            f3 && ((ne = e4) == 0 && (ne = 1), (re = t3) == 0 && (re = 1), y || (b = 1), e4 = m2 * (Y == "s" ? 1e3 : 1), l2 = t3 = z * (Y == "s" ? 1e3 : 1), ie = new To.Proportion(0, v, t3, t3 * b), U = setTimeout(function() {
              (function n2() {
                Q = setTimeout(function() {
                  var e5, t4, o3 = r3;
                  y && (e5 = Math.abs(G - ne), t4 = Math.abs(q - re), s5 ? (i3 || a2 || (e5 = 0), a2 && (t4 = 0)) : (i3 || a2 || (t4 = 0), a2 && (e5 = 0)), (10 <= e5 || 10 <= t4) && (l2 = t4 < e5 ? (H = s5 ? T2 : k, o3 = 0 < G - ne ? 1 : -1, ie.convert(Math.abs(ne - G))) : (H = s5 ? k : T2, o3 = 0 < q - re ? 1 : -1, w != "number" && I2 || (o3 *= -1), ie.convert(Math.abs(re - q))))), ue(o3), n2();
                }, l2);
              })();
            }, e4));
          }
          function ce() {
            X.zimAccessibility && X.zimAccessibility.aria || (clearTimeout(U), clearTimeout(Q));
          }
          function ue(e4) {
            if (w == "number") {
              var t3 = R = Number(R);
              R += Number(H * e4 * N), R = To.decimals(R, W), h2 ? R > X.max ? R = X.min : R < X.min && (R = X.max) : (R > X.max ? (R = k == 1 ? X.max : t3, g && (ae.cursor = "default")) : g && (ae.cursor = "pointer"), R < X.min && (R = k == 1 ? X.min : t3));
            } else {
              if (e4 = D + e4, h2)
                e4 > o2.length - 1 && (e4 = 0), e4 < 0 && (e4 = o2.length - 1);
              else {
                if (e4 > o2.length - 1)
                  return void (g && (ae.cursor = "default"));
                if (g && (ae.cursor = "pointer"), e4 < 0)
                  return;
              }
              D = e4;
            }
            he(w == "number" ? R : o2[D], w == "number" ? R : D), X.currentValue != le && X.dispatchEvent("change"), le = X.currentValue;
          }
          function de() {
            X.keyFocus = true;
            var e4 = document.activeElement;
            e4 && e4.blur();
          }
          function he(e4, t3) {
            D = t3, g && (w == "number" && e4 != 0 && 0 < W && (e4 = To.decimals(e4, W, true)), i2.text = e4, i2.center(X)), l && (Z2.alpha = 1, K.color = n, Z2.cursor = "pointer", J.alpha = 1, $.color = n, J.cursor = "pointer", h2 || (w == "number" ? (D == X.min && (0 < N ? ge : pe)(), D == X.max && (0 < N ? pe : ge)()) : (D == 0 && (s5 ? pe : ge)(), D == o2.length - 1 && (s5 ? ge : pe)()))), !J || To.OPTIMIZE || !zns && OPTIMIZE || !J.stage ? !i2 || To.OPTIMIZE || !zns && OPTIMIZE || !i2.stage || i2.stage.update() : J.stage.update(), X.zimAccessibility && X.zimAccessibility.changeTitle(X, null, true);
          }
          function ge() {
            l && (Z2.alpha = 0.8, K.color = "#aaa", Z2.cursor = "default");
          }
          function pe() {
            l && (J.alpha = 0.8, $.color = "#aaa", J.cursor = "default");
          }
          l && (Z2 = this.containerPrev = new To.Container({ style: false }), this.addChild(Z2), K = this.arrowPrev = new To.Triangle(100, 80, 80, n, null, null, null, null, null, null, null, false), u != -1 && 0 < d && (Z2.shadow = new createjs.Shadow(u, 3, 3, d)), Z2.addChild(K), Z2.expand(), Z2.cursor = "pointer", Z2.on("mousedown", function(e4) {
            var t3;
            X.zimAccessibility && X.zimAccessibility.aria || (H = k, ue(t3 = s5 ? I2 ? 1 : -1 : E ? -1 : 1), se(t3, null, null, e4.stageX / To.scaX, e4.stageY / To.scaY));
          }), f3 && Z2.on("pressup", ce), s5 ? (Z2.rotation = 180, Z2.x = e3 / 2, Z2.y = g ? Z2.height + 25 + 100 + Z2.height / 2 + 25 : 2 * Z2.height) : (Z2.rotation = -90, Z2.x = Z2.height / 2, Z2.y = Z2.width / 2)), g ? ((ae = this.textBox = new To.Rectangle(e3, 100, n, t2, r2, c2, null, null, false)).cursor = "pointer", this.addChild(ae), u != -1 && 0 < d && (ae.shadow = new createjs.Shadow(u, 3, 3, d)), l && (s5 ? l && (ae.y = K.height + 25) : l && (ae.x = K.height + 25)), this.addChild(i2), 0 < o2.length && (D = 0, i2.text = o2[D]), i2.center(X), ae.on("mousedown", function(e4) {
            X.zimAccessibility && X.zimAccessibility.aria || (le = X.currentValue, p && ue(1), se(1, true, null, e4.stageX / To.scaX, e4.stageY / To.scaY));
          }), ae.on("pressup", function() {
            X.zimAccessibility && X.zimAccessibility.aria;
          })) : 0 < o2.length && (D = 0), l && (J = this.containerNext = new To.Container({ style: false }), this.addChild(J), $ = this.arrowNext = new To.Triangle(100, 80, 80, n, null, null, null, null, null, null, null, false), u != -1 && 0 < d && (J.shadow = new createjs.Shadow(u, 3, 3, d)), J.addChild($), J.expand(), J.cursor = "pointer", J.on("mousedown", function(e4) {
            var t3;
            X.zimAccessibility && X.zimAccessibility.aria || (H = k, ue(t3 = s5 ? I2 ? -1 : 1 : E ? 1 : -1), se(t3, null, null, e4.stageX / To.scaX, e4.stageY / To.scaY));
          }), f3 && J.on("pressup", ce), s5 ? (J.rotation = 0, J.x = e3 / 2, J.y = J.getBounds().height / 2) : (J.rotation = 90, J.x = g ? ae.x + ae.getBounds().width + J.getBounds().height / 2 + 25 : Z2.x + Z2.getBounds().width, J.y = J.getBounds().width / 2)), f3 && g && ae.on("pressup", ce), A3 && (ee = this.prev2 = new To.Container({ style: false }), oe = this.arrowPrev2 = new To.Triangle(100, 80, 80, "rgba(0,0,0,.2)", n, 2, null, null, null, null, null, false), ee.addChild(oe), ee.expand(), ee.cursor = "pointer", ee.sca(P), ee.alpha = 0.5, ee.on("mousedown", function(e4) {
            var t3;
            X.zimAccessibility && X.zimAccessibility.aria || (H = T2, ue(t3 = s5 ? E ? -1 : 1 : I2 ? 1 : -1), se(t3, null, true, e4.stageX / To.scaX, e4.stageY / To.scaY));
          }), f3 && ee.on("pressup", ce), te = this.next2 = new To.Container({ style: false }), oe = this.arrowNext2 = new To.Triangle(100, 80, 80, "rgba(0,0,0,.2)", n, 2, null, null, null, null, null, false), te.addChild(oe), te.expand(), te.cursor = "pointer", te.sca(P), te.alpha = 0.5, te.on("mousedown", function(e4) {
            var t3;
            X.zimAccessibility && X.zimAccessibility.aria || (H = T2, ue(t3 = s5 ? E ? 1 : -1 : I2 ? -1 : 1), se(t3, null, true, e4.stageX / To.scaX, e4.stageY / To.scaY));
          }), f3 && te.on("pressup", ce), s5 ? (ee.y = this.height / 2, ee.x = -ee.width / 2 - 25 * Math.max(0.2, Math.min(1, P)), ee.rotation = 270, te.y = this.height / 2, te.x = this.width + te.width / 2 + 25 * Math.max(0.2, Math.min(1, P)), te.rotation = 90) : (te.x = this.width / 2, te.y = -te.height / 2 - 25 * Math.max(0.2, Math.min(1, P)), te.rotation = 0, ee.x = this.width / 2, ee.y = this.height + ee.height / 2 + 25 * Math.max(0.2, Math.min(1, P)), ee.rotation = 180), this.addChild(ee, te)), Object.defineProperty(this, "stepperArray", { get: function() {
            if (w == "number") {
              o2 = [];
              for (var e4 = X.min; e4 <= X.max; e4 += Math.min(k, T2))
                o2.push(Number(To.decimals(e4, W, null, false)));
            }
            return o2;
          }, set: function(e4) {
            o2 = e4, X.selectedIndex = X.selectedIndex;
          } }), Object.defineProperty(this, "min", { get: function() {
            return C;
          }, set: function(e4) {
            w == "number" ? (X.currentValue < e4 && (X.currentValue = e4), C = e4, X.selectedIndex = X.selectedIndex) : C = e4;
          } }), Object.defineProperty(this, "max", { get: function() {
            return x2;
          }, set: function(e4) {
            w == "number" ? (X.currentValue > e4 && (X.currentValue = e4), x2 = e4, X.selectedIndex = X.selectedIndex) : x2 = e4;
          } }), he(w == "number" ? R : o2[D], w == "number" ? R : D), Object.defineProperty(this, "selectedIndex", { get: function() {
            return w == "number" ? X.stepperArray.indexOf(X.currentValue) : D;
          }, set: function(e4) {
            zot(e4) || (w == "number" ? (D = Math.min(X.stepperArray.length - 1, Math.max(0, e4)), he(R = X.stepperArray[D], R)) : (e4 = Math.min(o2.length - 1, Math.max(0, e4)), he(o2[D = e4], D)));
          } }), Object.defineProperty(this, "currentValue", { get: function() {
            return w == "number" ? Number(R) : o2[D];
          }, set: function(e4) {
            if (!zot(e4))
              if (w == "number") {
                if (e4 = Number(e4), X.max > X.min) {
                  if (e4 > X.max || e4 < X.min)
                    return;
                } else if (e4 < X.max || e4 > X.min)
                  return;
                var t3 = X.stepperArray.indexOf(e4);
                t3 < 0 || (D = t3, he(R = Number(X.stepperArray[D]), R));
              } else
                -1 < o2.indexOf(e4) && (e4 = o2.indexOf(e4)) != X.selectedIndex && he(o2[D = e4], D);
          } }), Object.defineProperty(this, "currentValueEvent", { get: function() {
            return X.currentValue;
          }, set: function(e4) {
            String(e4) != String(X.currentValue) && (X.currentValue = e4, X.dispatchEvent("change"));
          } }), Object.defineProperty(this, "continuous", { get: function() {
            return h2;
          }, set: function(e4) {
            h2 = e4, w == "number" ? he(R, R) : he(o2[X.selectedIndex], X.selectedIndex);
          } }), this._enabled = true, Object.defineProperty(X, "enabled", { get: function() {
            return X._enabled;
          }, set: function(e4) {
            Ge(X, e4), e4 ? (w == "number" ? he(R, R) : he(o2[X.selectedIndex], X.selectedIndex), window.addEventListener("keydown", X.keyDownEvent)) : (ge(), pe(), window.removeEventListener("keydown", X.keyDownEvent), g && (i2.mouseChildren = false), g && (i2.mouseEnabled = false)), !J || To.OPTIMIZE || !zns && OPTIMIZE || !J.stage ? !i2 || To.OPTIMIZE || !zns && OPTIMIZE || !i2.stage || i2.stage.update() : J.stage.update();
          } }), KEYFOCUS !== void 0 && (To.KEYFOCUS = KEYFOCUS), Object.defineProperty(this, "keyFocus", { get: function() {
            return To.KEYFOCUS == X;
          }, set: function(e4) {
            To.KEYFOCUS = X;
          } }), To.KEYFOCUS || de(), this.on("mousedown", function() {
            de();
          });
          var fe = true, me = "";
          this.on("mousedown", function() {
            fe = true, me = "", X.zimAccessibility && X.zimAccessibility.aria || (X.focus = true, 0);
          }), this.keyDownEvent = function(e4) {
            if (X.stage && (X.zimAccessibility && X.focus || !X.zimAccessibility && X.keyFocus)) {
              var t3, o3 = (e4 = e4 || event).keyCode;
              if (S2 && 37 <= o3 && o3 <= 40 && (r3 = E ? 39 : 37, i3 = I2 ? 38 : 40, n2 = E ? 37 : 39, o3 == (t3 = I2 ? 40 : 38) || o3 == r3 ? (H = s5 && o3 == t3 || !s5 && o3 == r3 ? k : T2, ue(1)) : o3 != i3 && o3 != n2 || (H = s5 && o3 == i3 || !s5 && o3 == n2 ? k : T2, ue(-1))), B)
                if (w == "number") {
                  var n2, r3 = null, i3 = null;
                  if (o3 == 8 && ((n2 = String(me).split("")).pop(), r3 = n2.pop(), me = n2.join("")), !e4.shiftKey && 48 <= o3 && o3 <= 57 ? r3 = o3 - 48 : 96 <= o3 && o3 <= 105 ? r3 = o3 - 96 : o3 == 190 ? (me = String(me) + ".", i3 = true) : o3 == 173 || o3 == 189 ? (X.currentValue = -1 * X.currentValue, X.currentValue != le && X.dispatchEvent("change"), le = X.currentValue, 0) : o3 == 46 && (fe = true, me = ""), zot(r3) && zot(i3))
                    return fe = true, void (me = "");
                  zot(r3) || (me = fe ? (fe = false, r3) : r3 = Number(me + "" + r3), r3 < C || x2 < r3 || (X.currentValue = r3, X.currentValue != le && X.dispatchEvent("change"), le = X.currentValue));
                } else
                  fe = true, me = "", X.currentValue = String.fromCharCode(e4.keyCode), X.currentValue != le && X.dispatchEvent("change"), le = X.currentValue;
            }
          }, window.addEventListener("keydown", this.keyDownEvent), this.next = function() {
            ue(1);
          }, this.prev = function() {
            ue(-1);
          }, zot(M) && (M = _.selectedIndex != null ? _.selectedIndex : 0), X.selectedIndex = M, O !== false && To.styleTransforms(this, _), this.clone = function() {
            return X.cloneProps(new To.Stepper(o2, e3, n, t2, r2, i2.clone(), a, s5, l, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, this.group, L));
          }, this.dispose = function(e4, t3, o3) {
            return window.removeEventListener("keydown", X.keyDownEvent), X.removeAllEventListeners(), X.stage && X.stage.off(F2), o3 || this.zimContainer_dispose(true), Z2 = this.containerPrev = K = this.arrowPrev = null, J = this.containerNext = $ = this.arrowNext = null, !(ae = this.textBox = i2 = this.label = null);
          };
        }, To.zut = function(e3) {
          if (zot(e3) || !e3.key)
            return true;
          To.async("https://zimjs.com/gamdata.php?id=" + e3.key + "&player=" + e3.player + "&score=" + e3.score + "&reverse=" + e3.info.reverse + "&total=" + e3.info.total + "&allowZero=" + e3.info.allowZero, e3.info.type);
        }, To.extend(To.Stepper, To.Container, ["clone", "dispose"], "zimContainer", false), To.Slider = function(n, r2, t2, i2, o2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, e3, P, B, S2, E, I2, M, O, j, L) {
          if (N = zob(To.Slider, arguments, "min, max, step, button, barLength, barWidth, barColor, vertical, useTicks, tickColor, tickStep, semiTicks, tickScale, semiTickScale, accentSize, accentOffset, accentColor, accentBackgroundColor, accentDifference, sound, inside, keyArrows, keyArrowsStep, keyArrowsH, keyArrowsV, damp, currentValue, expand, expandVertical, expandBar, expandBarVertical, useLabels, labelMargin, style, group, inherit", this))
            return N;
          z_d("62"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Slider", this.group = j;
          var _, Y = O === false ? {} : To.getStyle(this.type, this.group, L);
          if (zot(n) && (n = Y.min != null ? Y.min : 0), zot(r2) && (r2 = Y.max != null ? Y.max : 10), r2 - n != 0) {
            zot(v) && (v = Y.sound != null && Y.sound), zot(t2) && (t2 = Y.step != null ? Y.step : 0), zot(i2) && (i2 = Y.button != null ? Y.button : v ? "aztec" : null), zot(o2) && (o2 = Y.barLength != null ? Y.barLength : 300), zot(a) && (a = Y.barWidth != null ? Y.barWidth : 3), zot(l) && (l = Y.barColor != null ? Y.barColor : v ? To.lighter : "#666"), zot(s5) && (s5 = Y.vertical != null ? Y.vertical : !!v), zot(c2) && (c2 = Y.useTicks != null ? Y.useTicks : !!v), zot(d) && (d = Y.tickStep != null ? Y.tickStep : t2 || (c2 || v ? (n - r2) / 40 : 0)), zot(h2) && (h2 = Y.semiTicks != null ? Y.semiTicks : d ? 3 : 0), zot(u) && (u = Y.tickColor != null ? Y.tickColor : v ? To.tin : l), zot(g) && (g = Y.tickScale != null ? Y.tickScale : v ? 1.25 : 1), zot(p) && (p = Y.semiTickScale != null ? Y.semiTickScale : 1), zot(f3) && (f3 = Y.accentSize != null ? Y.accentSize : v ? 10 : 0), zot(m2) && (m2 = Y.accentOffset != null ? Y.accentOffset : v ? -(f3 + a) / 2 : 0), zot(z) && (z = Y.accentColor != null ? Y.accentColor : To.pink), zot(y) && (y = Y.accentBackgroundColor != null ? Y.accentBackgroundColor : v ? To.blue : To.clear), zot(b) && (b = Y.accentDifference != null ? Y.accentDifference : -0.5), zot(w) && (w = Y.inside != null && Y.inside), zot(C) && (C = Y.keyArrows == null || Y.keyArrows), zot(k) && (k = Y.keyArrowsH == null || Y.keyArrowsH), zot(T2) && (T2 = Y.keyArrowsV == null || Y.keyArrowsV), zot(x2) && (x2 = Y.keyArrowsStep != null ? Y.keyArrowsStep : (r2 - n) / 100), zot(A3) && (A3 = Y.damp != null && Y.damp), zot(e3) && (e3 = Y.currentValue != null && Y.currentValue), zot(P) && (P = Y.expand != null ? Y.expand : To.mobile() ? 10 : null), zot(B) && (B = Y.expandVertical != null ? Y.expandVertical : P), zot(S2) && (S2 = Y.expandBar != null ? Y.expandBar : null), zot(E) && (E = Y.expandBarVertical != null ? Y.expandBarVertical : P), zot(I2) && (I2 = Y.useLabels != null && Y.useLabels), zot(M) && (M = Y.labelMargin != null ? Y.labelMargin : 20);
            var D = this, X = function() {
              return arguments;
            }(n, r2, t2, e3);
            n = To.Pick.choose(n), r2 = To.Pick.choose(r2);
            var R, W = t2 = To.Pick.choose(t2);
            e3 = To.Pick.choose(e3), f3 && (D.accentBacking = new To.Rectangle(o2 - 0.25, f3 + b, y).addTo(this).rot(s5 ? 90 : 0).mov(s5 ? -m2 - a / 2 + b / 2 : 0.25, s5 ? 0 : m2 + a / 2 - b / 2), R = D.accent = new To.Rectangle(o2, f3, z).sca(0, 1).rot(s5 ? -90 : 0).mov(s5 ? -m2 - f3 - a / 2 : 0, s5 ? o2 : m2 + a / 2).addTo(this));
            var F2, H, N, V, G, q, U = !(!zot(Y.backing) && Y.backing.type != "Pattern");
            !zot(i2) && typeof i2 != "string" || (F2 = 30, H = 40, s5 && (F2 = 50, H = 40), i2 != "pill" && i2 != "aztec" && i2 != "circle" && i2 != "grip" || (i2 == "pill" ? V = { width: s5 ? 40 : 18, height: s5 ? 18 : 40, borderColor: To.tin, borderWidth: 3, corner: 8 } : i2 == "aztec" ? (F2 = Y.width != null ? Y.width : 0.9 * Math.max(F2, H), H = Y.height != null ? Y.height : 0.6 * Math.min(F2, H), N = we(Y.backgroundColor != null ? Y.backgroundColor : To.lighter).rot(s5 ? 0 : -90), G = we(Y.rollBackgroundColor != null ? Y.rollBackgroundColor : To.white).rot(s5 ? 0 : -90), V = { width: F2, height: H, backing: N, rollBacking: G }, Y.borderWidth = 0, Y.borderColor = 0) : i2 == "circle" && (F2 = Y.width != null ? Y.width : 30, H = Y.height != null ? Y.height : 30, V = { width: F2, height: F2, corner: Y.corner != null ? Y.corner : F2 / 2 }), D.buttonType = i2), G = Y.borderColor != null ? Y.borderColor : V ? V.borderColor : U ? "#666" : null, i2 = new To.Button({ width: Y.width != null ? Y.width : V ? V.width : F2, height: Y.height != null ? Y.height : V ? V.height : H, label: "", backgroundColor: Y.backgroundColor != null ? Y.backgroundColor : "#fff", rollBackgroundColor: Y.rollBackgroundColor != null ? Y.rollBackgroundColor : "#ddd", borderColor: G, borderRollColor: Y.borderRollColor != null ? Y.borderRollColor : G, borderWidth: Y.borderWidth != null ? Y.borderWidth : V ? V.borderWidth : U ? 1 : null, corner: Y.corner != null ? Y.corner : V ? V.corner : 0, backing: Y.backing != null ? Y.backing.clone() : V ? V.backing : null, rollBacking: Y.rollBacking != null ? Y.rollBacking.clone() : V ? V.rollBacking : null, shadowColor: Y.shadowColor != null ? Y.shadowColor : null, shadowBlur: Y.shadowBlur != null ? Y.shadowBlur : null, hitPadding: 30, style: false }), D.buttonType == "circle" ? (i2.scaleY = H / F2, s5 || i2.rot(-90)) : D.buttonType == "grip" && To.loop([1, 1, 1], function(e4, t3, o3) {
              s5 ? new To.Line(0.62 * i2.width, e4, i2.borderColor || To.grey).pos(0, 0.4 * i2.height / 2 + (t3 + 1) * (0.6 * i2.height) / (o3 + 1), To.CENTER, To.TOP, i2) : new To.Line(0.62 * i2.height, e4, i2.borderColor || To.grey).rot(90).pos(0.4 * i2.width / 2 + (t3 + 1) * (0.6 * i2.width) / (o3 + 1), 0, To.LEFT, To.CENTER, i2);
            })), i2.rollPersist = true, zot(P) && zot(B) || i2.expand(P, B), s5 ? (q = i2.width, w ? (ee = o2, this.setBounds(0, 0, q, ee)) : (ee = o2 + i2.height, this.setBounds(-i2.width / 2, -i2.height / 2, q, ee))) : (ee = Math.max(i2.height, a), w ? (q = o2, this.setBounds(0, 0, q, ee)) : (q = o2 + i2.width, this.setBounds(-i2.width / 2, -i2.height / 2, q, ee)));
            var Q, Z2, K, J, $, ee, te, oe, ne, re, ie, ae = n, le = 0;
            if (this.button = i2, this.cursor = "pointer", c2 && (K = this.ticks = new To.Shape({ style: false }), this.addChild(K), (J = K.graphics).ss(1).s(u), $ = Math.round((r2 - n) / (d || t2)), ee = (r2 - n) / $, t2 = d ? (ee != d && zon && zogy("Slider() - non-divisible step (" + d + ") adjusted to " + ee), d = ee) : (ee != t2 && zon && zogy("Slider() - non-divisible step (" + t2 + ") adjusted to " + ee), ee), te = w ? (o2 - (s5 ? i2.height : i2.width)) / Math.abs($) : o2 / Math.abs($)), s5) {
              var se = w ? i2.height / 2 : 0, ce = this.bar = new To.Rectangle(a, o2, l, null, null, null, null, null, false);
              if (S2 ? ce.expand(S2, expandBarVerticical) : ce.expand(20, 0), ce.centerReg(this), i2.centerReg(this), Z2 = ce.getBounds(), Q = new createjs.Rectangle(ce.x, Z2.y + se, 0, Z2.height - 2 * se), c2) {
                I2 && (ge = D.labels = new Container().addTo(D));
                for (var ue = 0; ue <= Math.abs($); ue++) {
                  var de = (pe = ue % (h2 + 1) == 0) ? 25 * g : 15 * p, he = se + te * ue;
                  J.mt(0, he).lt(de, he), I2 && (h2 && pe || !h2) && (fe = Math.max(To.countDecimals(W), To.countDecimals(n), To.countDecimals(r2)), new Label({ text: To.decimals(r2 - (r2 - n) / Math.abs($) * ue, fe + 1), size: Y.size || 10, align: "left", valign: "center" }).centerReg({ add: false }).reg(0).loc(de + M + 2, he - 1, ge));
                }
                K.x = ce.x + 15;
              }
            } else {
              var ge, se = w ? i2.width / 2 : 0;
              if (ce = this.bar = new To.Rectangle(o2, a, l, null, null, null, null, null, false), S2 ? ce.expand(S2, expandBarVerticical) : ce.expand(0, 20), ce.centerReg(this), i2.centerReg(this), Z2 = ce.getBounds(), Q = new createjs.Rectangle(Z2.x + se, ce.y, Z2.width - 2 * se, 0), c2) {
                I2 && (ge = D.labels = new Container().addTo(D));
                for (ue = 0; ue <= Math.abs($); ue++) {
                  var pe, fe, de = se + te * ue, he = -((pe = ue % (h2 + 1) == 0) ? 25 * g : 15 * p);
                  J.mt(de, 0).lt(de, he), I2 && (h2 && pe || !h2) && (fe = Math.max(To.countDecimals(W), To.countDecimals(n), To.countDecimals(r2)), new Label({ text: To.decimals(n + (r2 - n) / Math.abs($) * ue, fe + 1), size: Y.size || 10, align: "center", valign: "center" }).centerReg({ add: false }).loc(de, he - M, ge));
                }
                K.y = ce.y - 10;
              }
            }
            i2.x = Q.x, i2.y = Q.y, i2.on("mousedown", function(e4) {
              _ = e4.target.stage, D.focus = true;
              e4 = D.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY);
              oe = e4.x - i2.x, ne = e4.y - i2.y, _ && (_.mouseMoveOutside = true);
            }), i2.on("pressmove", function(e4) {
              xe(e4);
            }), ce.on("mousedown", function(e4) {
              _ = e4.target.stage, ne = oe = 0, D.zimAccessibility && D.zimAccessibility.aria || xe(e4);
            }), A3 && (re = n, ie = new To.Damp(re, A3), D.ticker = To.Ticker.add(function() {
              re = ie.convert(ae);
            })), Object.defineProperty(this, "currentValue", { get: function() {
              return A3 ? re : ae;
            }, set: function(e4) {
              zot(e4) || (n < r2 ? (e4 < n && (e4 = n), r2 < e4 && (e4 = r2)) : (n < e4 && (e4 = n), e4 < r2 && (e4 = r2)), ae = e4 = Ce(e4), ie && ie.immediate(ae), le = s5 ? (i2.y = (e4 - r2) / (n - r2) * Q.height + se, i2.y) : (i2.x = (e4 - n) / (r2 - n) * Q.width + se, i2.x), R && ve(), Te(), To.OPTIMIZE || !zns && OPTIMIZE || !D.stage || D.stage.update());
            } }), Object.defineProperty(this, "currentValueEvent", { get: function() {
              return A3 ? re : ae;
            }, set: function(e4) {
              e4 != D.currentValue && (D.currentValue = e4, D.dispatchEvent("change"));
            } }), Object.defineProperty(this, "min", { get: function() {
              return n;
            }, set: function(e4) {
              zon && zogy("Slider() - min is read only");
            } }), Object.defineProperty(this, "max", { get: function() {
              return r2;
            }, set: function(e4) {
              zon && zogy("Slider() - max is read only");
            } }), Object.defineProperty(this, "step", { get: function() {
              return t2;
            }, set: function(e4) {
              zon && zogy("Slider() - step is read only");
            } }), Object.defineProperty(this, "keyArrowsH", { get: function() {
              return k;
            }, set: function(e4) {
              k = e4;
            } }), Object.defineProperty(this, "keyArrowsV", { get: function() {
              return T2;
            }, set: function(e4) {
              T2 = e4;
            } }), KEYFOCUS !== void 0 && (To.KEYFOCUS = KEYFOCUS), Object.defineProperty(this, "keyFocus", { get: function() {
              return To.KEYFOCUS == D;
            }, set: function(e4) {
              To.KEYFOCUS = D;
            } }), C && !To.KEYFOCUS && Ae(), this.on("mousedown", function() {
              C && Ae();
            });
            var me = false, ze = false, ye = false, be = false;
            this.keyDownEvent = function(e4) {
              D.stage && (D.zimAccessibility && D.focus || !D.zimAccessibility && D.keyFocus) && (e4.keyCode == 37 && k ? me = true : e4.keyCode == 40 && T2 ? ze = true : e4.keyCode == 39 && k ? ye = true : e4.keyCode == 38 && T2 && (be = true), D.keyInterval == null && (me || ze || ye || be) && (Pe(), D.keyTimeout = setTimeout(function() {
                D.keyInterval == null && (me || ze || ye || be) && (D.keyInterval = setInterval(Pe, 40));
              }, 140)));
            }, window.addEventListener("keydown", this.keyDownEvent), D.keyUpEvent = function(e4) {
              e4.keyCode == 37 ? me = false : e4.keyCode == 40 ? ze = false : e4.keyCode == 39 ? ye = false : e4.keyCode == 38 && (be = false), D.keyInterval == null || me || ze || ye || be || (clearInterval(D.keyInterval), D.keyInterval = null);
            }, window.addEventListener("keyup", this.keyUpEvent), this._enabled = true, Object.defineProperty(D, "enabled", { get: function() {
              return D._enabled;
            }, set: function(e4) {
              Ge(D, e4), e4 ? (window.addEventListener("keydown", D.keyDownEvent), window.addEventListener("keyup", D.keyUpEvent)) : (window.removeEventListener("keydown", D.keyDownEvent), window.removeEventListener("keyup", D.keyUpEvent));
            } }), zot(e3) || (D.currentValue = e3), To.setSwipe(this, false), O !== false && To.styleTransforms(this, Y), this.clone = function(e4) {
              return D.cloneProps(new To.Slider(e4 || !To.isPick(X[0]) ? D.min : X[0], e4 || !To.isPick(X[1]) ? D.max : X[1], e4 || !To.isPick(X[2]) ? D.step : X[2], i2.clone(), o2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, e4 || !To.isPick(X[3]) ? D.currentValue : X[3], P, B, S2, E, I2, M, O, this.group, L));
            }, this.dispose = function(e4, t3, o3) {
              return window.removeEventListener("keydown", D.keyDownEvent), window.removeEventListener("keyup", D.keyUpEvent), o3 || this.zimContainer_dispose(true), true;
            };
          } else
            zog("ZIM Slider range must not be 0");
          function ve() {
            R.sca((D.currentValue - D.min) / Math.abs(D.max - D.min), 1);
          }
          function we(e4) {
            var t3 = new To.Shape(F2, H);
            return t3.f(e4).s(Y.borderColor != null ? Y.borderColor : To.tin).ss(Y.borderWidth != null ? Y.borderWidth : 3).mt(2, 0).lt(F2 + 2, 0.2 * H).lt(F2 + 2, 0.8 * H).lt(2, H).cp().centerReg({ add: false }), t3;
          }
          function Ce(e4) {
            return t2 == 0 ? e4 : Math.round(e4 / t2) * t2;
          }
          function xe(e4) {
            var t3, o3 = D.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY), e4 = (t3 = o3.x - oe, e4 = o3.y - ne, o3 = Q, t3 = Math.max(o3.x, Math.min(o3.x + o3.width, t3)), e4 = Math.max(o3.y, Math.min(o3.y + o3.height, e4)), { x: t3, y: e4 });
            le = s5 ? (i2.x = e4.x, ae = Ce((e4.y - Q.y) / Q.height * (n - r2)), i2.y = Q.y + ae * Q.height / (n - r2), ae += r2, i2.y != le && D.dispatchEvent("change"), i2.y) : (ae = Ce((e4.x - Q.x) / Q.width * (r2 - n)), i2.x = Q.x + ae * Q.width / (r2 - n), ae += n, i2.y = e4.y, i2.x != le && D.dispatchEvent("change"), i2.x), R && ve(), Te(), To.OPTIMIZE || !zns && OPTIMIZE || !D.stage || D.stage.update();
          }
          function ke(e4) {
            return 0 < e4 ? 1 : -1;
          }
          function Te() {
            D.zimAccessibility && D.zimAccessibility.changeTitle(D, null, true);
          }
          function Ae() {
            D.keyFocus = true;
            var e4 = document.activeElement;
            e4 && e4.blur();
          }
          function Pe() {
            (me || ze) && (D.currentValueEvent -= 0 < t2 ? t2 * ke(r2 - n) : x2 * ke(r2 - n)), (ye || be) && (D.currentValueEvent += 0 < t2 ? t2 * ke(r2 - n) : x2 * ke(r2 - n));
          }
        }, To.extend(To.Slider, To.Container, ["clone", "dispose"], "zimContainer", false), To.Selector = function(a, n, r2, i2, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, e3, t2, o2) {
          if (x2 = zob(To.Selector, arguments, "tile, borderColor, borderWidth, backgroundColor, corner, dashed, paddingHorizontal, paddingVertical, speed, diagonal, dim, multi, keyArrows, behind, resizeScale, selectedIndex, style, group, inherit", this))
            return x2;
          z_d("62.5"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Selector", this.group = t2;
          var b = e3 === false ? {} : To.getStyle(this.type, this.group, o2), v = Ao();
          zot(a) && (a = b.tile != null ? b.tile : new To.Tile(new To.Circle(20, To.red), 4, 4, 10, 10)), zot(n) && (n = b.borderColor != null ? b.borderColor : "white"), zot(r2) && (r2 = b.borderWidth != null ? b.borderWidth : 2), zot(i2) && (i2 = b.backgroundColor != null ? b.backgroundColor : "rgba(0,0,0,.1)"), zot(l) && (l = b.corner != null ? b.corner : 10), zot(s5) && (s5 = b.dashed != null && b.dashed), zot(c2) && (c2 = b.padding != null ? b.padding : a.spacingH / 2), zot(u) && (u = b.paddingVertical != null ? b.paddingVertical : a.spacingV / 2), zot(d) && (d = b.speed != null ? b.speed : 2), zot(h2) && (h2 = b.diagonal != null && b.diagonal), zot(g) && (g = b.dim != null && b.dim), zot(p) && (p = b.multi != null && b.multi), p && (d = 0), zot(f3) && (f3 = b.keyArrows == null || b.keyArrows), zot(m2) && (m2 = b.behind != null && b.behind), zot(z) && (z = b.resizeScale != null && b.resizeScale), zot(y) && (y = b.selectedIndex != null ? b.selectedIndex : null);
          var w = [], C = [];
          To.loop(a.items.length, function(e4) {
            w.push(zik(n)), C.push(zik(i2));
          });
          var x2, k, T2, A3, P, B, S2, E = this;
          zot(y) && p || (x2 = zot(T2 = y) || y < 0 ? 0 : y, k = a.getChildAt(x2), E.currentItem = a.getChildAt(x2), zot(y = T2) && (y = b.selectedIndex != null ? b.selectedIndex : 0)), (T2 = k || a.getChildAt(0)) && (A3 = T2.width + 2 * c2, P = T2.height + 2 * u), E.tile = a.addTo(E).cur(), p ? (B = this.selectors = [], To.loop(10, function() {
            (S2 = new To.Rectangle(A3, P, To.faint, To.faint, r2, l, s5, { ignoreScale: !z }).centerReg(E, m2 ? 0 : 1)).visible = false, B.push(S2), S2.mouseEnabled = false;
          }), this.selector = S2) : ((S2 = this.selector = new To.Rectangle(A3, P, To.faint, To.faint, r2, l, s5, { ignoreScale: !z }).centerReg(E)).loc(a.width / 2, T2.y + u, E, m2 ? 0 : 1), S2.visible = false), y < 0 || zot(k) || (S2.loc(T2.x + c2, T2.y + u, E, m2 ? 0 : 1), S2.color = C[y], S2.borderColor = w[y], S2.visible = true), a.mov(c2, u), this.setBounds(a.width + 2 * c2, a.height + 2 * u);
          var I2 = {};
          function M(e4, t3, o3) {
            zot(o3) && (o3 = S2), y = (k = e4).tileNum, o3.color = C[y], o3.borderColor = w[y], p && (E.upItem = E.upIndex = null, E.downItem = k, E.downIndex = y), E.animating = true;
            var n2 = a.localToLocal(e4.x, e4.y, E), r3 = Math.abs(n2.x - S2.x), i3 = Math.abs(n2.y - S2.y), t3 = E.noAnimate || t3 ? 0 : d;
            E.noAnimate = false, t3 == 0 ? (o3.loc(n2.x, n2.y).siz(e4.width + 2 * c2, e4.height + 2 * u), E.animating = false, E.dispatchEvent("change")) : (h2 || (r3 + i3) * t3 <= 0 ? o3.animate({ x: n2.x, y: n2.y }, (i3 + r3) * t3) : (o3.stopAnimate(), i3 <= r3 ? o3.animate([{ props: { x: n2.x }, time: Math.max(v == "s" ? 0.1 : 100, r3 * t3 / (v == "s" ? 1e3 : 1)) }, { props: { y: n2.y }, time: Math.max(v == "s" ? 0.1 : 100, i3 * t3 / (v == "s" ? 1e3 : 1)) }]) : o3.animate([{ props: { y: n2.y }, time: Math.max(v == "s" ? 0.1 : 100, i3 * t3 / (v == "s" ? 1e3 : 1)) }, { props: { x: n2.x }, time: Math.max(v == "s" ? 0.1 : 100, r3 * t3 / (v == "s" ? 1e3 : 1)) }])), o3.animate({ props: { widthOnly: e4.width + 2 * c2, heightOnly: e4.height + 2 * u }, time: Math.max(v == "s" ? 0.2 : 200, (i3 + r3) * t3 / (v == "s" ? 1e3 : 1)), call: function() {
              E.animating = false, E.dispatchEvent("change");
            } }), g && (t3 = g === true ? 0.7 : To.constrain(g, 0, 1), a.animate({ props: { alpha: t3 }, rewind: true, time: (i3 + r3) * d * 0.7 / (v == "s" ? 1e3 : 1) }))), a.stage && a.stage.update();
          }
          function O() {
            E.keyFocus = true;
            var e4 = document.activeElement;
            e4 && e4.blur();
          }
          this.tileDown = a.on("mousedown", function(e4) {
            var t3 = S2;
            if (!p || !zot(t3 = B.shift())) {
              t3.visible = true;
              for (var o3 = e4.target, n2 = 0; o3.parent != a && n2 < 10; )
                o3 = o3.parent, n2++;
              o3.parent == a && M(o3, null, t3), p && (e4 = "id" + Math.abs(e4.pointerID + 1), I2[e4] = { index: y, item: k, selector: t3 });
            }
          }), p && (this.tileMove = a.on("pressmove", function(e4) {
            var t3 = "id" + Math.abs(e4.pointerID + 1), o3 = I2[t3];
            zot(o3) || (t3 = a.itemUnderPoint(e4.stageX / To.scaX, e4.stageY / To.scaY), o3.item != t3 && (E.upItem = o3.item, E.upIndex = o3.index, E.downItem = o3.item = t3, E.downIndex = o3.index = t3 ? t3.tileNum : null, E.dispatchEvent("change"), zot(t3) ? o3.selector.visible = false : (e4 = a.localToLocal(t3.x, t3.y, E), o3.selector.loc(e4.x, e4.y).siz(t3.width + 2 * c2, t3.height + 2 * u), o3.selector.color = C[o3.index], o3.selector.borderColor = w[o3.index], o3.selector.visible = true), E.stage.update()));
          }), this.tileUp = a.on("pressup", function(e4) {
            var t3 = "id" + Math.abs(e4.pointerID + 1), e4 = I2[t3];
            zot(e4) || (E.downIndex = E.downItem = null, E.upIndex = e4.index, E.upItem = e4.item, B.push(e4.selector), e4.selector.visible = false, E.dispatchEvent("change"), E.stage && !To.OPTIMIZE && E.stage.update(), delete I2[t3]);
          })), E.noAnimate = false, f3 && E.added(function() {
            E.keyEvent = E.stage.frame.on("keydown", function(e4) {
              var t3, o3, n2, r3;
              E.stage && E.enabled && (E.animating || (E.zimAccessibility && E.focus || !E.zimAccessibility && E.keyFocus) && ((t3 = To.loop(a.items2D, function(e5, o4) {
                e5 = To.loop(e5, function(e6, t4) {
                  if (e6 == k)
                    return [t4, o4];
                });
                if (Array.isArray(e5))
                  return e5;
              })) === true && (t3 = [0, 0]), o3 = a.items2D[t3[1]].length, n2 = a.items2D.length, e4.keyCode == "39" ? (r3 = (t3[0] + 1) % o3, M(a.items2D[t3[1]][r3], r3 < t3[0])) : e4.keyCode == "37" ? (r3 = (t3[0] - 1 + o3) % o3, M(a.items2D[t3[1]][r3], r3 > t3[0])) : e4.keyCode == "38" ? (r3 = (t3[1] - 1 + n2) % n2, M(a.items2D[r3][t3[0]], r3 > t3[1])) : e4.keyCode == "40" && (r3 = (t3[1] + 1) % n2, M(a.items2D[r3][t3[0]], r3 < t3[1]))));
            });
          }), Object.defineProperty(this, "selectedIndex", { get: function() {
            return y;
          }, set: function(e4) {
            zot(e4) && (E.currentItem = null), E.currentItem = a.items[e4];
          } }), Object.defineProperty(this, "text", { get: function() {
            return k.text;
          }, set: function(e4) {
            zon && zogy("Selector() - text is read only");
          } }), Object.defineProperty(this, "currentItem", { get: function() {
            return k;
          }, set: function(e4) {
            if (zot(e4))
              return y = k = null, S2.visible = false, E.selectedCol = null, void (E.selectedRow = null);
            S2.visible = true, E.lastItem = k, E.lastIndex = y, E.lastCol = E.selectedCol, E.lastRow = E.selectedRow, E.selectedCol = e4.tileCol, E.selectedRow = e4.tileRow, y = e4.tileNum, M(k = e4);
          } }), this._enabled = true, Object.defineProperty(E, "enabled", { get: function() {
            return E._enabled;
          }, set: function(e4) {
            e4 ? E.mouse() : E.noMouse(), E._enabled = e4;
          } }), KEYFOCUS !== void 0 && (To.KEYFOCUS = KEYFOCUS), Object.defineProperty(this, "keyFocus", { get: function() {
            return To.KEYFOCUS == E;
          }, set: function(e4) {
            To.KEYFOCUS = E;
          } }), To.KEYFOCUS || O(), this.on("mousedown", function() {
            O();
          }), e3 !== false && To.styleTransforms(this, b), this.clone = function(e4) {
            if (e4)
              for (var t3 = [], o3 = 0; o3 < E.tile.items.length; o3++)
                t3.push(E.tile.items[o3].clone(true));
            return E.cloneProps(new To.Selector(e4 ? To.series(t3) : a.clone ? a.clone() : a, n, r2, i2, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, this.style, this.group));
          }, this.dispose = function(e4, t3, o3) {
            E.keyEvent && E.stage && E.stage.frame.off("keydown", E.keyEvent), a.off(E.tileDown), a.dispose(), p && (a.off(E.tileMove), a.off(E.tileUp)), o3 || this.zimContainer_dispose(true);
          };
        }, To.extend(To.Selector, To.Container, ["clone", "dispose"], "zimContainer", false), To.Dial = function(n, i2, r2, t2, o2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, e3, Y, D, X, R, W) {
          if ($ = zob(To.Dial, arguments, "min, max, step, width, backgroundColor, indicatorColor, indicatorScale, indicatorType, useTicks, innerTicks, tickColor, tickStep, semiTicks, tickScale, semiTickScale, innerCircle, innerScale, innerColor, inner2Color, accentSize, accentOffset, accentColor, accentBackgroundColor, accentDifference, sound, linear, gap, limit, keyArrows, keyArrowsStep, keyArrowsH, keyArrowsV, continuous, continuousMin, continuousMax, damp, currentValue, useLabels, labelMargin, style, group, inherit", this))
            return $;
          z_d("63"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Dial", this.group = R;
          var F2 = X === false ? {} : To.getStyle(this.type, this.group, W);
          if (zot(n) && (n = F2.min != null ? F2.min : 0), zot(i2) && (i2 = F2.max != null ? F2.max : 10), i2 - n != 0) {
            zot(T2) && (T2 = F2.sound != null && F2.sound), zot(r2) && (r2 = F2.step != null ? F2.step : T2 ? 0 : 1), zot(t2) && (t2 = F2.width != null ? F2.width : 100), zot(o2) && (o2 = F2.backgroundColor != null ? F2.backgroundColor : "#666"), zot(a) && (a = F2.indicatorColor != null ? F2.indicatorColor : T2 ? "white" : "#222"), zot(l) && (l = F2.indicatorScale != null ? F2.indicatorScale : 1), zot(s5) && (s5 = F2.indicatorType != null ? F2.indicatorType : T2 ? "aztec" : "arrow"), zot(c2) && (c2 = F2.useTicks != null ? F2.useTicks : r2 != 0), zot(u) && (u = F2.innerTicks != null && F2.innerTicks), zot(h2) && (h2 = F2.tickStep != null ? F2.tickStep : r2 || (c2 ? 0.25 : 0)), zot(g) && (g = F2.semiTicks != null ? F2.semiTicks : T2 ? 3 : 0), zot(d) && (d = F2.tickColor != null ? F2.tickColor : T2 ? To.tin : o2), zot(p) && (p = F2.tickScale != null ? F2.tickScale : T2 ? 1.25 : 1), zot(f3) && (f3 = F2.semiTickScale != null ? F2.semiTickScale : 1.25), zot(m2) && (m2 = F2.innerCircle == null || F2.innerCircle), zot(y) && (y = F2.innerColor != null ? F2.innerColor : T2 ? To.pink : "rgba(0,0,0,.2)"), zot(b) && (b = F2.inner2Color != null ? F2.inner2Color : T2 ? To.light : "rgba(0,0,0,.1)"), zot(z) && (z = F2.innerScale != null ? F2.innerScale : T2 ? 0.4 : 0.5), zot(v) && (v = F2.accentSize != null ? F2.accentSize : T2 ? t2 / 2 * 0.15 : 0), zot(w) && (w = F2.accentOffset != null ? F2.accentOffset : t2 / 2 * 0.45), zot(k) && (k = F2.accentDifference != null ? F2.accentDifference : -0.25), zot(C) && (C = F2.accentColor != null ? F2.accentColor : To.pink), zot(x2) && (x2 = F2.accentBackgroundColor != null ? F2.accentBackgroundColor : T2 ? To.blue : To.clear), zot(P) && (P = F2.gap != null ? F2.gap : T2 ? 0.25 : 0), zot(A3) && (A3 = F2.linear != null ? F2.linear : T2), P && (O = !(A3 = true)), zot(B) && (B = F2.limit == null || F2.limit), zot(S2) && (S2 = F2.keyArrows == null || F2.keyArrows), zot(E) && (E = F2.keyArrowsStep != null ? F2.keyArrowsStep : (i2 - n) / 100), zot(I2) && (I2 = F2.keyArrowsH == null || F2.keyArrowsH), zot(M) && (M = F2.keyArrowsV == null || F2.keyArrowsV), zot(O) && (O = F2.continuous != null && F2.continuous), O && (B = F2.limit != null && F2.limit), zot(_) && (_ = F2.damp != null && F2.damp), zot(e3) && (e3 = F2.currentValue != null && F2.currentValue), zot(Y) && (Y = F2.useLabels != null && F2.useLabels), zot(D) && (D = F2.labelMargin != null ? F2.labelMargin : 10), B == 0 && (_ = null);
            var H = this;
            this.cursor = "pointer";
            var N = function() {
              return arguments;
            }(n, i2, r2, e3);
            n = To.Pick.choose(n), i2 = To.Pick.choose(i2);
            var V = r2 = To.Pick.choose(r2);
            e3 = To.Pick.choose(e3);
            var G, q, U, Q = t2 / 2, Z2 = t2, K = n, J = 0;
            v && (G = t2 / 2 + w + v / 2, q = 360 * P / 2, H.accentBacking = new To.Shape(-Q, -Q, 2 * Q, 2 * Q).addTo(this).s(x2).ss(v + k).a(0, 0, G, (q - 90) * To.RAD, (360 - q - 90) * To.RAD), U = H.accent = new To.Shape(-Q, -Q, 2 * Q, 2 * Q).addTo(this));
            var $ = this.backing = new To.Circle(Q, o2, null, null, null, null, null, null, false);
            v ? $.center(this) : this.addChild($), m2 && (ee = this.inner = new To.Circle(Q * z, y, null, null, null, null, null, null, false), this.addChild(ee), te = this.inner2 = new To.Circle(Q * (z - 0.1), b, null, null, null, null, null, null, false), this.addChild(te)), T2 && (H.rotation = 180);
            var ee, te, oe, ne, re, ie, ae, le, se = Math.abs(i2 - n) / (h2 || r2) + (P ? 1 : 0), ce = r2 ? Math.abs(i2 - n) / r2 : 0;
            if (c2) {
              var ue, de = this.ticks = new To.Container({ style: false });
              this.addChild(de), Y && (ue = H.labels = new Container(2 * t2, 2 * Z2).centerReg(H));
              for (var he = 0; he < se; he++) {
                var ge = he % (g + 1) == 0, pe = new To.Rectangle(1, Q * (ge ? 0.2 * p : 0.1 * f3), d, null, null, null, null, null, false);
                pe.regY = Q + (u ? z - 0.05 : pe.height + 0.1 * Q), pe.regX = 0.5, pe.rotation = (360 - 360 * P) / (se - (P ? 1 : 0)) * he + 360 * P / 2, de.addChild(pe), Y && (g && ge || !g) && (ge = Math.max(To.countDecimals(V), To.countDecimals(n), To.countDecimals(i2)), new Label({ text: To.decimals(n + (i2 - n) / Math.abs(ce) * he, ge + 1), size: F2.size || 10, align: "center", valign: "center" }).centerReg({ add: false }).loc(0, -D - 1, pe).addTo(ue));
              }
              H.expand(pe.height);
            }
            this.setBounds(-Q, -Q, t2, t2), s5 == "dot" || s5 == "circle" ? (oe = this.indicator = new To.Container({ style: false }), ne = this.indicatorShape = new To.Circle(0.19 * Q, a, null, null, null, null, null, null, false), oe.addChild(ne), To.sca(oe, l), oe.regY = Q - oe.getBounds().width * l / 2 - 0.07 * Q) : s5 == "line" || s5 == "rectangle" ? (oe = this.indicator = new To.Container({ style: false }), ne = this.indicatorShape = new To.Rectangle(0.1 * Q, 0.3 * Q, a, null, null, null, null, null, null, null, false), oe.addChild(ne), To.sca(oe, l), oe.regY = Q - oe.getBounds().width * l / 2 - 0.07 * Q, oe.regX = 0.05 * Q) : s5 == "aztec" ? (oe = this.indicator = new To.Container({ style: false }), ee = 0.05 * Q, te = 0.1 * Q, Z2 = 0.42 * Q, ne = this.indicatorShape = new To.Shape(-te, 0, 2 * te, Z2).f(a).mt(-ee, 0).lt(ee, 0).lt(te, Z2).lt(-te, Z2).cp(), oe.addChild(ne), To.sca(oe, l), oe.regY = Q - oe.getBounds().width * l / 2 - 0.04 * Q) : (oe = this.indicator = new To.Container({ style: false }), ne = this.indicatorShape = new To.Triangle(0.4 * Q, 0.4 * Q, 0.4 * Q, a, null, null, null, null, null, null, null, false), oe.addChild(ne), To.sca(oe, l), oe.regY = Q - oe.getBounds().height * l * (u ? 0.85 : 0.75), u && (ne.rotation = 180)), oe.regY /= l, this.addChild(oe);
            var fe, me, ze, ye, be, ve, we, Ce, xe, ke = 0;
            O ? (ze = me = fe = 0, ve = !(be = ye = false)) : 0, A3 ? this.on("mousedown", function(e4) {
              var o3, n2;
              e4.target.stage, H.zimAccessibility && H.zimAccessibility.aria || (o3 = re = oe.rotation, H.parent.globalToLocal(0, 0), n2 = H.parent.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY), ae = H.on("pressmove", function(e5) {
                var t3 = H.parent.globalToLocal(e5.rawX / To.scaX, e5.rawY / To.scaY);
                oe.rotation = o3 = re + 100 * (n2.y - t3.y) / (this.width || 1), B && (360 - 360 * P / 2 < o3 || o3 < 0 + 360 * P / 2) && (o3 = To.constrain(o3, 360 * P / 2, 360 - 360 * P / 2), n2 = H.parent.globalToLocal(e5.rawX / To.scaX, e5.rawY / To.scaY), re = o3), Oe(o3);
              }), le = this.on("pressup", function(e5) {
                H.off("pressmove", ae), H.off("pressup", le);
              }));
            }) : (we = true, this.on("mousedown", function(e4) {
              var t3, o3, n2, r3;
              e4.target.stage, H.zimAccessibility && H.zimAccessibility.aria || (re = oe.rotation, t3 = H.parent.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY), t3.x, o3 = t3.x - H.x, n2 = H.y - t3.y, ie = 180 * Math.atan2(o3, n2) / Math.PI, r3 = new Date().getTime(), ae = H.on("pressmove", function(e5) {
                var t4, o4;
                ye && (o4 = (t4 = H.parent.globalToLocal(e5.rawX / To.scaX, e5.rawY / To.scaY)).x - H.x, n3 = H.y - t4.y, ie = 180 * Math.atan2(o4, n3) / Math.PI, re = oe.rotation), o4 = (t4 = H.parent.globalToLocal(e5.rawX / To.scaX, e5.rawY / To.scaY)).x - H.x, n3 = H.y - t4.y;
                var n3 = 180 * Math.atan2(o4, n3) / Math.PI, n3 = ((n3 = re + n3 - ie) + 36e5) % 360;
                B && we && (180 < n3 - ke && H.currentValue != i2 ? n3 = 0 : n3 - ke < -180 && (n3 = 359)), we = true, Oe(n3), ke = n3, t4.x;
              }), le = this.on("pressup", function(e5) {
                H.currentValue != H.min && H.currentValue != H.max && (we = false), new Date().getTime() - r3 < 200 && (t3 = H.parent.globalToLocal(e5.rawX / To.scaX, e5.rawY / To.scaY), o3 = t3.x - H.x, n2 = H.y - t3.y, Oe(180 * Math.atan2(o3, n2) / Math.PI - H.rotation)), re = oe.rotation, H.off("pressmove", ae), H.off("pressup", le);
              }));
            })), _ && (Ce = n, xe = new To.Damp(Ce, _), H.ticker = To.Ticker.add(function() {
              Ce = xe.convert(K);
            })), Object.defineProperty(this, "currentValue", { get: function() {
              return _ ? Ce : K;
            }, set: function(e4) {
              zot(e4) || (O ? (ye = false, zot(j) || zot(L) ? zot(j) ? zot(L) || L < e4 && (e4 = L, ye = true) : e4 < j && (e4 = j, ye = true) : j < L ? (e4 < j && (e4 = j, ye = true), L < e4 && (e4 = L, ye = true)) : (j < e4 && (e4 = j, ye = true), e4 < L && (e4 = L, ye = true)), ve && (be = true, ze = 360 * Math.floor(e4 / (i2 - n)))) : n < i2 ? (e4 < n && (e4 = B ? n : i2), i2 < e4 && (e4 = B ? i2 : n)) : (n < e4 && (e4 = B ? n : i2), e4 < i2 && (e4 = B ? i2 : n)), e4 = Ee(K = e4), _ && _.immediate(K), oe.rotation = 360 * P / 2 + (e4 - n) * (360 - 360 * P) / (i2 - n), oe.rotation = (oe.rotation + 36e5) % 360, J = e4 - n, ke = oe.rotation, U && Se(), Me(), To.OPTIMIZE || !zns && OPTIMIZE || !H.stage || H.stage.update());
            } }), Object.defineProperty(this, "currentValueEvent", { get: function() {
              return _ ? Ce : K;
            }, set: function(e4) {
              e4 != H.currentValue && (H.currentValue = e4, H.dispatchEvent("change"));
            } }), Object.defineProperty(this, "min", { get: function() {
              return n;
            }, set: function(e4) {
              O ? n = e4 : zon && zogy("Dial() - min is read only");
            } }), Object.defineProperty(this, "max", { get: function() {
              return i2;
            }, set: function(e4) {
              O ? i2 = e4 : zon && zogy("Dial() - max is read only");
            } }), Object.defineProperty(this, "continuous", { get: function() {
              return O;
            }, set: function(e4) {
              zon && zogy("Dial() - continuous is read only");
            } }), Object.defineProperty(this, "continuousMin", { get: function() {
              return j;
            }, set: function(e4) {
              j = e4, H.currentValue < j && (H.currentValue = j);
            } }), Object.defineProperty(this, "continuousMax", { get: function() {
              return L;
            }, set: function(e4) {
              L = e4, H.currentValue > L && (H.currentValue = L);
            } }), Object.defineProperty(this, "step", { get: function() {
              return r2;
            }, set: function(e4) {
              zon && zogy("Dial() - step is read only");
            } }), Object.defineProperty(this, "keyArrowsH", { get: function() {
              return I2;
            }, set: function(e4) {
              I2 = e4;
            } }), Object.defineProperty(this, "keyArrowsV", { get: function() {
              return M;
            }, set: function(e4) {
              M = e4;
            } }), KEYFOCUS !== void 0 && (To.KEYFOCUS = KEYFOCUS), Object.defineProperty(this, "keyFocus", { get: function() {
              return To.KEYFOCUS == H;
            }, set: function(e4) {
              To.KEYFOCUS = H;
            } }), S2 && !To.KEYFOCUS && je(), this.on("mousedown", function() {
              S2 && je();
            });
            var Te = false, Ae = false, Pe = false, Be = false;
            this.keyDownEvent = function(e4) {
              H.stage && (H.zimAccessibility && H.focus || !H.zimAccessibility && H.keyFocus) && (e4.keyCode == 37 && I2 ? Te = true : e4.keyCode == 40 && M ? Ae = true : e4.keyCode == 39 && I2 ? Pe = true : e4.keyCode == 38 && M && (Be = true), H.keyInterval == null && (Te || Ae || Pe || Be) && (Le(), H.keyTimeout = setTimeout(function() {
                H.keyInterval == null && (Te || Ae || Pe || Be) && (H.keyInterval = setInterval(Le, 40));
              }, 140)));
            }, window.addEventListener("keydown", this.keyDownEvent), H.keyUpEvent = function(e4) {
              e4.keyCode == 37 ? Te = false : e4.keyCode == 40 ? Ae = false : e4.keyCode == 39 ? Pe = false : e4.keyCode == 38 && (Be = false), H.keyInterval == null || Te || Ae || Pe || Be || (clearInterval(H.keyInterval), H.keyInterval = null);
            }, window.addEventListener("keyup", this.keyUpEvent), this._enabled = true, Object.defineProperty(H, "enabled", { get: function() {
              return H._enabled;
            }, set: function(e4) {
              e4 ? (window.addEventListener("keydown", H.keyDownEvent), window.addEventListener("keyup", H.keyUpEvent)) : (window.removeEventListener("keydown", H.keyDownEvent), window.removeEventListener("keyup", H.keyUpEvent)), H._enabled = e4;
            } }), zot(e3) && (e3 = F2.currentValue != null ? F2.currentValue : n), H.currentValue = e3, X !== false && To.styleTransforms(this, F2), this.clone = function(e4) {
              return H.cloneProps(new To.Dial(e4 || !To.isPick(N[0]) ? H.min : N[0], e4 || !To.isPick(N[1]) ? H.max : N[1], e4 || !To.isPick(N[2]) ? H.step : N[2], t2, o2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, e4 || !To.isPick(N[3]) ? H.currentValue : N[3], Y, D, X, this.group, W));
            }, this.dispose = function(e4, t3, o3) {
              return window.removeEventListener("keydown", H.keyDownEvent), window.removeEventListener("keyup", H.keyUpEvent), o3 || this.zimContainer_dispose(true), true;
            };
          } else
            zog("ZIM Dial range must not be 0");
          function Se() {
            U.c().s(C).ss(v).a(0, 0, G, (q - 90) * To.RAD, (oe.rotation - 2 * q) * To.RAD);
          }
          function Ee(e4) {
            return r2 == 0 ? e4 : Math.round(e4 / r2) * r2;
          }
          function Ie(e4) {
            return 0 < e4 ? 1 : -1;
          }
          function Me() {
            H.zimAccessibility && H.zimAccessibility.changeTitle(H, null, true);
          }
          function Oe(e4) {
            if (O) {
              be && (fe = e4, be = false), fe + 180 < e4 ? ze -= 360 : e4 < fe - 180 && (ze += 360), me = ze + e4, ve = false;
              var t3 = H.currentValue;
              return H.currentValue = Ee(me * (i2 - n) / 360), t3 != H.currentValue && H.dispatchEvent("change"), fe = e4, ve = true, U && Se(), 1;
            }
            var o3;
            e4 < 0 && (e4 += 360), e4 %= 360, r2 != 0 ? (o3 = Ee(((e4 = Math.min(e4, 360)) - 360 * P / 2) / (360 - 360 * P) * (i2 - n)), oe.rotation = 360 * P / 2 + o3 * (360 - 360 * P) / (i2 - n)) : o3 = ((oe.rotation = e4) - 360 * P / 2) / (360 - 360 * P) * (i2 - n), o3 != J && (K = (J = o3) + n, U && Se(), H.dispatchEvent("change"), To.OPTIMIZE || !zns && OPTIMIZE || !H.stage || H.stage.update()), Me();
          }
          function je() {
            H.keyFocus = true;
            var e4 = document.activeElement;
            e4 && e4.blur();
          }
          function Le() {
            (Te || Ae) && (H.currentValueEvent -= 0 < r2 ? r2 * Ie(i2 - n) : E * Ie(i2 - n)), (Pe || Be) && (H.currentValueEvent += 0 < r2 ? r2 * Ie(i2 - n) : E * Ie(i2 - n));
          }
        }, To.extend(To.Dial, To.Container, ["clone", "dispose"], "zimContainer", false), To.Tabs = function(s5, c2, n, u, d, h2, g, p, f3, m2, z, y, a, l, b, v, o2, r2, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, i2, D, X, R, W, F2, H, N, V, G, e3, q) {
          if (ve = zob(To.Tabs, arguments, "width, height, tabs, backgroundColor, rollBackgroundColor, selectedBackgroundColor, selectedRollBackgroundColor, color, rollColor, selectedColor, selectedRollColor, vertical, spacing, currentEnabled, currentSelected, corner, base, keyEnabled, gradient, gloss, backing, rollBacking, wait, waitTime, waitBackgroundColor, rollWaitBackgroundColor, waitColor, rollWaitColor, waitModal, waitEnabled, backdropColor, align, valign, labelAlign, labelValign, labelIndent, labelIndentHorizontal, labelIndentVertical, indent, useTap, excludeCustomTap, selectedIndex, styleLabels, keyWrap, style, group, inherit", this))
            return ve;
          z_d("65");
          var U = G === false ? {} : To.getStyle("Tabs", e3, q);
          zot(y) && (y = U.vertical != null && U.vertical), zot(s5) && (s5 = U.width != null ? U.width : null);
          var Q = !zot(s5);
          if (zot(s5) && (s5 = y ? 60 : 240), zot(c2) && (c2 = U.height != null ? U.height : y ? 240 : 60), this.zimContainer_constructor(null, null, null, null, true), this.type = "Tabs", this.group = e3, (zot(n) || n.length <= 0) && (n = U.tabs != null ? U.tabs : [1, 2, 3, 4]), zot(u) && (u = U.backgroundColor != null ? U.backgroundColor : "#777"), zot(d) && (d = U.rollBackgroundColor != null ? U.rollBackgroundColor : "#555"), zot(h2) && (h2 = U.selectedBackgroundColor != null ? U.selectedBackgroundColor : "#333"), zot(g) && (g = U.selectedRollBackgroundColor != null ? U.selectedRollBackgroundColor : d), zot(p) && (p = U.color != null ? U.color : "white"), zot(f3) && (f3 = U.rollColor != null ? U.rollColor : p), zot(m2) && (m2 = U.selectedColor != null ? U.selectedColor : p), zot(z) && (z = U.selectedRollColor != null ? U.selectedRollColor : f3), zot(x2) && (x2 = U.backing != null ? U.backing.clone() : null), zot(k) && (k = U.rollBacking != null ? U.rollBacking.clone() : null), zot(j) && (j = U.align != null ? U.align : "center"), zot(L) && (L = U.valign != null ? U.valign : "center"), zot(_) && (_ = U.labelAlign != null ? U.labelAlign : j), zot(Y) && (Y = U.labelValign != null ? U.labelValign : L), zot(R) && (R = U.indent != null ? U.indent : 10), zot(i2) && (i2 = U.labelIndent != null ? U.labelIndent : R), zot(D) && (D = U.labelIndentHorizontal != null ? U.labelIndentHorizontal : i2), zot(X) && (X = U.labelIndentVertical != null ? U.labelIndentVertical : i2), zot(l) && (l = U.currentEnabled != null && U.currentEnabled), zot(b) && (b = U.currentSelected == null || U.currentSelected), b || (l = true), zot(a) && (a = U.spacing != null ? U.spacing : 1), zot(v) && (v = U.corner != null ? U.corner : 0), zot(w) && (w = U.gradient != null ? U.gradient : null), zot(C) && (C = U.gloss != null ? U.gloss : null), zot(o2) && (o2 = U.base != null ? U.base : v != 0 || Array.isArray(v) ? y ? "left" : "bottom" : "none"), zot(r2) && (r2 = U.keyEnabled == null || U.keyEnabled), zot(W) && (W = U.useTap != null && U.useTap), zot(F2) && (F2 = U.excludeCustomTap != null && U.excludeCustomTap), zot(O) && (O = U.backdropColor != null ? U.backdropColor : null), zot(N) && (N = U.styleLabels != null ? U.styleLabels : null), zot(V) && (V = U.keyWrap == null || U.keyWrap), o2 == "none" || v == 0 || Array.isArray(v))
            Array.isArray(v) || (v = [v, v, v, v]);
          else
            switch (o2) {
              case "bottom":
                v = [v, v, 0, 0];
                break;
              case "left":
                v = [0, v, v, 0];
                break;
              case "top":
                v = [0, 0, v, v];
                break;
              case "right":
                v = [v, 0, 0, v];
            }
          var Z2 = this;
          this.keyEnabled = r2;
          var K, J, $ = 0, ee = [], te = [], t2 = n.length, oe = (s5 - a * (t2 - 1)) / t2, ne = (c2 - a * (t2 - 1) - 2) / t2;
          zot(O) || (J = this.backdrop = new To.Rectangle(s5, c2, O, null, null, null, null, null, false), this.addChild(J));
          var re, ie = false;
          function ae(e4) {
            for (var t3 = 0; t3 < e4.length; t3++) {
              var o3 = e4[t3];
              o3.constructor !== {}.constructor ? re = typeof o3 == "string" || typeof o3 == "number" || o3.type == "Label" ? (e4[t3] = { type: "TabObject", label: String(o3 != null) || o3.type == "Label" ? o3 : "1" }, re && re != "TabObject" && (ie = true), "TabObject") : (re && re == "TabObject" && (ie = true), "Other") : (re && re != "TabObject" && (ie = true), re = "TabObject", o3.type = "TabObject");
            }
          }
          ae(n);
          for (var le, se, ce = 0, ue = 0, de = 0; de < n.length; de++)
            le = n[de], y ? Q && (le.width = le.width || s5) : (zot(le.width) && ue++, ce += zot(le.width) ? oe : le.width);
          if (!y) {
            if (s5 - a * (t2 - 1) < ce)
              for (de = 0; de < n.length; de++)
                (le = n[de]).width = (s5 - a * (t2 - 1)) / ce * (zot(le.width) ? oe : le.width);
            else if (Math.round(ce) < Math.round(s5 - a * (t2 - 1)) && 0 < ue)
              for (se = (t2 * oe - (ce - ue * oe)) / ue, de = 0; de < n.length; de++)
                (le = n[de]).width = zot(le.width) ? se : le.width;
          }
          function he(e4, t3) {
            for (de = 0; de < e4.length; de++)
              (le = e4[de]) != "" && le.type == "TabObject" && (zot(le.label) && (le.label = " "), typeof le.label != "string" && typeof le.label != "number" || (le.label = new To.Label({ text: le.label, size: U.size != null ? U.size : y ? ne / 2 : c2 / 2, font: U.font != null ? U.font : null, style: N, valign: Y, inherit: t3 })));
          }
          he(n, N ? U : null);
          for (var ge = 0, de = 0; de < n.length; de++)
            !(le = n[de]).width && y && le.label.width > ge && (ge = le.label.width);
          var pe = 0;
          function fe(e4, t3) {
            var o3 = [], n2 = [];
            for (de = 0; de < e4.length; de++) {
              if ((le = e4[de]).type == "TabObject") {
                var r3 = { color: zot(le.color) ? To.Pick.choose(p) : le.color, rollColor: zot(le.rollColor) ? To.Pick.choose(f3) : le.rollColor, selectedColor: zot(le.selectedColor) ? To.Pick.choose(m2) : le.selectedColor, selectedRollColor: zot(le.selectedRollColor) ? To.Pick.choose(z) : le.selectedRollColor, backgroundColor: zot(le.backgroundColor) ? To.Pick.choose(u) : le.backgroundColor, rollBackgroundColor: zot(le.rollBackgroundColor) ? To.Pick.choose(d) : le.rollBackgroundColor, selectedBackgroundColor: zot(le.selectedBackgroundColor) ? To.Pick.choose(h2) : le.selectedBackgroundColor, selectedRollBackgroundColor: zot(le.selectedRollBackgroundColor) ? To.Pick.choose(g) : le.selectedRollBackgroundColor, wait: zot(le.wait) ? To.Pick.choose(T2) : le.wait };
                if (t3)
                  for (var i3 in t3)
                    zot(t3[i3]) || (r3[i3] = t3[i3]);
                (K = new To.Button({ width: y ? zot(le.width) ? Q ? s5 : ge + ne / 2 + v[0] / 2 : le.width : zot(le.width) ? oe : le.width, height: y ? ne : c2, label: le.label, borderColor: U.borderColor != null ? U.borderColor : null, borderWidth: U.borderWidth != null ? U.borderWidth : null, backgroundColor: r3.backgroundColor, rollBackgroundColor: r3.rollBackgroundColor, corner: v, shadowColor: -1, gradient: w, gloss: C, backing: x2 ? x2.clone() : null, rollBacking: k ? k.clone() : null, wait: r3.wait, waitTime: zot(le.waitTime) ? A3 : le.waitTime, waitBackgroundColor: zot(le.waitBackgroundColor) ? P : le.waitBackgroundColor, rollWaitBackgroundColor: zot(le.rollWaitBackgroundColor) ? B : le.rollWaitBackgroundColor, waitColor: zot(le.waitColor) ? S2 : le.waitColor, rollWaitColor: zot(le.rollWaitBackgroundColor) ? E : le.rollWaitColor, waitModal: zot(le.waitModal) ? I2 : le.waitModal, waitEnabled: zot(le.waitEnabled) ? M : le.waitEnabled, align: _, valign: Y, indentHorizontal: D, indentVertical: X, inherit: To.copy(U) })).tabInfo = r3, K.color = K.tabInfo.color, K.rollColor = K.tabInfo.rollColor, K.type = "TabsButton", K.content = le, K.listIndentReady = true;
              } else {
                if (le.listIndentReady)
                  K = le;
                else {
                  (K = new To.Container()).type = le.type, K.content = le;
                  for (var a2 = ["text", "backing", "label", "slider", "stepper", "checkBox", "colorPicker", "swatch", "colorLabel"], l2 = 0; l2 < a2.length; l2++)
                    le[a2[l2]] && (K[a2[l2]] = le[a2[l2]]);
                }
                le.checkBox && (K.checkBox = le.checkBox), zot(K.tabInfo) && (K.tabInfo = {}), F2 && (K.excludeTap = true), K.tabInfo.color = zot(le.color) ? p : le.color, K.tabInfo.backgroundColor = zot(le.backgroundColor) ? u : le.backgroundColor, le.listIndentReady || (new To.Rectangle(Math.max(le.width, y ? Q ? s5 : ge + ne / 2 + v[0] / 2 : le.width), Math.max(le.height, y ? ne : c2), To.clear).addTo(K).expand(0).cur(), le.center(K).cur(), j != "center" && j != "middle" && le.pos(0, null, j == "right"), L != "center" && L != "middle" && le.pos(null, 0, null, L == "bottom"));
              }
              K.width > pe && (pe = K.width), W ? K.tap(function(e5) {
                ye(e5.currentTarget.znum), Z2.dispatchEvent("change"), To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
              }) : K.zimTabEvent = K.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function(e5) {
                ye(e5.currentTarget.znum), Z2.dispatchEvent("change"), To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
              }), K.on("mousedown", function(e5) {
                Z2.buttonDown = e5.currentTarget;
              }), K.on("pressup", function() {
                Z2.buttonDown = null;
              }), n2.push(le.label), o3.push(K), K.index = de;
            }
            return [o3, n2];
          }
          var me = fe(n);
          function ze() {
            var e4, t3 = 0, o3 = 0;
            for (de = 0; de < te.length; de++)
              (e4 = te[de]).znum = de, e4.selectedIndex = de, e4.selectedIndex == $ && b && (e4.backgroundColor = h2, e4.rollBackgroundColor = g, e4.color = m2), ee[de] && (ee[de].znum = de), Z2.addChild(e4), y && !Q || (e4.x = (s5 - e4.width) / 2, e4.y = (c2 - e4.height) / 2), y ? (e4.y = o3, o3 = e4.y + e4.height + a, j == "left" ? e4.x = (e4.type == "TabsButton" || e4.type == "ListItem" ? 0 : R) + (e4.regX - (e4.getBounds() ? e4.getBounds().x : 0)) * e4.scaleX : j == "right" && (e4.x = (Q ? s5 : pe) - e4.width - (e4.type == "TabsButton" || e4.type == "ListItem" ? 0 : R))) : (e4.x = t3, t3 = e4.x + e4.width + a, L == "top" ? e4.y = (e4.type != "TabsButton" || ie ? R : 0) + (e4.regY - (e4.getBounds() ? e4.getBounds().y : 0)) * e4.scaleY : L == "bottom" && (e4.y = c2 - e4.height - (e4.type != "TabsButton" || ie ? R : 0))), de != 0 || l || (e4.enabled = false), e4.enabled = true;
            zot(O) || Z2.removeChild(J), Z2._bounds = null;
            var n2 = Z2.getBounds(), r3 = 0, i3 = 0;
            if (n2 || createjs.EaselJS.version[0] == 0 ? n2 && (r3 = y && n2.width != 0 && Q ? s5 : n2.width, i3 = y && n2.height != 0 ? n2.height : c2, Z2.setBounds(r3, i3)) : Z2.setBounds(), zot(O) || (J.widthOnly = r3, J.heightOnly = i3, Z2.addChildAt(J, 0)), y && !Q)
              for (de = 0; de <= te.length; de++)
                j != "center" && j != "middle" || (e4.x = (r3 - e4.width) / 2);
          }
          function ye(e4) {
            var t3;
            e4 != $ && ((t3 = te[$]) && b && (t3.tabInfo && zot(t3.tabInfo.wait) && (t3.tabInfo.backgroundColor && (t3.backgroundColor = t3.tabInfo.backgroundColor), t3.tabInfo.rollBackgroundColor && (t3.rollBackgroundColor = t3.tabInfo.rollBackgroundColor), t3.tabInfo.color && t3.label && (t3.color = t3.tabInfo.color), t3.tabInfo.rollColor && t3.label && (t3.rollColor = t3.tabInfo.rollColor)), l || (t3.enabled = true)), (t3 = te[$ = e4]) && (t3.tabInfo && zot(t3.tabInfo.wait) && b && (t3.tabInfo.selectedBackgroundColor && (t3.backgroundColor = t3.tabInfo.selectedBackgroundColor), t3.tabInfo.selectedRollBackgroundColor && (t3.rollBackgroundColor = t3.tabInfo.selectedRollBackgroundColor), t3.tabInfo.selectedColor && t3.label && (t3.color = t3.tabInfo.selectedColor), t3.tabInfo.selectedRollColor && t3.label && (t3.rollColor = t3.tabInfo.selectedRollColor)), l || (t3.enabled = false)));
          }
          function be() {
            Z2.keyFocus = true;
            var e4 = document.activeElement;
            e4 && e4.blur();
          }
          te = me[0], ee = me[1], ze(), this.addAt = function(e4, t3, o3) {
            zot(t3) && (t3 = te.length), t3 = To.constrain(t3, 0, te.length), Array.isArray(e4) || (e4 = [e4]), ae(e4), he(e4, o3);
            e4 = fe(e4, o3), o3 = e4[0], e4 = e4[1];
            t3 <= $ && ($ += o3.length);
            o3 = [t3, 0].concat(o3);
            return Array.prototype.splice.apply(te, o3), o3 = [t3, 0].concat(e4), Array.prototype.splice.apply(ee, o3), ze(), Z2;
          }, this.removeAt = function(e4, t3) {
            if (te.length == 0)
              return Z2;
            for (zot(e4) && (e4 = 1), zot(t3) && (t3 = te.length - e4), (t3 = To.constrain(t3, 0, te.length - e4)) <= $ && $ <= t3 + e4 && ($ = -1), t3 + e4 < $ && ($ -= e4), de = t3; de < t3 + e4; de++)
              te[de].tabInfo && (te[de].tabInfo.backgroundColor && (te[de].backgroundColor = te[de].tabInfo.backgroundColor), te[de].tabInfo.color && te[de].label && (te[de].color = te[de].tabInfo.color)), W ? te[de].noTap() : te[de].off((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", te[de].zimTabEvent), te[de].removeFrom();
            return te.splice(t3, e4), ee.splice(t3, e4), ze(), Z2;
          }, Z2.keyEvent = function(e4) {
            var t3;
            Z2.keyEnabled && Z2.keyFocus && !Z2.zimAccessibility && e4.keyCode == 9 && (t3 = $, e4.shiftKey ? ye(--t3 < 0 ? V ? n.length - 1 : 0 : t3) : ye(++t3 > n.length - 1 ? V ? 0 : n.length - 1 : t3), Z2.dispatchEvent("change"), Z2.dispatchEvent("keychange"), To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update(), e4.preventDefault());
          }, window.addEventListener("keydown", Z2.keyEvent), Object.defineProperty(this, "selected", { get: function() {
            return te[$];
          }, set: function(e4) {
            zon && zogy("Tabs() - selected is read only - try selectedIndex");
          } }), Object.defineProperty(this, "selectedIndex", { get: function() {
            return $;
          }, set: function(e4) {
            ye(e4), To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
          } }), this.last = function() {
            return this.selectedIndex = this.buttons.length - 1, this;
          }, this.first = function() {
            return this.selectedIndex = 0, this;
          }, Object.defineProperty(this, "tabs", { get: function() {
            return $;
          }, set: function(e4) {
            ye(Math.min(Math.max(e4, 0), n.length - 1)), To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
          } }), Object.defineProperty(this, "color", { get: function() {
            return Z2.buttons[0].tabItems ? Z2.buttons[0].tabItems.color : p;
          }, set: function(e4) {
            if (p = e4, Z2.buttons[0].tabInfo) {
              for (var t3 = 0; t3 < Z2.buttons.length; t3++)
                Z2.buttons[t3].tabInfo && (Z2.buttons[t3].tabInfo.color = e4), t3 == $ && b || (Z2.buttons[t3].color = p);
              To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
            }
          } }), Object.defineProperty(this, "rollColor", { get: function() {
            return Z2.buttons[0].tabItems ? Z2.buttons[0].tabItems.rollColor : f3;
          }, set: function(e4) {
            if (f3 = e4, Z2.buttons[0].tabInfo) {
              for (var t3 = 0; t3 < Z2.buttons.length; t3++)
                Z2.buttons[t3].tabInfo && (Z2.buttons[t3].tabInfo.rollColor = e4), Z2.buttons[t3].rollColor = f3, t3 != $ && Z2.buttons[t3].rolled && (Z2.buttons[t3].color = f3);
              To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
            }
          } }), Object.defineProperty(this, "selectedColor", { get: function() {
            return Z2.buttons[0].tabItems ? Z2.buttons[0].tabItems.selectedColor : m2;
          }, set: function(e4) {
            if (m2 = e4, Z2.buttons[0].tabInfo) {
              for (var t3 = 0; t3 < Z2.buttons.length; t3++)
                Z2.buttons[t3].tabInfo && (Z2.buttons[t3].tabInfo.selectedColor = e4), t3 == $ && b && (Z2.buttons[t3].color = m2);
              To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
            }
          } }), Object.defineProperty(this, "selectedRollColor", { get: function() {
            return Z2.buttons[0].tabItems ? Z2.buttons[0].tabItems.selectedRollColor : z;
          }, set: function(e4) {
            if (z = e4, Z2.buttons[0].tabInfo) {
              for (var t3 = 0; t3 < Z2.buttons.length; t3++)
                Z2.buttons[t3].tabInfo && (Z2.buttons[t3].tabInfo.selectedRollColor = e4), t3 == $ && b && Z2.buttons[t3].rolled && (Z2.buttons[t3].color = z);
              To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
            }
          } }), Object.defineProperty(this, "backgroundColor", { get: function() {
            return Z2.buttons[0].tabItems ? Z2.buttons[0].tabItems.backgroundColor : u;
          }, set: function(e4) {
            if (u = e4, Z2.buttons[0].tabInfo) {
              for (var t3 = 0; t3 < Z2.buttons.length; t3++)
                Z2.buttons[t3].tabInfo && (Z2.buttons[t3].tabInfo.backgroundColor = e4), t3 == $ && b || (Z2.buttons[t3].backgroundColor = u);
              To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
            }
          } }), Object.defineProperty(this, "rollBackgroundColor", { get: function() {
            return Z2.buttons[0].tabItems ? Z2.buttons[0].tabItems.rollBackgroundColor : d;
          }, set: function(e4) {
            if (d = e4, Z2.buttons[0].tabInfo) {
              for (var t3 = 0; t3 < Z2.buttons.length; t3++)
                Z2.buttons[t3].tabInfo && (Z2.buttons[t3].tabInfo.rollBackgroundColor = e4), Z2.buttons[t3].rollBackgroundColor = d, t3 != $ && Z2.buttons[t3].rolled && (Z2.buttons[t3].backgroundColor = d);
              To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
            }
          } }), Object.defineProperty(this, "selectedBackgroundColor", { get: function() {
            return Z2.buttons[0].tabItems ? Z2.buttons[0].tabItems.selectedBackgroundColor : h2;
          }, set: function(e4) {
            if (h2 = e4, Z2.buttons[0].tabInfo) {
              for (var t3 = 0; t3 < Z2.buttons.length; t3++)
                Z2.buttons[t3].tabInfo && (Z2.buttons[t3].tabInfo.selectedBackgroundColor = e4), t3 == $ && b && (Z2.buttons[t3].backgroundColor = h2);
              To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
            }
          } }), Object.defineProperty(this, "selectedRollBackgroundColor", { get: function() {
            return Z2.buttons[0].tabItems ? Z2.buttons[0].tabItems.selectedRollBackgroundColor : g;
          }, set: function(e4) {
            if (g = e4, Z2.buttons[0].tabInfo) {
              for (var t3 = 0; t3 < Z2.buttons.length; t3++)
                Z2.buttons[t3].tabInfo && (Z2.buttons[t3].tabInfo.selectedRollBackgroundColor = e4), t3 == $ && b && Z2.buttons[t3].rolled && (Z2.buttons[t3].backgroundColor = g);
              To.OPTIMIZE || !zns && OPTIMIZE || !Z2.stage || Z2.stage.update();
            }
          } }), Object.defineProperty(this, "label", { get: function() {
            return ee[$];
          }, set: function(e4) {
            zon && zogy("Tabs() - selected is read only - try selectedIndex");
          } }), Object.defineProperty(this, "text", { get: function() {
            return ee[$] != null ? ee[$].text : void 0;
          }, set: function(e4) {
            zon && zogy("Tabs() - selected is read only - try selectedIndex");
          } }), Object.defineProperty(this, "buttons", { get: function() {
            return te;
          }, set: function(e4) {
            zon && zogy("Tabs() - buttons is read only");
          } }), Object.defineProperty(this, "labels", { get: function() {
            return ee;
          }, set: function(e4) {
            zon && zogy("Tabs() - labels is read only");
          } }), this._enabled = true, Object.defineProperty(Z2, "enabled", { get: function() {
            return Z2._enabled;
          }, set: function(e4) {
            Ge(Z2, e4);
          } }), KEYFOCUS !== void 0 && (To.KEYFOCUS = KEYFOCUS), Object.defineProperty(this, "keyFocus", { get: function() {
            return To.KEYFOCUS == Z2;
          }, set: function(e4) {
            To.KEYFOCUS = Z2;
          } }), r2 && To.KEYFOCUS && be(), this.on("mousedown", function() {
            r2 && be();
          });
          var ve = Z2.getBounds();
          zot(ve) || ve.width == 0 ? Z2.setBounds(0, 0, s5, c2) : Z2.width = s5, zot(H) && (H = U.selectedIndex != null ? U.selectedIndex : 0), Z2.selectedIndex = H, G !== false && To.styleTransforms(this, U), this.clone = function() {
            for (var e4 = To.copy(n, true), t3 = 0; t3 < e4.length; t3++)
              e4[t3].label = e4[t3].label.clone();
            return Z2.cloneProps(new To.Tabs(s5, c2, e4, u, d, h2, g, p, f3, m2, z, y, a, l, b, v, o2, r2, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, i2, D, X, R, W, F2, H, N, V, G, this.group, q));
          }, this.doDispose = function(e4, t3, o3) {
            Z2.keyEvent && window.removeEventListener("keydown", Z2.keyEvent), To.loop(Z2.buttons, function(e5) {
              e5.dispose();
            }), Z2.keyEvent = null, o3 || this.zimContainer_dispose(true), b = le = selected = n = ee = label = K = te = null;
          };
        }, To.extend(To.Tabs, To.Container, ["clone", "dispose"], "zimContainer", false), To.Tabs.prototype.dispose = function(e3) {
          return this.doDispose(null, null, e3);
        }, To.Pad = function(e3, n, t2, o2, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2) {
          var M;
          if (M = zob(To.Pad, arguments, "width, cols, rows, keys, backgroundColor, rollBackgroundColor, selectedBackgroundColor, selectedRollBackgroundColor, color, rollColor, selectedColor, selectedRollColor, spacing, currentEnabled, corner, labelColor, gradient, gloss, backing, rollBacking, wait, waitTime, waitBackgroundColor, rollWaitBackgroundColor, waitColor, rollWaitColor, waitModal, waitEnabled, selectedIndex, style, group, inherit", this))
            return M;
          z_d("66"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Pad", this.group = E;
          var O = S2 === false ? {} : To.getStyle(this.type, this.group, I2);
          if (zot(e3) && (e3 = O.width != null ? O.width : 150), zot(n) && (n = O.cols != null ? O.cols : 3), zot(t2) && (t2 = O.rows != null ? O.rows : n), zot(o2))
            if (O.keys != null)
              o2 = O.keys;
            else {
              o2 = [];
              for (var j = 1; j <= t2 * n; j++)
                o2.push(j);
            }
          zot(g) && (g = O.currentEnabled == null || O.currentEnabled), zot(h2) && (h2 = O.spacing != null ? O.spacing : 1);
          var L, _ = this;
          this.cols = n, this.rows = t2;
          var Y, D = e3 / n - h2, X = [], R = 0;
          this.labels = [], this.buttons = [];
          for (j = 0; j < t2; j++) {
            for (var W = [], F2 = 0; F2 < n; F2++)
              W.push(o2[R] != null ? o2[R] : ""), R++;
            var H = O.corner != null ? O.corner : p;
            H && !Array.isArray(H) && (H = [H, H, H, H]), Y = X[j] = new To.Tabs({ width: e3, height: D, tabs: W, backgroundColor: O.backgroundColor != null ? O.backgroundColor : r2, rollBackgroundColor: O.rollBackgroundColor != null ? O.rollBackgroundColor : i2, selectedBackgroundColor: O.selectedBackgroundColor != null ? O.selectedBackgroundColor : a, color: O.color != null ? O.color : s5, rollColor: O.rollColor != null ? O.rollColor : c2, selectedColor: O.selectedColor != null ? O.selectedColor : u, spacing: O.spacing != null ? O.spacing : h2, currentEnabled: O.currentEnabled != null ? O.currentEnabled : g, corner: H, backing: O.backing != null ? O.backing.clone() : y, rollBacking: O.rollBacking != null ? O.rollBacking.clone() : b, base: null, keyEnabled: false, gradient: O.gradient != null ? O.gradient : m2, gloss: O.gloss != null ? O.gloss : z, wait: O.wait != null ? O.wait : v, waitTime: O.waitTime != null ? O.waitTime : w, waitBackgroundColor: O.waitBackgroundColor != null ? O.waitBackgroundColor : C, rollWaitBackgroundColor: O.rollWaitBackgroundColor != null ? O.rollWaitBackgroundColor : x2, waitColor: O.waitColor != null ? O.waitColor : k, rollWaitColor: O.rollWaitColor != null ? O.rollWaitColor : T2, waitModal: O.waitModal != null ? O.waitModal : A3, waitEnabled: O.waitEnabled != null ? O.waitEnabled : P, group: E, style: false }), this.labels = this.labels.concat(Y.labels), this.buttons = this.buttons.concat(Y.buttons), this.addChild(Y), Y.selectedIndex = -1, Y.y = (D + h2) * j, Y.znum = j, Y.on("change", N);
          }
          function N(e4) {
            var t3 = e4.target;
            _.selected = t3.selected, _.text = t3.text, _.label = t3.label;
            for (var e4 = t3.selectedIndex, o3 = 0; o3 < X.length; o3++)
              X[o3].selectedIndex = -1;
            t3.selectedIndex = e4, L = t3.znum * n + e4, _.dispatchEvent("change"), To.OPTIMIZE || !zns && OPTIMIZE || !_.stage || _.stage.update();
          }
          this.tabs = X, Object.defineProperty(this, "selectedIndex", { get: function() {
            return L;
          }, set: function(e4) {
            L = e4;
            for (var t3 = 0; t3 < X.length; t3++)
              X[t3].selectedIndex = -1;
            e4 = Math.floor(L / n);
            0 <= e4 && e4 < _.tabs.length && (_.tabs[e4].selectedIndex = L % n);
          } }), this._enabled = true, Object.defineProperty(_, "enabled", { get: function() {
            return _._enabled;
          }, set: function(e4) {
            Ge(_, e4);
          } }), zot(B) && (B = O.selectedIndex != null ? O.selectedIndex : 0), _.selectedIndex = B, S2 !== false && To.styleTransforms(this, O), this.clone = function() {
            return _.cloneProps(new To.Pad(e3, n, t2, o2, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, this.group, I2));
          }, this.dispose = function(e4, t3, o3) {
            To.loop(X, function(e5) {
              e5.dispose();
            }), this.labels = this.buttons = tabs = this.tabs = null, Y = X = _.rowTabs = null, o3 || this.zimContainer_dispose(true);
          };
        }, To.extend(To.Pad, To.Container, ["clone", "dispose"], "zimContainer", false), To.DPad = function(e3, o2, t2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2) {
          if (b = zob(To.DPad, arguments, "axis, width, backgroundColor, borderWidth, borderColor, indicatorColor, indicatorPressColor, indicatorScale, indicatorRadius, innerCircle, innerScale, activeRadius, clamp, logo, style, group, inherit", this))
            return b;
          z_d("66.2"), this.zimContainer_constructor(null, null, null, null, false), this.type = "DPad", this.group = f3;
          var z = p === false ? {} : To.getStyle(this.type, this.group, m2);
          zot(e3) && (e3 = z.axis != null ? z.axis : "all"), zot(o2) && (o2 = z.width != null ? z.width : 100), zot(t2) && (t2 = z.backgroundColor != null ? z.backgroundColor : "#666666"), zot(r2) && (r2 = z.borderColor != null ? z.borderColor : null), zot(n) && (n = z.borderWidth != null ? z.borderWidth : null), r2 < 0 || n < 0 ? r2 = n = null : r2 != null && n == null && (n = 1), zot(i2) && (i2 = z.indicatorColor != null ? z.indicatorColor : "#dddddd"), zot(a) && (a = z.indicatorPressColor != null ? z.indicatorPressColor : "#eeeeee"), zot(l) && (l = z.indicatorScale != null ? z.indicatorScale : 1), zot(s5) && (s5 = z.indicatorRadius != null ? z.indicatorRadius : null), zot(c2) && (c2 = z.innerCircle == null || z.innerCircle), zot(u) && (u = z.innerScale != null ? z.innerScale : 0.5), zot(d) && (d = z.activeRadius != null ? z.activeRadius : o2), zot(h2) && (h2 = z.clamp == null || z.clamp), zot(g) && (g = z.logo != null && z.logo);
          var y = this;
          this.axis = e3;
          this.outer = new To.Circle(o2 / 2, t2, r2, n).addTo(this);
          var b = this.inner = new To.Circle(o2 * u / 2, "rgba(0,0,0,.2)").center(this);
          g && (this.logo = new To.Label({ text: "D", bold: true }).center(b).mov(1, 2).alp(0.3));
          var v = new To.Container().addTo(this), w = 0.2 * (o2 - n) * l, b = 8;
          e3 == "vertical" ? b = 2 : e3 == "horizontal" ? (b = 2, v.rotation = 90) : e3 == "both" && (b = 4), To.loop(b, function(e4, t3) {
            new To.Triangle(w, w, w, i2).addTo(v).reg(null, zot(s5) ? 0.475 * (o2 - n) : s5).rot(360 * e4 / t3);
          });
          var C, x2, k = 0, T2 = 0;
          this.on("mousedown", function(e4) {
            e4.target.stage, x2 = e4, v.loop(function(e5) {
              e5.color = a;
            }), y.ticker = To.Ticker.add(function() {
              var e5;
              k = (e5 = x2).stageX / To.scaX, T2 = e5.stageY / To.scaY, C = y.globalToLocal(k, T2), (e5 = new createjs.Event("change")).dirX = 2 * ((C.x + d) / (2 * d) - 0.5), e5.dirY = 2 * ((C.y + d) / (2 * d) - 0.5), h2 && (e5.dirX = To.constrain(e5.dirX, -1, 1), e5.dirY = To.constrain(e5.dirY, -1, 1)), y.dirX = e5.dirX, y.dirY = e5.dirY, y.dispatchEvent(e5);
            });
          }), this.on("pressmove", function(e4) {
            x2 = e4;
          }), this.on("pressup", function(e4) {
            To.Ticker.remove(y.ticker), y.dirX = y.dirY = 0, v.loop(function(e5) {
              e5.color = i2;
            }), y.stage && y.stage.update();
          }), this._enabled = true, Object.defineProperty(y, "enabled", { get: function() {
            return y._enabled;
          }, set: function(e4) {
            Ge(y, e4);
          } }), To.styleTransforms(this, z), this.clone = function() {
            return y.cloneProps(new To.DPad(e3, o2, t2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, this.group, m2));
          }, this.dispose = function(e4, t3, o3) {
            return this.ticker && To.Ticker.remove(this.ticker), o3 || this.zimContainer_dispose(true), true;
          };
        }, To.extend(To.DPad, To.Container, ["clone", "dispose"], "zimContainer", false), To.Radial = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y) {
          if (H = zob(To.Radial, arguments, "labels, size, font, height, coreRadius, coreColor, startAngle, totalAngle, angles, flip, shiftRadial, icons, rollIcons, rotateIcons, iconsShiftRadial, backgroundColor, rollBackgroundColor, selectedBackgroundColor, selectedRollBackgroundColor, backdropColor, color, rollColor, selectedColor, selectedRollColor, borderColor, borderWidth, gradient, gap, gapAsAngle, spacing, spacingInner, spacingOuter, currentEnabled, currentSelected, selectedIndex, style, group, inherit", this))
            return H;
          z_d("66.4"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Radial", this.group = _;
          var D = L === false ? {} : To.getStyle(this.type, this.group, Y);
          zot(e3) && (e3 = D.labels != null ? D.labels : ["A", "B", "C", "D", "E"]), zot(t2) && (t2 = D.size != null ? D.size : 30), zot(o2) && (o2 = D.font != null ? D.font : "verdana"), zot(a) && (a = D.startAngle != null ? D.startAngle : null), zot(l) && (l = D.totalAngle != null ? D.totalAngle : 360), zot(s5) && (s5 = D.angles != null ? D.angles : null), zot(c2) && (c2 = D.flip == null || D.flip), zot(u) && (u = D.shiftRadial != null ? D.shiftRadial : 0), zot(d) && (d = D.icons != null ? D.icons : null), zot(h2) && (h2 = D.rollIcons != null ? D.rollIcons : null), zot(g) && (g = D.rotateIcons != null && D.rotateIcons), zot(p) && (p = D.iconsShiftRadial != null ? D.iconsShiftRadial : 0), zot(n) && (n = D.height != null ? D.height : 60), zot(r2) && (r2 = D.coreRadius != null ? D.coreRadius : 100), zot(i2) && (i2 = D.coreColor != null ? D.coreColor : "#333"), zot(b) && (b = D.backdropColor != null ? D.backdropColor : To.clear), zot(f3) && (f3 = D.backgroundColor != null ? D.backgroundColor : "#666"), zot(m2) && (m2 = D.rollBackgroundColor != null ? D.rollBackgroundColor : "#777"), zot(z) && (z = D.selectedBackgroundColor != null ? D.selectedBackgroundColor : "#444"), zot(y) && (y = D.selectedRollBackgroundColor != null ? D.selectedRollBackgroundColor : z), zot(v) && (v = D.color != null ? D.color : "white"), zot(w) && (w = D.rollColor != null ? D.rollColor : v), zot(C) && (C = D.selectedColor != null ? D.selectedColor : v), zot(x2) && (x2 = D.selectedRollColor != null ? D.selectedRollColor : w), zot(k) && (k = D.borderColor != null ? D.borderColor : "#333"), zot(T2) && (T2 = D.borderWidth != null ? D.borderWidth : 2), zot(B) && (B = D.gapAsAngle != null && D.gapAsAngle), zot(P) && (P = D.gap != null ? D.gap : B ? 3 : 6), zot(A3) && (A3 = D.gradient != null ? D.gradient : null), A3 === true && (A3 = 0.1), zot(S2) && (S2 = D.spacing != null ? D.spacing : 6), zot(E) && (E = D.spacingInner != null ? D.spacingInner : S2), zot(I2) && (I2 = D.spacingOuter != null ? D.spacingOuter : S2), zot(M) && (M = D.currentEnabled != null && D.currentEnabled), zot(O) && (O = D.currentSelected == null || D.currentSelected);
          var X = this, R = this.innerRadius = r2 + E, W = this.outerRadius = R + n;
          this.setBounds(-W, -W, 2 * W, 2 * W);
          var F2, H = this.backdrop = new To.Circle(W + I2, b).center(this);
          if (0 < r2 && (this.core = new To.Circle(r2, i2).center(this)), s5 && s5.length < e3.length - 1)
            return zon && zogy("Radial() - not enough angles provided"), this;
          if (e3 && 0 < e3.length || d && 0 < d.length) {
            if (e3 && 0 < e3.length && (F2 = e3.length), d && 0 < d.length && (F2 = 0 < F2 ? Math.min(d.length, F2) : d.length), h2 && h2.length < F2)
              for (var N = 0; N < F2 - h2.length; N++)
                h2.push(new To.Circle(1, To.clear));
            var V = H.width, G = this.buttons = new To.Container(-V / 2, -V / 2, V, V).centerReg(this), q = P;
            B || (P = P / W * 180 / Math.PI, q = q / R * 180 / Math.PI);
            for (var U = (l - P * F2 + (l == 360 ? 0 : P)) / F2, Q = a || 0, Z2 = 0; Z2 < F2; Z2++) {
              s5 && (U = s5[Z2]);
              var K = new To.Shape(-V / 2, -V / 2, V, V).centerReg(G);
              K.num = Z2, K.zimSelected = false, K.angle = U;
              var J = K.graphics;
              K.backgroundColor = To.Pick.choose(f3), K.rollBackgroundColor = To.Pick.choose(m2), K.selectedBackgroundColor = To.Pick.choose(z), K.selectedRollBackgroundColor = To.Pick.choose(y), K.color = To.Pick.choose(v), K.rollColor = To.Pick.choose(w), K.selectedColor = To.Pick.choose(C), K.selectedRollColor = To.Pick.choose(x2), K.colorCommand = J.f(K.backgroundColor).command, (zot(T2) || 0 < T2) && (zot(k) && zot(T2) || (zot(k) && (k = "black"), K.borderColorCommand = J.s(k).command, K.borderWidthCommand = J.ss(T2).command));
              var $, ee = (Q - 90 - U / 2) * Math.PI / 180, te = (Q - 90 + U / 2) * Math.PI / 180, oe = (Q - 90 + (U + P - q) / 2) * Math.PI / 180, ne = (Q - 90 - (U + P - q) / 2) * Math.PI / 180;
              J.arc(0, 0, W, ee, te, false), J.arc(0, 0, R, oe, ne, true).cp(), A3 && (J.s().ss().rf(["rgba(0,0,0," + A3 + ")", "rgba(255,255,255," + A3 + ")"], [0, 1], 0, 0, R, 0, 0, W), J.arc(0, 0, W, ee, te, false), J.arc(0, 0, R, oe, ne, true).cp()), K.cursor = "pointer", K.zimOverEvent = K.on("mouseover", function(e4) {
                e4 = e4.target;
                e4.colorCommand.style = e4 == X.selected && O ? e4.selectedRollBackgroundColor : e4.rollBackgroundColor, e4.label && (e4.label.color = e4 == X.selected && O ? e4.selectedRollColor : e4.rollColor), h2 && (e4.holder.removeAllChildren(), h2[e4.num].loc(1, 0, e4.holder)), X.stage && X.stage.update();
              }), K.zimOutEvent = K.on("mouseout", function(e4) {
                e4 = e4.target;
                e4.colorCommand.style = e4 == X.selected && O ? e4.selectedBackgroundColor : e4.backgroundColor, e4.label && (e4.label.color = e4 == X.selected && O ? e4.selectedColor : e4.color), h2 && (e4.holder.removeAllChildren(), d && d[e4.num].loc(1, 0, e4.holder)), X.stage && X.stage.update();
              }), K.zimDownEvent = K.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function(e4) {
                var t3 = e4.target, e4 = t3 !== X.selected;
                X.lastSelected = X.selected, re = t3.num, O ? e4 ? (X.selected && (X.selected.colorCommand.style = X.selected.backgroundColor, X.selected.label && (X.selected.label.color = X.selected.color)), X.selected = t3, X.label = t3.label, X.label && (X.text = X.label.text), X.icon = t3.icon, t3.colorCommand.style = t3.selectedRollBackgroundColor, t3.label && (t3.label.color = t3.selectedRollColor)) : M || (re = -1, X.selected = null, X.label = null, X.text = null, X.icon = null, t3.colorCommand.style = t3.rollBackgroundColor, t3.label && (t3.label.color = t3.rollColor)) : (X.selected = t3, X.label = t3.label, X.label && (X.text = X.label.text), X.icon = t3.icon), X.dispatchEvent("change"), To.OPTIMIZE || !zns && OPTIMIZE || !X.stage || X.stage.update();
              }), d && 0 < d.length && (ne = R + n / 2 + p, (ne = K.holder = new To.Container(3, ne).addTo(this).reg(1, ne).rot(Q)).mouseChildren = false, ne.mouseEnabled = false, K.icon = d[Z2], d[Z2].loc(1, 0, ne), g || (d[Z2].rotation = -Q)), e3 && 0 < e3.length && ($ = e3[Z2].type != "LabelOnArc" ? ($ = e3[Z2].type == "Label" ? e3[Z2] : new To.Label({ text: e3[Z2], size: t2, font: o2, color: v, style: L, inherit: Y }), new To.LabelOnArc({ label: $, color: v, size: t2, spacing: -5, flip: c2 && 90 < Q && Q < 270, radius: R + (n - $.height) / 2 + 2 + u, style: L, inherit: Y })) : e3[Z2], e3[Z2] = $, (K.label = $).center(this).rot(Q), $.mouseChildren = false, $.mouseEnabled = false), Z2 != e3.length - 1 && (Q += (U + (s5 ? s5[Z2 + 1] : U)) / 2 + P);
            }
            zot(a) || (X.rotation += X.buttons.getChildAt(0).angle / 2);
          }
          var re = null;
          Object.defineProperty(this, "selectedIndex", { get: function() {
            return re;
          }, set: function(e4) {
            var t3;
            X.buttons && (t3 = X.buttons.getChildAt(e4)), t3 !== X.selected && (X.selected && (X.selected.colorCommand.style = X.selected.backgroundColor, X.selected.label && (X.selected.label.color = X.selected.color)), (X.selected = t3) && (O && (t3.colorCommand.style = t3.selectedRollBackgroundColor), t3.label && (O && (t3.label.color = t3.selectedColor), X.text = t3.label.text))), To.OPTIMIZE || !zns && OPTIMIZE || !X.stage || X.stage.update();
          } }), zot(j) && (j = D.selectedIndex != null ? D.selectedIndex : 0), X.selectedIndex = j, To.styleTransforms(this, D), this.clone = function() {
            return X.cloneProps(new To.Radial(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, this.group, Y));
          };
        }, To.extend(To.Radial, To.Container, "clone", "zimContainer", false), To.RadialMenu = function(e3, i2, a, l, s5, t2, o2, n, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, r2, S2, E, I2, M, O, j, L, _, Y) {
          var D = "menu, size, font, height, coreRadius, coreColor, title, titleIcon, startAngle, totalAngle, flip, shiftRadial, rotateIcons, iconsShiftRadial, backgroundColor, rollBackgroundColor, selectedBackgroundColor, selectedRollBackgroundColor, backdropColor, color, rollColor, selectedColor, selectedRollColor, borderColor, borderWidth, gradient, gap, gapAsAngle, spacing, spacingInner, spacingOuter, currentEnabled, currentSelected, open, under, style, group, inherit", X = D.split(", "), R = false;
          if (e3 && e3.constructor === {}.constructor) {
            for (var W in e3)
              if (0 <= X.indexOf(W)) {
                R = true;
                break;
              }
          }
          if (e3 && R && (V = zob(To.RadialMenu, arguments, D, this)))
            return V;
          z_d("66.6"), this.zimContainer_constructor(null, null, null, null, false), this.type = "RadialMenu", this.group = _;
          var F2 = L === false ? {} : To.getStyle(this.type, this.group, Y);
          zot(e3) && (e3 = F2.menu != null ? F2.menu : { A: { A1: ["AA1", "AA2", "AA3", "AA4"], A2: [], A3: [] }, B: ["B1", "B2", "B3", "B4", "B5", "B6"], C: [] }), zot(i2) && (i2 = F2.size != null ? F2.size : 30), zot(a) && (a = F2.font != null ? F2.font : "verdana"), zot(c2) && (c2 = F2.startAngle != null ? F2.startAngle : null), zot(u) && (u = F2.totalAngle != null ? F2.totalAngle : 360), zot(d) && (d = F2.flip == null || F2.flip), zot(g) && (g = F2.rotateIcons != null && F2.rotateIcons), zot(h2) && (h2 = F2.shiftRadial != null ? F2.shiftRadial : 0), zot(p) && (p = F2.iconsShiftRadial != null ? F2.iconsShiftRadial : 0), zot(l) && (l = F2.height != null ? F2.height : 60), zot(s5) && (s5 = F2.coreRadius != null ? F2.coreRadius : 100), zot(t2) && (t2 = F2.coreColor != null ? F2.coreColor : "#333"), zot(o2) && (o2 = F2.title != null ? F2.title : "MENU"), zot(n) && (n = F2.titleIcon != null ? F2.titleIcon : null), zot(b) && (b = F2.backdropColor != null ? F2.backdropColor : To.clear), zot(f3) && (f3 = F2.backgroundColor != null ? F2.backgroundColor : "#666"), zot(m2) && (m2 = F2.rollBackgroundColor != null ? F2.rollBackgroundColor : "#777"), zot(z) && (z = F2.selectedBackgroundColor != null ? F2.selectedBackgroundColor : "#444"), zot(y) && (y = F2.selectedRollBackgroundColor != null ? F2.selectedRollBackgroundColor : z), zot(v) && (v = F2.color != null ? F2.color : "white"), zot(w) && (w = F2.rollColor != null ? F2.rollColor : v), zot(C) && (C = F2.selectedColor != null ? F2.selectedColor : v), zot(x2) && (x2 = F2.selectedRollColor != null ? F2.selectedRollColor : w), zot(k) && (k = F2.borderColor != null ? F2.borderColor : "#333"), zot(T2) && (T2 = F2.borderWidth != null ? F2.borderWidth : 2), zot(B) && (B = F2.gapAsAngle != null && F2.gapAsAngle), zot(P) && (P = F2.gap != null ? F2.gap : B ? 3 : 6), zot(r2) && (r2 = F2.spacing != null ? F2.spacing : 6), zot(A3) && (A3 = F2.gradient != null ? F2.gradient : null), A3 === true && (A3 = 0.1), zot(S2) && (S2 = F2.spacingInner != null ? F2.spacingInner : r2), zot(E) && (E = F2.spacingOuter != null ? F2.spacingOuter : r2), zot(I2) && (I2 = F2.currentEnabled != null && F2.currentEnabled), zot(M) && (M = F2.currentSelected == null || F2.currentSelected), zot(O) && (O = F2.open != null && F2.open), zot(j) && (j = F2.under == null || F2.under);
          var H = this, D = (zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", N = null, V = this.core = new To.Circle({ radius: s5, color: t2, style: L, inherit: Y }).addTo(this);
          n && (this.titleIcon = n.center(V)), o2 && (this.title = new To.Label({ text: o2, size: i2, font: a, color: v, style: L, inherit: Y }).center(V)), V.cursor = "pointer", V.on(D, function(e4) {
            H.leafNode = false, Q.length == 0 ? Z2() : (To.loop(Q, function(e5) {
              e5.selectedIndex = -1, e5.removeFrom(), Q = [];
            }), H.outerLevel = 0, H.selected = H.outerMenu = H.selectedMenu = H.text = null), !I2 && H.selected == N || H.dispatchEvent("change"), N = H.selected, H.stage && H.stage.update();
          }), this.closeRings = function(e4) {
            zot(e4) && (e4 = H.outerLevel);
            var o3 = H.outerLevel - e4;
            To.loop(Q, function(e5, t3) {
              o3 - 1 < t3 && (e5.removeFrom(), e5.selectedIndex = -1, Q.pop());
            }, true), H.outerLevel = o3, H.outerMenu = Q[Q.length - 1], H.outerMenu && (H.outerMenu.selectedIndex = -1), H.selected = H.selectedMenu = H.text = null, Q[Q.length - 2] ? (H.selectedMenu = Q[Q.length - 2], H.selectedIndex = H.selectedMenu.selectedIndex) : H.selectedIndex = -1, H.selected != N && H.dispatchEvent("change"), N = H.selected, H.stage && H.stage.update();
          };
          var G, q, U = {};
          H.outerLevel = 0, e3.constructor == {}.constructor && (e3 = { core: e3 }, G = H.tree = new To.Hierarchy(e3), q = G.getLinearIDs()), H.lastRadial = null;
          var Q = this.radials = [];
          function Z2(e4) {
            var o3, t3, n2, r3;
            e4 ? o3 = e4.ringLevel : (o3 = 0, r3 = s5), To.loop(Q, function(e5, t4) {
              o3 - 1 < t4 && (e5.removeFrom(), e5.selectedIndex = -1, Q.pop());
            }, true), e4 && (t3 = e4.selected), t3 ? (n2 = t3.id, r3 = e4.outerRadius, K(n2, o3 + 1, r3)) : e4 || K("id0", o3 + 1, r3), H.selected = t3, H.selected ? (H.selectedMenu = Q[H.selected.menu.ringLevel - 1], H.selectedIndex = H.selected.num, H.selected.label ? H.text = H.selected.label.text : H.text = null) : I2 && e4 ? (H.selectedIndex = e4.selectedIndex, H.label = e4.label, H.text = e4.text, H.icon = e4.icon, H.selectedMenu = e4) : (H.text = null, H.selectedIndex = -1, H.selectedMenu = null), H.stage && H.stage.update();
          }
          function K(e4, t3, o3) {
            var n2, r3;
            t3 && (H.outerLevel = t3), U[e4] || (t3 = (r3 = G.getData(e4)).list) && !To.isEmpty(t3) && (o3 = { labels: G.getLinearList(t3), coreRadius: o3, size: i2, font: a, startAngle: c2, totalAngle: u, flip: d, rotateIcons: g, shiftRadial: h2, iconsShiftRadial: p, height: l, coreColor: To.clear, backdropColor: b, backgroundColor: f3, rollBackgroundColor: m2, selectedBackgroundColor: z, selectedRollBackgroundColor: y, color: v, rollColor: w, selectedColor: C, selectedRollColor: x2, borderColor: k, borderWidth: T2, gapAsAngle: B, gap: P, gradient: A3, spacingInner: S2, spacingOuter: E, currentSelected: M, currentEnabled: I2, style: L, inherit: Y }, r3.styles && (o3 = To.merge(o3, r3.styles)), n2 = U[e4] = new To.Radial(o3), q = G.getLinearIDs(t3), n2.buttons.loop(function(e5, t4) {
              e5.menu = n2, e5.id = q[t4];
            }), n2.ringLevel = H.outerLevel, n2.selectedIndex = -1, n2.on("change", function(e5) {
              H.leafNode = false, Z2(e5.target), !I2 && H.selected == N || H.dispatchEvent("change"), N = H.selected;
            })), U[e4] ? (Q.push(U[e4]), U[e4].center(H), j && U[e4].bot()) : (H.leafNode = true, --H.outerLevel), H.outerMenu = n2;
          }
          O && Z2(), To.styleTransforms(this, F2), this.clone = function() {
            return H.cloneProps(new To.RadialMenu(e3, i2, a, l, s5, t2, o2, n, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, r2, S2, E, I2, M, O, j, L, this.group, Y));
          };
        }, To.extend(To.RadialMenu, To.Container, "clone", "zimContainer", false), To.ColorPicker = function(e3, o2, n, r2, i2, t2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v) {
          if (C = zob(To.ColorPicker, arguments, "width, colors, cols, spacing, greyPicker, alphaPicker, startBackgroundColor, draggable, shadowColor, shadowBlur, buttonBar, circles, indicator, backgroundColor, keyArrows, container, selectedIndex, selectedColor, style, group, inherit", this))
            return C;
          z_d("67"), this.zimContainer_constructor(null, null, null, null, false), this.type = "ColorPicker", this.group = b;
          var w = y === false ? {} : To.getStyle(this.type, this.group, v);
          zot(e3) && (e3 = w.width != null ? w.width : 500), zot(o2) && (o2 = w.colors != null ? w.colors : null), zot(o2) && (S2 = true), zot(n) && (n = w.cols != null ? w.cols : 10), zot(r2) && (r2 = w.spacing != null ? w.spacing : 2);
          var C = !S2 && 0 < o2.length && o2.length <= n;
          zot(t2) && (t2 = w.alphaPicker != null ? w.alphaPicker : !C), zot(i2) && (i2 = w.greyPicker != null ? w.greyPicker : !C), zot(s5) && (s5 = w.shadowColor != null ? w.shadowColor : "rgba(0,0,0,.3)"), zot(c2) && (c2 = w.shadowBlur != null ? w.shadowBlur : 14), zot(u) && (u = w.buttonBar != null ? w.buttonBar : !C), zot(l) && (l = u ? w.draggable == null || w.draggable : w.draggable != null && w.draggable), zot(d) && (d = w.circles != null && w.circles), zot(h2) && (h2 = w.indicator != null && w.indicator, u || (h2 = w.indicator == null || w.indicator)), zot(g) && (g = w.backgroundColor != null ? w.backgroundColor : "black"), zot(a) && (a = w.startBackgroundColor != null ? w.startBackgroundColor : null), zot(p) && (p = w.keyArrows == null || w.keyArrows);
          var x2 = this;
          if (zot(f3)) {
            if (!zdf)
              return;
            f3 = zdf.stage;
          } else {
            if (!f3.getBounds)
              return;
            if (zot(f3.getStage))
              return;
          }
          x2.container = f3;
          var k = "#e472c4", T2 = "#50c4b7", A3 = 1, P = 1, B = new createjs.Shape();
          this.addChild(B), B.x += r2, B.y += r2;
          var S2 = false, E = [];
          if (zot(o2)) {
            S2 = true;
            for (var I2 = 6, I2 = Math.ceil(Math.pow(216, 0.5)), M = (e3 - r2) / 18 - r2, O = Math.floor(Math.pow(I2 * I2, 1 / 3)), j = [], L = 0; L < 6; L++)
              for (var _ = 0; _ < 6; _++)
                for (var Y = 0; Y < 6; Y++)
                  j.push("#" + W(3 * L) + W(3 * _) + W(3 * Y));
            for (o2 = [], L = 0; L < j.length; L++)
              H = Math.floor(L / 6), o2[18 * ((F2 = L % 6) + 6 * (O = 18 <= H ? 1 : 0)) + (H - 6 * O * 3)] = j[L];
            n = 18, E = [T2, k];
          } else
            M = (e3 - r2) / n - r2;
          var D, X = Math.ceil(o2.length / n), C = 1, R = String(o2[o2.length - 1]);
          function W(e4) {
            return (e4 = Math.floor(e4).toString(16)) + "" + e4;
          }
          zot(a) || ((q = a.match(/rgba\((.*)\)/)) && (C = (H = q[1].split(",")).pop(), a = "rgb(" + H.join(",") + ")"), R = String(a)), S2 && (D = T2);
          var F2, H, N, V, G = B.graphics, O = 0, I2 = w.borderColor != null ? w.borderColor : null, q = w.borderWidth != null ? w.borderWidth : null;
          for (!zot(I2) && zot(q) && (q = 1), q && zot(I2) && (I2 = "#333"), q && G.s(I2).ss(q), L = 0; L < o2.length; L++)
            H = L % n, F2 = Math.floor(L / n), N = H * (M + r2), V = F2 * (M + r2), d ? G.f(o2[L]).dc(N + M / 2, V + M / 2, M / 2) : G.f(o2[L]).r(N, V, M, M);
          var U = V + M + r2;
          x2.colors = o2;
          var Q = U;
          if (i2) {
            for (L = 0; L < 16; L++)
              E.push("#" + W(L) + W(L) + W(L));
            for (L = 0; L < E.length; L++)
              H = Math.floor(L / n), N = (F2 = L % n) * (M + r2), V = H * (M + r2) + U, d ? G.f(E[L]).dc(N + M / 2, V + M / 2, M / 2) : G.f(E[L]).r(N, V, M, M);
            U = V + M + r2;
            var Z2 = n, K = Math.ceil(E.length / n);
          }
          function J(e4) {
            zot(e4) || e4 < 0 ? h2.visible = false : (h2.visible = true, R == "#000" || R == "#000000" || R == "black" ? (h2.color = "#222", h2.alpha = 1) : (h2.color = "black", h2.alpha = 0.5), h2.x = B.x + e4 % n * (M + r2) + M / 2, h2.y = B.x + Math.floor(e4 / n) * (M + r2) + M / 2);
          }
          x2.greys = E, h2 && ((h2 = this.indicator = d ? new To.Circle(M / 2 * 0.5, null, null, null, null, null, null, null, false) : new To.Rectangle(0.5 * M, 0.5 * M, null, null, null, null, null, null, false)).alpha = 0.5, h2.centerReg(), this.addChild(h2), h2.mouseEnabled = false, J(o2.indexOf(R)));
          var $, ee, te, oe, ne, re;
          t2 && ((ne = new To.Container({ style: false })).setBounds(0, 0, 600, 70), this.addChild(ne), ne.x = 0, ne.y = U, q = this.alphaBacking = new To.Rectangle(580, 50, "#222", null, null, 0, null, null, false), ne.addChild(q), To.centerReg(q, ne), q = this.alphaBut = new To.Button({ width: 20, height: 30, backgroundColor: "darkorange", rollBackgroundColor: "orange", label: "", corner: 0, hitPadding: 20, style: false }), ($ = this.alphaSlider = new To.Slider({ min: 0, max: 1, step: 0.05, button: q, barLength: 330, barWidth: 2, barColor: "#999", vertical: false, useTicks: false, inside: false, style: false })).currentValue = zot(C) ? 1 : C, ne.addChild($), $.x = 40, $.y = ne.height / 2, ee = this.alphaText = new To.Label({ text: "Alpha: " + To.decimals(C), size: 30, color: "orange", backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", backgroundColor: "ignore", rollColor: "orange", group: this.group }), ne.addChild(ee), ee.x = $.x + $.bar.width + 40, ee.y = ne.height / 2 - ee.height / 2, ne.scaleX = ne.scaleY = e3 / 600, $.on("change", function() {
            ee.text = "Alpha: " + ze($.currentValue), re && (re.alpha = P = $.currentValue), u ? x2.dispatchEvent("set") : x2.dispatchEvent("change"), x2.stage && x2.stage.update();
          }), U += ne.height - 10), u ? ((ie = new To.Container({ style: false })).setBounds(0, 0, 600, 100), this.addChild(ie), ie.x = 0, ie.y = U + 10, te = this.swatchText = new To.Label({ align: "center", text: R.toUpperCase(), labelWidth: 120, size: 30, color: "orange", rollColor: "orange", backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", backgroundColor: "ignore", group: this.group }), ie.addChild(te), To.centerReg(te), te.x = 90, te.y = 48, l && (oe = this.grip = new To.Shape({ style: false }), ie.addChild(oe), oe.graphics.f("rgba(256,256,256,.25)").r(0, 0, 5, 20).r(10, 0, 5, 20).r(20, 0, 5, 20).r(30, 0, 5, 20), oe.x = 70, oe.y = 65, te.y = 40, oe.mouseEnabled = false), ne = this.closeBut = new To.Button({ width: 90, height: 90, label: "X", backgroundColor: "#222", rollBackgroundColor: "#444", corner: 0, style: false }), ie.addChild(ne), ne.x = 600 - ne.width - 10, ne.y = 0, ne.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function() {
            x2.dispatchEvent("close");
          }), oe = this.okBut = new To.Button({ width: 150, height: 90, label: "OK", backgroundColor: "#222", rollBackgroundColor: "#444", corner: 0, style: false }), ie.addChild(oe), oe.x = ne.x - oe.width - 10, oe.y = 0, oe.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", ce), ne = this.swatchBacking = new To.Shape({ style: false }), ie.addChild(ne), (G = ne.graphics).f("black").r(0.5, 0.5, 50, 89).f("#666").r(50, 0.5, 50, 89).f("white").r(100, 0.5, 49.5, 89), ne.x = oe.x - 150 - 10, ne.y = 0, re = this.swatch = new To.Rectangle(150, 90, R, null, null, null, null, null, false), ie.addChild(re), re.x = ne.x, re.y = 0, re.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", ce), re.cursor = "pointer", re.alpha = P = C, ie.scaleX = ie.scaleY = e3 / 600, U += ie.height) : B.cursor = "pointer", t2 || u || (U -= 10 - r2);
          var ie = U + 10;
          this.setBounds(0, 0, e3, ie);
          var ae, le, se = this.background = new To.Rectangle(e3, ie, g, null, null, null, null, null, false);
          function ce() {
            if (R != D || P != A3) {
              if (S2 && i2) {
                var e4 = [T2 = k, k = D];
                for (L = 0; L < 2; L++) {
                  var t3 = B.graphics;
                  H = Math.floor(L / n), N = (F2 = L % n) * (M + r2), V = H * (M + r2) + Q, E[L] = e4[L], t3.f(se.color).r(N - 1, V - 1, M + 2, M + 2).f(e4[L]).r(N, V, M, M);
                }
                To.OPTIMIZE || !zns && OPTIMIZE || !x2.stage || x2.stage.update();
              }
              D = R, A3 = P, x2.dispatchEvent("change");
            } else
              x2.dispatchEvent("close");
          }
          this.addChildAt(se, 0), s5 != -1 && 0 < c2 && (se.shadow = new createjs.Shadow(s5, 8, 8, c2)), l && (se.on("mousedown", function(e4) {
            e4.target.stage, ae = e4.stageX / To.scaX - x2.x, le = e4.stageY / To.scaY - x2.y, se.cursor = "move";
          }), se.on("pressmove", function(e4) {
            x2.x = e4.stageX / To.scaX - ae, x2.y = e4.stageY / To.scaY - le, x2.stage && x2.stage.update();
          }), se.on("pressup", function(e4) {
            se.cursor = "default", x2.stage && x2.stage.update();
          }));
          var ue, de, he, ge = n * (M + r2), pe = X * (M + r2);
          function fe() {
            x2.keyFocus = true;
            var e4 = document.activeElement;
            e4 && e4.blur();
          }
          function me() {
            x2.zimAccessibility && x2.zimAccessibility.changeTitle(x2, null, true);
          }
          function ze(e4) {
            return Math.round(e4 * Math.pow(10, 2)) / Math.pow(10, 2);
          }
          i2 && (ue = Z2 * (M + r2), de = K * (M + r2)), B.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function(e4) {
            var t3 = To.hitTestGrid(B, ge, pe, n, X, e4.stageX, e4.stageY, 0, 0, r2, r2);
            zot(t3) || (R = o2[t3], u ? (re.color = R, te.text = String(o2[t3]).toUpperCase(), R != D && x2.dispatchEvent("set")) : ce()), i2 && (t3 = null, zot(t3 = To.hitTestGrid(B, ue, de, Z2, K, e4.stageX, e4.stageY, 0, pe, r2, r2)) || (R = E[t3], u ? (re.color = R, te.text = E[t3].toUpperCase(), R != D && x2.dispatchEvent("set")) : ce())), h2 && J(o2.indexOf(R)), u ? x2.stage && x2.stage.update() : h2 && x2.stage && x2.stage.update(), me();
          }), Object.defineProperty(this, "selectedColor", { get: function() {
            return R;
          }, set: function(e4) {
            e4 = e4.toLowerCase(), D = R = e4, u && (re.color = R, te.text = R, x2.stage && x2.stage.update()), h2 && J(o2.indexOf(R)), me();
          } }), Object.defineProperty(this, "currentValue", { get: function() {
            return R;
          }, set: function(e4) {
            x2.selectedColor = e4;
          } }), Object.defineProperty(this, "currentValueEvent", { get: function() {
            return R;
          }, set: function(e4) {
            e4 != x2.selectedColor && (x2.selectedColor = e4, x2.dispatchEvent("change"));
          } }), Object.defineProperty(this, "selectedIndex", { get: function() {
            return o2.indexOf(R);
          }, set: function(e4) {
            D = R = o2[e4], u && (re.color = R, te.text = R, x2.stage && x2.stage.update()), h2 && J(o2.indexOf(R)), me();
          } }), Object.defineProperty(this, "selectedAlpha", { get: function() {
            return t2 ? ze($.currentValue) : 1;
          }, set: function(e4) {
            t2 && (A3 = $.currentValue = e4, re && (re.alpha = A3), ee && (ee.text = "Alpha: " + ze($.currentValue)), x2.stage && x2.stage.update());
          } }), Object.defineProperty(this, "colors", { get: function() {
            return i2 ? o2.concat(E) : o2;
          }, set: function(e4) {
            zon && zogy("ColorPicker() colors is read only - make a new ColorPicker to change");
          } }), KEYFOCUS !== void 0 && (To.KEYFOCUS = KEYFOCUS), Object.defineProperty(this, "keyFocus", { get: function() {
            return To.KEYFOCUS == x2;
          }, set: function(e4) {
            zns ? To.KEYFOCUS = x2 : KEYFOCUS = x2;
          } }), p && To.KEYFOCUS && fe(), this.on("mousedown", function() {
            p && fe();
          }), this.keyDownEvent = function(e4) {
            var t3;
            function o3() {
              t3 < 0 && (t3 = x2.colors.length - 1), t3 > x2.colors.length - 1 && (t3 = 0), x2.selectedIndex = t3, x2.dispatchEvent("change"), x2.stage && x2.stage.update();
            }
            x2.stage && (x2.zimAccessibility && x2.focus || !x2.zimAccessibility && x2.keyFocus) && (t3 = x2.selectedIndex, e4.keyCode == 37 || e4.keyCode == 40 ? (t3--, o3()) : e4.keyCode != 38 && e4.keyCode != 39 || (t3++, o3()));
          }, window.addEventListener("keydown", this.keyDownEvent), this.hide = function() {
            var e4;
            return x2.removeFrom(), x2.toggled = false, x2.zimAccessibility && ((e4 = x2.zimAccessibility).resize(x2), (he || x2.zimTabTag.nextSibling).focus(), setTimeout(function() {
              e4.talk("ColorPicker has been closed.");
            }, 50)), x2;
          }, this.show = function() {
            var e4;
            return x2.center(x2.container), x2.zimAccessibility && (e4 = x2.zimAccessibility, setTimeout(function() {
              e4.activatedObject && (he = e4.activatedObject.zimTabTag);
            }, 50), e4.resize(x2), e4.tabIndex = x2.zimTabIndex), x2.toggled = true, x2;
          }, this.toggle = function(e4) {
            return e4 !== true && (e4 === false || x2.container.contains(x2)) ? x2.hide() : x2.show(), x2;
          }, zot(m2) && (m2 = w.selectedIndex != null ? w.selectedIndex : 0), x2.selectedIndex = m2, zot(z) && (z = w.selectedColor != null ? w.selectedColor : null), z != null && (x2.selectedColor = z), y !== false && To.styleTransforms(this, w), this.clone = function() {
            return x2.cloneProps(new To.ColorPicker(e3, S2 ? null : o2, n, r2, i2, t2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, this.group, v));
          }, this.dispose = function(e4, t3, o3) {
            return window.removeEventListener("keydown", x2.keyDownEvent), $ && $.dispose(), o3 || this.zimContainer_dispose(true), true;
          };
        }, To.extend(To.ColorPicker, To.Container, ["clone", "dispose"], "zimContainer", false), To.TextEditor = function(i2, n, e3, t2, o2, r2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j) {
          if (L = zob(To.TextEditor, arguments, "width, color, backgroundColor, fieldColor, fieldHeight, textSize, sizeList, optionList, colorList, fontList, live, button, titleBar, titleBarColor, titleBarBackgroundColor, titleBarHeight, wrap, limit, scroll, placeholder, password, borderColor, borderWidth, margin, corner, shadowColor, shadowBlur, draggable, boundary, frame, fontListHeight, fontListViewNum, style, group, inherit", this))
            return L;
          z_d("67.1"), this.group = O;
          var L = M === false ? {} : To.getStyle("TextEditor", this.group, j);
          if (zot(i2) && (i2 = L.width != null ? L.width : 400), zot(e3) && (e3 = L.backgroundColor != null ? L.backgroundColor : To.lighter), zot(h2) && (h2 = L.titleBar != null ? L.titleBar : "Text Editor"), zot(P) && (P = L.draggable == null || L.draggable), zot(f3) && (f3 = L.titleBarHeight != null ? L.titleBarHeight : 30), zot(t2) && (t2 = L.fieldColor != null ? L.fieldColor : e3.darken(0.05)), zot(u) && (u = L.live == null || L.live), zot(m2) && (m2 = L.wrap == null || L.wrap), zot(y) && (y = L.scroll == null || L.scroll), zot(x2) && (x2 = L.margin != null ? L.margin : 10), zot(z) && (z = L.limit != null ? L.limit : null), zot(h2) && (h2 = L.titleBar != null ? L.titleBar : null), zot(a) && (a = L.sizeList != null ? L.sizeList : null), zot(s5) && (s5 = L.colorList != null ? L.colorList : null), zot(l) && (l = L.optionList != null ? L.optionList : null), zot(c2) && (c2 = L.fontList != null ? L.fontList : null), zot(t2) && (t2 = L.fieldColor != null ? L.fieldColor : null), zot(o2) && (o2 = L.fieldHeight != null ? L.fieldHeight : null), zot(r2) && (r2 = L.textSize != null ? L.textSize : null), zot(E) && (E = L.fontListHeight != null ? L.fontListHeight : 100), zot(I2) && (I2 = L.fontListViewNum != null ? L.fontListViewNum : 3), zot(S2)) {
            if (!zdf)
              return void (zon && zog("zim.TextEditor - please provide a reference to zim Frame"));
            S2 = zdf;
          }
          this.zimPanel_constructor(i2, 300, h2, g, p, f3, e3, w, C, k, true, null, null, null, T2, A3, P, B, null, M, O, j);
          var _ = this;
          zot(d) && (d = new To.Button({ width: 50, height: 50, label: "", icon: new Shape().sca(0.4).f("white").p("AikFsQg5jmhphxIA1gXQBeBGA3CwQC8mRCpjOIBfAoQkPFGiSFpg"), color: To.white, corner: 10, backgroundColor: To.green.darken(0.2), borderColor: To.white, borderWidth: 2, rollBackgroundColor: To.green, shadowBlur: 3 }).pos(x2, f3 + 2 * x2, To.RIGHT, To.TOP, _)), (_.button = d).on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function() {
            u || (D.text = Y.text);
            _.hide(), _.dispatchEvent("set");
          }), zot(o2) && (o2 = L.fieldHeight != null ? L.fieldHeight : d.height + 2 * x2);
          var Y = _.textArea = new To.TextArea({ color: n, backgroundColor: t2, width: i2 - d.width - 3 * x2, height: zot(o2) ? d.height + 2 * x2 : o2, expand: 10, password: v, placeholder: b, frame: S2 }).loc(x2, f3 + x2 + (o2 && o2 < d.height + 2 * x2 ? (d.height - o2) / 2 + x2 : 0), null, null, false);
          m2 || (Y.tag.style.whiteSpace = "nowrap"), z && Y.tag.setAttribute("maxLength", z), y && (Y.tag.style.overflowY = "auto");
          var D = new To.Label();
          _.on("pressmove", function() {
            Y.resize();
          }), _.on("close", function() {
            _.inputEvent && Y.off("input", _.inputEvent), Y.removeFrom();
          }), _.panelHeight = f3 + x2 + Math.max(o2, d.height + 2 * x2) + x2;
          var X, R, W, F2, H, N, V, G, q, U = To.mobile(), Q = U ? 35 : 30;
          function Z2() {
            Y.tag.style.display = "block", R.hide(), _.stage && _.stage.update();
          }
          function K() {
            D && (Y.text = D.text), n && (n.color = D.color), W && W.toggle(D.bold == 1), F2 && F2.toggle(D.italic == 1), H && (H.noAnimate = true, D.align == "center" ? H.selectedIndex = 1 : D.align == "right" ? H.selectedIndex = 2 : H.selectedIndex = 0), N && (N.currentValue = D.size), q && (q.currentValue = D.font), _.inputEvent && Y.off("input", _.inputEvent), _.inputEvent = Y.on("input", function(e4) {
              u && (D.text = Y.text), _.dispatchEvent("input"), _.dispatchEvent("update"), _.stage && _.stage.update();
            });
          }
          (a || l || s5) && (new To.Rectangle(i2, Q + x2, "rgba(0,0,0,.05)").loc(0, _.panelHeight, _), X = [], s5 && (V = Array.isArray(s5), (R = _.colorPicker = new To.ColorPicker({ colors: V ? s5 : null, cols: V ? Math.min(s5.length, 12) : null, alphaPicker: false, greyPicker: !V, container: S2.stage })).on("close", Z2), R.on("change", function() {
            D.color = n.color = R.selectedColor, _.dispatchEvent("update"), Z2();
          }), _.closeColorPicker = function() {
            Z2();
          }, (n = _.swatch = new To.Rectangle(Q, Q, D.color, To.dark, 1).cur()).on("mousedown", function() {
            _.dispatchEvent("color"), Y.tag.style.display = "none", R.selectedColor = n.color, R.show(), _.stage && _.stage.update();
          }), X.push(n)), l && (l === true && (l = ["bold", "italic", "align"]), zot(STYLE) && (STYLE = {}), zot(STYLE.group) && (STYLE.group = {}), STYLE.group.zimEditor = { width: Q, height: Q, corner: 0, borderColor: To.tin, shadowBlur: -1, backgroundColor: To.light, rollBackgroundColor: To.light, toggleBackgroundColor: To.green, toggleColor: To.grey }, To.loop(l, function(e4) {
            var o3, n2;
            e4.toLowerCase() == "bold" ? ((W = _.bold = new To.Button({ label: new To.Label({ text: "B", color: To.grey, size: 16, bold: true }), toggle: "B", group: "zimEditor" })).on("click", function() {
              D.bold = W.toggled, _.dispatchEvent("update"), _.stage && _.stage.update();
            }), X.push(W), D.bold && W.toggle()) : e4.toLowerCase() == "italic" ? ((F2 = _.italic = new To.Button({ label: new To.Label({ text: "I", color: To.grey, size: 16, bold: true, italic: true }), toggle: "I", group: "zimEditor" })).on("click", function() {
              D.italic = F2.toggled, _.dispatchEvent("update"), _.stage && _.stage.update();
            }), X.push(F2), D.italic && F2.toggle()) : e4.toLowerCase() == "align" && (o3 = new To.Tile(new To.Rectangle(Q - 10, Q - 10, To.grey).centerReg(), 3, 1, 10, 10), n2 = U ? ["\u21DA", "\u21D4", "\u21DB"] : ["\u21D0", "\u21D4", "\u21D2"], To.loop(3, function(e5) {
              var t3 = o3.getChildAt(e5);
              new To.Label(n2[e5], 2 * Q / 3, null, To.white).center(t3).expand(10);
            }), e4 = 0, D.align == "right" ? e4 = 2 : D.align != "center" && D.align != "middle" || (e4 = 1), (H = _.align = new To.Selector({ tile: o3, corner: 0, borderWidth: 1, borderColor: To.grey, backgroundColor: To.clear, selectedIndex: e4 })).on("change", function() {
              H.selectedIndex == 0 ? D.align = "left" : H.selectedIndex == 1 && (D.align = "center"), H.selectedIndex == 2 && (D.align = "right"), _.dispatchEvent("update"), _.stage && _.stage.update();
            }), X.push(H));
          }), delete STYLE.group.zimEditor), a && ((N = _.sizePicker = new To.Stepper({ list: a === true ? null : a, stepperType: a === true ? null : "list", min: a === true ? 5 : null, max: a === true ? 500 : null, width: 150, shadowBlur: -1, borderColor: To.dark, borderWidth: 2, corner: 0, backgroundColor: To.green, downForward: false }).siz(null, Q)).arrowPrev.expand(0), N.textBox.color = To.lighter, N.on("change", function() {
            D.size = N.currentValue, _.dispatchEvent("update"), _.stage && _.stage.update();
          }), N.currentValue = D.size, X.push(N)), V = new To.Tile(X, X.length, 1, 10, 10, true).loc(x2, _.panelHeight + x2 / 2, _), _.panelHeight = _.panelHeight + x2 + V.height + x2), c2 && (Array.isArray(c2) ? G = c2 : (G = ["Arial", "Courier New", "Georgia", "Helvetica", "Palatino", "Tahoma", "Verdana"], U || (G = G.concat(["Comic Sans MS", "Impact"])), G.sort()), (q = _.fonts = new To.List({ width: i2 - 2 * x2, height: E, viewNum: I2, backgroundColor: To.moon, color: To.grey, rollColor: To.dark, rollBackgroundColor: To.green.lighten(0.5), selectedBackgroundColor: To.mist, selectedRollBackgroundColor: To.green.lighten(0.6), selectedColor: To.dark, backdropColor: To.light, scrollBarColor: To.dark, shadowBlur: -1, list: G }).center(_).loc(null, _.panelHeight)).on("change", function() {
            D.font = q.currentValue, _.dispatchEvent("update"), _.stage && _.stage.update();
          }), _.panelHeight = _.panelHeight + x2 + q.height + x2), _.show = function(e4, t3, o3, n2) {
            if (_.parent)
              return e4 == _.label || (_.label = e4), _;
            var r3;
            if (D = e4, Y.addTo(_), D && D.stage)
              r3 = D.stage;
            else if (n2)
              r3 = n2.stage;
            else {
              if (!zdf)
                return _;
              r3 = zdf.stage;
            }
            return zot(t3) && zot(o3) ? D && D.y > r3.height / 2 ? _.loc(r3.width / 2 - i2 / 2, D.y - _.panelHeight - 0.05 * r3.height, r3) : D && D.y <= r3.height / 2 ? _.loc(r3.width / 2 - i2 / 2, D.y + D.height + 0.05 * r3.height, r3) : _.center(r3) : _.loc(t3, o3), _.y < 20 && (_.y = 20), _.y + _.height > _.stage.height && (_.y = _.stage.height - _.height - 20), K(), _.stage.update(), _;
          }, _.hide = function() {
            if (s5 && R.hide(), Y && Y.removeFrom(), !zot(_.stage)) {
              var e4 = _.stage;
              return _.removeFrom(), e4.update(), _;
            }
          }, Object.defineProperty(_, "label", { get: function() {
            return D;
          }, set: function(e4) {
            D = e4, K();
          } }), M !== false && To.styleTransforms(this, L), this.clone = function() {
            return _.cloneProps(new To.TextEditor(i2, n, e3, t2, o2, r2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, this.group, j));
          }, this.dispose = function(e4, t3, o3) {
            _.stage;
            return _.inputEvent && Y.off("input", _.inputEvent), R && R.dispose(), n && n.dispose(), q && q.dispose(), d && d.dispose(), Y && Y.dispose(), H && H.dispose(), W && W.dispose(), F2 && F2.dispose(), N && N.dispose(), o3 || this.zimPanel_dispose(), _.stage && _.stage.update(), !(_.textArea = _.color = _.colorPicker = _.font = _.button = _.selector = _.bold = _.italic = _.size = null);
          };
        }, To.extend(To.TextEditor, To.Panel, ["clone", "dispose"], "zimPanel", false), To.Keyboard = function(n, p, f3, r2, i2, a, l, t2, m2, z, y, o2, b, s5, c2, u, d, h2, v, g, w, C, x2, k, T2, e3, A3) {
          if (S2 = zob(To.Keyboard, arguments, "labels, backgroundColor, color, shiftBackgroundColor, shiftHoldBackgroundColor, placeBackgroundColor, placeColor, cursorColor, shadeAlpha, borderColor, borderWidth, margin, corner, draggable, placeClose, shadowColor, shadowBlur, container, data, place, special, rtl, hardKeyboard, layout, style, group, inherit", this))
            return S2;
          z_d("67.2"), this.zimContainer_constructor(1e3, 400, null, null, false), this.type = "Keyboard", this.group = e3;
          var P = T2 === false ? {} : To.getStyle(this.type, this.group, A3);
          zot(n) && (n = P.labels != null ? P.labels : []), Array.isArray(n) || (n = [n]), zot(p) && (p = P.backgroundColor != null ? P.backgroundColor : "#333"), zot(f3) && (f3 = P.color != null ? P.color : "white"), zot(r2) && (r2 = P.shiftBackgroundColor != null ? P.shiftBackgroundColor : "orange"), zot(i2) && (i2 = P.shiftHoldBackgroundColor != null ? P.shiftHoldBackgroundColor : "red"), zot(a) && (a = P.placeBackgroundColor != null ? P.placeBackgroundColor : "#50c4b7"), zot(l) && (l = P.placeColor != null ? P.placeColor : f3), zot(t2) && (t2 = P.cursorColor != null ? P.cursorColor : "#50c4b7"), zot(m2) && (m2 = P.shadeAlpha != null ? P.shadeAlpha : 0.2), zot(z) && (z = P.borderColor != null ? P.borderColor : "rgba(0,0,0,.1)"), zot(y) && (y = P.borderWidth != null ? P.borderWidth : null), z < 0 || y < 0 ? z = y = null : z != null && y == null && (y = 1), zot(o2) && (o2 = P.margin != null ? P.margin : 5), zot(b) && (b = P.corner != null ? P.corner : 30), zot(s5) && (s5 = P.draggable != null && P.draggable), zot(c2) && (c2 = P.placeClose == null || P.placeClose), zot(u) && (u = P.shadowColor != null ? P.shadowColor : "rgba(0,0,0,.2)"), zot(d) && (d = P.shadowBlur != null ? P.shadowBlur : 14), zot(v) && (v = P.data != null ? P.data : [[["q", "w", "e", "r", "t", "y", "u", "i", "o", "p"], ["a", "s", "d", "f", "g", "h", "j", "k", "l"], ["shift", "z", "x", "c", "v", "b", "n", "m", "backspace"], ["?123"]], [["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"], ["!", "@", "#", "$", "/", "^", "&", "*", "(", ")"], ["1/2", "-", "'", '"', ":", ";", ",", "?", "backspace"], ["ABC"]], [["+", "x", "%", "=", "<", ">", "{", "}", "[", "]"], ["\u20AC", "\xA3", "\xA5", "$", "\uFFE6", "~", "`", "\xA4", "\u2661", "\u2606"], ["2/2", "_", "\\", "|", "\u300A", "\u300B", "\xA1", "\xBF", "backspace"], ["ABC"]]]), v[3] || (v[3] = { e: ["\u0117", "\u0113", "\u0119", "\xEA", "\xE9", "\xEB", "\xE8"], u: ["\u016B", "\xFB", "\xFA", "\xFC", "\xF9"], i: ["\u012B", "\u012F", "\xEC", "\xED", "\xEF", "\xEE"], o: ["\u014D", "\u0153", "\xF8", "\xF5", "\xF4", "\xF3", "\xF6", "\xF2"], a: ["\u0101", "\xE3", "\xE5", "\xE2", "\xE1", "\xE4", "\xE0", "\xE6"], n: ["\xF1", "\u0144"] });
          var B = this;
          zot(g) && (g = P.place == null || P.place), zot(C) && (C = P.rtl != null && P.rtl), zot(x2) && (x2 = P.hardKeyboard == null || P.hardKeyboard), zot(k) && (k = P.layout != null ? P.layout : "qwerty"), (k = k.toLowerCase()) != "qwerty" && (k == "arabic" ? v = [[["\u0636", "\u0635", "\u062B", "\u0642", "\u0641", "\u063A", "\u0639", "\u0647", "\u062E", "\u062D", "\u062C"], ["\u0634", "\u0633", "\u064A", "\u0628", "\u0644", "\u0627", "\u062A", "\u0646", "\u0645", "\u0643", "\u0637"], ["\u0630", "\u0621", "\u0624", "\u0631", "\u0649", "\u0629", "\u0648", "\u0632", "\u0638", "\u062F", "back"], ["?123", "\u0640"]], [["1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "*"], ["!", "@", "#", "$", "/", "^", "&", "*", "(", ")", "*"], ["1/2", "-", "'", '"', ":", ";", ",", "?", "*", "backspace"], ["ABC", "*"]], [["+", "x", "%", "=", "<", ">", "{", "}", "[", "]", "*"], ["\u20AC", "\xA3", "\xA5", "$", "\uFFE6", "~", "`", "\xA4", "\u2661", "\u2606", "*"], ["2/2", "_", "\\", "|", "\u300A", "\u300B", "\xA1", "\xBF", "*", "backspace"], ["ABC", "*"]], { "\u0627": ["\u0623", "\u0625", "\u0622", "\u0621"], "\u0649": ["\u0626"], "\u0621": ["\u0626", "\u0624"], "\u0648": ["\u0624"], "\u0640": ["\u064D", "\u064B", "\u064C", "\u0652", "\u064F", "\u0650", "\u064E", "\u0651"], "*": ["\u064D", "\u064B", "\u064C", "\u0652", "\u064F", "\u0650", "\u064E", "\u0651"], n: ["\xF1", "\u0144"] }] : k == "hebrew" ? v = [[["\u05E7", "\u05E8", "\u05D0", "\u05D8", "\u05D5", "\u05DF", "\u05DD", "\u05E4", "backspace"], ["\u05E9", "\u05D3", "\u05D2", "\u05DB", "\u05E2", "\u05D9", "\u05D7", "\u05DC", "\u05DA", "\u05E3"], ["\u05D6", "\u05E1", "\u05D1", "\u05E0", "\u05D4", "\u05DE", "\u05E6", "\u05EA", "\u05E5"], ["?123", ","]], [["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"], ["!", "@", "#", "$", "/", "^", "&", "*", "(", ")"], ["1/2", "-", "'", '"', ":", ";", ",", "?", "backspace"], ["ABC", ","]], [["+", "x", "%", "=", "<", ">", "{", "}", "[", "]"], ["\u20AC", "\xA3", "\xA5", "$", "\uFFE6", "~", "`", "\xA4", "\u2661", "\u2606"], ["2/2", "_", "\\", "|", "\u300A", "\u300B", "\xA1", "\xBF", "backspace"], ["ABC", ","]], { e: ["\u0117", "\u0113", "\u0119", "\xEA", "\xE9", "\xEB", "\xE8"], u: ["\u016B", "\xFB", "\xFA", "\xFC", "\xF9"], i: ["\u012B", "\u012F", "\xEC", "\xED", "\xEF", "\xEE"], o: ["\u014D", "\u0153", "\xF8", "\xF5", "\xF4", "\xF3", "\xF6", "\xF2"], a: ["\u0101", "\xE3", "\xE5", "\xE2", "\xE1", "\xE4", "\xE0", "\xE6"], n: ["\xF1", "\u0144"] }] : k == "azerty" ? v = [[["a", "z", "e", "r", "t", "y", "u", "i", "o", "p"], ["q", "s", "d", "f", "g", "h", "j", "k", "l", "m"], ["shift", "w", "x", "c", "v", "b", "n", "\xB4", "backspace"], ["?123", ","]], [["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"], ["!", "@", "#", "$", "/", "^", "&", "*", "(", ")"], ["1/2", "-", "'", '"', ":", ";", ",", "?", "backspace"], ["ABC", ","]], [["+", "x", "%", "=", "<", ">", "{", "}", "[", "]"], ["\u20AC", "\xA3", "\xA5", "$", "\uFFE6", "~", "`", "\xA4", "\u2661", "\u2606"], ["2/2", "_", "\\", "|", "\u300A", "\u300B", "\xA1", "\xBF", "backspace"], ["ABC", ","]], { e: ["\u0117", "\u0113", "\u0119", "\xEA", "\xE9", "\xEB", "\xE8"], u: ["\u016B", "\xFB", "\xFA", "\xFC", "\xF9"], i: ["\u012B", "\u012F", "\xEC", "\xED", "\xEF", "\xEE"], o: ["\u014D", "\u0153", "\xF8", "\xF5", "\xF4", "\xF3", "\xF6", "\xF2"], a: ["\u0101", "\xE3", "\xE5", "\xE2", "\xE1", "\xE4", "\xE0", "\xE6"], n: ["\xF1", "\u0144"] }] : k == "turkish" && (v = [[["q", "w", "e", "r", "t", "y", "u", "\u0131", "o", "p", "\u011F", "\xFC"], ["a", "s", "d", "f", "g", "h", "j", "k", "l", "\u015F", "i"], ["shift", "z", "x", "c", "v", "b", "n", "m", "\xF6", "\xE7", "backspace"], ["?123", "*"]], [["1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "*"], ["!", "@", "#", "$", "/", "^", "&", "*", "(", ")", "*"], ["1/2", "-", "'", '"', ":", ";", ",", "?", "*", "backspace"], ["ABC", "*"]], [["+", "x", "%", "=", "<", ">", "{", "}", "[", "]", "*"], ["\u20AC", "\xA3", "\xA5", "$", "\uFFE6", "~", "`", "\xA4", "\u2661", "\u2606", "*"], ["2/2", "_", "\\", "|", "\u300A", "\u300B", "\xA1", "\xBF", "*", "backspace"], ["ABC", "*"]], { e: ["\u0117", "\u0113", "\u0119", "\xEA", "\xE9", "\xEB", "\xE8"], u: ["\u016B", "\xFB", "\xFA", "\xFC", "\xF9"], i: ["\u012B", "\u012F", "\xEC", "\xED", "\xEF", "\xEE"], o: ["\u014D", "\u0153", "\xF8", "\xF5", "\xF4", "\xF3", "\xF6", "\xF2"], a: ["\u0101", "\xE3", "\xE5", "\xE2", "\xE1", "\xE4", "\xE0", "\xE6"], n: ["\xF1", "\u0144"] }, { "\u0131": "I", i: "\u0130" }, { I: "\u0131", "\u0130": "i" }])), B.data = v;
          var S2 = "zim display - Keyboard(): Please pass in a reference to a container with bounds set";
          if (zot(h2)) {
            if (!zdf)
              return void zogy(S2);
            h2 = zdf.stage;
          } else {
            if (!h2.getBounds)
              return void zogy(S2);
            if (zot(h2.stage))
              return void zogy("zim display - Keyboard(): The container must have a stage property");
          }
          u != -1 && 0 < d && (B.shadow = new createjs.Shadow(u, 3, 3, d));
          var E, I2 = zdf ? zdf.stage : null;
          B.labels = n;
          var M = 10;
          To.loop(v[0], function(e4) {
            e4.length > M && (M = e4.length);
          });
          var O = M, S2 = ["@", "", ".", "/", "away"];
          zot(w) || S2.splice(1, 0, w);
          var j = To.copy(v[0]);
          j[3] = j[3].concat(S2);
          var L = To.copy(v[1]);
          L[3] = L[3].concat(S2);
          var _ = To.copy(v[2]);
          _[3] = _[3].concat(S2);
          var Y, D, X, R, W, F2, H, N, V, G, q, U, Q = [], Z2 = (1e3 - 5 * (O - 1)) / O, K = { def: "default", shift: "shift", number1: "number1", number2: "number2" }, J = K.def, $ = false, ee = 0, te = [];
          function oe(e4) {
            var t3, o3, n2 = false;
            if (J === K.def) {
              for (R.color = e4 ? i2 : r2, t3 = 0; t3 < Q.length - 6 - (zot(w) ? 0 : 1); t3++)
                0 < (o3 = Q[t3]).label.text.length && (o3.na.length === 1 ? (v[4] && v[4][o3.label.text] ? o3.label.text = v[4][o3.label.text] : o3.label.text = o3.label.text.toUpperCase(), o3.label.centerReg(o3).mov(0, 6)) : o3.label.centerReg(o3));
              e4 || (n2 = true, setTimeout(function() {
                n2 && ($ = true, R.color = i2, Y.updateCache(), B.stage && B.stage.update());
              }, 500), U = B.on("pressup", function(e5) {
                B.off("pressup", U), n2 = false;
              })), J = K.shift;
            } else {
              for (R.color = p, $ = false, t3 = 0; t3 < Q.length - 6; t3++)
                0 < (o3 = Q[t3]).label.text.length && (o3.na.length === 1 ? (v[5] && v[5][o3.label.text] ? o3.label.text = v[5][o3.label.text] : o3.label.text = o3.label.text.toLowerCase(), o3.label.centerReg(o3).mov(0, 3)) : o3.label.centerReg(o3));
              J = K.def;
            }
            Y.updateCache(), B.stage && B.stage.update();
          }
          function ne(e4) {
            var t3, o3, n2, r3, i3, a2, l2 = 0, s6 = 0, c3 = false, u2 = false;
            zot(e4) && (e4 = K.def), e4 === K.def ? t3 = j : e4 === K.number1 ? t3 = L : e4 === K.number2 && (t3 = _), Y = new To.Container(1e3, 430, null, null, false).addTo(B);
            for (var d2 = 0; d2 < t3.length; d2++) {
              (d2 <= 1 || e4 == K.def && d2 == 2 && t3[2][0] != "shift") && (l2 = (Z2 / 2 + 2.5) * (O - t3[d2].length));
              for (var h3 = 0; h3 < t3[d2].length; h3++) {
                var c3 = false, g2 = null, u2 = false;
                t3[d2][h3] == "backspace" ? (g2 = N, u2 = i3 = true) : t3[d2][h3] == "back" ? (g2 = N, u2 = !(i3 = false)) : t3[d2][h3] == "shift" ? (i3 = true, g2 = H) : (d2 == 3 || e4 != K.def && d2 == 2) && h3 == 0 ? u2 = i3 = true : t3[d2][h3] == "" ? c3 = !(i3 = false) : t3[d2][h3] == "away" ? (g2 = V, u2 = i3 = true) : i3 = false, i3 ? r3 = 1.5 * Z2 + 2.5 : c3 ? (r3 = (Z2 + 5) * ((zot(w) ? 4 : 3) + O - 10 + 1 - v[0][3].length) - 5, v[0][3].indexOf("backspace") != -1 && (r3 -= Z2 / 2)) : r3 = Z2, n2 = new To.Rectangle(r3, Z2, p, z, y, b, null, null, false).cur().addTo(Y), u2 && n2.addChild(new To.Rectangle(r3, Z2, "black", null, null, b, null, null, false).alp(m2)), n2.label = o3 = g2 ? new To.Label({ text: "", backgroundColor: "ignore", font: P.font != null ? P.font : null, style: false }) : new To.Label({ lineWidth: 10, lineHeight: 25, font: P.font != null ? P.font : null, text: t3[d2][h3], color: f3, align: "center", style: false }), g2 && ((g2 = g2.clone()).scaleTo(n2, 70, 70), g2.centerReg(n2)), a2 ? (a2 = false, l2 += 67.33) : (o3.centerReg(n2).mov(0, isNaN(o3.text) ? 3 : 7), n2.x = l2, n2.y = s6, n2.na = t3[d2][h3], d2 == 2 && h3 == 0 && e4 == K.number1 && (n2.toggle = "1/2"), d2 == 2 && h3 == 0 && e4 == K.number2 && (n2.toggle = "2/2"), d2 == 3 && h3 == 0 && e4 == K.def && (n2.toggle = "?123"), d2 == 3 && h3 == 0 && e4 != K.def && (n2.toggle = "ABC"), n2.toggle && o3.mov(0, 3), Q.push(n2), n2.na == "shift" && (R = n2), l2 = n2.x + n2.width + 5);
              }
              s6 += Z2 + 5, l2 = 0;
            }
            Y.cache(y ? -y : 0, y ? -y : 0, y ? Y.width + 2 * y : Y.width, y ? Y.height + 2 * y : Y.height);
          }
          function re() {
            B.mouseYAmount && (B.y = B.parent.globalToLocal(0, B.mouseYAmount - q).y);
          }
          function ie() {
            I2.off("pressmousemove", B.tickerMouseEvent), To.Ticker.remove(re);
          }
          function ae() {
            if (W && X) {
              for (var e4 = W.label.x + W.label.getBounds().x, t3 = 0; t3 < ee; t3++)
                e4 += W.widthArray[t3] || 0;
              X.heightOnly = W.getBounds().height * (W.backing && zot(W.padding) ? 0.9 : 1) - (W.paddingVertical && W.background ? 2 * W.paddingVertical : 0), X.center(W), X.x = e4;
            }
          }
          function le() {
            if (F2)
              return B;
            if (!W)
              return B;
            var e4, t3, o3 = c2 ? ["<", ">", "x"] : ["<", ">"];
            te = [], t3 = W.localToLocal(0, 0, B), F2 = new To.Container({ style: false }).addTo(B).pos({ x: t3.x, y: t3.y + W.height + 15, reg: true }).cur();
            for (var n2 = 0; n2 < o3.length; n2++)
              e4 = new To.Rectangle(Z2, Z2, a, z, y, b, null, null, false), o3[n2] == "x" && new To.Rectangle(Z2, Z2, "black", null, null, b, null, null, false).alp(m2).addTo(e4), (e4 = new To.Label({ lineWidth: 10, text: o3[n2], backing: e4, font: P.font != null ? P.font : null, color: l, align: "center", valign: "center", style: false })).pos(0, 0, To.LEFT, To.TOP, F2).cache(), e4.x = e4.x + n2 * (Z2 + 5), te.push(e4);
            t3 = W.localToLocal(0, 0, B), F2.x = t3.x, F2.y = t3.y + W.height + 15, F2.on("click", function(e5) {
              te.indexOf(e5.target) == 0 ? 0 < ee && ee-- : te.indexOf(e5.target) == 1 ? ee < W.text.length && ee++ : se();
              ae();
            }), B.stage && B.stage.update();
          }
          function se() {
            if (!F2)
              return B;
            F2.removeAllEventListeners(), B.removeChild(F2), F2 = null;
          }
          function ce(e4) {
            var t3, o3;
            W && (e4 === "del" ? (W && (W.text = [W.text.slice(0, ee - 1), W.text.slice(ee)].join("")), ee--, de()) : (J === K.shift && (e4 = e4.toUpperCase()), o3 = W.text, (t3 = W.clone().removeFrom()).text = e4, t3 = t3.label.getMeasuredWidth(), W.widthArray ? W.widthArray.splice(ee, 0, t3) : W.widthArray = [W.breedte], ee < W.text.length ? W.text = [W.text.slice(0, ee), e4, W.text.slice(ee)].join("") : W.text += e4, W && W.label.getBounds().width < E ? (ee++, ae()) : W.text = o3), J !== K.shift || $ || (B.removeChild(Y), ne(), J = K.def), ae(), (o3 = new createjs.Event("keydown")).letter = e4, B.dispatchEvent(o3), B.stage && B.stage.update());
          }
          function ue(e4) {
            if (B.stage) {
              var t3, o3 = 0, n2 = false;
              (W = e4.target).widthArrayCheck || de(), E = W.label.lineWidth || 1e4, (t3 = W.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY)).x -= W.label.x, t3.y -= W.label.y;
              for (var r3 = 0; r3 < W.widthArray.length; r3++)
                if (o3 += W.widthArray[r3], t3.x < o3 - W.widthArray[r3] / 2 + W.label.getBounds().x) {
                  ee = r3, n2 = true;
                  break;
                }
              n2 || (ee = W.text.length), ae(), g && !F2 && 0 < W.text.length && le(), F2 && W && (0 < W.text.length ? (t3 = W.localToLocal(0, 0, B), F2.x = t3.x, F2.y = t3.y + W.height + 15) : se());
            }
          }
          function de() {
            if (W) {
              var e4 = new Label("");
              W.widthArray = [];
              for (var t3 = 0; t3 < W.text.length; t3++)
                (e4 = W.clone().removeFrom()).text = W.text[t3], W.widthArray.push(e4.label.getMeasuredWidth());
              e4.text = W.text, W.widthArrayCheck = true, ae();
            }
          }
          function he(e4) {
            var t3, o3 = true;
            function n2() {
              W && 0 < W.text.length ? (0 < B.selectedIndex && ce("del"), e4 ? r3() : B.on("pressup", r3)) : ce("del");
            }
            function r3() {
              o3 = false, t3 && t3.clear(), B.off("pressup", r3);
            }
            n2(), t3 = To.timeout(300, function e5() {
              (!W || W.text.length < 1 || B.currentIndex == 0) && (o3 = false), o3 && (n2(), t3 = t3 && To.timeout(200, e5, null, "ms")), W && W.text.length < 1 && r3();
            }, null, "ms"), B.stage && B.stage.update();
          }
          function ge() {
            for (var e4 = 0; e4 < n.length; e4++)
              n[e4].clickEvent = n[e4].on("click", ue);
          }
          function pe() {
            if (1 < n.length)
              for (var e4 = 0; e4 < n.length; e4++)
                n[e4].off("click", n[e4].clickEvent);
          }
          function fe() {
            if (!X && (W = n[0], E = W && W.label.lineWidth ? W.label.lineWidth : 1e4, W)) {
              (X = new To.Rectangle(3, W.height - (W.paddingVertical && W.background ? 2 * W.paddingVertical : 0), t2, null, null, null, null, null, false).center(W)).x = 0, X.visible = false, X.animate({ obj: { alpha: 0 }, rewind: true, loop: true, loopWait: 750, time: 250, id: "knipperTekst", timeUnit: "ms" });
              for (var e4 = 0; e4 < n.length; e4++)
                n[e4].widthArray = [0];
              de();
            }
          }
          function me() {
            To.stopAnimate("knipperTekst"), W && W.removeChild(X), W = X = null;
          }
          !function() {
            (H = new To.Shape({ style: false })).graphics.f(f3).p("AhIFoIAAjYIixAAID5n3ID6H3IixAAIAADYgAjHBxICeAAIAADYIBTAAIAAjYICeAAIjImSg"), H.setBounds(-25.5, -36, 51, 72), N = new To.Container({ style: false });
            var e4 = new To.Shape({ style: false });
            e4.graphics.f(f3).p("ACgC+IigigIifCgQgGAGgJAAQgJAAgGgGQgGgGgBgJQABgJAGgGICgigIigifQgGgGgBgJQABgJAGgGQAGgGAJAAQAIAAAHAGICfCgICgigQAGgGAJAAQAJAAAGAGQAGAGABAJQgBAJgGAGIigCfICgCgQAGAGABAJQgBAJgGAGQgGAGgJAAQgJAAgGgGg"), e4.setTransform(82.6, 32), e4.addTo(N), (e4 = new To.Shape({ style: false })).graphics.f(f3).s().p("AkhFAQgcAAgUgUIkHj6QgVgUAAgeQAAgdAVgVIEHj6QAUgTAcAAINKAAQAdAAAUAUQAUAUAAAdIAAH1QAAAdgUATQgUAVgdAAgAk0kOIkGD8QgIAHAAALQAAALAIAIIEGD7QAIAHALAAINKAAQALAAAIgIQAHgHAAgLIAAn1QAAgLgHgIQgIgIgLAAItKAAQgLAAgIAHg"), e4.setTransform(62.2, 32), e4.addTo(N), N.setBounds(0, 0, 125, 64), (V = new To.Container({ style: false })).setBounds(0, 0, 147, 86);
            for (var t3, o3 = [{ p: "Ai+heIF9AAIi/C9g", transform: [73.4, 76] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [128.4, 43.2] }, { p: "AnNAzIAAhlIObAAIAABlg", transform: [73, 43.2] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [18.8, 43.2] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [128.2, 29.5] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [114.5, 29.5] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [100.8, 29.5] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [87.1, 29.5] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [73.4, 29.5] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [59.7, 29.5] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [46, 29.5] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [32.3, 29.5] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [18.6, 29.5] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [128, 15.8] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [114.3, 15.8] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [100.6, 15.8] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [86.9, 15.8] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [73.2, 15.8] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [59.5, 15.8] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [45.8, 15.8] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [32.1, 15.8] }, { p: "AgyAzIAAhlIBlAAIAABlg", transform: [18.4, 15.8] }, { p: "AphEnQgzAAgkgkQglglAAgzIAAlVQAAgzAlglQAkgkAzAAITDAAQAzAAAkAkQAlAlAAAzIAAFVQAAAzglAlQgkAkgzAAgAqjjtQgcAcAAAnIAAFVQAAAnAcAbQAbAcAnAAITDAAQAnAAAcgcQAbgbAAgnIAAlVQAAgngbgcQgcgcgnAAIzDAAQgnAAgbAcg", transform: [73.4, 29.5] }], n2 = 0; n2 < o3.length; n2++)
              (t3 = new To.Shape({ style: false })).graphics.f(f3).s().p(o3[n2].p), t3.setTransform(o3[n2].transform[0], o3[n2].transform[1]), t3.addTo(V);
          }(), ne(J), s5 && function() {
            G = new To.Rectangle(1.5 * Z2 + 2.5 + 2.5, Z2, p, z, y, b, null, null, false).addTo(B, 0).cur();
            for (var e4 = 0; e4 < 4; e4++)
              new To.Rectangle(0.4 * G.width, 4, f3, null, null, null, null, null, false).centerReg(G).alp(0.2).y -= 15 * e4 - 22;
            G.x = 8.5 * Z2 + 40, G.y = -Z2 - 5, G.na = "drag";
          }(), this.on("mousedown", function(e4) {
            I2 = B.stage, D && B.removeChild(D);
            F2 && te.indexOf(e4.target) < 0 && se();
            zot(e4.target.na) || (s5 && e4.target === G ? (B.tickerMouseEvent = I2.on("stagemousemove", function(e5) {
              B.mouseYAmount = e5.stageY;
            }), To.Ticker.add(re), B.on("pressup", ie), q = e4.stageY - B.localToGlobal(0, 0).y) : zot(w) || e4.target.na !== w ? e4.target.na === "shift" ? oe() : e4.target.toggle === "?123" ? (B.removeChild(Y), ne(K.number1)) : e4.target.toggle === "ABC" ? (B.removeChild(Y), J = K.def, ne(), $ && oe(true)) : e4.target.toggle === "1/2" ? (B.removeChild(Y), ne(K.number2)) : e4.target.toggle === "2/2" ? (B.removeChild(Y), ne(K.number1)) : e4.target.na === "away" ? (B.hide(), B.dispatchEvent("close")) : v[3] && v[3][e4.target.na] ? function(t3) {
              var i3, a2 = v[3][t3], l2 = false, s6 = false;
              i3 = To.timeout(500, function() {
                var e5, t4, o4, n2 = 0;
                if (i3.clear(), !l2) {
                  s6 = true, (D = new To.Container(1e3, Z2, null, null, false).addTo(B, 0)).y = -Z2 - 5;
                  for (var r3 = 0; r3 < a2.length; r3++)
                    o4 = J === K.shift ? a2[r3].toUpperCase() : a2[r3], e5 = new To.Label({ lineWidth: 10, lineHeight: 25, text: o4, font: P.font != null ? P.font : null, color: f3, align: "center", style: false }), t4 = new To.Rectangle(Z2, Z2, p, z, y, b, null, null, false).addTo(D), o4 = new To.Rectangle(Z2, Z2, "white", null, null, b, null, null, false).alp(0.2), t4.addChild(o4), e5.center(t4), t4.na = a2[r3], t4.x = n2, n2 += Z2 + 5;
                  B.stage && B.stage.update();
                }
              }, null, "ms");
              var o3 = B.on("pressup", function(e5) {
                l2 = true, B.off("pressup", o3), s6 || ce(t3);
              });
            }(e4.target.na) : e4.target.na === "return" ? ce("\n") : e4.target.na === "backspace" || e4.target.na === "back" ? he() : e4.target.na === "" ? ce(" ") : ce(e4.target.na) : B.dispatchEvent("special"), I2.update());
          }), B.addChar = function(e4) {
            !zot(e4) && e4.match(/^.$/) && ce(e4);
          }, B.removeChar = function() {
            he(true);
          }, B.setBounds(1e3, 400 - 26 * (O - 10)), ge(), fe(), Object.defineProperty(this, "selectedLabel", { get: function() {
            return W;
          }, set: function(e4) {
            ue({ target: e4 }), B.hidePlace();
          } }), Object.defineProperty(this, "selectedIndex", { get: function() {
            return ee;
          }, set: function(e4) {
            ee = e4, ae();
          } }), this.show = function(e4) {
            return B.addTo(h2), zot(e4) || ue({ target: n[e4] }), X && (X.visible = true), B.toggled = true, B;
          }, this.hide = function() {
            return B.removeFrom(h2), X && (X.visible = false), I2.update(), B.toggled = false, B;
          }, this.toggle = function(e4) {
            return e4 !== true && (e4 === false || B.parent) ? B.hide() : B.show(), B;
          }, this.showPlace = function() {
            return le(), B;
          }, this.hidePlace = function() {
            return se(), B;
          }, this.addLabels = function(e4) {
            Array.isArray(e4) || (e4 = [e4]);
            for (var t3 = e4.length - 1; 0 <= t3; t3--)
              0 <= n.indexOf(e4[t3]) || e4[t3].type != "Label" ? e4.splice(t3, 1) : e4[t3].widthArray = [0];
            return pe(), n = n.concat(e4), ge(), fe(), X && (X.visible = true), B;
          }, this.removeLabels = function(e4) {
            Array.isArray(e4) || (e4 = [e4]), pe();
            for (var t3 = 0; t3 < e4.length; t3++) {
              var o3 = n.indexOf(e4[t3]);
              0 <= o3 && n.splice(o3, 1);
            }
            return ge(), n.length == 0 ? W && me() : W && n.indexOf(W) == -1 && (me(), fe()), B;
          };
          var ze = new To.Rectangle(this.width, this.height, To.clear, null, null, null, null, null, false).addTo(this).expand().bot();
          ze.on("mousedown", function() {
          }), ze.on("click", function() {
          }), this.resize = function() {
            var e4;
            return B.scaleTo(I2, 100 - 2 * o2 / I2.width * 100, 50 - 2 * o2 / I2.height * 100), B.y = I2.height - B.height - o2, B.x = I2.width / 2 - B.width / 2, W && F2 && (e4 = W.localToLocal(0, 0, B), F2.x = e4.x, F2.y = e4.y + W.height + 15), B.stage && B.stage.update(), B;
          }, this.resize(), B.selectedLabel && (B.selectedIndex = B.selectedLabel.text.length), x2 && (this.keydownEvent = function(e4) {
            var t3;
            B.stage && (zot(t3 = B) || (e4.keyCode == 35 && (t3.selectedIndex = t3.selectedLabel.text.length), e4.keyCode == 36 && (t3.selectedIndex = 0), e4.keyCode == 37 && (t3.selectedIndex = t3.selectedIndex - 1), e4.keyCode == 39 && (t3.selectedIndex = t3.selectedIndex + 1), e4.keyCode == 46 && t3.selectedIndex < t3.selectedLabel.text.length && (t3.selectedIndex = t3.selectedIndex + 1, t3.removeChar()), e4.keyCode == 8 && (e4.preventDefault(), t3.removeChar()), t3.addChar(e4.key), B.stage && B.stage.update()));
          }, window.addEventListener("keydown", this.keydownEvent)), T2 !== false && To.styleTransforms(this, P), this.clone = function() {
            var e4 = new To.Keyboard(n, p, f3, r2, i2, a, t2, m2, o2, b, s5, c2, u, d, h2, v, g, w, C, x2, k, T2, this.group, A3);
            return B.cloneProps(e4);
          }, this.dispose = function(e4, t3, o3) {
            ze.removeAllEventListeners(), ze = null, B.keydownEvent && window.removeEventListener("keydown", B.keydownEvent);
            for (var n2 = 0; n2 < B.labels.length; n2++)
              B.labels[n2].removeAllEventListeners();
            return X && X.dispose(), B.labels = W = null, I2 && I2.off("pressmousemove", B.tickerMouseEvent), o3 || B.zimContainer_dispose(true), true;
          };
        }, To.extend(To.Keyboard, To.Container, ["clone", "dispose"], "zimContainer", false), To.Organizer = function(e3, t2, n, o2, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3) {
          if (I2 = zob(To.Organizer, arguments, "width, list, useAdd, useRemove, usePosition, autoAdd, autoRemove, autoPosition, addForward, removeForward, backgroundColor, rollBackgroundColor, selectedBackgroundColor, selectedRollBackgroundColor, color, rollColor, selectedColor, selectedRollColor, spacing, corner, keyEnabled, gradient, gloss, backdropColor, style, group, inherit", this))
            return I2;
          z_d("67.3"), this.group = T2;
          var P, B, S2, E, I2, M, O, j, L = k === false ? {} : To.getStyle("Organizer", this.group, A3);
          zot(e3) && (e3 = L.width != null ? L.width : t2 && t2.vertical ? t2.width : 300), zot(n) && (n = L.useAdd == null || L.useAdd), zot(o2) && (o2 = L.useRemove == null || L.useRemove), zot(r2) && (r2 = L.usePosition == null || L.usePosition), zot(i2) && (i2 = L.autoAdd != null ? L.autoAdd : n), zot(a) && (a = L.autoRemove != null ? L.autoRemove : o2), zot(l) && (l = L.autoPosition != null ? L.autoPosition : r2), zot(s5) && (s5 = L.addForward == null || L.addForward), zot(c2) && (c2 = L.removeForward == null || L.removeForward), zot(u) && (u = L.backgroundColor != null ? L.backgroundColor : "#777"), zot(d) && (d = L.rollBackgroundColor != null ? L.rollBackgroundColor : "#555"), zot(h2) && (h2 = L.selectedBackgroundColor != null ? L.selectedBackgroundColor : "#333"), zot(p) && (p = L.color != null ? L.color : "white"), zot(f3) && (f3 = L.rollColor != null ? L.rollColor : p), zot(m2) && (m2 = L.selectedColor != null ? L.selectedColor : p), zot(z) && (z = L.selectedRollColor != null ? L.selectedRollColor : p), zot(y) && (y = L.spacing != null ? L.spacing : 1), zot(b) && (b = L.corner != null ? L.corner : 0), zot(w) && (w = L.gradient != null ? L.gradient : 0.2), zot(C) && (C = L.gloss != null ? L.gloss : null), zot(x2) && (x2 = L.backdropColor != null ? L.backdropColor : null), Array.isArray(b) || (b = [b, b, b, b]), (n || r2 || o2) && (B = { width: P = (e3 + y) / ((n ? 1 : 0) + (r2 ? 4 : 0) + (o2 ? 1 : 0)), height: P, label: "", shadowColor: -1, gradient: w, corner: b, backgroundColor: u, rollBackgroundColor: d }, S2 = [], (E = new To.Shape()).graphics.f(p).p("AAAA4Ih6B8Ig5g4IB8h8Ih7h6IA4g5IB6B8IB7h8IA5A5Ih8B6IB8B7Ig5A5g"), n && S2.push(new To.Button({ icon: E.sca(0.55).rot(-45).reg(1), inherit: B })), r2 && ((I2 = new To.Shape()).graphics.f(p).p("AiJieIETCeIkTCfg"), S2.push(new To.Button({ icon: I2.sca(0.6).rot(t2 && !t2.vertical ? 180 : -90).reg(-2), inherit: B })), S2.push(new To.Button({ icon: I2.clone().sca(0.6).rot(t2 && !t2.vertical ? 0 : 90).reg(-2), inherit: B })), (I2 = new To.Shape()).graphics.f(p).p("AiFCLIAAkVIBXAAIAAEVgAgiAAICoiHIAAEQg"), S2.push(new To.Button({ icon: I2.sca(0.62).rot(t2 && !t2.vertical ? 0 : 90).reg(0), inherit: B })), S2.push(new To.Button({ icon: I2.clone().sca(0.62).rot(t2 && !t2.vertical ? 180 : -90).reg(0), inherit: B }))), o2 && S2.push(new To.Button({ icon: E.clone().rot(0).sca(0.55), inherit: B })), S2.length == 0 && (S2 = [""]), this.zimTabs_constructor(e3, P, S2, u, d, h2, g, p, f3, m2, z, false, y, true, false, b, null, true, w, C, null, null, null, null, null, null, null, null, null, null, x2), (M = this).list = t2, M.type = "Organizer", O = !(M.setButtons = function() {
            var e4;
            r2 && (S2[0 + (e4 = n ? 1 : 0)] && (S2[0 + e4].icon.rotation = M.list && !M.list.vertical ? 180 : -90), S2[1 + e4] && (S2[1 + e4].icon.rotation = M.list && !M.list.vertical ? 0 : 90), S2[2 + e4] && (S2[2 + e4].icon.rotation = M.list && !M.list.vertical ? 0 : 90), S2[3 + e4] && (S2[3 + e4].icon.rotation = M.list && !M.list.vertical ? 180 : -90));
          }), j = t2, M.change(function(e4) {
            (!O && M.list || M.list && M.list != j) && (M.list != j && j && j.noChange(), M.list.change(function(e5) {
              M.orgItem = M.list.selected, M.orgIndex = M.list.selectedIndex;
            }), O = true, j = M.list);
            e4 = e4.target.selectedIndex;
            n || e4++, r2 || n && !(0 < e4) || (e4 = 5);
            var t3, o3 = zot(M.list.selectedIndex) || M.list.selectedIndex < 0;
            switch (o3 && (M.currentValue = null), M.lastIndex = M.list.selectedIndex, e4) {
              case 0:
                i2 && (t3 = Math.max(0, M.list.selectedIndex), M.add(t3)), M.orgType = "add";
                break;
              case 1:
                if (o3)
                  break;
                l && (t3 = M.list.selectedIndex, M.up(t3)), M.orgType = "up";
                break;
              case 2:
                if (o3)
                  break;
                l && (t3 = M.list.selectedIndex, M.down(t3)), M.orgType = "down";
                break;
              case 3:
                if (o3)
                  break;
                l && (t3 = M.list.selectedIndex, M.toTop(t3)), M.orgType = "top";
                break;
              case 4:
                if (o3)
                  break;
                l && (t3 = M.list.selectedIndex, M.toBottom(t3)), M.orgType = "bottom";
                break;
              case 5:
                if (o3)
                  break;
                a && (t3 = M.list.selectedIndex, M.remove(t3)), M.orgType = "remove";
            }
          }), this.add = function(e4, t3, o3) {
            return zot(e4) && (e4 = M.lastIndex), zot(t3) && (t3 = ""), e4 = s5 ? Math.min(M.list.length, Math.max(0, M.list.selectedIndex) + 1) : Math.max(0, M.list.selectedIndex), M.list.addAt(t3, e4, o3), M.list.selectedIndexPlusPosition = e4, M.orgItem = M.list.selected, M.orgIndex = M.list.selectedIndex, M;
          }, this.up = function(e4) {
            zot(e4) && (e4 = M.lastIndex);
            var t3 = M.list.items[e4];
            return zot(t3) || (M.list.removeAt(1, e4), M.list.addAt(t3, e4 - 1), M.list.selectedIndexPlusPosition = Math.max(0, e4 - 1), M.orgItem = M.list.selected, M.orgIndex = M.list.selectedIndex), M;
          }, this.down = function(e4) {
            zot(e4) && (e4 = M.lastIndex);
            var t3 = M.list.items[e4];
            return zot(t3) || (M.list.removeAt(1, e4), M.list.addAt(t3, e4 + 1), M.list.selectedIndexPlusPosition = Math.min(M.list.length - 1, e4 + 1), M.orgItem = M.list.selected, M.orgIndex = M.list.selectedIndex), M;
          }, this.toTop = function(e4) {
            zot(e4) && (e4 = M.lastIndex);
            var t3 = M.list.items[e4];
            return zot(t3) || (M.list.removeAt(1, e4), M.list.addAt(t3, 0), M.list.first(), M.orgItem = M.list.selected, M.orgIndex = M.list.selectedIndex), M;
          }, this.toBottom = function(e4) {
            zot(e4) && (e4 = M.lastIndex);
            var t3 = M.list.items[e4];
            if (!zot(t3))
              return M.list.removeAt(1, e4), M.list.addAt(t3, M.list.length), M.list.last(), M.orgItem = M.list.selected, M.orgIndex = M.list.selectedIndex, M;
          }, !(this.remove = function(e4) {
            if (zot(e4)) {
              if (!(0 <= M.list.selectedIndex))
                return M;
              e4 = M.list.selectedIndex;
            }
            var t3 = e4 == M.list.selectedIndex;
            return M.removedItem = M.list.items[e4], M.list.removeAt(1, e4), t3 ? c2 || (e4 = Math.max(0, e4 - 1)) : e4 = M.list.selectedIndex, M.list.selectedIndexPlusPosition = Math.min(M.list.length - 1, e4), M.orgItem = M.list.selected, M.orgIndex = M.list.selectedIndex, M;
          }) !== k && To.styleTransforms(this, L), this.clone = function() {
            return M.cloneProps(new To.Organizer(e3, t2, n, o2, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, M.group, A3));
          }, this.dispose = function(e4, t3, o3) {
            return S2 = null, o3 || M.zimTabs_dispose(true), true;
          });
        }, To.extend(To.Organizer, To.Tabs, ["clone", "dispose"], "zimTabs", false), To.Scrambler = function(l, r2, i2, e3, t2, o2, n, a, s5, c2, u, d, h2, g) {
          if (w = zob(To.Scrambler, arguments, "tile, keys, keyProperty, scramble, time, wait, num, shadowColor, shadowBlur, swap, swapLock, style, group, inherit", this))
            return w;
          z_d("67.35"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Scrambler", this.group = h2;
          var p, f3, m2, z, y, b, v, w = d === false ? {} : To.getStyle(this.type, this.group, g);
          function C(e4) {
            var n2 = e4.target;
            n2.stopAnimate();
            var e4 = n2.boundsToGlobal(), r3 = l.hitTestGrid(l.width, l.height, l.cols, l.rows, e4.x + e4.width / 2, e4.y + e4.height / 2, null, null, l.spacingH, l.spacingV, null, "open");
            zot(r3) || To.loop(l, function(e5) {
              var t3, o3;
              e5 != n2 && e5.paused !== false && (t3 = e5.boundsToGlobal(), zot(t3 = l.hitTestGrid(l.width, l.height, l.cols, l.rows, t3.x + t3.width / 2, t3.y + t3.height / 2, null, null, l.spacingH, l.spacingV, null, "open")) || (r3[2] == t3[2] && (e5.x >= n2.x && e5.x <= n2.x + m2 / 2 || e5.x <= n2.x && e5.x >= n2.x - m2 / 2) && (o3 = e5.x, e5.mouseEnabled = false, e5.top().ord(-1), e5.animate({ props: { x: y }, time: 0.2, id: "zimScrambler", timeUnit: "seconds", call: function() {
                e5.mouseEnabled = true, c2 && !p.complete && p.test() && (p.complete = true, p.dispatchEvent("complete"));
              } }), y = o3), r3[1] == t3[1] && (e5.y >= n2.y && e5.y <= n2.y + z / 2 || e5.y <= n2.y && e5.y >= n2.y - z / 2) && (o3 = e5.y, e5.mouseEnabled = false, e5.top().ord(-1), e5.animate({ props: { y: b }, time: 0.201, override: false, id: "zimScrambler", timeUnit: "seconds", call: function() {
                e5.mouseEnabled = true, c2 && !p.complete && p.test() && (p.complete = true, p.dispatchEvent("complete"));
              } }), b = o3)));
            }, true);
          }
          function x2() {
            p.upEvent && l.off("pressup", p.upEvent), p.moveEvent && l.off("pressmove", p.moveEvent), l.noDrag(), 0 < o2 + t2 && p.noMouse();
          }
          function k(r3, i3, a2) {
            To.stopAnimate("zimScrambler"), To.loop(l.items, function(e4, t3, o3) {
              var n2 = p.starts[r3[t3]];
              i3 ? e4.animate({ props: { x: n2.x, y: n2.y }, time: i3, ease: a2 ? "quadInOut" : "quadOut", wait: a2, timeUnit: "seconds", id: "zimScrambler" }) : (e4.loc(n2), p.stage ? e4.drag({ boundary: l }) : t3 == o3 - 1 && p.added(function() {
                l.drag({ boundary: l });
              }));
            });
          }
          zot(l) && (l = w.tile != null ? w.tile : l), zot(r2) && (r2 = w.keys != null ? w.keys : null), zot(i2) && (i2 = w.keyProperty != null ? w.keyProperty : null), zot(e3) && (e3 = w.scramble == null || w.scramble), zot(t2) && (t2 = w.time != null ? w.time : 0), zot(o2) && (o2 = w.wait != null ? w.wait : 0), zot(n) && (n = w.num != null ? w.num : 1), zot(a) && (a = w.shadowColor != null ? w.shadowColor : "rgba(0,0,0,.3)"), zot(s5) && (s5 = w.shadowBlur != null ? w.shadowBlur : 5), zot(c2) && (c2 = w.swap != null && w.swap), zot(u) && (u = w.swapLock != null && w.swapLock), u && (c2 = true), zot(l) || (l.addTo(this), (p = this).complete = true, f3 = Ao(t2), Ao(o2), m2 = (l.width + l.spacingH) / l.cols, z = (l.height + l.spacingV) / l.rows, l.on("mousedown", function(e4) {
            if (u) {
              var r3 = l.current;
              if (p.testItem(e4.target, r3.indexOf(e4.target)))
                return e4.target.noMouse(), void e4.target.noDrag();
            }
            var t3;
            y = e4.target.x, b = e4.target.y, a != -1 && 0 < s5 && (t3 = new createjs.Shadow(a, 3, 3, s5), e4.target.backing ? e4.target.backing.shadow = t3 : e4.target.shadow = t3), p.upEvent && l.off("pressup", p.upEvent), p.upEvent = l.on("pressup", function(e5) {
              var t4, o3, n2 = true;
              u && (o3 = e5.target.boundsToGlobal(), n2 = !zot(t4 = l.hitTestGrid(l.width, l.height, l.cols, l.rows, o3.x + o3.width / 2, o3.y + o3.height / 2, null, null, l.spacingH, l.spacingV, null, "open")) && (o3 = r3[t4[0]], e5.target != o3 && !p.testItem(o3, t4[0]))), c2 && n2 && C(e5), e5.target.mouseEnabled = false, e5.target.animate({ props: { x: y, y: b }, time: 0.1, id: "zimScrambler", timeUnit: "seconds", call: function() {
                !p.complete && p.test() && (p.complete = true, p.dispatchEvent("complete")), a != -1 && 0 < s5 && (e5.target.backing ? e5.target.backing.shadow = null : e5.target.shadow = null), e5.target.mouseEnabled = true;
              } });
            }, null, true), c2 || (p.moveEvent && l.off("pressmove", p.moveEvent), p.moveEvent = l.on("pressmove", function(e5) {
              C(e5);
            }));
          }), this.test = function() {
            var e4 = l.current;
            return To.loop(e4, function(e5, t3) {
              return !zot(e5) && (!!p.testItem(e5, t3) && void 0);
            });
          }, this.testItem = function(e4, t3) {
            if (!zot(e4)) {
              if (zot(t3) && (t3 = l.current.indexOf(e4)), r2) {
                if ((zot(i2) ? e4.key : e4[i2]) != r2[t3])
                  return false;
              } else if (l.items[t3] != e4)
                return false;
              return true;
            }
          }, this.starts = [], this.order = [], To.loop(l.rows * l.cols, function(e4) {
            p.order.push(e4);
          }), v = p.order.slice(), l.loop(function(e4) {
            e4.mouseChildren = false, p.starts.push({ x: e4.x, y: e4.y });
          }), this.inactive = false, this.scramble = function(o3, e4, n2) {
            function t3() {
              for (var e5 = true, t4 = 0; e5 && t4 < 50; )
                t4++, To.shuffle(p.order), e5 = To.loop(p.order, function(e6, t5) {
                  e6 = l.getChildAt(e6);
                  if (r2) {
                    if ((zot(i2) ? e6.key : e6[i2]) != r2[t5])
                      return false;
                  } else if (l.items[t5] != e6)
                    return false;
                });
              k(p.order, o3 / n2), To.timeout(o3, function() {
                p.dispatchEvent("scrambled");
              });
            }
            zot(e4) && (e4 = 0), zot(o3) && (o3 = 0), !zot(n2) && o3 != 0 || (n2 = 1), x2(), To.timeout(e4, function() {
              0 < o3 ? To.interval(o3 / n2, t3, n2, true) : t3();
            }), setTimeout(function() {
              p.complete = false, l.loop(function(e5) {
                e5.mouse();
              }), p.mouse(), l.drag({ boundary: l });
            }, f3 == "s" ? 1e3 * (e4 + o3) : e4 + o3);
          }, e3 ? p.scramble(t2, o2, n) : p.added(function() {
            l.drag({ boundary: l });
          }), this.solve = function(e4, t3, o3) {
            zot(o3) && (o3 = true), zot(t3) && (t3 = 0), zot(e4) && (e4 = 0), t3 + e4 == 0 && o3 && p.noMouse(), setTimeout(function() {
              p.order = v.slice(), x2(), k(p.order, e4, 0);
            }, f3 == "s" ? 1e3 * t3 : t3), o3 || setTimeout(function() {
              p.mouse(), l.drag({ boundary: l });
            }, f3 == "s" ? 1e3 * (t3 + e4) : t3 + e4);
          }, this._enabled = true, Object.defineProperty(p, "enabled", { get: function() {
            return p._enabled;
          }, set: function(e4) {
            Ge(p, e4), To.OPTIMIZE || !zns && OPTIMIZE || !p.stage || p.stage.update();
          } }), !(this.dispose = function(e4, t3, o3) {
            return l.removeAllEventListeners(), o3 || (p.zimContainer_dispose(true), p.stage && p.stage.update()), true;
          }) !== d && To.styleTransforms(this, w), this.clone = function() {
            return p.cloneProps(new To.Scrambler(l.clone(), r2, i2, e3, t2, o2, n, a, s5, c2, u, d, p.group, g));
          });
        }, To.extend(To.Scrambler, To.Container, ["clone", "dispose"], "zimContainer", false), To.Connectors = function(e3, t2, o2, a, l, s5, n, c2, u, d, h2, g, p, r2, f3, m2, z, y, b, v, w, i2, C, x2, k, T2, A3, P, B, S2, E, I2) {
          if (H = zob(To.Connectors, arguments, "width, height, points, node, line, linear, linearWrap, linearOrder, num, snapH, snapV, dropType, deleteNode, dblclick, fullMove, min, max, boundary, expand, nodeRollColor, nodeRollBorderColor, nodeSelectedColor, nodeSelectedBorderColor, baseColor, baseBorderColor, baseRollover, rootLock, grandChildren, dblclickTime, style, group, inherit", this))
            return H;
          z_d("67.39"), this.group = E;
          var M = S2 === false ? {} : To.getStyle("Connectors", this.group, I2);
          zot(e3) && (e3 = M.width != null ? M.width : null), zot(t2) && (t2 = M.height != null ? M.height : null), this.zimContainer_constructor(null, null, null, null, false), this.type = "Connectors", zot(o2) && (o2 = M.points != null ? M.points : [[0, 0], [100, 0], [100, 100], [0, 100]]), zot(a) && (a = M.node != null ? M.node : new To.Circle(10, To.grey, To.grey)), a.removeFrom(), a.color != To.clear || a.hitArea || a.expand(0), zot(l) && (l = M.line != null ? M.line : new To.Line({ length: 10, thickness: 3, color: To.tin, strokeObj: { caps: "round" } })), zot(u) && (u = M.num != null ? M.num : 10), zot(s5) && (s5 = M.linear != null && M.linear), zot(n) && (n = M.linearWrap == null || M.linearWrap), zot(v) && (v = M.nodeRollColor != null ? M.nodeRollColor : a.color.match("rgb") ? a.color : a.color.lighten(0.2)), zot(w) && (w = M.nodeRollBorderColor != null ? M.nodeRollBorderColor : a.borderColor), zot(i2) && (i2 = M.nodeSelectedColor != null ? M.nodeSelectedColor : To.white), zot(C) && (C = M.nodeSelectedBorderColor != null ? M.nodeSelectedBorderColor : a.borderColor), zot(x2) && (x2 = M.baseColor != null ? M.baseColor : a.color), zot(k) && (k = M.baseBorderColor != null ? M.baseBorderColor : a.borderColor), zot(T2) && (T2 = M.baseRollover != null && M.baseRollover), zot(m2) && (m2 = M.min != null ? M.min : a.radius ? 2 * a.radius : Math.min(a.width, a.height)), zot(z) && (z = M.max != null ? M.max : null), zot(b) && (b = M.expand != null ? M.expand : To.mobile() ? 10 : 0), zot(g) && (g = M.dropType != null ? M.dropType : "any"), zot(p) && (p = M.deleteNode == null || M.deleteNode), zot(r2) && (r2 = M.dblclick == null || M.dblclick), zot(f3) && (f3 = M.fullMove == null || M.fullMove), zot(B) && (B = M.dblclickTime != null ? M.dblclickTime : 0.5);
          var O, j, L, _, Y, D, X, R, W, F2, H = Ao(B);
          function N(e4, t3, r3, o3) {
            if (e4.addChild) {
              g = "on", P = !(A3 = true), (r3 = e4).connectorMoveEvent || (O.bases || (O.bases = []), O.bases.push(r3), r3.connectorMoveEvent = r3.on("pressmove", function() {
                r3.positionConnectors(r3, true, true);
              }), r3.connectorUpEvent = r3.on("pressup", function() {
                r3.positionConnectors(r3, true, true);
              }), T2 && (r3.connectorOverEvent = r3.on("mouseover", function() {
                $(r3);
              }), r3.connectorOutEvent = r3.on("mouseout", function() {
                ee(r3);
              })), r3.positionConnectors = function(o4, n3, r4) {
                To.loop(o4.connectors, function(e5) {
                  var t4 = o4.parent.localToLocal(o4.x - o4.baseStart.x + e5.nodeStart.x, o4.y - o4.baseStart.y + e5.nodeStart.y, e5.parent);
                  e5.x = t4.x, e5.y = t4.y, ae(e5, n3, r4);
                }), o4.stage && o4.stage.update();
              }, r3.setConnectorColors = function(t4, o4, e5, n3) {
                return zot(t4) || (r3.connectorColor = t4), zot(o4) || (r3.connectorBorderColor = o4), zot(e5) || (r3.connectorRollColor = e5), zot(n3) || (r3.connectorRollBorderColor = n3), To.loop(r3.connectors, function(e6) {
                  zot(t4) || (e6.color = t4), zot(o4) || (e6.borderColor = o4);
                }), r3;
              }, r3.setConnectorColors(x2, k, v, w));
              var n2 = r3.getBounds();
              l.endHead, Array.isArray(t3) || (t3 = [t3, t3]);
              var i3 = [];
              return t3.length == 2 && (t3 = [t3[0], t3[1], t3[0], t3[1]]), l.lineOrientation != To.HORIZONTAL && l.lineOrientation != "auto" || To.loop([t3[0], t3[1]], function(e5, o4) {
                var t4;
                e5 != -1 && e5 != -2 || (t4 = r3.localToLocal(o4 == 0 ? n2.x : n2.x + n2.width, n2.y, O), i3.push([t4.x, t4.y, To.HORIZONTAL])), e5 != -1 && e5 != -3 || (t4 = r3.localToLocal(o4 == 0 ? n2.x : n2.x + n2.width, n2.y + n2.height, O), i3.push([t4.x, t4.y, To.HORIZONTAL])), 0 < e5 && To.loop(e5, function(e6, t5) {
                  t5 = r3.localToLocal(o4 == 0 ? n2.x : n2.x + n2.width, n2.y + n2.height * (e6 + 1) / (t5 + 1), O);
                  i3.push([t5.x, t5.y, To.HORIZONTAL]);
                });
              }), l.orientation != To.VERTICAL && l.lineOrientation != "auto" || To.loop([t3[2], t3[3]], function(e5, o4) {
                var t4;
                e5 != -1 && e5 != -2 || (t4 = r3.localToLocal(n2.x, o4 == 0 ? n2.y : n2.y + n2.height, O), i3.push([t4.x, t4.y, To.VERTICAL])), e5 != -1 && e5 != -3 || (t4 = r3.localToLocal(n2.x + n2.width, o4 == 0 ? n2.y : n2.y + n2.height, O), i3.push([t4.x, t4.y, To.VERTICAL])), 0 < e5 && To.loop(e5, function(e6, t5) {
                  t5 = r3.localToLocal(n2.x + n2.width * (e6 + 1) / (t5 + 1), o4 == 0 ? n2.y : n2.y + n2.height, O);
                  i3.push([t5.x, t5.y, To.VERTICAL]);
                });
              }), r3.connectors = [], r3.baseStart = new To.Point(r3.x, r3.y), To.loop(i3, function(e5) {
                e5 = N(e5[0], e5[1], r3, e5[2]);
                te(r3, e5);
              }), setTimeout(function() {
                r3.positionConnectors(r3, true, true);
              }, 50), O;
            }
            t3 = a.clone().loc(e4, t3, Y).drag({ boundary: y }).expand(b);
            return t3.orientation = o3, t3.on("mouseover", q), t3.on("mouseout", U), t3.on("mousedown", Q), t3.on("pressmove", Z2), t3.on("pressup", K), p && t3.hold(G), t3.creations = [], t3;
          }
          function V() {
            To.loop(o2, function(e4) {
              N(e4[0], e4[1]);
            }), s5 && Y.loop(function(e4, t3, o3) {
              t3 == 0 ? (e4.before = n ? Y.getChildAt(o3 - 1) : null, e4.after = Y.getChildAt(t3 + 1)) : t3 == o3 - 1 ? (e4.after = n ? Y.getChildAt(0) : null, e4.before = Y.getChildAt(t3 - 1)) : (e4.before = Y.getChildAt(t3 - 1), e4.after = Y.getChildAt(t3 + 1)), c2 && 0 < t3 && e4.noMouse();
            });
          }
          function G(e4) {
            var t3 = e4.target.stage, e4 = e4.target;
            O.bases || A3 && !e4.creator.creator || (e4.adding ? le(e4.creator) : le(e4), t3 && t3.update());
          }
          function q(e4) {
            e4 = e4.target;
            e4.selected || (e4.color = e4.base ? e4.base.connectorRollColor : v, e4.borderColor = e4.base ? e4.base.connectorRollBorderColor : w, O.stage && O.stage.update());
          }
          function U(e4) {
            e4 = e4.target;
            e4.selected || (e4.color = e4.base ? e4.base.connectorColor : j, e4.borderColor = e4.base ? e4.base.connectorBorderColor : L, O.stage && O.stage.update());
          }
          function Q(e4) {
            var t3, o3 = e4.target;
            s5 || A3 && !o3.creator || !r2 || (W == 0 && (F2 = setTimeout(function() {
              var t4;
              W = 0, X && (t4 = O.stage ? O.stage.frame : zdf, Y.loop(function(e5) {
                if (e5.hitTestPoint(t4.mouseX, t4.mouseY) && e5.selected)
                  return false;
              }) && ie());
            }, B)), W++), o3.startX = o3.x, o3.startY = o3.y, !s5 && 0 < X.length && To.loop(X, function(e5) {
              e5.startX = e5.x, e5.startY = e5.y;
            }), o3.creations.length >= u || o3.selected || o3.creator && !P || (o3.adding = true, (t3 = N(o3.x, o3.y).bot()).creations = o3.creations, t3.creatorLine = o3.creatorLine, t3.creator = o3.creator, t3.orientation = o3.orientation, t3.startX = o3.startX, t3.startY = o3.startY, o3.base && (t3.base = o3.base, t3.baseStart = o3.baseStart, t3.nodeStart = o3.nodeStart, t3.connectors = o3.connectors, o3.base = o3.baseStart = o3.nodeStart = o3.connectors = null, t3.base.connectors && t3.base.connectors.splice(t3.base.connectors.indexOf(o3), 1, t3), t3.color = t3.base.connectorColor, t3.borderColor = t3.base.connectorBorderColor), t3.before = o3.before, t3.after = o3.after, t3.before && (t3.before.after = t3), t3.after && (t3.after.before = t3), !t3.creator || (e4 = t3.creator.creations.indexOf(o3)) != -1 && t3.creator.creations.splice(e4, 1, t3), To.loop(t3.creations, function(e5) {
              e5.creator = t3;
            }), o3.creator = t3, o3.creatorLine = l.clone().setPoints(o3.x, o3.y, o3.x, o3.y).addTo(_).alp(0), o3.creatorLine.lineOrientation = o3.orientation, (o3.creatorLine.node = o3).creatorLine.creatorNode = t3, o3.creations = [], t3.creations.push(o3));
          }
          function Z2(e4) {
            var t3 = e4.target;
            t3.creatorLine && t3.creatorLine.alp(1), !s5 && 0 < X.length && X.indexOf(t3) == -1 && ie(), ae(t3, false, true), O.bases && To.loop(O.bases, function(e5) {
              t3.creator && t3.creator.base == e5 || (!e5.connectorsOn && t3.hitTestBounds(e5) && $(e5), e5.connectorsOn && !t3.hitTestBounds(e5) && ee(e5));
            }), O.stage.update();
          }
          function K(e4) {
            var n2 = e4.target;
            O.bases && To.loop(O.bases, function(e5) {
              e5 != n2.base && e5.connectorsOn && ee(e5);
            });
            var t3 = false;
            if (!s5 && 1 < W && (clearTimeout(F2), o3 = n2.adding ? n2.creator : n2, n2.adding && le(o3.creations[o3.creations.length - 1]), o3.selected || ne(o3, !(O.stage ? O.stage.frame : zdf).ctrlKey), t3 = !(W = 0)), s5 || O.base || (d && (n2.x = Math.round(n2.x / d) * d), h2 && (n2.y = Math.round(n2.y / h2) * h2)), m2 && To.dist(n2.x, n2.y, n2.startX, n2.startY) < m2 || z && To.dist(n2.x, n2.y, n2.startX, n2.startY) > z)
              return n2.adding ? le(n2) : (n2.loc(n2.startX, n2.startY), t3 || ae(n2)), O.stage.update(), void O.dispatchEvent("noconnection");
            var e4 = false, o3 = false;
            if (s5) {
              t3 = n2.creator;
              if (O.connectionStart = t3, O.connectionEnd = n2, t3.before && n2.hitTestCircle(t3.before) && !c2)
                n2.loc(t3.before).removeFrom(), t3.before.after = null, t3.before.before || t3.before.noMouse(), t3.before = null, t3.after || t3.noMouse(), o3 = true, e4 = re();
              else if (t3.after && n2.hitTestCircle(t3.after))
                n2.loc(t3.after).removeFrom(), t3.after.before = null, t3.after.after || t3.after.noMouse(), c2 && t3.after.mouse(), t3.after = null, t3.before || t3.noMouse(), c2 && t3.noMouse(), o3 = true, e4 = re();
              else {
                if (t3 && !(0 < n2.creations.length))
                  return le(n2), O.stage.update(), void O.dispatchEvent("noconnection");
                n2.loc(n2.startX, n2.startY).bot();
              }
            } else if (g == "off") {
              if (!Y.loop(function(e5) {
                if (n2 != e5)
                  return n2.hitTestCircles(e5) ? (n2.adding ? le(n2) : (n2.loc(n2.startX, n2.startY), ae(n2)), A3 && oe(n2), !f3 && n2.creator && 0 < u && n2.creator.creations.length >= u && n2.creator.noMouse(), O.dispatchEvent("connection"), O.stage.update(), false) : void 0;
              }))
                return void J(n2);
            } else if (g == "on" || g == "single") {
              var r3, i3 = 0;
              if (Y.loop(function(e5, t4, o4) {
                if (n2 != e5 && n2.hitTestCircles(e5) && (r3 = e5, !O.bases || !(n2.orientation != e5.orientation || n2.creator && n2.creator.base && n2.creator.base == e5.base))) {
                  if (g == "on")
                    return false;
                  i3++, i3 += e5.creations.length;
                }
              }) && (g != "single" || i3 != 1))
                return void J(n2);
              if (n2.loc(r3), n2.creator && n2.orientation == To.VERTICAL && Math.round(n2.y) == Math.round(n2.creator.startY) || n2.creator && n2.orientation == To.HORIZONTAL && Math.round(n2.x) == Math.round(n2.creator.startX))
                return;
              r3.base && r3.base.connectors && te(r3.base, n2), e4 = true;
            }
            !f3 && n2.creator && 0 < u && n2.creator.creations.length >= u && n2.creator.noMouse(), n2.adding = false, ae(n2, true, true), To.loop(X, function(e5) {
              e5.startX = e5.x, e5.startY = e5.y;
            }), n2.startX = n2.x, n2.startY = n2.y, A3 && oe(n2), o3 ? O.dispatchEvent("connection") : O.dispatchEvent("noconnection"), e4 && O.dispatchEvent("complete"), O.stage.update();
          }
          function J(e4) {
            var t3;
            e4.adding || !P ? le(e4) : (e4.loc(e4.startX, e4.startY), ae(e4)), A3 && oe(e4), e4.base && e4.base.connectors && (t3 = e4.base, e4 = e4, t3.connectors.splice(t3.connectors.indexOf(e4), 1), e4.nodeStart = null, e4.base = null), O.stage.update(), O.dispatchEvent("noconnection");
          }
          function $(t3) {
            To.loop(t3.connectors, function(e4) {
              e4.color = t3.connectorRollColor, e4.borderColor = t3.connectorRollBorderColor;
            }), t3.connectorsOn = true, t3.stage.update();
          }
          function ee(t3) {
            To.loop(t3.connectors, function(e4) {
              e4.color = t3.connectorColor, e4.borderColor = t3.connectorBorderColor;
            }), t3.connectorsOn = false, t3.stage.update();
          }
          function te(e4, t3) {
            e4.connectors.push(t3), t3.nodeStart = t3.parent.localToLocal(t3.x, t3.y, e4.parent), t3.nodeStart.x -= e4.x - e4.baseStart.x, t3.nodeStart.y -= e4.y - e4.baseStart.y, t3.base = e4;
          }
          function oe(e4) {
            e4.creator && (e4.creator.creator ? oe(e4.creator) : e4.creator && e4.creator.creations.length >= u ? e4.creator.noMouse() : e4.creator.mouse());
          }
          function ne(e4, t3) {
            t3 && To.loop(e4.creations, function(e5) {
              ne(e5, t3);
            }), e4.selected = true, e4.color = e4.base ? e4.base.connectorColor : i2, e4.borderColor = e4.base ? e4.base.connectorBorderColor : C, X.push(e4), e4.top(), R = R || O.stage.on("stagemousedown", function(e5) {
              var t4 = O.stage ? O.stage.frame : zdf;
              Y.loop(function(e6) {
                if (e6.hitTestPoint(t4.mouseX, t4.mouseY))
                  return false;
              }) && ie();
            });
          }
          function re() {
            if (Y.loop(function(e4) {
              if (e4.before || e4.after)
                return false;
            }))
              return Y.loop(function(e4) {
                e4.noMouse();
              }), true;
          }
          function ie() {
            To.loop(X, function(e4) {
              e4.selected = false, e4.color = e4.base ? e4.base.connectorColor : j, e4.borderColor = e4.base ? e4.base.connectorBorderColor : L;
            }), X = [], O.stage.off("stagemousedown", R), R = null, O.stage.update();
          }
          function ae(t3, o3, n2) {
            var e4 = 0 < X.length ? X : [t3];
            To.loop(e4, function(e5) {
              e5 != t3 && e5.loc(e5.startX + t3.x - t3.startX, e5.startY + t3.y - t3.startY), e5.creator && e5.creatorLine.setPoints(e5.x, e5.y, e5.creator.x, e5.creator.y, o3, n2), To.loop(e5.creations, function(e6) {
                e6.creatorLine.setPoints(e6.x, e6.y, e6.creator.x, e6.creator.y, o3, n2);
              });
            });
          }
          function le(e4) {
            var t3;
            return To.loop(e4.creations, function(e5) {
              le(e5);
            }, true), e4.creatorLine && (e4.creatorLine.removeFrom(), (t3 = e4.creator.creations.indexOf(e4)) != -1 && e4.creator.creations.splice(t3, 1), e4.creator.mouseEnabled || A3 && !e4.creator.creator || e4.creator.mouse()), e4.removeFrom(), e4.removeAllEventListeners(), e4 = null, O;
          }
          function se(e4) {
            e4.off("pressmove", e4.connectorMoveEvent), e4.off("pressup", e4.connectorUpEvent), e4.connectorOverEvent && e4.off("mouseover", e4.connectorOverEvent), e4.connectorOutEvent && e4.off("mouseout", e4.connectorOutEvent), e4.connectors = null, e4.baseStart = null, e4.positionConnectors = e4.setConnectorColors = null, e4.connectorColor = e4.connectorBorderColor = e4.connectorRollColor = e4.connectorRollBorderColor = null, O.bases.splice(O.bases.indexOf(e4), 1), O.stage && O.stage.update();
          }
          B *= H == "s" ? 1e3 : 1, zot(d) && (d = M.snapH != null ? M.snapH : null), zot(h2) && (h2 = M.snapV != null ? M.snapV : null), zot(A3) && (A3 = M.rootLock != null && M.rootLock), zot(P) && (P = M.grandChildren == null || M.grandChildren), s5 && o2.length <= 1 ? zon && zogy("Connector() - linear needs more than one point") : ((O = this).node = a, O.line = l, j = a.color, L = a.borderColor, To.faint, _ = O.lines = new To.Container(e3, t2).addTo(O), Y = O.nodes = new To.Container(e3, t2).addTo(O), o2.type != "Blob" && o2.type != "Squiggle" || (D = [], To.loop(o2.points, function(e4) {
            D.push([e4[0], e4[1]]);
          }), o2 = D), O.points = o2, this.addNode = function(e4, t3, o3) {
            if (!s5)
              return N(e4, t3);
          }, V(), O.keyEvent = function(e4) {
            p && e4.keyCode == 46 && (To.loop(X, function(e5) {
              e5 && e5.parent && le(e5);
            }), O.stage && O.stage.update());
          }, window.addEventListener("keydown", O.keyEvent), X = [], W = 0, this.selectNode = function(e4, t3) {
            ne(e4, t3);
          }, this.removeNode = function(e4) {
            le(e4);
          }, this.removeConnectors = function() {
            To.loop(Y, function(e4) {
              le(e4);
            }, true), V(), O.stage.update();
          }, this.removeBase = function(e4) {
            To.loop(e4.connectors, function(e5) {
              le(e5);
            }), se(e4);
          }, this.addBase = function(e4, t3) {
            N(e4, t3);
          }, Object.defineProperty(this, "selectedList", { get: function() {
            return X;
          }, set: function(e4) {
            zon && zogy("Selectors() - selectedList is read only");
          } }), !(this.dispose = function(e4, t3, o3) {
            return O.nodes.loop(function(e5) {
              e5.removeFrom(), e5.removeAllEventListeners(), e5 = null;
            }, true), O.lines.loop(function(e5) {
              e5.removeFrom(), e5 = null;
            }, true), window.removeEventListener("keydown", O.keyEvent), O.keyEvent = null, O.bases && To.loop(O.bases, function(e5) {
              se(e5);
            }), o3 || (O.zimContainer_dispose(true), O.stage && O.stage.update()), true;
          }) !== S2 && To.styleTransforms(this, M), this.clone = function() {
            return O.cloneProps(new To.Collectors(e3, t2, o2, a, l, s5, n, c2, u, d, h2, g, p, r2, f3, m2, z, y, b, v, w, i2, C, x2, k, T2, A3, P, B, S2, O.group, I2));
          });
        }, To.extend(To.Connectors, To.Container, ["clone", "dispose"], "zimContainer", false), To.Marquee = function(e3, t2, o2, i2, n, r2, a, l, s5, c2, u, d, h2, g, p, f3, m2) {
          if (P = zob(To.Marquee, arguments, "width, height, items, time, transition, speed, direction, marginLeft, marginRight, marqueeType, borderColor, borderWidth, refresh, mix, style, group, inherit", this))
            return P;
          z_d("67.4"), this.group = f3;
          var z = p === false ? {} : To.getStyle("Marquee", this.group, m2), y = this;
          zot(e3) && (e3 = z.width != null ? z.width : 300), zot(t2) && (t2 = z.height != null ? z.height : 100);
          var b = Ao(i2);
          zot(i2) && (i2 = z.time != null ? z.time : b == "s" ? 5 : 5e3), zot(n) && (n = z.transition != null ? z.transition : "slide"), zot(u) && (u = z.borderColor != null ? z.borderColor : "#333"), zot(d) && (d = z.borderWidth != null ? z.borderWidth : 1), u < 0 || d < 0 ? u = d = null : u != null && d == null && (d = 1), zot(l) && (l = z.marginLeft != null ? z.marginLeft : 25), zot(s5) && (s5 = z.marginRight != null ? z.marginRight : 25), zot(r2) && (r2 = z.speed != null ? z.speed : b == "s" ? 0.5 : 500), Po(r2, b), zot(a) && (a = z.direction != null ? z.direction : "right"), zot(h2) && (h2 = z.refresh != null ? z.refresh : b == "s" ? 1800 : 18e5), zot(g) && (g = z.mix == null || z.mix), this.zimContainer_constructor(e3 + l + s5, t2, null, null, false), this.type = "Marquee", this.speed = r2;
          var v, w = new To.Rectangle(e3 - 1, t2 - 1, To.clear).addTo(y).mov(l + 0.5, 0.5), C = this.content = new To.Container(e3, t2).loc(l, 0, y).setMask(w), x2 = this.pages = new To.Pages(null, n, r2, null, C).addTo(C), k = false;
          this.add = function(e4, t3, o3, n2, r3) {
            zot(r3) && (r3 = true), e4.scaleTo(C, 100, 100), t3 && e4.cur().on("click", function() {
              zgo(t3, o3);
            }), x2.addPage(e4), r3 && x2.center(), e4.marqueeViews = 0, e4.marquee = y, k || (k = true, y.selectedIndex = 0, y.selected = x2.pages[y.selectedIndex].page, y.lastSelected = null, y.selected.marqueeOn && y.selected.marqueeOn(), y.interval = To.interval(i2, function() {
              y.go();
            })), n2 || O(), I2 && I2.top();
          }, this.remove = function(e4) {
            var t3;
            y.selected == e4 ? y.pages.pages.length != 1 && ((t3 = y.selectedIndex + 1) == y.pages.pages.length && (t3 = 0), y.pages.go(t3, null, null, 0), setTimeout(function() {
              y.pages.removePage(e4), e4.dispose && e4.dispose(), O();
            }, 20)) : (y.pages.removePage(e4), e4.dispose && e4.dispose(), O());
          }, zot(o2) || Array.isArray(o2) || (o2 = [o2]), o2 && 0 < o2.length && (g && To.shuffle(o2), To.loop(o2, function(e4) {
            y.add(e4, null, null, true);
          })), 0 < h2 && (v = To.timeout(h2 * (b == "s" ? 1e3 : 1), function() {
            location.reload();
          }, null, "ms")), y.go = function(o3) {
            var e4;
            y.selected.marqueeViews += 1, y.selected.marqueeOff && y.selected.marqueeOff(), o3 ? (y.selected = o3, To.loop(x2.pages, function(e5, t3) {
              e5.page == o3 && (y.selectedIndex = t3);
            }), y.interval.interval = y.selected.marqueeTime || i2, y.interval.pause(M.toggled, null, true)) : (e4 = y.selectedIndex + 1, y.selectedIndex = e4 % x2.pages.length, y.selected = x2.pages[y.selectedIndex].page, y.interval.time = y.selected.marqueeTime || i2), y.dispatchEvent("page"), y.selected.marqueeOn && y.selected.marqueeOn(), x2.go(y.selected, a, n, r2);
          }, x2.on("pagetransitioned", function() {
            y.dispatchEvent("pagetransitioned"), y.indicator && (y.indicator.selectedIndex = y.selectedIndex);
          });
          var T2 = false, A3 = y.left = new To.Container(l - 4, t2 - 4), P = new To.Shape().sca(0.6);
          P.graphics.f(To.light).mt(0, 0).p("AAhCLIAAkVIBXAAIAAEVgAh3CLIAAkVIBXAAIAAEVg");
          b = new To.Shape().sca(0.6).reg(-2, 0);
          b.graphics.f(To.light).mt(0, 0).p("AiJieIETCeIkTCfg");
          var B, S2, E, I2, M = y.button = new To.Button({ label: "", icon: P, toggleIcon: b, width: 45, height: 45, corner: 0, shadowBlur: 0 }).scaleTo(A3, 100).pos(0, 0, false, true, A3);
          function O() {
            var e4;
            zot(l) || l == 0 || (e4 = 4 * l / 25, A3.pos(l - A3.width - e4, e4 / 2, false, true, y), y.indicator && (y.indicator.dispose(), y.indicator.removeFrom()), B = B || new To.Proportion(8, 16, A3.width + e4, A3.width / 2 + e4, -1), y.indicator = new To.Indicator({ width: (x2.pages.length <= 2 ? x2.pages.length : x2.pages.length - 1) * (A3.width - 3), height: B.convert(x2.pages.length), num: x2.pages.length, shadowBlur: -1, interactive: true, scale: 1.2, indicatorType: c2 }), y.indicator.fit(0, 0, t2 - M.height, M.width), y.indicator.rot(a == "down" ? -90 : 90).center(A3).pos(null, A3.width - e4 / 2, null, true), y.indicator.selectedIndex = y.selectedIndex, y.indicator.on("change", function() {
              y.go(x2.pages[y.indicator.selectedIndex].page);
            }));
          }
          M.on("click", function() {
            y.interval && y.interval.pause(M.toggled), T2 = M.toggled, y.stage.update();
          }), O(), !zot(s5) && 0 < s5 && zdf !== void 0 && zdf && (P = 4 * s5 / 25, b = y.right = new To.Container(45, 270), (S2 = y.icon = zdf.makeIcon(To.grey, To.lighter, To.silver).sca(0.5).pos(0, 0, true, true, b).mov(0, 0).cur()).on("mouseover", function() {
            E.animate({ props: { scaleX: 1 }, time: 500, ease: "backOut", override: true, timeUnit: "ms" }), S2.stage.update();
          }), S2.on("mouseout", function() {
            E.animate({ props: { scaleX: 0 }, time: 300, ease: "backIn", override: true, timeUnit: "ms" }), S2.stage.update();
          }), S2.on("mousedown", function() {
            zgo("https://zimjs.com/marquee", "_blank");
          }), E = y.label = new To.Label({ text: "MARQUEE", color: To.dark, backgroundColor: To.lighter, shiftVertical: 1, paddingVertical: 5 }).rot(-90).pos(0, 13, true, false, b).reg(-10).sca(0, 1).mov(0), b.fit(0, 0, s5 - P, t2 - P), b.pos(s5 - b.width - P, P / 2, true, true, y)), y.stage && y.stage.update(), this.pause = function(e4, t3) {
            zot(e4) && (e4 = true), e4 != T2 && (T2 = e4, y.interval.pause(e4, t3), y.button.toggle(e4));
          }, Object.defineProperty(this, "paused", { get: function() {
            return T2;
          }, set: function(e4) {
            zon && zogy("Marquee() - paused is read only - use pause()");
          } }), Object.defineProperty(this, "time", { get: function() {
            return i2;
          }, set: function(e4) {
            i2 = e4, y.interval.time = i2;
          } }), this.load = function(n2, e4) {
            var t3 = [];
            g && To.shuffle(n2), To.loop(n2, function(e5) {
              Array.isArray(e5) ? t3.push(e5[0]) : t3.push(e5);
            });
            var o3 = y.stage ? y.stage.frame : zdf;
            return y.marqueeLoader = o3.loadAssets(t3, e4), y.loadEvent = y.marqueeLoader.on("assetload", function(e5) {
              var t4, o4 = n2[e5.asset.id];
              o4 = Array.isArray(o4) ? (t4 = o4[0], o4[1]) : (t4 = o4, "_self"), y.add(e5.asset, t4, o4), O();
            }), y;
          }, zot(u) || ((I2 = new To.Rectangle(e3 - 1, t2 - 1, To.clear, u, d).loc(w, null, y)).mouseEnabled = false), p !== false && To.styleTransforms(this, z), this.clone = function() {
            return y.cloneProps(new To.Marquee(e3, t2, o2, i2, n, r2, a, c2, u, d, h2, g, p, this.group, m2));
          }, this.dispose = function(e4, t3, o3) {
            return v && v.clear(), y.interval && y.interval.clear(), y.loadEvent && y.marqueeLoader.off("assetload", y.loadEvent), x2.dispose(), x2 = null, o3 || this.zimContainer_dispose(true), true;
          };
        }, To.extend(To.Marquee, To.Container, ["clone", "dispose"], "zimContainer"), To.Loader = function(t2, o2, n, h2, r2, i2, a, l, s5, e3, c2, u, d, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j) {
          if (L = zob(To.Loader, arguments, "width, height, label, type, backgroundColor, rollBackgroundColor, color, rollColor, borderColor, borderRollColor, borderWidth, corner, shadowColor, shadowBlur, hitPadding, gradient, gloss, dashed, backing, rollBacking, rollPersist, icon, rollIcon, toggle, toggleBacking, rollToggleBacking, toggleIcon, rollToggleIcon, toggleEvent, frame, multiple, accept, style, group, inherit", this))
            return L;
          z_d("67.5"), this.group = O;
          var L = M === false ? {} : To.getStyle("Loader", this.group, j);
          if (zot(t2) && (t2 = L.width != null ? L.width : 250), zot(o2) && (o2 = L.height != null ? L.height : 70), zot(h2) && (h2 = L.type != null ? L.type : "image"), h2 = h2.toLowerCase(), zot(r2) && (r2 = L.backgroundColor != null ? L.backgroundColor : "rgba(0,0,0,.05)"), zot(i2) && (i2 = L.rollBackgroundColor != null ? L.rollBackgroundColor : "rgba(0,0,0,.1)"), zot(a) && (a = L.color != null ? L.color : "rgba(0,0,0,.5)"), zot(l) && (l = L.rollColor != null ? L.rollColor : a), zot(s5) && (s5 = L.borderColor != null ? L.borderColor : "rgba(0,0,0,.3)"), zot(c2) && (c2 = L.borderWidth != null ? L.borderWidth : 1), zot(z) && (z = L.dashed == null || L.dashed), zot(u) && (u = L.corner != null ? L.corner : 0), zot(E) && (E = L.multiple == null || L.multiple), zot(n) && (n = L.label != null ? L.label : new To.Label({ text: "UPLOAD PIC", color: a, rollColor: l, valign: "center", align: "center", backing: "ignore", shadowColor: "ignore", shadowBlur: "ignore", backgroundColor: "ignore", group: this.group })), zot(S2)) {
            if (!zdf)
              return void (zon && zog("zim.Loader - please provide a reference to zim Frame"));
            S2 = zdf;
          }
          this.zimButton_constructor(t2, o2, n, r2, i2, a, l, s5, e3, c2, u, d, g, p, f3, m2, z, y, b, v, w, C, x2, null, null, null, null, k, T2, A3, P, B, null, null, null, null, null, null, null, null, null, null, null, null, false), this.type = "Loader";
          var _ = this, Y = S2.stage;
          n = _.label;
          var D = _.tag = document.createElement("input");
          document.body.appendChild(D), D.setAttribute("type", "file"), D.setAttribute("aria-hidden", true), E && D.setAttribute("multiple", "multiple"), I2 && D.setAttribute("accept", I2), D.hidden = true, D.zimDisplay = D.style.display || "inline-block", D.style.cssText = "border:thin solid grey; z-index:2; width:" + t2 + "px; height:" + o2 + "px; overflow:hidden; outline:none;position:absolute; left:0px; top:0px; display:none; cursor:pointer; opacity: 0; filter: alpha(opacity=0);", this.addEventListener("mousedown", function() {
            D.click();
          }), D.addEventListener("change", N);
          var X = new createjs.DOMElement(D);
          Y.addChild(X), X.alpha = 0;
          var R, W, F2, H = S2.retina && window.devicePixelRatio || 1;
          function N(e4) {
            var i3, a2, l2, s6, c3, u2, d2 = (e4.dataTransfer && e4.dataTransfer.files && 0 < e4.dataTransfer.files.length ? e4.dataTransfer : e4.target).files;
            h2 == "text" || h2 == "json" ? (i3 = [], h2.toLowerCase() == "json" && (l2 = [])) : c3 = [];
            for (var t3, o3, n2 = 0; n2 < d2.length; n2++)
              t3 = d2[n2], o3 = void 0, (o3 = new FileReader()).onload = function(e5) {
                var t4, o4, n3, r3;
                h2 == "text" || h2 == "json" ? (t4 = e5.target.result, i3.push(t4), h2 == "json" && (o4 = JSON.parse(t4), l2.push(o4)), i3.length == 1 && (a2 = t4, h2 == "json" && (s6 = o4)), i3.length == d2.length && ((n3 = new createjs.Event("loaded")).texts = i3, n3.text = a2, n3.lastText = t4, n3.total = i3.length, h2 == "json" && (n3.jsons = l2, n3.json = s6, n3.lastJSON = o4), _.dispatchEvent(n3), D.value = "")) : ((r3 = new Image()).onload = function() {
                  var e6, t5 = new To.Bitmap(r3);
                  c3.push(t5), c3.length == 1 && (u2 = t5), c3.length == d2.length && ((e6 = new createjs.Event("loaded")).bitmaps = c3, e6.bitmap = u2, e6.lastBitmap = t5, e6.total = c3.length, _.dispatchEvent(e6), D.value = "");
                }, r3.src = e5.target.result);
              }, h2 == "text" || h2 == "json" ? o3.readAsText(t3) : o3.readAsDataURL(t3);
          }
          this.resize = function() {
            return _.stage ? (D.setAttribute("aria-hidden", false), D.hidden = false, D.style.display = D.zimDisplay, R = setTimeout(function() {
              var e4 = _.getConcatenatedMatrix().decompose(), t3 = _.localToGlobal(0, 0);
              S2.retina ? (X.x = S2.x / Y.scaleX + t3.x / H, X.y = S2.y / Y.scaleY + t3.y / H, To.sca(X, e4.scaleX / H / Y.scaleX, e4.scaleY / H / Y.scaleY)) : (X.x = S2.x + t3.x * S2.scale, X.y = S2.y + t3.y * S2.scale, To.sca(X, S2.scale * e4.scaleX, S2.scale * e4.scaleY)), Y.update();
            }, 50), _) : (D.setAttribute("aria-hidden", true), D.hidden = true, void (D.style.display = "none"));
          }, this.resize(), _.on("added", function() {
            D.style.display = "block", D.hidden = false, D.style.display = "block", _.resize();
          }), _.added(function e4() {
            _.resize();
            W = setTimeout(function() {
              D.style.display = "block", D.hidden = false, D.style.display = "block";
            }, 50);
            _.on("added", e4, null, true);
          }), _.on("removed", function() {
            R && clearTimeout(R), W && clearTimeout(W), D && (D.style.display = "none", D.hidden = true, D.style.display = "none");
          }), new XMLHttpRequest().upload && (F2 = function(e4) {
            D.removeEventListener("change", N), N(e4), setInterval(function() {
              D.addEventListener("change", N);
            }, 100);
          }, D.addEventListener("drop", F2)), !(this.save = function(e4, t3, o3, n2, r3, i3, a2, l2, s6, c3, u2) {
            var d2, h3, g2;
            if (d2 = zob(_.save, arguments, "content, filename, x, y, width, height, cached, cachedBounds, type, data, quality"))
              return d2;
            if (zot(e4) && (e4 = S2.stage), zot(s6) && (s6 = "png"), zot(t3) ? t3 = "saved_" + String(To.makeID("numbers", 5)) + "." + s6 : (d2 = t3.split(".")).length == 1 || (p2 = (h3 = ["png", "jpg", "jpeg"]).indexOf(d2[d2.length - 1].toLowerCase())) == -1 ? t3 += "." + s6 : s6 = h3[p2], zot(o3) && (o3 = 0), zot(n2) && (n2 = 0), zot(r3) && (r3 = (e4.getBounds && e4.getBounds() ? e4.getBounds() : S2).width), zot(i3) && (i3 = (e4.getBounds && e4.getBounds() ? e4.getBounds() : S2).height), e4.cache(o3, n2, r3, i3), c3) {
              var p2 = e4.cacheCanvas.toDataURL("image/" + s6, u2);
              return a2 ? l2 && e4.cache(l2.x, l2.y, l2.width, l2.height) : e4.uncache(), p2;
            }
            return /Edge\/(\d)+/.test(navigator.userAgent) ? ((g2 = window.open()).document.write("<html><head><title>saved</title></head><body style='margin:0px;padding:0px;overflow:hidden'><img src=" + e4.cacheCanvas.toDataURL("image/" + s6) + "></body></html>"), g2.document.close()) : (s6 == "jpg" && (s6 = "jpeg"), (g2 = document.createElement("a")).setAttribute("download", t3), g2.setAttribute("href", e4.cacheCanvas.toDataURL("image/" + s6, u2)), document.body.appendChild(g2), g2.click(), document.body.removeChild(g2)), a2 ? l2 && e4.cache(cashedBounds.x, cashedBounds.y, cashedBounds.width, cashedBounds.height) : e4.uncache(), _;
          }) !== M && To.styleTransforms(this, L), this.clone = function() {
            var e4 = new To.Loader(t2, o2, zot(n) ? null : n.clone(), r2, i2, a, l, s5, c2, u, d, g, p, f3, m2, zot(y) ? null : y.clone(), zot(b) ? null : b.clone(), v, zot(w) ? null : w.clone(), zot(C) ? null : C.clone(), x2, zot(k) ? null : k.clone(), zot(T2) ? null : T2.clone(), zot(A3) ? null : A3.clone(), zot(P) ? null : P.clone(), B, S2, M, this.group);
            return _.cloneProps(e4);
          }, Object.defineProperty(this, "frame", { get: function() {
            return S2;
          }, set: function(e4) {
            e4 != S2 && (S2.off("update", _.updateEvent), S2.off("resize", _.resizeEvent), S2 = e4, _.resizeEvent = S2.on("resize", _.resize), _.updateEvent = S2.on("update", _.resize), _.resize());
          } }), this.resizeEvent = S2.on("resize", _.resize), this.updateEvent = S2.on("update", _.resize), this.dispose = function(e4, t3, o3) {
            var n2;
            return _.stage && (n2 = _.stage), S2.off("update", _.updateEvent), S2.off("resize", _.resizeEvent), D.removeEventListener("change", N), F2 && D.removeEventListener("drop", F2), D && D.parentNode && D.parentNode.removeChild(D), D = null, o3 || (this.zimButton_dispose(), n2 && n2.update()), true;
          };
        }, To.extend(To.Loader, To.Button, ["clone", "dispose"], "zimButton", false), To.TextArea = function(t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, e3, k) {
          if (B = zob(To.TextArea, arguments, "width, height, size, padding, color, backgroundColor, borderColor, borderWidth, corner, shadowColor, shadowBlur, dashed, id, placeholder, readOnly, spellCheck, password, inputType, wrap, maxLength, frame, expand, style, group, inherit", this))
            return B;
          z_d("67.6"), this.group = e3;
          var T2 = x2 === false ? {} : To.getStyle("TextArea", this.group, k);
          if (zot(t2) && (t2 = T2.width != null ? T2.width : 250), zot(o2) && (o2 = T2.height != null ? T2.height : 70), zot(n) && (n = T2.size != null ? T2.size : 20), zot(r2) && (r2 = T2.padding != null ? T2.padding : 5), zot(i2) && (i2 = T2.color != null ? T2.color : "#666"), zot(a) && (a = T2.backgroundColor != null ? T2.backgroundColor : "rgba(256,256,256,.1)"), zot(l) && (l = T2.borderColor != null ? T2.borderColor : "rgba(0,0,0,.1)"), zot(s5) && (s5 = T2.borderWidth != null ? T2.borderWidth : null), l < 0 || s5 < 0 ? l = s5 = null : l != null && s5 == null && (s5 = 1), zot(c2) && (c2 = T2.corner != null ? T2.corner : 0), !zot(d) && zot(u) && (u = T2.shadowColor != null ? T2.shadowColor : "rgba(0,0,0,.3)"), !zot(u) && zot(d) && (d = T2.shadowBlur != null ? T2.shadowBlur : 10), zot(z) && (z = T2.password != null && T2.password), zot(y) && (y = T2.inputType != null && T2.inputType), zot(b) && (b = T2.wrap == null || T2.wrap), zot(v) && (v = T2.maxLength != null ? T2.maxLength : null), zot(m2) && (m2 = T2.spellCheck == null || T2.spellCheck), zot(f3) && (f3 = T2.readOnly != null && T2.readOnly), zot(p) && (p = T2.placeholder != null ? T2.placeholder : null), this.maxLength = v, zot(C) && (C = T2.expand != null ? T2.expand : 20), C === true && (C = 20), zot(w)) {
            if (!zdf)
              return void (zon && zog("zim.TextArea - please provide a reference to zim Frame"));
            w = zdf;
          }
          this.zimContainer_constructor(t2, o2, null, null, false), this.type = "TextArea";
          var A3 = this, P = w.stage, B = this.background = new To.Rectangle(t2, o2, a, l, s5, c2, h2, null, false).expand(C);
          u != -1 && 0 < d && (B.shadow = new createjs.Shadow(u, 3, 3, d)), A3.addChild(B);
          var S2 = A3.tag = y || z ? document.createElement("input") : document.createElement("textarea");
          (w.tag || document.body).appendChild(S2), zot(g) || (S2.setAttribute("id", g), S2.setAttribute("name", g)), z ? S2.setAttribute("type", "password") : y && S2.setAttribute("type", y), S2.readOnly = f3, S2.spellcheck = m2, p && S2.setAttribute("placeholder", p), S2.zimDisplay = S2.style.display || "inline-block", S2.style.cssText = "background-color:rgba(0,0,0,.01); color:" + i2 + "; resize:none; z-index:3; width:" + (t2 - 2 * r2) + "px; height:" + (o2 - 2 * r2) + "px; overflow:hidden; outline:none;font-size:" + n + "px; font-family:" + (T2.font != null ? T2.font : "arial") + "; border:none; position:absolute; left:0px; top:0px; display:none;", A3.taInput = function() {
            !zot(A3.maxLength) && A3.text.length > A3.maxLength && (A3.text = A3.text.substring(0, A3.maxLength)), A3.dispatchEvent("input");
          }, A3.taFocus = function() {
            w.zil && window.removeEventListener("keydown", w.zil[0]), A3.dispatchEvent("focus");
          }, A3.taBlur = function() {
            w.zil && window.addEventListener("keydown", w.zil[0]), A3.dispatchEvent("blur");
          }, S2.addEventListener("change", A3.taChange), S2.addEventListener("input", A3.taInput), S2.addEventListener("focus", A3.taFocus), S2.addEventListener("blur", A3.taBlur);
          var E = new createjs.DOMElement(S2);
          E.alpha = 0, this.on("mousedown", function() {
            setTimeout(function() {
              S2.focus();
            }, 100);
          }), this.setFocus = function(e4) {
            return zot(e4) && (e4 = true), e4 ? S2.focus() : S2.blur(), A3;
          };
          var I2, M, O = w.retina && window.devicePixelRatio || 1;
          this.resize = function() {
            return I2 = setTimeout(function() {
              var e4 = A3.getConcatenatedMatrix().decompose(), t3 = A3.localToGlobal(r2, r2);
              w.retina ? (w.tag ? (E.x = t3.x / O, E.y = t3.y / O) : (E.x = w.x / P.scaleX + t3.x / O, E.y = w.y / P.scaleY + t3.y / O), To.sca(E, e4.scaleX / O / P.scaleX, e4.scaleY / O / P.scaleY)) : (w.tag ? (E.x = t3.x * w.scale, E.y = t3.y * w.scale) : (E.x = w.x + t3.x * w.scale, E.y = w.y + t3.y * w.scale), To.sca(E, w.scale * e4.scaleX, w.scale * e4.scaleY)), E.alpha = 1, A3.stage && P.update();
            }, 20), A3;
          }, this.resize(), A3.added(function e4() {
            P.addChild(E);
            M = setTimeout(function() {
              S2.style.display = S2.zimDisplay;
            }, 50);
            A3.resize();
            A3.on("added", e4, null, true);
          }), A3.on("removed", function() {
            I2 && clearTimeout(I2), M && clearTimeout(M), P.removeChild(E), S2 && (S2.style.display = "none");
          }), Object.defineProperty(this, "currentValue", { get: function() {
            return S2.value;
          }, set: function(e4) {
            S2.value = e4;
          } }), Object.defineProperty(this, "text", { get: function() {
            return S2.value;
          }, set: function(e4) {
            S2.value = e4;
          } }), Object.defineProperty(this, "focus", { get: function() {
            return document.activeElement == S2;
          }, set: function(e4) {
            A3.setFocus(e4);
          } }), Object.defineProperty(this, "readOnly", { get: function() {
            return S2.readOnly;
          }, set: function(e4) {
            S2.readOnly = e4;
          } }), KEYFOCUS !== void 0 && (To.KEYFOCUS = KEYFOCUS), Object.defineProperty(this, "keyFocus", { get: function() {
            return To.KEYFOCUS == A3;
          }, set: function(e4) {
            To.KEYFOCUS = A3;
          } }), To.KEYFOCUS || (A3.keyFocus = true), A3.taMousedown = function() {
            A3.keyFocus = true;
          }, S2.addEventListener("mousedown", A3.taMousedown), b || (S2.style.whiteSpace = "pre"), x2 !== false && To.styleTransforms(this, T2), this.clone = function() {
            var e4 = new To.TextArea(t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, this.group, k);
            return A3.cloneProps(e4);
          }, Object.defineProperty(this, "frame", { get: function() {
            return w;
          }, set: function(e4) {
            e4 != w && (w.off("update", A3.updateEvent), w.off("resize", A3.resizeEvent), w = e4, A3.resizeEvent = w.on("resize", A3.resize), A3.updateEvent = w.on("update", A3.resize), O = w.retina && window.devicePixelRatio || 1, P = w.stage, A3.resize());
          } }), this.resizeEvent = w.on("resize", A3.resize), this.updateEvent = w.on("update", A3.resize), this.dispose = function(e4, t3, o3) {
            var n2;
            return A3.stage && (n2 = A3.stage), w.off("update", A3.updateEvent), w.off("resize", A3.resizeEvent), S2 && S2.parentNode && S2.parentNode.removeChild(S2), S2.removeEventListener("change", A3.taChange), S2.removeEventListener("input", A3.taInput), S2.removeEventListener("focus", A3.taFocus), S2.removeEventListener("blur", A3.taBlur), S2.removeEventListener("mousedown", A3.taMousedown), S2 = null, o3 || (this.zimContainer_dispose(true), n2 && n2.update()), !(A3.background = null);
          };
        }, To.extend(To.TextArea, To.Container, ["clone", "dispose"], "zimContainer", false), To.Tag = function(t2, o2, n, r2, i2, a, l, s5, c2, u, e3, d) {
          if (h2 = zob(To.Tag, arguments, "width, height, id, frame, backgroundColor, padding, paddingHorizontal, paddingVertical, expand, style, group, inherit", this))
            return h2;
          z_d("67.7"), this.group = e3;
          var h2 = u === false ? {} : To.getStyle("Tag", this.group, d);
          if (zot(t2) && (t2 = h2.width != null ? h2.width : 250), zot(o2) && (o2 = h2.height != null ? h2.height : 70), zot(n) && (n = h2.id != null ? h2.id : "zimTag_" + To.rand(1e4)), zot(r2)) {
            if (!zdf)
              return void (zon && zog("zim.TextArea - please provide a reference to zim Frame"));
            r2 = zdf;
          }
          zot(i2) && (i2 = h2.backgroundColor != null ? h2.backgroundColor : "rgba(0,0,0,0)"), zot(a) && (a = h2.padding != null ? h2.padding : 10), zot(l) && (l = h2.paddingHorizontal != null ? h2.paddingHorizontal : a), zot(s5) && (s5 = h2.paddingVertical != null ? h2.paddingVertical : a), zot(c2) && (c2 = h2.expand != null ? h2.expand : 20), c2 === true && (c2 = 20), this.zimContainer_constructor(t2, o2, null, null, false), this.type = "Tag", this.tagID = n, this.id = n;
          var g = this, p = r2.stage, f3 = (g.background = new To.Rectangle(t2 + l, o2 + s5, i2).center(this).expand(c2 || 0), g.tag = document.createElement("div"));
          document.body.appendChild(f3), f3.setAttribute("id", n), f3.setAttribute("name", n), f3.zimDisplay = f3.style.display || "inline-block", f3.style.cssText = "resize:none; z-index:3; width:" + t2 + "px; height:" + o2 + "px; overflow:hidden; outline:none;position:absolute; left:0px; top:0px; display:none;";
          var m2 = new createjs.DOMElement(f3);
          m2.alpha = 0;
          var z, y, b = r2.retina && window.devicePixelRatio || 1;
          this.resize = function() {
            return z = setTimeout(function() {
              var e4 = g.getConcatenatedMatrix().decompose(), t3 = g.localToGlobal(0, 0);
              r2.retina ? (m2.x = r2.x / p.scaleX + t3.x / b, m2.y = r2.y / p.scaleY + t3.y / b, To.sca(m2, e4.scaleX / b / p.scaleX, e4.scaleY / b / p.scaleY)) : (m2.x = r2.x + t3.x * r2.scale, m2.y = r2.y + t3.y * r2.scale, To.sca(m2, r2.scale * e4.scaleX, r2.scale * e4.scaleY)), m2.alpha = 1, g.stage && p.update();
            }, 50), g;
          }, this.resize(), g.added(function e4() {
            p.addChild(m2);
            y = setTimeout(function() {
              f3.style.display = f3.zimDisplay;
            }, 50);
            g.resize();
            g.on("added", e4, null, true);
          }), g.on("removed", function() {
            z && clearTimeout(z), y && clearTimeout(y), p.removeChild(m2), f3 && (f3.style.display = "none");
          }), this.add = function(e4) {
            return f3.innerHTML += e4, g;
          }, Object.defineProperty(this, "innerHTML", { get: function() {
            return f3.innerHTML;
          }, set: function(e4) {
            f3.innerHTML = e4;
          } }), Object.defineProperty(this, "style", { get: function() {
            return f3.style;
          }, set: function(e4) {
            f3.style = e4;
          } }), u !== false && To.styleTransforms(this, h2), this.clone = function() {
            var e4 = new To.Tag(t2, o2, n, r2, i2, a, l, s5, c2, u, this.group, d);
            return g.cloneProps(e4);
          }, Object.defineProperty(this, "frame", { get: function() {
            return r2;
          }, set: function(e4) {
            e4 != r2 && (r2.off("update", g.updateEvent), r2.off("resize", g.resizeEvent), r2 = e4, g.resizeEvent = r2.on("resize", g.resize), g.updateEvent = r2.on("update", g.resize), g.resize());
          } }), this.resizeEvent = r2.on("resize", g.resize), this.updateEvent = r2.on("update", g.resize), this.dispose = function(e4, t3, o3) {
            var n2;
            return g.stage && (n2 = g.stage), r2.off("update", g.updateEvent), r2.off("resize", g.resizeEvent), f3 && f3.parentNode && f3.parentNode.removeChild(f3), f3 = null, o3 || (this.zimContainer_dispose(true), n2 && n2.update()), true;
          };
        }, To.extend(To.Tag, To.Container, ["clone", "dispose"], "zimContainer", false), To.addTo = function(e3, t2, o2, n) {
          var r2, i2;
          if (r2 = zob(To.addTo, arguments, "obj, container, index, localToLocal"))
            return r2;
          if (z_d("47.5"), !zot(e3)) {
            if (zot(t2)) {
              if (!zdf)
                return void zog("zim methods - addTo(): please provide container");
              t2 = zdf.stage;
            }
            return zot(n) && (n = true), e3.parent || (n = false), n && (i2 = e3.parent.localToLocal(e3.x, e3.y, t2)), zot(o2) || isNaN(o2) ? t2.addChild(e3) : t2.addChildAt(e3, o2), n && (e3.x = i2.x, e3.y = i2.y), e3;
          }
          zog("zim methods - addTo(): please provide object");
        }, To.removeFrom = function(e3, t2) {
          if (z_d("47.6"), !zot(e3))
            return zot(t2) ? e3.parent && e3.parent.removeChild(e3) : t2.removeChild(e3), e3;
          zog("zim methods - removeFrom(): please provide object");
        }, To.added = function(e3, t2, o2, n) {
          if (z_d("47.7"), !zot(e3) && !zot(t2) && typeof t2 == "function") {
            var r2 = Ao(o2);
            if (zot(o2) && (o2 = r2 == "s" ? 0.1 : 100), !e3.stage) {
              var i2, o2 = o2 * (r2 == "s" ? 1e3 : 1);
              n && (Po(n), i2 = n * (r2 == "s" ? 1e3 : 1));
              var a = Date.now(), l = 0, s5 = setInterval(function() {
                5 < l ? clearInterval(s5) : (l++, e3.stage && (t2(e3.stage, e3), clearInterval(s5), clearInterval(c2)));
              }, 10), c2 = setInterval(function() {
                0 < i2 && a - Date.now() > i2 && clearInterval(c2), e3.stage && (t2(e3.stage, e3), clearInterval(c2));
              }, o2);
              return c2;
            }
            t2(e3.stage, e3);
          }
        }, To.centerReg = function(e3, t2, o2, n) {
          if (r2 = zob(To.centerReg, arguments, "obj, container, index, add"))
            return r2;
          if (e3.type == "AC" && zdf)
            return zdf.ac("centerReg", arguments), e3.addTo(t2, o2);
          if (z_d("48"), zot(e3) || !e3.getBounds || !e3.getBounds())
            return zog("zim methods - centerReg(): please provide object with bounds set"), e3;
          zot(n) && (n = true), zot(t2) && e3.parent && n && (t2 = e3.parent, zot(o2) && (o2 = e3.parent.getChildIndex(e3)), e3.parent.removeChild(e3)), zot(t2) || t2 != e3.parent || (zot(o2) && (o2 = e3.parent.getChildIndex(e3)), e3.parent.removeChild(e3));
          var r2 = e3.getBounds();
          return e3.regX = r2.x + r2.width / 2, e3.regY = r2.y + r2.height / 2, n ? To.center(e3, t2, o2) : e3;
        }, To.center = function(e3, t2, o2, n) {
          if (c2 = zob(To.center, arguments, "obj, container, index, add"))
            return c2;
          if (e3.type == "AC" && zdf)
            return zdf.ac("center", arguments), e3.addTo(t2, o2);
          if (To.centerCheck || (z_d("48.1"), To.centerCheck = true), zot(e3) || !e3.getBounds)
            return zog("zim.center(): please provide object with bounds"), e3;
          if (zot(t2) && (e3.parent ? t2 = e3.parent : zdf && (t2 = zdf.stage)), zot(t2) || !t2.getBounds)
            return zog("zim.center(): please provide container with bounds"), e3;
          var r2 = e3.getBounds(), i2 = t2.getBounds();
          zot(n) && (n = true);
          var a = false;
          if (zot(i2) && (t2.setBounds(0, 0), i2 = t2.getBounds(), a = true), n && t2.addChild && (zot(o2) || typeof o2 == "number" && isNaN(o2) ? t2.contains(e3) || t2.addChild(e3) : t2.addChildAt(e3, o2)), zot(r2))
            return e3.x = i2.x + i2.width / 2, e3.y = i2.y + i2.height / 2, e3;
          var l = false, s5 = false;
          t2.scaleX == 0 && (l = true, t2.scaleX = 1e-5), t2.scaleY == 0 && (s5 = true, t2.scaleY = 1e-5);
          var c2 = e3.localToLocal(e3.regX, e3.regY, t2), r2 = To.boundsToGlobal(e3), r2 = To.boundsToGlobal(t2, r2, true);
          return l && (t2.scaleX = 0), s5 && (t2.scaleY = 0), e3.x = i2.x + i2.width / 2 - r2.width / 2 + (c2.x - r2.x), e3.y = i2.y + i2.height / 2 - r2.height / 2 + (c2.y - r2.y), !n && t2.getStage && t2.stage && e3.parent && (r2 = t2.localToLocal(e3.x, e3.y, e3.parent), e3.x = r2.x, e3.y = r2.y), a && t2.setBounds(null), e3;
        }, To.place = function(o2, e3) {
          if (z_d("49"), !zot(o2))
            return zot(e3) && (e3 = "obj"), To.lastPlace = o2, To.drag({ obj: o2, currentTarget: true, dragCursor: "crosshair" }), o2.on("mousedown", function() {
              To.lastPlace = o2;
            }), zdf && zdf.on("keydown", function(e4) {
              var t2;
              o2 != To.lastPlace || 37 <= (t2 = e4.keyCode) && t2 <= 40 && (e4 = e4.shiftKey ? 10 : 1, o2.mov(t2 == 37 ? -1 * e4 : t2 == 39 ? e4 : 0, t2 == 38 ? -1 * e4 : t2 == 40 ? e4 : 0), n(), o2.stage && o2.stage.update());
            }), zog("place " + e3 + " - to get new position"), o2.on("click", n), o2;
          function n() {
            zog(e3 + ".x = " + Math.round(o2.x) + "; " + e3 + ".y = " + Math.round(o2.y) + ";"), zog(e3 + ".loc(" + Math.round(o2.x) + ", " + Math.round(o2.y) + ");");
          }
        }, To.placeReg = function(t2, o2) {
          if (z_d("49.5"), !zot(t2)) {
            var e3 = t2.stage;
            if (zot(e3))
              return zog("zim.placeReg() - add object to stage before calling placeReg()"), t2;
            zot(o2) && (o2 = "obj");
            var n = t2.parent.localToGlobal(t2.x, t2.y), r2 = new To.Shape(-25, -25, 50, 50, null, false).addTo(e3).pos({ x: n.x, y: n.y, reg: true });
            return r2.graphics.s("white").mt(-25, 0).lt(25, 0).mt(0, -25).lt(0, 20), r2.compositeOperation = "difference", r2.expand(0), To.drag({ obj: r2 }), zog("place cursor to get new registration point location"), e3.on("stagemouseup", function() {
              var e4 = t2.globalToLocal(r2.x, r2.y);
              zog(o2 + ".regX = " + Math.round(e4.x) + "; " + o2 + ".regY = " + Math.round(e4.y) + ";"), zog(o2 + ".reg(" + Math.round(e4.x) + ", " + Math.round(e4.y) + ");");
            }), t2;
          }
        }, To.pos = function(h2, e3, t2, o2, n, r2, i2, a, l, s5, c2) {
          if (f3 = zob(To.pos, arguments, "obj, x, y, horizontal, vertical, container, index, add, reg, regX, regY"))
            return f3;
          if (h2.type == "AC" && zdf)
            return zdf.ac("pos", arguments), h2.addTo(r2, i2);
          z_d("41.5");
          var u = false;
          o2 == "right" && (u = true);
          var d = false;
          n == "bottom" && (d = true);
          var g = To.POSREG;
          if (window.POSREG != null && (g = window.POSREG), zot(l) && (l = g), !zot(h2)) {
            zot(l) && zot(s5) && (s5 = false), zot(l) && zot(c2) && (c2 = false), !zot(l) && zot(s5) && (s5 = l), !zot(l) && zot(c2) && (c2 = l), zot(a) && (a = true), zot(r2) || r2.addChild || (r2 = null), h2.getBounds || h2.getBounds() || (s5 = c2 = false), zot(r2) && (h2.parent ? r2 = h2.parent : zdf && (r2 = zdf.stage)), !h2.parent && zot(e3) && (e3 = 0), !h2.parent && zot(t2) && (t2 = 0);
            var p = false;
            h2.getBounds() || (h2.setBounds(0, 0), p = true);
            var f3 = false;
            if (r2 && !r2.getBounds() && (r2.setBounds(0, 0), f3 = true), !zot(r2) && r2.addChild && a && (z = r2.getBounds().clone(), b(), g = r2.getBounds(), z.width == g.width && z.height == g.height && z.x == g.x && z.y == g.y || (h2.removeFrom(), r2.setBounds(z.x, z.y, z.width, z.height), f3 = true, b())), !s5 && !c2 && !(o2 != "center" && o2 != "middle" || n != "center" && n != "middle"))
              return h2.center(r2), h2.mov(e3, t2), p && h2.setBounds(null), f3 && r2.setBounds(null), h2;
            if (o2 == "center" || o2 == "middle" ? (s5 ? h2.x = r2.width / 2 : (y = h2.y, h2.center(), h2.y = y), h2.mov(e3), o2 = e3 = null) : o2 === true && (u = true), n == "center" || n == "middle" ? (c2 ? h2.y = r2.height / 2 : (m2 = h2.x, h2.center(), h2.x = m2), h2.mov(0, t2), n = t2 = null) : n === true && (d = true), h2.parent && h2.parent.getBounds) {
              if (r2 = h2.parent, zot(e3) && u == 1 && (e3 = 0), zot(t2) && d == 1 && (t2 = 0), zot(e3) || (h2.x = e3), zot(t2) || (h2.y = t2), zot(e3) && zot(t2) && !u && !d)
                return p && h2.setBounds(null), f3 && r2.setBounds(null), h2;
              var m2, z = 0, y = 0;
              h2.getBounds() && (m2 = function() {
                var e4 = h2.getBounds(), t3 = e4.x, o3 = e4.y, n2 = e4.width, r3 = e4.height, i3 = h2._props.matrix;
                i3 = h2.getMatrix(i3), (t3 || o3) && i3.appendTransform(0, 0, 1, 1, 0, 0, 0, -t3, -o3);
                var a2 = n2 * i3.a, l2 = n2 * i3.b, s6 = r3 * i3.c, c3 = r3 * i3.d, u2 = i3.tx, d2 = i3.ty, e4 = u2, n2 = u2, r3 = d2, i3 = d2;
                (t3 = a2 + u2) < e4 ? e4 = t3 : n2 < t3 && (n2 = t3);
                (t3 = a2 + s6 + u2) < e4 ? e4 = t3 : n2 < t3 && (n2 = t3);
                (t3 = s6 + u2) < e4 ? e4 = t3 : n2 < t3 && (n2 = t3);
                (o3 = l2 + d2) < r3 ? r3 = o3 : i3 < o3 && (i3 = o3);
                (o3 = l2 + c3 + d2) < r3 ? r3 = o3 : i3 < o3 && (i3 = o3);
                (o3 = c3 + d2) < r3 ? r3 = o3 : i3 < o3 && (i3 = o3);
                return { x: e4, y: r3, width: n2 - e4, height: i3 - r3 };
              }(), zot(e3) || (z = (u ? new To.Point(m2.x + m2.width, m2.y + m2.height) : new To.Point(m2.x, m2.y)).x - e3), zot(t2) || (y = (d ? new To.Point(m2.x + m2.width, m2.y + m2.height) : new To.Point(m2.x, m2.y)).y - t2), m2 = r2.getBounds(), zot(e3) || (u ? h2.x = s5 ? m2.width + m2.x - e3 : m2.width + m2.x - e3 - z : (h2.x = s5 ? e3 : e3 - z, h2.x += m2.x)), zot(t2) || (d ? h2.y = c2 ? m2.height + m2.y - t2 : m2.height + m2.y - t2 - y : (h2.y = c2 ? t2 : t2 - y, h2.y += m2.y)));
            }
            return p && h2.setBounds(null), f3 && r2.setBounds(null), h2;
          }
          function b() {
            zot(i2) || typeof i2 == "number" && isNaN(i2) ? r2.contains(h2) || r2.addChild(h2) : r2.addChildAt(h2, i2);
          }
        }, To.loc = function(e3, t2, o2, n, r2, i2, a, l) {
          var s5;
          return (s5 = zob(To.loc, arguments, "obj, target, y, container, index, add, localToLocal, x")) ? s5 : e3.type == "AC" && zdf ? (zdf.ac("loc", arguments), e3.addTo(n, r2)) : (z_d("41.55"), zot(e3) ? void 0 : (typeof t2 == "number" && (l = t2, t2 = null), zot(t2) || (zot(t2.x) || (l = t2.x), zot(t2.y) || (o2 = t2.y)), zot(l) && zot(t2) && (l = e3.x), zot(o2) && zot(t2) && (o2 = e3.y), zot(i2) && (i2 = true), zot(n) && (e3.parent ? n = e3.parent : zdf && (n = zdf.stage)), i2 && n && (e3.parent && n == e3.parent ? zot(r2) || n.addChildAt(e3, r2) : zot(r2) || isNaN(r2) ? n.addChild(e3) : n.addChildAt(e3, r2)), zot(a) && (a = true), t2 && t2.parent && e3.parent && a && (l = (s5 = t2.parent.localToLocal(l, o2, e3.parent)).x, o2 = s5.y), e3.x = l, e3.y = o2, e3));
        }, To.mov = function(e3, t2, o2) {
          var n;
          return (n = zob(To.mov, arguments, "obj, x, y")) ? n : e3.type == "AC" && zdf ? (zdf.ac("mov", arguments), e3) : (z_d("41.6"), zot(e3) ? void 0 : (zot(t2) || (e3.x += t2), zot(o2) || (e3.y += o2), e3));
        }, To.sca = function(e3, t2, o2) {
          return e3.type == "AC" && zdf ? (zdf.ac("sca", arguments), e3) : (z_d("41.97"), zot(e3) || zot(e3.scaleX) || (zot(t2) && (t2 = e3.scaleX), zot(o2) && (o2 = t2), e3.scaleX = t2, e3.scaleY = o2), e3);
        }, To.alp = function(e3, t2) {
          if (z_d("41.7"), !zot(e3))
            return zot(t2) || (e3.alpha = e3.hovOriginal = t2, e3.tag && e3.tag.style && (e3.type != "Loader" && (e3.tag.style.opacity = t2), e3.tag.style.display = e3.tag.zimDisplay = t2 == 0 ? "none" : "inline-block")), e3;
        }, To.vis = function(e3, t2) {
          if (z_d("41.71"), !zot(e3))
            return e3.visible = t2, e3.tag && e3.tag.style && (e3.tag.style.display = e3.tag.zimDisplay = t2 ? "inline-block" : "none"), e3;
        }, To.ble = function(e3, t2) {
          if (z_d("41.72"), !zot(e3))
            return zot(t2) && (t2 = "difference"), e3.compositeOperation = t2, e3.type != "Blob" && e3.type != "Squiggle" || e3.update(), e3;
        }, To.hov = function(e3, t2, o2) {
          if (z_d("41.75"), !zot(e3))
            return zot(t2) && (t2 = 1), zot(o2) && (o2 = typeof t2 == "number" ? "alpha" : "color"), e3.hovMouseover && (e3.off("mouseover", e3.hovMouseover), e3.off("mouseout", e3.hovMouseout)), t2 == -1 ? (e3.cur("default"), zot(e3.hovOld) || (e3[e3.hovType] = e3.hovOld), e3.hovOld = null, e3.stage && e3.stage.update()) : (e3.cur(), e3.hovOld = e3[o2], e3.hovNew = t2, e3.hovType = o2, e3.hovMouseover = e3.on("mouseover", function() {
              e3[o2] = e3.hovNew, e3.stage && e3.stage.update();
            }), e3.hovMouseout = e3.on("mouseout", function() {
              e3[o2] = e3.hovOld, e3.stage && e3.stage.update();
            })), e3;
        }, To.rot = function(e3, t2, o2, n) {
          var r2, i2;
          if (z_d("41.8"), !zot(e3))
            return e3.type == "AC" && zdf ? zdf.ac("rot", arguments) : zot(t2) || (!e3.parent || zot(o2) && zot(n) ? e3.rotation = t2 : (zot(o2) && (o2 = e3.x), zot(n) && (n = e3.y), e3.x, e3.y, i2 = e3.parent.localToLocal(o2, n, e3), r2 = new To.Point(e3.x, e3.y), e3.reg(i2.x, i2.y), e3.rotation = t2, e3.x = o2, e3.y = n, i2 = e3.parent.localToLocal(r2.x, r2.y, e3), e3.reg(i2.x, i2.y), e3.x = r2.x, e3.y = r2.y)), e3;
        }, To.siz = function(e3, t2, o2, n) {
          if (z_d("41.85"), !zot(e3))
            return e3.type == "AC" && zdf ? zdf.ac("siz", arguments) : (zot(n) && (n = false), zot(t2) || zot(o2) ? zot(t2) ? zot(o2) || (n ? e3.heightOnly = o2 : e3.height = o2) : n ? e3.widthOnly = t2 : e3.width = t2 : (e3.widthOnly = t2, e3.heightOnly = o2)), e3;
        }, To.ske = function(e3, t2, o2) {
          if (z_d("41.9"), !zot(e3))
            return e3.type == "AC" && zdf ? zdf.ac("ske", arguments) : (zot(t2) || (e3.skewX = t2), zot(o2) || (e3.skewY = o2)), e3;
        }, To.reg = function(e3, t2, o2, n) {
          if (z_d("41.95"), !zot(e3)) {
            if (e3.type == "AC" && zdf)
              return zdf.ac("reg", arguments), e3;
            var r2 = e3.regX, i2 = e3.regY;
            return zot(t2) || (e3.regX = t2), zot(o2) || (e3.regY = o2), n && e3.parent && (i2 = e3.localToLocal(r2, i2, e3.parent), e3.x -= i2.x - e3.x, e3.y -= i2.y - e3.y), e3;
          }
        }, To.top = function(e3) {
          return z_d("41.62"), zot(e3) || !e3.parent || e3.parent.setChildIndex(e3, e3.parent.numChildren - 1), e3;
        }, To.bot = function(e3) {
          return z_d("41.63"), zot(e3) || !e3.parent || e3.parent.setChildIndex(e3, 0), e3;
        }, To.ord = function(e3, t2) {
          if (z_d("41.64"), !zot(e3) && e3.parent)
            return zot(t2) && (t2 = 0), e3.parent.setChildIndex(e3, e3.parent.getChildIndex(e3) + t2), e3;
        }, To.cur = function(e3, t2) {
          return z_d("41.1"), zot(e3) ? zog("zim methods - cur(): please provide object") : (zot(t2) && (t2 = "pointer"), e3.cursor = t2), e3;
        }, To.sha = function(e3, t2, o2, n, r2) {
          return z_d("41.2"), zot(e3) ? (zog("zim methods - sha(): please provide object"), e3) : (zot(t2) && (t2 = "rgba(0,0,0,.3)"), t2.blur ? e3.shadow = t2 : (zot(o2) && (o2 = e3.width ? 0.08 * e3.width : 5), zot(n) && (n = e3.height ? 0.08 * e3.height : 5), zot(r2) && (r2 = e3.width ? 0.16 * e3.width : 10), e3.shadow = new createjs.Shadow(t2, o2, n, r2)), e3);
        }, To.dep = function(e3, t2) {
          if (z_d("41.65"), !zot(e3))
            return zot(t2) && (t2 = 0), e3.depth = t2, e3;
        }, To.nam = function(e3, t2) {
          if (z_d("41.67"), !zot(e3) && !zot(t2))
            return e3.name = t2, To.zimObjectIDs[t2] = e3;
        }, To.movement = function(e3, t2, o2) {
          z_d("47.75");
          var n = e3.stage || zdf.stage;
          function r2() {
            n = e3.stage, e3.zimMovementStage = n, e3.zimMovementEvent && n.off("stagemousemove", e3.zimMovementEvent), e3.zimMovementEvent = n.on("stagemousemove", function(e4) {
              t2(e4);
            }), e3.on("mouseout", function() {
              e3.zimMovementEvent && n.off("stagemousemove", e3.zimMovementEvent);
            }, null, true);
          }
          return To.mobile() ? (e3.zimMovementEvent && n.off("pressmove", e3.zimMovementEvent), e3.zimMovementEvent = e3.on("pressmove", function(e4) {
            t2(e4);
          })) : (e3.zimMouseoverEvent && e3.off("mouseover", e3.zimMouseoverEvent), e3.zimMouseoverEvent = e3.on("mouseover", r2), o2 && r2()), e3;
        }, To.noMovement = function(e3) {
          if (z_d("47.9"), !zot(e3))
            return e3.zimMouseoverEvent && e3.off("mouseover", e3.zimMouseoverEvent), e3.zimMovementEvent && e3.zimMovementStage && e3.zimMovementStage.off("stagemousemove", e3.zimMovementEvent), e3;
        }, To.tap = function(a, l, s5, c2, e3, t2, u, d, h2, g) {
          var o2;
          if (o2 = zob(To.tap, arguments, "obj, call, distance, time, once, dbl, dblTime, call2, call3, call4"))
            return o2;
          if (z_d("47.8"), !zot(a) && !zot(l) && typeof l == "function") {
            zot(s5) && (s5 = t2 ? 10 : 5);
            var p = Ao(c2);
            zot(c2) && (c2 = p == "s" ? 8 : 8e3), zot(e3) && (e3 = false), zot(t2) && (t2 = false), zot(u) && (u = g ? p == "s" ? 0.5 : 500 : p == "s" ? 1 : 1e3);
            var f3, m2 = !(a.cursor = "pointer"), z = false;
            return t2 ? a.zimDblClickDownEvent = a.on("mousedown", function(e4) {
              if (f3 = false, m2)
                m2 = false;
              else {
                if (m2 = true, e4.target.stage, e4.currentTarget.type == "List") {
                  if (e4.target.type == "WindowBacking")
                    return;
                  if (e4.currentTarget.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY).y <= 0)
                    return;
                }
                var t3, o3, n = e4.stageX / To.scaX, r2 = e4.stageY / To.scaY, i2 = Date.now();
                z = true, a.zimDoubleTimeout && clearTimeout(a.zimDoubleTimeout), a.zimDoubleTimeout = setTimeout(function() {
                  m2 = z = false, a.zimDblClickUpEvent && a.off("pressup", a.zimDblClickUpEvent), f3 && g && (Math.abs(n + r2 - t3 / To.scaX - o3 / To.scaY) < s5 ? a.excludeTap || g(e4) : d && d(e4));
                }, p == "s" ? 1e3 * u : u), a.zimDblClickUpEvent = a.on("pressup", function(e5) {
                  if (t3 = e5.stageX, o3 = e5.stageY, f3 = true, m2)
                    h2 && h2(e5);
                  else if (z) {
                    if (Math.abs(n + r2 - e5.stageX / To.scaX - e5.stageY / To.scaY) < s5 && Date.now() - i2 < (p == "s" ? 1e3 * c2 : c2)) {
                      if (a.excludeTap)
                        return;
                      clearTimeout(a.zimDoubleTimeout), l(e5);
                    } else
                      d && d(e5);
                    e5.remove();
                  }
                });
              }
            }, null, e3) : a.zimClickDownEvent = a.on("mousedown", function(e4) {
              if (e4.target.stage, e4.currentTarget.type == "List") {
                if (e4.target.type == "WindowBacking")
                  return;
                if (e4.currentTarget.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY).y <= 0)
                  return;
              }
              var t3 = e4.stageX / To.scaX, o3 = e4.stageY / To.scaY, n = Date.now();
              a.zimClickUpEvent = a.on("pressup", function(e5) {
                if (Math.abs(t3 + o3 - e5.stageX / To.scaX - e5.stageY / To.scaY) < s5 && Date.now() - n < (p == "s" ? 1e3 * c2 : c2)) {
                  if (a.excludeTap)
                    return;
                  l(e5);
                } else
                  d && d(e5);
                e5.remove();
              });
            }, null, e3), a;
          }
        }, To.noTap = function(e3) {
          if (z_d("47.9"), !zot(e3))
            return e3.cursor && (e3.cursor = "default"), e3.zimClickDownEvent && e3.off("mousedown", e3.zimClickDownEvent), e3.zimClickUpEvent && e3.off("pressup", e3.zimClickUpEvent), e3.zimDoubleTimeout && clearInterval(e3.zimDoubleTimeout), e3;
        }, To.hold = function(r2, i2, a, l, e3) {
          if (z_d("47.87"), !zot(r2) && !zot(i2) && typeof i2 == "function") {
            zot(a) && (a = 5);
            var s5, c2 = Ao(l);
            return zot(l) && (l = c2 == "s" ? 1.5 : 1500), zot(e3) && (e3 = false), r2.cursor = "pointer", r2.zimClickHoldDownEvent = r2.on("mousedown", function(e4) {
              if (zot((s5 = e4.target.stage).frame) && (s5.frame = zdf), !zot(s5.frame) && s5.frame.mousemoveEvent || (zot(s5.frame) && (s5.frame = {}), s5.frame.mouseX = e4.stageX / To.scaX, s5.frame.mouseY = e4.stageY / To.scaY, s5.frame.mouseholdEvent && s5.off("stagemousemove", s5.frame.mouseholdEvent), s5.frame.mouseholdEvent = s5.on("stagemousemove", function(e5) {
                s5.frame.mouseX = e5.stageX / To.scaX, s5.frame.mouseY = e5.stageY / To.scaY;
              })), e4.currentTarget.type == "List") {
                if (e4.target.type == "WindowBacking")
                  return;
                if (e4.currentTarget.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY).y <= 0)
                  return;
              }
              var t2 = e4.stageX / To.scaX, o2 = e4.stageY / To.scaY;
              Date.now();
              clearInterval(r2.zimHoldInterval);
              var n = 0;
              r2.zimHoldInterval = setInterval(function() {
                if (n < 10)
                  Math.abs(t2 + o2 - s5.frame.mouseX - s5.frame.mouseY) > a && clearInterval(r2.zimHoldInterval);
                else {
                  if (Math.abs(t2 + o2 - s5.frame.mouseX - s5.frame.mouseY) < a) {
                    if (r2.excludeHold)
                      return;
                    i2(e4);
                  }
                  clearInterval(r2.zimHoldInterval);
                }
                n++;
              }, l / 10 * (c2 == "s" ? 1e3 : 1)), r2.zimClickHoldUpEvent = r2.on("pressup", function(e5) {
                clearInterval(r2.zimHoldInterval), s5 && s5.frame.mouseholdEvent && s5.off("stagemousemove", s5.frame.mouseholdEvent);
              }, null, true);
            }, null, e3), r2;
          }
        }, To.noHold = function(e3) {
          if (z_d("47.88"), !zot(e3))
            return e3.cursor && (e3.cursor = "default"), e3.off("mousedown", e3.zimClickHoldDownEvent), e3.off("pressup", e3.zimClickHoldUpEvent), e3.stage && e3.stage.frame.mouseEvent && e3.stage.off("stagemousemove", e3.stage.frame.mouseEvent), clearInterval(e3.zimHoldTimeout), e3;
        }, To.change = function(e3, t2, o2) {
          if (z_d("47.85"), !zot(e3) && !zot(t2) && typeof t2 == "function")
            return zot(o2) && (o2 = false), e3.zimChangeEvent = e3.on("change", function(e4) {
              t2(e4);
            }, null, o2), e3;
        }, To.noChange = function(e3) {
          if (z_d("47.95"), !zot(e3))
            return e3.off("mousedown", e3.zimChangeEvent), e3;
        }, To.drag = function(l, r2, a, o2, e3, t2, i2, n, s5, c2, u, d, h2, g, p, f3, m2, z) {
          if (y = zob(To.drag, arguments, "obj, boundary, overCursor, dragCursor, all, swipe, localBounds, onTop, surround, slide, slideDamp, slideSnap, reg, removeTweens, startBounds, rect, currentTarget, offStage"))
            return y;
          if (z_d("31"), !zot(l) && l.on) {
            var y = To.DRAGALL;
            if (window.DRAGALL != null && (y = window.DRAGALL), zot(e3) && zot(m2) && (e3 = y), zot(e3) && zot(m2) ? m2 = false : zot(e3) ? zot(m2) && (m2 = false) : m2 = e3, l.type != "Tag" && l.type != "TextArea" && l.type != "Loader" || (m2 = true), r2 && r2.getBounds && l.numChildren && 1 < l.numChildren && l.mouseChildren == 1 && !e3) {
              var b = Array.prototype.slice.call(arguments);
              return b[4] = true, l.loop(function(e4) {
                b[0] = e4, To.drag.apply(null, b);
              }), l;
            }
            l.zimDown && l.noDrag(), l.cursor = zot(a) ? "pointer" : a, zot(t2) && (t2 = false), zot(i2) && (i2 = false), zot(n) && (n = true), zot(s5) && (s5 = false), zot(c2) && (c2 = false), zot(u) && (u = 0.3), zot(d) && (d = true);
            var v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j;
            d !== true && ["horizontal", "vertical", "auto"].indexOf(d) < 0 && (d = false), zot(h2) && (h2 = false), zot(g) && (g = true), zot(p) && (p = true), zot(r2) && !zot(f3) && (r2 = f3), l.dragPaused = false, c2 || (l.zimDragTicker = function() {
            }), l._draggable = true, To.setSwipe(l, t2), l.zimBoundary = r2, l.zimLocalBounds = i2;
            var L, _, Y, D, X, R, W = l.downCheck = false;
            return l.zimAdded = l.on("added", F2, null, true), l.zimRemoved = l.on("removed", function() {
              l.zimDragTicker && To.Ticker.remove(l.zimDragTicker);
            }, null, true), l.parent && F2(), l.pointers = {}, l.zimDown = l.on("mousedown", function(e4) {
              var t3;
              l.stage && !l.dragPaused && (R = l.stage, l.zmu || (l.zmu = R.frame.on("mouseupplus", function(e5) {
                l.downCheck && (c2 || (l.downCheck = false), N(e5, true));
              })), l.dragMouseX = Math.round(e4.stageX / To.scaX) + R.x, l.dragMouseY = Math.round(e4.stageY / To.scaY) + R.y, t3 = "id" + Math.abs(e4.pointerID + 1), l.pointers[t3] = true, X = m2 ? e4.currentTarget : e4.target, !l.zimBoundary || X.getBounds() ? (l.downCheck = true, l.stage.mouseMoveOutside = true, To.Ticker.has(l.zimDragTicker) || To.Ticker.add(l.zimDragTicker, l.stage), g && createjs.Tween.removeTweens(X), X.parent && (n && (t3 = X.parent.numChildren - 1, X.parent.getChildAt(t3).type == "Keyboard" && t3--, X.parent.setChildIndex(X, t3), X.ZIMoutlineShape && X.outline()), e4 = X.parent == l.stage ? new To.Point(e4.stageX / To.scaX, e4.stageY / To.scaY) : X.parent.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY), h2 && (X.x = e4.x, X.y = e4.y), L = e4.x - X.x, _ = e4.y - X.y, l.zimBoundary && (i2 ? (Y = To.boundsToGlobal(X.parent, l.zimBoundary), s5 && (D = l.zimBoundary)) : (Y = l.zimBoundary, s5 && (D = To.boundsToGlobal(X.parent, l.zimBoundary, true)))), l.cursor = zot(o2) ? "pointer" : o2, c2 && (l.slideStartX = l.x, l.slideStartY = l.y, j = l.zimDragMoving, x2 = 0, k = [e4.x], T2 = [e4.y], O = M = -1e4, l.zimDragMoving = true), l.type == "Pen" && (l.zimDragCheck = true, W = false))) : zog("zim.drag() - drag object needs bounds set"));
            }, true), l.zimMove = l.on("pressmove", function(e4) {
              var t3;
              l.downCheck && !l.dragPaused && (t3 = (z ? e4.rawX : e4.stageX) / To.scaX + R.x, e4 = (z ? e4.rawY : e4.stageY) / To.scaY + R.y, l.dragMouseX = Math.round(t3), l.dragMouseY = Math.round(e4), H(X, t3, e4), X.ZIMoutlineShape && X.outline(), l.type == "Pen" && !W && l.drawing ? W = true : l.type != "Tag" && l.type != "TextArea" && l.type != "Loader" || l.resize());
            }, true), l.zimPosition = H, l.zimUp = l.on("pressup", function(e4) {
              N(e4);
            }, true), l;
          }
          function F2() {
            var e4, t3, o3, n2;
            l.off("added", l.zimAdded), (r2 = l.zimBoundary) && r2.getBounds && r2.type != "Blob" && (l.zimLocalBounds = false, r2 = r2.type != "Stage" && r2.type != "StageGL" ? r2.boundsToGlobal() : new To.Boundary(0, 0, r2.width, r2.height), e4 = l.boundsToGlobal(), t3 = l.localToGlobal(l.regX, l.regY), o3 = new To.Point(t3.x - e4.x, t3.y - e4.y), n2 = l.borderWidth || 0, r2.x += o3.x + n2 / 2, r2.y += o3.y + n2 / 2, r2.width -= e4.width + n2, r2.height -= e4.height + n2, l.zimBoundary = r2), _ = L = 0, l.zimBoundary && l.zimBoundary.type != "Blob" && (i2 ? (Y = To.boundsToGlobal(l.parent, l.zimBoundary), s5 && (D = l.zimBoundary)) : (Y = l.zimBoundary, s5 && (D = To.boundsToGlobal(l.parent, l.zimBoundary, true)))), Y && p && (t3 = l.parent.localToGlobal(l.x, l.y), H(l, t3.x, t3.y)), c2 && setTimeout(function() {
              function n3(e5, t4, o4, n4, r3) {
                Math.abs(e5.x - M) < 0.1 && Math.abs(e5.y - O) < 0.1 ? (l.zimDragMoving = false, e5.x = n4, e5.y = r3, e5.slideStartX = null, e5.slideStartY = null, j && (e5.dispatchEvent("slidestop"), To.Ticker.remove(l.zimDragTicker)), l.type == "Pen" && (l.zimDragCheck = false, W && l.drawing && l.stopCheck())) : (M = t4, O = o4);
              }
              v = new To.Damp(l.x, u), w = new To.Damp(l.y, u), l.zimDragImmediate = function(e5, t4) {
                S2 = t4, A3 = E = P = I2 = 0, zot(B = e5) || v.immediate(e5), zot(t4) || w.immediate(t4);
              }, C = 3, x2 = 0, k = [], T2 = [], A3 = l.x, P = l.y, B = l.x, S2 = l.y, E = l.x, I2 = l.y, O = M = -1e4, l.zimDragMoving = true, l.stage, l.zimDragTicker = function() {
                var e5, t4, o4;
                zot(l.slideStartX) || (X = X || l, l.downCheck ? (t4 = X.parent ? X.parent.globalToLocal(l.dragMouseX, l.dragMouseY) : new To.Point(0, 0), x2++, k.push(t4.x), T2.push(t4.y), I2 = C <= x2 ? (E = k.shift(), T2.shift()) : (E = k[0], T2[0])) : l.zimDragMoving && (e5 = B + A3 - E, t4 = S2 + P - I2, Y && (e5 = (o4 = V(X, e5, t4)).x, t4 = o4.y), d ? (X.x = v.convert(e5), X.y = w.convert(t4), n3(X, X.x, X.y, e5, t4)) : (o4 = V(X, v.convert(e5), w.convert(t4)), X.x = o4.x, X.y = o4.y, n3(X, X.x, X.y, X.x, X.y))));
              };
            }, 50), zot(l.zimMaskDynamic) || l.zimMaskApply();
          }
          function H(e4, t3, o3) {
            var n2, r3;
            zot(e4) && (e4 = X || l), e4.parent && ((zot(t3) || zot(o3)) && (n2 = e4.parent.localToGlobal(e4.x, e4.y), L = _ = 0, l.zimBoundary && (i2 ? (Y = To.boundsToGlobal(e4.parent, l.zimBoundary), s5 && (D = e4.zimBoundary)) : (Y = l.zimBoundary, s5 && (D = To.boundsToGlobal(e4.parent, l.zimBoundary, true)))), t3 = n2.x, o3 = n2.y, c2 && (B = e4.x, S2 = e4.y, X = e4, v && v.immediate(B), w && w.immediate(S2))), o3 = R && R.type ? e4.parent.globalToLocal(t3, o3) : e4.parent.globalToLocal(t3 * To.scaX, o3 * To.scaY), c2 && d ? d == "vertical" ? (r3 = V(e4, o3.x - L, o3.y - _), e4.x = r3.x, e4.y = o3.y - _) : d == "horizontal" ? (r3 = V(e4, o3.x - L, o3.y - _), e4.x = o3.x - L, e4.y = r3.y) : (e4.x = o3.x - L, e4.y = o3.y - _) : (r3 = V(e4, o3.x - L, o3.y - _), e4.x = r3.x, e4.y = r3.y), !c2 || j || e4.slideStartX == e4.x && e4.slideStartY == e4.y || (j = true));
          }
          function N(e4, t3) {
            var o3, n2 = "id" + Math.abs(e4.pointerID + 1);
            if (delete l.pointers[n2], l.downCheck && !l.dragPaused) {
              if (l.cursor = zot(a) ? "pointer" : a, c2)
                X.dispatchEvent("slidestart"), o3 = X.parent ? (n2 = z ? e4.rawX : e4.stageX, o3 = z ? e4.rawY : e4.stageY, X.parent.globalToLocal(n2 / To.scaX, o3 / To.scaY)) : new To.Point(0, 0), l.downCheck = false, A3 = o3.x, P = o3.y, B = X.x, S2 = X.y, t3 && (E = A3 = 0, I2 = P = 0), v.immediate(X.x), w.immediate(X.y);
              else {
                var r3, i3 = 0;
                for (r3 in l.pointers)
                  i3++;
                i3 == 0 && To.Ticker.remove(l.zimDragTicker), l.type == "Pen" && (l.zimDragCheck = false, W && l.drawing && l.stopCheck());
              }
              l.stage && l.stage.update();
            }
          }
          function V(e4, t3, o3) {
            if (!e4.parent)
              return { x: t3, y: o3 };
            if (Y)
              if (s5) {
                var n2 = e4.getBounds().width, r3 = e4.getBounds().height, i3 = e4.getBounds().x, a2 = e4.getBounds().y;
                n2 < D.width ? t3 = D.x + (D.width - n2) / 2 + (e4.regX - i3) : (t3 - (e4.regX - i3) > D.x && (t3 = D.x + (e4.regX - i3)), t3 - (e4.regX - i3) + n2 < D.x + D.width && (t3 = D.x + D.width + (e4.regX - i3) - n2)), e4.height < D.height ? o3 = D.y + (D.height - r3) / 2 + (e4.regY - a2) : (o3 - (e4.regY - a2) > D.y && (o3 = D.y + (e4.regY - a2)), o3 - (e4.regY - a2) + r3 < D.y + D.height && (o3 = D.y + D.height + (e4.regY - a2) - r3));
              } else {
                if (Y.type == "Blob")
                  return Y.shape.hitTestPoint(t3, o3) ? { x: t3, y: o3 } : { x: l.x, y: l.y };
                r3 = e4.parent.localToGlobal(t3, o3);
                t3 = Math.max(Y.x, Math.min(Y.x + Y.width, r3.x)), o3 = Math.max(Y.y, Math.min(Y.y + Y.height, r3.y)), t3 = (r3 = e4.parent.globalToLocal(t3, o3)).x, o3 = r3.y;
              }
            return { x: t3, y: o3 };
          }
        }, To.noDrag = function(e3, t2) {
          if (z_d("32"), !zot(e3) && e3.on) {
            if (zot(t2) && (t2 = true), t2 && e3.numChildren && 1 < e3.numChildren)
              for (var o2 = 0; o2 < e3.numChildren; o2++)
                n(e3.getChildAt(o2));
            return n(e3), e3;
          }
          function n(e4) {
            e4.cursor = null, e4._draggable = false, To.setSwipe(e4, true), e4.off("added", e4.zimAdded), e4.off("removed", e4.zimRemoved), e4.off("mousedown", e4.zimDown), e4.off("pressmove", e4.zimMove), e4.off("pressup", e4.zimUp), e4.zmu && (e4.stage ? e4.stage.frame : zdf).off("mouseupplus", e4.zmu), To.Ticker && (e4.zimDragSlide && To.Ticker.remove(e4.zimDragSlide), e4.zimDragTicker && To.Ticker.remove(e4.zimDragTicker)), e4.zimDragMoving = e4.zimAdded = e4.zimRemoved = e4.zimDown = e4.zimMove = e4.zimUp = e4.zimBoundary = e4.zimDragSlide = null, e4.slideStartX = e4.slideStartY = e4.zimDragImmediate = null, e4.dragMouseX = e4.zimPosition = e4.dragMouseY = e4.zimDown = e4.zimUp = null, e4.zimDragTicker = e4.zimDragSlide = null;
          }
        }, To.dragBoundary = function(e3, t2, o2) {
          if (z_d("33"), !zot(e3) && e3.on && !zot(t2))
            return e3.zimBoundary = t2, e3.zimDragMoving = true, e3.zimPosition && e3.zimPosition(), e3;
        }, To.dragRect = To.dragBoundary, To.mouse = function(e3) {
          return z_d("33.1"), e3.zimLastMouse && (e3.mouseChildren = e3.zimLastMouse), e3.mouseEnabled = true, e3;
        }, To.noMouse = function(e3) {
          return z_d("33.15"), e3.zimLastMouse = e3.mouseChildren, e3.mouseChildren = false, e3.mouseEnabled = false, e3;
        }, To.wire = function(e3, t2, o2, n, r2, i2, a, l) {
          if (s5 = zob(To.wire, arguments, "source, target, prop, twoWay, setSource, filter, call, input"))
            return s5;
          if (z_d("33.2"), zot(To.Ticker) && zon)
            return zog("wire() - requires ZIM Frame"), e3;
          if (zot(t2) && zon)
            return zog("wire() - requires a target"), e3;
          var s5 = To.DEFAULTWIRE;
          return window.DEFAULTWIRE != null && (s5 = window.DEFAULTWIRE), zot(l) && (l = s5 && s5 != "currentValue" && s5 != "selectedIndex" || s5 && e3.hasOwnProperty(s5) ? s5 : e3.hasOwnProperty("currentValue") ? "currentValue" : e3.hasOwnProperty("selectedIndex") ? "selectedIndex" : o2), zot(o2) && (o2 = l), e3.addChild && (e3.zimWire = true), t2.addChild && (t2.zimWired = true), To.Ticker.addWire(e3, [t2, o2, n, r2, i2, a, l]), e3;
        }, To.noWire = function(e3, t2, o2, n) {
          var r2;
          return (r2 = zob(To.noWire, arguments, "source, target, prop, input")) ? r2 : (z_d("33.25"), zot(To.Ticker) && zon ? zog("noWire() - requires ZIM Frame") : To.Ticker.removeWire(e3, t2, o2, n), e3);
        }, To.wired = function(e3, t2, o2, n, r2, i2, a, l) {
          var s5;
          return (s5 = zob(To.wired, arguments, "target, source, prop, twoWay, setSource, filter, call, input")) ? s5 : (z_d("33.3"), zot(To.Ticker) && zon ? zog("wired() - requires ZIM Frame") : To.wire(t2, e3, o2, n, r2, i2, a, l), e3);
        }, To.noWired = function(e3, t2, o2, n) {
          var r2;
          return (r2 = zob(To.noWire, arguments, "target, source, prop, input")) ? r2 : (z_d("33.35"), zot(To.Ticker) && zon ? zog("noWired() - requires ZIM Frame") : To.Ticker.removeWire(t2, e3, o2, n), e3);
        }, To.bind = function(e3, t2, o2, n, r2, i2) {
          var a;
          return (a = zob(To.bind, arguments, "obj, id, props, extra, filter, bindObj")) ? a : (z_d("33.17"), c ? zot(t2) ? zon && zogy("bind() - needs a unique id") : (i2 || c).add(t2, e3, o2, n, r2) : zon && zogy("bind() - needs a Bind() object created first"), e3);
        }, To.noBind = function(e3, t2, o2, n, r2) {
          var i2;
          return (i2 = zob(To.noBind, arguments, "obj, props, removeConnectionData, call, bindObj")) ? i2 : (z_d("33.18"), c && (r2 || c).remove(e3, t2, o2, n), e3);
        }, To.transform = function(u, t2, e3, o2, n, r2, i2, a, l, d, s5, c2, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B) {
          var S2;
          if (S2 = zob(To.transform, arguments, "obj, move, stretchX, stretchY, scale, rotate, allowToggle, visible, onTop, showStretch, showRotate, showScale, showReg, showBorder, borderColor, borderWidth, dashed, customCursors, handleSize, regSize, snapDistance, snapRotation, cache, events, ghostColor, ghostWidth, ghostDashed, ghostHidden, frame"))
            return S2;
          if (z_d("33.5"), zot(u) || !u.getBounds)
            return zog("zim methods - transform(): please provide object with bounds set"), u;
          if (!u.getBounds())
            return zog("zim methods - transform(): please setBounds() on object"), u;
          if (!u.parent)
            return zog("zim methods - transform(): object should be on stage first"), u;
          zot(t2) && (t2 = true), zot(e3) && (e3 = true), zot(o2) && (o2 = true), u.width == 0 && (e3 = false), u.height == 0 && (o2 = false), zot(n) && (n = true), zot(r2) && (r2 = true);
          var E = To.mobile();
          zot(i2) && (i2 = true), zot(a) && (a = true), zot(l) && (l = true), zot(d) && (d = !!E), zot(s5) && (s5 = !!E), zot(c2) && (c2 = true), zot(h2) && (h2 = true), zot(g) && (g = true), zot(p) && (p = "brown"), zot(f3) && (f3 = 1), zot(k) && (k = null), zot(T2) && (T2 = null), k < 0 || T2 < 0 ? k = T2 = null : k != null && T2 == null && (T2 = 1), zot(A3) && (A3 = true), zot(P) && (P = false), zot(B) && (B = zdf), zot(z) && (z = !E), zot(y) && (y = E ? 20 : 10), zot(b) && (b = 16), zot(v) && (v = 10), zot(w) && (w = 5), zot(C) && (C = true), zot(x2) && (x2 = false), u.type != "Tag" && u.type != "TextArea" && u.type != "Loader" || (x2 = true), u.mouseChildren = false;
          var I2 = u.getConcatenatedMatrix().decompose(), M = u.stage || B.stage;
          zot(B.eventRemove) && (M.enableMouseOver(), B.ctrlKey = false, B.shiftKey = false, window.addEventListener("keydown", function(e4) {
            B.altKey = e4.altKey, B.ctrlKey = e4.ctrlKey;
          }), window.addEventListener("keyup", function(e4) {
            B.altKey = e4.altKey, B.ctrlKey = e4.ctrlKey;
          }));
          var O = u.getBounds(), j = new To.Shape({ style: false }), L = new To.Shape({ style: false }), _ = new To.Shape({ style: false });
          L.mouseEnabled = false, _.controlType = "reg";
          var Y, D, X, R, W, F2, H, N, V, G = u.parent, q = j.graphics, U = L.graphics, Q = _.graphics, Z2 = new To.Container({ style: false });
          Z2.type = "TransformControls";
          var K, J, $, ee, te, oe, ne, re, ie = new To.Container({ style: false }), ae = new To.Container({ style: false }), le = new To.Container({ style: false }), se = new To.Container({ style: false });
          function ce(e4) {
            e4 == oe && new To.Triangle(16, 12, 12, "white").addTo(e4).mov(0, -13.5), new To.Triangle(16, 12, 12, "white").addTo(e4).mov(13.5).rot(90), e4 == oe && new To.Triangle(16, 12, 12, "white").addTo(e4).mov(0, 13.5).rot(180), new To.Triangle(16, 12, 12, "white").addTo(e4).mov(-13.5).rot(-90), e4 == oe && new To.Triangle(10, 7, 7, "black").addTo(e4).mov(0, -13), new To.Triangle(10, 7, 7, "black").addTo(e4).mov(13).rot(90), e4 == oe && new To.Triangle(10, 7, 7, "black").addTo(e4).mov(0, 13).rot(180), new To.Triangle(10, 7, 7, "black").addTo(e4).mov(-13).rot(-90), C && e4.cache(-20, -20, 40, 40);
          }
          function ue() {
            var e4 = u;
            for ($ = J = 1, te = ee = K = 0; e4.parent; )
              K += e4.rotation, J *= e4.scaleX, $ *= e4.scaleY, ee += e4.skewX, te += e4.skewY, e4 = e4.parent;
          }
          zot(u.zimMaskDynamic) || u.zimMaskApply(), z && (oe = new To.Container({ style: false }), ne = new To.Container({ style: false }), ce(oe), ce(ne), re = { "nw-resize": 45, "ne-resize": -45, "n-resize": 90, "e-resize": 0 }), ue();
          for (var de = K, he = ["nw-resize", "ne-resize", "nw-resize", "ne-resize"], ge = [2, 3, 0, 1], pe = 0; pe < 4; pe++)
            c2 ? ((be = new To.Rectangle(y, y, "#e472c4", "#333", 2, null, null, null, false)).centerReg(ie), C && be.cache(-1, -1, y + 2, y + 2)) : ((be = new To.Rectangle(y, y, "rgba(0,0,0,0)", "rgba(0,0,0,0)", 2, null, null, null, false)).centerReg(ie), be.expand(0)), be.rotation = K, H = z ? "none" : he[pe], be.drag({ overCursor: H, dragCursor: H, onTop: false }), be.controlType = "corner", be.cu = he[pe];
          for (pe = 0; pe < ge.length; pe++)
            ie.getChildAt(pe).op = ie.getChildAt(ge[pe]);
          for (var fe = ["n-resize", "e-resize", "n-resize", "e-resize"], ge = [1, 1, 0, 0], pe = 0; pe < 4; pe++) {
            var me = pe % 2 == 0 ? u.width / 2 : y, ze = pe % 2 == 0 ? y : u.height / 2;
            d ? ((be = new To.Rectangle(y, y, "#AAA", "#333", 2, null, null, null, false)).centerReg(pe % 2 == 0 ? le : ae), C && be.cache(-1, -1, y + 2, y + 2)) : ((be = new To.Rectangle(me, ze, "rgba(0,0,0,0)", null, null, null, null, null, false)).centerReg(pe % 2 == 0 ? le : ae), be.expand(0)), be.rotation = K, H = z ? "none" : fe[pe], be.drag({ overCursor: H, dragCursor: H, onTop: false }), be.controlType = "side", be.cu = fe[pe];
          }
          for (pe = 0; pe < ge.length; pe++) {
            var ye = pe % 2 == 0 ? le : ae;
            ye.getChildAt(Math.floor(pe / 2)).op = ye.getChildAt(ge[pe]);
          }
          for (var be, ve = ["ne-resize", "nw-resize", "ne-resize", "nw-resize"], pe = 0; pe < 4; pe++)
            s5 ? ((be = new To.Circle(y, "#e472c4", null, null, null, null, null, null, false)).addTo(se), C && be.cache(-y, -y, 2 * y, 2 * y)) : ((be = new To.Circle(y, "rgba(0,0,0,0)", null, null, null, null, null, null, false)).addTo(se), be.expand(0)), H = z ? "none" : ve[pe], be.drag({ overCursor: H, dragCursor: H, onTop: false }), be.controlType = "rotate", be.cu = ve[pe];
          var we = 1.8;
          function Ce() {
            var e4 = y * we * To.sign(J), t3 = y * we * To.sign($);
            se.getChildAt(0).reg(e4, t3), se.getChildAt(1).reg(-e4, t3), se.getChildAt(2).reg(-e4, -t3), se.getChildAt(3).reg(e4, -t3), M.update();
          }
          function xe() {
            q.c(), U.c(), Q.c(), Y = u.localToGlobal(O.x, O.y), D = u.localToGlobal(O.x + O.width, O.y), X = u.localToGlobal(O.x + O.width, O.y + O.height), R = u.localToGlobal(O.x, O.y + O.height);
            var e4 = u.localToGlobal(O.x + O.width / 2, O.y), t3 = u.localToGlobal(O.x + O.width, O.y + O.height / 2), o3 = u.localToGlobal(O.x + O.width / 2, O.y + O.height), n2 = u.localToGlobal(O.x, O.y + O.height / 2);
            W = u.localToGlobal(u.regX, u.regY), F2 = u.localToGlobal(O.x + O.width / 2, O.y + O.height / 2), V = [Y, D, X, R], N = [e4, t3, o3, n2], g && (q.s(p), m2 && q.sd([10, 5], 0), q.ss(f3).mt(Y.x, Y.y).lt(D.x, D.y).lt(X.x, X.y).lt(R.x, R.y).lt(Y.x, Y.y).cp()), zot(k) || (U.s(k), A3 && U.sd([10, 5], 0), U.ss(T2).mt(Y.x, Y.y).lt(D.x, D.y).lt(X.x, X.y).lt(R.x, R.y).lt(Y.x, Y.y).cp()), j.setBounds(Y.x, Y.y, D.x - Y.x, R.y - Y.y), h2 && (Q.s("#eee").ss(f3).f("rgba(0,0,0,.1)").dc(0, 0, b), Q.s("#222").ss(f3).dc(0, 0, 0.3 * b)), ue();
            for (var r3 = Math.min(50, Math.abs(ee)) * To.sign(ee), i3 = Math.min(50, Math.abs(te)) * To.sign(te), a2 = K * To.sign(J * $) * To.sign(u.scaleX * u.scaleY), l2 = 0; l2 < V.length; l2++) {
              var s6 = V[l2];
              ie.getChildAt(l2).loc(s6.x, s6.y).ske(r3, i3).rot(a2), se.getChildAt(l2).loc(s6.x, s6.y).rot(a2);
              var c3 = N[l2], s6 = l2 % 2 == 0 ? le : ae;
              s6.getChildAt(Math.floor(l2 / 2)).loc(c3.x, c3.y).ske(r3, i3).rot(a2), d || s6.getChildAt(Math.floor(l2 / 2)).sca(l2 % 2 == 0 ? J / 2 : 1, l2 % 2 == 0 ? 1 : $ / 2);
            }
            _.x = W.x, _.y = W.y;
          }
          se.alpha = 0.5, Ce(), xe();
          var ke = new To.Shape(1e3, 1e3, null, null, null, false);
          function Te() {
            ke.x = 0, ke.y = 0, ke.graphics.c().f("rgba(0,0,0,.01)").mt(Y.x, Y.y).lt(D.x, D.y).lt(X.x, X.y).lt(R.x, R.y).lt(Y.x, Y.y).cp(), ke.reg(W.x, W.y), ke.x = W.x, ke.y = W.y;
          }
          Te(), Z2.on("dblclick", function(e4) {
            B.ctrlKey && u.transformControls.visible && (u.scaleX = 1, u.scaleY = 1, u.rotation = 0, xe(), Te(), M.update()), $e(e4, true);
          });
          var Ae = Z2.on("mousedown", Be), Pe = u.on("mousedown", Be);
          function Be(e4) {
            e4 = M.getObjectUnderPoint(e4.stageX, e4.stageY, 1);
            E || e4 && (u.contains && u.contains(e4) || !u.contains && u == e4) ? u.transformControls.visible || (z ? (it = false, ke.mouseEnabled = false) : B.canvas.style.cursor = "move", u.transformControls.show(), u.dispatchEvent("transformshow")) : !u.transformControls.visible || e4 && Z2.contains(e4) || (u.transformControls.hide(), u.dispatchEvent("transformhide"));
          }
          var Se, Ee, Ie, Me, Oe, je, Le, _e, Ye, De, Xe, Re, We, Fe = M.on("stagemousedown", function(e4) {
            var t3 = M.getObjectUnderPoint(e4.stageX, e4.stageY, 1), e4 = t3 && t3.parent && t3.parent.layer && t3.parent.layer == u;
            !u.transformControls.visible || t3 && (Z2.contains(t3) || e4) || (u.dispatchEvent("transformhide"), u.transformControls.hide());
          });
          i2 || (Z2.off("mousedown", Ae), u.off("mousedown", Pe), M.off("stagemousedown", Fe));
          var He, Ne, Ve, Ge2, qe = false, Ue = false, Qe = u.cursor, Ze = new To.Circle(30, "rgba(0,0,0,0)", null, null, null, null, null, null, false).expand(20);
          function Ke(e4) {
            var t3, o3, n2;
            Ue = true, l && nt(), He && M.off("stagemousemove", He), Se = e4.target.x, Ee = e4.target.y, De = u.x, Xe = u.y, Ie = u.scaleX, Me = u.scaleY, e4.target.controlType == "rotate" && (qe = true, Oe = u.rotation, t3 = e4.stageX / To.scaX, o3 = e4.stageY / To.scaY, n2 = G.localToGlobal(De, Xe), Re = n2.x, We = n2.y, je = 180 * Math.atan2(o3 - We, t3 - Re) / Math.PI), _e = B.ctrlKey || e4.target.controlType == "rotate" ? (Le = Math.abs(Se - u.x), Math.abs(Ee - u.y)) : (Le = Math.abs(Se - e4.target.op.x), Math.abs(Ee - e4.target.op.y)), e4.target.controlType != "rotate" && (Ye = e4.target.op.parent.localToLocal(e4.target.op.x, e4.target.op.y, u.parent)), Ze.stage ? M.setChildIndex(Ze, M.getChildIndex(Z2)) : Ze.addTo(M, M.getChildIndex(Z2) + 1), Ze.x = e4.stageX / To.scaX, Ze.y = e4.stageY / To.scaY, Ze.cursor = z ? "none" : e4.target.cu, z && (u.getConcatenatedMatrix().decompose(I2), I2.rotation || (I2.rotation = 0), ne.rotation = I2.rotation * To.sign(J * $) * To.sign(u.scaleX * u.scaleY) + re[e4.target.cu] + de, e4.target.controlType != "side" && J * $ < 0 && (ne.rotation += 90), Ge2.addTo(M, 1).pos({ x: e4.stageX / To.scaX, y: e4.stageY / To.scaY, reg: true })), ke.visible = false, u.cursor = "none";
          }
          function Je(e4) {
            var t3 = 1;
            B.ctrlKey && e4.target.controlType == "corner" ? t3 = _e < Le ? (e4.target.x - De) / (Se - De) : (e4.target.y - Xe) / (Ee - Xe) : _e < Le ? Se - e4.target.op.x && (t3 = (e4.target.x - e4.target.op.x) / (Se - e4.target.op.x)) : Ee - e4.target.op.y && (t3 = (e4.target.y - e4.target.op.y) / (Ee - e4.target.op.y)), e4.target.controlType == "corner" ? (u.scaleX = t3 * Ie, u.scaleY = t3 * Me) : (u.scaleX = e4.target.cu == "e-resize" ? t3 * Ie : Ie, u.scaleY = e4.target.cu == "n-resize" ? t3 * Me : Me), xe(), Ze.x = e4.stageX / To.scaX, Ze.y = e4.stageY / To.scaY, z && (Ge2.x = e4.stageX / To.scaX, Ge2.y = e4.stageY / To.scaY), B.ctrlKey && e4.target.controlType != "side" || (t3 = e4.target.op.parent.localToLocal(e4.target.op.x, e4.target.op.y, u.parent), u.x -= (t3.x - Ye.x) * To.sign(J) * To.sign(u.scaleX), u.y -= (t3.y - Ye.y) * To.sign($) * To.sign(u.scaleY)), xe(), u.transformControls.events && et(e4, e4.target.controlType);
          }
          function $e(e4, t3) {
            Ce();
            var o3 = e4 ? e4.target.controlType : "move";
            t3 && (o3 = "reset"), z && Ge2.removeFrom(M), et(e4, o3, true), M.update();
          }
          function et(e4, t3, o3, n2) {
            n2 == null && (n2 = true);
            var r3 = false;
            Ve = null, t3 == "move" ? (u.x == at.x && u.y == at.y || ((Ve = new createjs.Event("transformed")).transformType = "move"), n2 && (r3 = ke.hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY))) : t3 == "corner" ? (u.scaleX == at.scaleX && u.scaleY == at.scaleY || ((Ve = new createjs.Event("transformed")).transformType = "size"), n2 && (r3 = ie.hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY))) : t3 == "side" ? (u.scaleX == at.scaleX && u.scaleY == at.scaleY || ((Ve = new createjs.Event("transformed")).transformType = "stretch"), n2 && (r3 = ae.hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY) || le.hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY))) : t3 == "rotate" ? (u.rotation != at.rotation && ((Ve = new createjs.Event("transformed")).transformType = "rotate"), n2 && (r3 = se.hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY))) : t3 == "reg" ? u.regX == at.regX && u.regY == at.regY || ((Ve = new createjs.Event("transformed")).transformType = "reg") : (Ve = new createjs.Event("transformed")).transformType = t3 == "reset" ? "reset" : "unknown", n2 && !r3 && (Ze.removeFrom(M), B.canvas.style.cursor = "default", u.cursor = Qe), Ve && (Ve.pressup = o3, u.type != "Tag" && u.type != "TextArea" && u.type != "Loader" || u.resize(), u.dispatchEvent(Ve));
          }
          function tt(e4) {
            Ue || (Ze.stage ? M.setChildIndex(Ze, M.getChildIndex(Z2)) : Ze.addTo(M, M.getChildIndex(Z2) + 1), Ge2.addTo(M, 1), Ze.x = e4.stageX / To.scaX, Ze.y = e4.stageY / To.scaY, Ge2.x = e4.stageX / To.scaX, Ge2.y = e4.stageY / To.scaY, u.getConcatenatedMatrix().decompose(I2), I2.rotation || (I2.rotation = 0), ne.rotation = I2.rotation * To.sign(J * $) * To.sign(u.scaleX * u.scaleY) + re[e4.target.cu] + de, e4.target.controlType != "side" && J * $ < 0 && (ne.rotation += 90), M.update(), He && M.off("stagemousemove", He), He = M.on("stagemousemove", function(e5) {
              Ze.x = e5.stageX / To.scaX, Ze.y = e5.stageY / To.scaY, M.update();
            }));
          }
          function ot(e4) {
            M.off("stagemousemove", He), Ue || (u.cursor = Qe, Ze.removeFrom(M), Ge2.removeFrom(M), M.update());
          }
          function nt() {
            var e4;
            l && (e4 = G.numChildren - 1, G.getChildAt(e4).type == "Keyboard" && e4--, G.setChildIndex(u, e4), rt());
          }
          function rt() {
            if (G == M)
              Z2.removeFrom(), M.addChildAt(Z2, M.getChildIndex(u) + 1);
            else {
              for (var e4 = G; e4.parent && e4.parent != M; )
                e4 = e4.parent;
              u.stage && (Z2.parent == M && M.removeChild(Z2), M.addChildAt(Z2, M.getChildIndex(e4) + 1));
            }
          }
          z && (Ze.mouseEnabled = false, Ze.mouseChildren = false, Ze.addChild(ne), ie.on("mouseover", tt), ie.on("mouseout", ot), ae.on("mouseover", tt), ae.on("mouseout", ot), le.on("mouseover", tt), le.on("mouseout", ot), se.on("mouseover", tt), se.on("mouseout", ot), (Ge2 = new To.Circle(30, "rgba(0,0,0,0)", null, null, null, null, null, null, false).expand(20)).cursor = "none"), ie.on("mousedown", Ke), ie.on("pressmove", Je), ie.on("pressup", $e), ae.on("mousedown", Ke), ae.on("pressmove", Je), ae.on("pressup", $e), le.on("mousedown", Ke), le.on("pressmove", Je), le.on("pressup", $e), se.on("mousedown", Ke), se.on("pressmove", function(e4) {
            var t3 = 180 * Math.atan2(e4.stageY / To.scaY - We, e4.stageX / To.scaX - Re) / Math.PI;
            B.shiftKey ? u.rot(45 * Math.round((Oe + (t3 - je) * To.sign(J) * To.sign(u.scaleX)) / 45)) : u.rot(Oe + (t3 - je) * To.sign(J) * To.sign(u.scaleX));
            xe(), Ze.x = e4.stageX / To.scaX, Ze.y = e4.stageY / To.scaY, z && (u.getConcatenatedMatrix().decompose(I2), I2.rotation || (I2.rotation = 0), ne.rotation = I2.rotation * To.sign(J * $) * To.sign(u.scaleX * u.scaleY) + re[e4.target.cu] + de, e4.target.controlType != "side" && J * $ < 0 && (ne.rotation += 90), Ge2.x = e4.stageX / To.scaX, Ge2.y = e4.stageY / To.scaY);
            xe(), u.transformControls.events && (t3 = e4.target.controlType, et(e4, t3, null, false));
          }), se.on("pressup", $e), _.drag(), _.on("mousedown", nt), _.on("pressup", function(e4) {
            if (!B.ctrlKey) {
              for (var t3 = 0; t3 < V.length; t3++)
                if (To.dist(_.x, _.y, V[t3].x, V[t3].y) < v) {
                  _.x = V[t3].x, _.y = V[t3].y;
                  break;
                }
              To.dist(_.x, _.y, F2.x, F2.y) < v && (_.x = F2.x, _.y = F2.y);
            }
            var o3, n2 = u.rotation, r3 = u.globalToLocal(_.x, _.y);
            o3 = G == M ? new To.Point(_.x, _.y) : G.globalToLocal(_.x, _.y), u.reg(r3.x, r3.y), u.rotation = 0, u.x = u.x + o3.x - u.x, u.y = u.y + o3.y - u.y, u.rotation = n2, xe(), Te(), $e(e4), M.update();
          });
          var it = true;
          H = z ? "none" : "move", ke.drag({ overCursor: H, dragCursor: H, onTop: false }), ke.controlType = "move", z && (ke.on("mouseover", function(e4) {
            if (Ue || !z || !it)
              return;
            oe.addTo(Z2).pos({ x: e4.stageX / To.scaX, y: e4.stageY / To.scaY, reg: true }), M.update(), Ne && M.off("stagemousemove", Ne);
            Ne = M.on("stagemousemove", function(e5) {
              oe.x = e5.stageX / To.scaX, oe.y = e5.stageY / To.scaY, M.update();
            });
          }), ke.on("mouseout", function() {
            if (M.off("stagemousemove", Ne), Ue)
              return;
            oe.removeFrom(Z2), M.update();
          })), ke.on("mousedown", nt), ke.on("pressmove", function(e4) {
            var t3;
            u.transformControls.visible && (t3 = G == M ? new To.Point(ke.x, ke.y) : G.globalToLocal(ke.x, ke.y), u.x = t3.x, u.y = t3.y, xe(), u.transformControls.events && et(e4, "move"));
          }), ke.on("pressup", function(e4) {
            u.transformControls.visible && $e(e4);
          });
          var at, lt = M.on("stagemouseup", function() {
            Ue = false, ke.mouseEnabled = true, it || (Ve = new createjs.Event("transformed"), u.x != at.x || u.y != at.y ? Ve.transformType = "move" : Ve.transformType = "select", Ve.pressup = true, u.dispatchEvent(Ve)), it = true, ke.visible = true, qe && !B.ctrlKey && 1 < w && (u.rotation = Math.round(u.rotation / w) * w, xe()), Te(), ke.mouseEnabled = true, qe = false, M.update();
          });
          function st() {
            at = { x: u.x, y: u.y, rotation: u.rotation, regX: u.regX, regY: u.regY, scaleX: u.scaleX, scaleY: u.scaleY };
          }
          st();
          var ct, ut = u.on("mousedown", st);
          Z2.on("mousedown", st);
          Z2.addChild(j), t2 && Z2.addChild(ke), n && Z2.addChild(ie), e3 && Z2.addChild(ae), o2 && Z2.addChild(le), r2 && Z2.addChild(se), Z2.addChild(_), t2 && (u.drag({ overCursor: "pointer", dragCursor: "pointer", onTop: false, removeTweens: false }), ct = u.on("pressmove", function(e4) {
            xe(), Te(), Ce(), u.transformControls.events && et(e4, "move");
          }));
          var dt = i2;
          return u.transformControls = { visible: a, events: x2, ghost: !zot(k), ghostEnabled: !zot(k), show: function() {
            return l && nt(), rt(), u.toggled = true, u.transformControls.visible = true, L.parent && L.removeFrom(), M.update(), u;
          }, hide: function() {
            var e4;
            return u.transformControls.ghost && (e4 = M.getChildIndex(Z2)), M.removeChild(Z2), u.transformControls.ghost && u.transformControls.ghostEnabled && M.addChildAt(L, e4), u.toggled = false, u.transformControls.visible = false, z && (He && M.off("stagemousemove", He), Ne && M.off("stagemousemove", Ne), Ue = false, Ze.removeFrom(M), Ge2.removeFrom(M)), t2 || (u.cursor = Qe), M.update(), u;
          }, remove: function(e4) {
            e4 || u.transformControls.hide(), i2 = false, t2 && (u.noDrag(), u.off("pressmove", ct));
          }, add: function(e4) {
            e4 || u.transformControls.show(), i2 = dt, t2 && (u.drag({ overCursor: "pointer", dragCursor: "pointer", onTop: false, removeTweens: false }), ct = u.on("pressmove", ct));
          }, allowToggleOn: function() {
            i2 = dt = true, Ae = Z2.on("mousedown", Ae), Pe = u.on("mousedown", Pe), Fe = M.on("stagemousedown", Fe);
          }, allowToggleOff: function() {
            i2 = dt = false, Z2.off("mousedown", Ae), u.off("mousedown", Pe), M.off("stagemousedown", Fe);
          }, disable: function() {
            Z2.mouseChildren = false, Z2.mouseEnabled = false, t2 && (u.noDrag(), u.off("pressmove", ct));
          }, enable: function() {
            Z2.mouseChildren = true, Z2.mouseEnabled = true, t2 && (u.drag({ overCursor: "pointer", dragCursor: "pointer", onTop: false, removeTweens: false }), ct = u.on("pressmove", ct));
          }, recordData: function(e4) {
            var t3 = { type: u.type, index: G.getChildIndex(u), x: u.x, y: u.y, scaleX: u.scaleX, scaleY: u.scaleY, rotation: u.rotation, skewX: u.skewX, skewY: u.skewY, regX: u.regX, regY: u.regY, controls: u.transformControls.visible };
            return e4 ? JSON.stringify(t3) : t3;
          }, setData: function(e4, t3) {
            if (!zot(e4)) {
              t3 && (e4 = JSON.parse(e4));
              e4.controls;
              delete e4.controls;
              var o3, n2 = e4.index;
              for (o3 in zot(n2) && (n2 = 0), delete e4.index, e4)
                u[o3] = e4[o3];
              return setTimeout(function() {
                xe(), Te(), Ce(), G.setChildIndex(u, n2), u.transformControls.visible && u.type != "Layer" ? u.transformControls.show() : u.transformControls.hide(), !u.transformControls.ghost || u.transformControls.ghostEnabled || u.transformControls.visible || M.addChild(L);
              }, 90), u;
            }
          }, hideGhost: function() {
            u.transformControls.ghost = false, L.removeFrom();
          }, showGhost: function() {
            if (u.transformControls.ghost = true, u.transformControls.ghostEnabled && !u.transformControls.visible) {
              for (var e4 = G; e4.parent && e4.parent != M; )
                e4 = e4.parent;
              L.stage ? M.setChildIndex(L, M.getChildIndex(e4) + 1) : M.addChildAt(L, M.getChildIndex(e4) + 1);
            }
          }, addGhost: function() {
            0 < T2 ? (u.transformControls.ghostEnabled = true, u.transformControls.showGhost()) : zon && zogy("transform() - ghostWidth must be > 0 when making transform");
          }, removeGhost: function() {
            u.transformControls.ghostEnabled = false, u.transformControls.hideGhost();
          }, resize: function(e4) {
            return G = u.parent, xe(), Te(), Ce(), a && u.transformControls.show(), e4 && ((e4 = new createjs.Event("transformed")).pressup = true, e4.transformType = "resize", u.dispatchEvent(e4)), u;
          }, dispose: function() {
            u.transformControls.hide(), i2 = false, t2 && (u.noDrag(), u.off("pressmove", ct)), u.transformControls.hideGhost(), ke.removeAllEventListeners(), se.removeAllEventListeners(), _.removeAllEventListeners(), ae.removeAllEventListeners(), le.removeAllEventListeners(), ie.removeAllEventListeners(), Z2.removeAllEventListeners(), Pe && u.off("mousedown", Pe), Ae && u.off("mousedown", Ae), Fe && M.off("stagemousedown", Fe), He && M.off("stagemousemove", He), Ne && M.off("stagemousemove", Ne), lt && M.off("stagemouseup", lt), ut && u.off("mousedown", ut), ct && u.off("pressmove", ct), Z2 = Ze = Ge2 = null, u.transformControls = null;
          }, controls: Z2, scaleControls: ie, stretchXControls: ae, stretchYControls: le, rotateControls: se }, u.toggle = function(e4) {
            return e4 !== true && (e4 === false || u.transformControls.visible) ? u.transformControls.hide() : u.transformControls.show(), u;
          }, u.transformControls.ghost && (u.transformControls.toggleGhost = function(e4) {
            return e4 !== true && (e4 === false || u.transformControls.visible) ? u.transformControls.hideGhost() : u.transformControls.showGhost(), u;
          }), a ? u.transformControls.show() : !P && u.transformControls.ghost && u.transformControls.showGhost(), u;
        }, To.gesture = function(g, e3, t2, n, o2, p, f3, r2, i2, a, l, m2, s5, c2, u, d) {
          var h2, z, y, b;
          if (x2 = zob(To.gesture, arguments, "obj, move, scale, rotate, boundary, minScale, maxScale, snapRotate, localBounds, slide, slideEffect, regControl, onTop, surround, circularBounds, rect"))
            return x2;
          if (z_d("34.5"), !zot(g) && g.on) {
            zot(e3) && (e3 = true), zot(t2) && (t2 = true), zot(n) && (n = true), zot(i2) && (i2 = false), zot(r2) && (r2 = 1), zot(a) && (a = false), zot(l) && (l = 5), zot(m2) && (m2 = false), zot(s5) && (s5 = true), zot(c2) && (c2 = false), c2 && n && (c2 = d = null, zon && zogy("gesture() - does not support surround when rotate is true")), zot(u) && (u = false), zot(o2) && !zot(d) && (o2 = d);
            var v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M = Ao();
            return zot(g.zimMaskDynamic) || g.zimMaskApply(), g.zimTouch || (v = new To.Damp(g.scaleX, 0.05), w = new To.Damp(g.scaleY, 0.05), C = g.scaleX / g.scaleY, g.zimTouch = { move: e3, scale: t2, rotate: n, pointers: {}, checkBounds: function(e4, t3) {
              var o3, n2;
              return g.zimTouch.boundary && (o3 = g.zimTouch.boundary, n2 = g.parent.localToLocal(e4, t3, g.parent), t3 = c2 ? (e4 = Math.min(o3.x, Math.max(o3.x + o3.width, n2.x)), Math.min(o3.y, Math.max(o3.y + o3.height, n2.y))) : (e4 = Math.max(o3.x, Math.min(o3.x + o3.width, n2.x)), Math.max(o3.y, Math.min(o3.y + o3.height, n2.y))), e4 = (n2 = g.parent.globalToLocal(e4, t3)).x, t3 = n2.y), { x: e4, y: t3 };
            } }, o2 && (g.zimTouch.boundary = o2, i2 && (g.zimTouch.boundary = To.boundsToGlobal(g.parent, o2)), g.zimTouch.boundaryStartX = g.zimTouch.boundary.x, g.zimTouch.boundaryStartY = g.zimTouch.boundary.y, g.zimTouch.boundaryStartW = g.zimTouch.boundary.width, g.zimTouch.boundaryStartH = g.zimTouch.boundary.height, x2 = g.zimTouch.checkBounds(g.x, g.y), g.x = x2.x, g.y = x2.y), a && (y = 10, b = 5, z = 0, h2 = [], g.zimTouch.slideInterval = To.interval(y / (M == "s" ? 1e3 : 1), function() {
              h2[z++ % b] = [g.x, g.y];
            }), g.zimTouch.slideInterval.pause(), g.animate({ x: g.x, y: g.y }, 10 / (M == "s" ? 1e3 : 1), "quadOut")), g.zimTouch.mousedown = g.on("mousedown", function(e4) {
              zot(I2) ? I2 = 1 : I2++;
              g.stage;
              s5 && (t3 = g.parent.numChildren - 1, g.parent.getChildAt(t3).type == "Keyboard" && t3--, g.parent.setChildIndex(g, t3), g.ZIMoutlineShape && g.outline()), m2 || (E = null, T2 = g.scaleX, A3 = g.scaleY, P = g.rotation, B = g.regX, S2 = g.regY, g.reg(0, 0), k = g.getMatrix(), g.regX = B, g.regY = S2);
              var t3 = "id" + Math.abs(e4.pointerID + 1), e4 = g.parent.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY);
              g.zimTouch.pointers[t3] = { startX: e4.x, startY: e4.y, x: e4.x, y: e4.y }, (g.zimTouch.move || g.zimTouch.rotate) && (g.zimTouch.total = 0, To.loop(g.zimTouch.pointers, function(e5) {
                g.zimTouch.total++;
              })), a && g.zimTouch.total == 1 && g.zimTouch.slideInterval.pause(false), O();
            }), g.zimTouch.pressmove = g.on("pressmove", function(e4) {
              g.stage;
              var t3 = "id" + Math.abs(e4.pointerID + 1), o3 = g.parent.globalToLocal(e4.stageX / To.scaX, e4.stageY / To.scaY);
              g.zimTouch.pointers[t3] && (g.zimTouch.pointers[t3].x = o3.x, g.zimTouch.pointers[t3].y = o3.y);
              var n2, r3, i3 = 0, a2 = 0, l2 = 0, s6 = 0;
              To.loop(g.zimTouch.pointers, function(e5, t4) {
                i3 += t4.x - t4.startX, a2 += t4.y - t4.startY, l2 += t4.x, s6 += t4.y;
              }), n2 = i3 / g.zimTouch.total, r3 = a2 / g.zimTouch.total, i3 = g.zimTouch.startX + n2, a2 = g.zimTouch.startY + r3, l2 /= g.zimTouch.total, s6 /= g.zimTouch.total;
              var c3, u2, d2, h3 = { x: g.x, y: g.y, scaleX: g.scaleX, scaleY: g.scaleY, rotation: g.rotation };
              g.zimTouch.move && (u2 = g.zimTouch.checkBounds(i3, a2), h3.x = u2.x, h3.y = u2.y), g.zimTouch.pair.length == 2 ? (c3 = g.zimTouch.pair[0], e4 = g.zimTouch.pair[1], g.zimTouch.scale && (t3 = Math.sqrt(Math.pow(e4.startX - c3.startX, 2) + Math.pow(e4.startY - c3.startY, 2)), o3 = Math.sqrt(Math.pow(e4.x - c3.x, 2) + Math.pow(e4.y - c3.y, 2)), u2 = g.zimTouch.startSX + (o3 / t3 - 1), o3 = g.zimTouch.startSY + (o3 / t3 - 1), h3.scaleX = u2, h3.scaleY = o3, h3.scaleX = v.convert(u2), h3.scaleY = w.convert(o3), t3 = !zot(p) && Math.min(u2, o3) < p, o3 = !zot(f3) && Math.max(u2, o3) > f3, (t3 || o3) && (t3 ? 1 < C ? (h3.scaleY = p, h3.scaleX = p * C) : (h3.scaleX = p, h3.scaleY = p / C) : o3 && (1 < C ? (h3.scaleX = f3, h3.scaleY = f3 / C) : (h3.scaleY = f3, h3.scaleX = f3 * C)), v.immediate(h3.scaleX), w.immediate(h3.scaleY))), g.zimTouch.rotate && (d2 = Math.atan2(c3.startY - e4.startY, c3.startX - e4.startX) * (180 / Math.PI), d2 = Math.atan2(c3.y - e4.y, c3.x - e4.x) * (180 / Math.PI) - d2, h3.rotation = g.zimTouch.startR + d2), m2 ? (g.scaleX = h3.scaleX, g.scaleY = h3.scaleY, g.rotation = h3.rotation, g.zimTouch.move && (g.x = h3.x, g.y = h3.y)) : (g.reg(0, 0), d2 = g.parent.localToGlobal(l2, s6), l2 = d2.x, s6 = d2.y, d2 = zot(E) ? g.globalToLocal(l2, s6) : g.globalToLocal(E.x, E.y), k.clone().translate(d2.x, d2.y).rotate(h3.rotation - P).scale(h3.scaleX / T2, h3.scaleY / A3).translate(-d2.x, -d2.y).decompose(g), g.zimTouch.move && (g.x += n2, g.y += r3), E = g.localToGlobal(d2.x, d2.y), g.reg(B, S2)), g.zimTouch.scale && g.dispatchEvent("scale"), g.zimTouch.rotate && g.dispatchEvent("rotate")) : (g.x = h3.x, g.y = h3.y), g.zimTouch.move && g.dispatchEvent("move"), g.type != "Tag" && g.type != "TextArea" && g.type != "Loader" || g.resize(), g.ZIMoutlineShape && g.outline(), g.getStage && g.stage && g.stage.update();
            }), g.on("mousedown", function() {
              var e4 = 1;
              g.stage.on("stagemousedown", function() {
                e4++;
              }), g.stage.on("stagemouseup", function() {
                --e4 == 0 && setTimeout(function() {
                  g.zimTouch && (g.zimTouch.total = 0), g.zimTouch && (g.zimTouch.pointers = {}), I2 = null;
                }, 50);
              });
            }, null, true), g.zimTouch.pressup = g.on("pressup", function(e4) {
              var t3, o3 = "id" + Math.abs(e4.pointerID + 1);
              delete g.zimTouch.pointers[o3], (g.zimTouch.move || g.zimTouch.rotate) && g.zimTouch.total--, n && !zot(r2) && g.zimTouch.total == 0 && (0 < r2 ? g.rotation = Math.round(g.rotation / r2) * r2 : r2 == 0 && (g.rotation = Math.round(g.rotation))), a && g.zimTouch.total == 0 && I2 == 1 && (g.zimTouch.slideInterval.pause(), t3 = h2[(z + 1) % h2.length], e4 = h2[z % h2.length], o3 = g.x + (t3[0] - e4[0]) * l, t3 = g.y + (t3[1] - e4[1]) * l, e4 = g.zimTouch.checkBounds(o3, t3), t3 = b * y * l * Math.min((g.x - e4.x) / (g.x - o3) || 1, (g.y - e4.y) / (g.y - t3) || 1), g.animate({ x: e4.x, y: e4.y }, t3 / (M == "s" ? 1e3 : 1), "quadOut", function() {
                g.dispatchEvent("slidestop");
              })), g.zimTouch.total == 0 && (I2 = null), g.getStage && g.stage && g.stage.update(), O();
            }), o2 && (j(), g.on("move", j))), g;
          }
          function O() {
            g.zimTouch.pair = [], To.loop(g.zimTouch.pointers, function(e4, t3, o3) {
              t3.startX = t3.x, t3.startY = t3.y, o3 <= 1 && g.zimTouch.pair.push(t3);
            }), g.zimTouch.startX = g.x, g.zimTouch.startY = g.y, g.zimTouch.startSX = g.scaleX, g.zimTouch.startSY = g.scaleY, g.zimTouch.startR = g.rotation;
          }
          function j() {
            var e4, t3 = g.localToGlobal(g.regX, g.regY);
            o3 = u ? (o3 = g.parent.localToGlobal(g.x - g.width / 2, g.y - g.height / 2), e4 = g.parent.localToGlobal(g.x + g.width / 2, g.y + g.height / 2), { x: o3.x, y: o3.y, width: e4.x - o3.x, height: e4.y - o3.y }) : g.boundsToGlobal();
            var o3 = { x: g.zimTouch.boundaryStartX + t3.x - o3.x, y: g.zimTouch.boundaryStartY + t3.y - o3.y, width: g.zimTouch.boundaryStartW - o3.width, height: g.zimTouch.boundaryStartH - o3.height };
            g.gestureBoundary(o3, false);
          }
        }, To.noGesture = function(e3, t2, o2, n) {
          var r2;
          return (r2 = zob(To.noGesture, arguments, "obj, move, scale, rotate")) ? r2 : (z_d("34.6"), !zot(e3) && e3.on && e3.zimTouch ? (zot(t2) && (t2 = true), zot(o2) && (o2 = true), zot(n) && (n = true), e3.zimTouch.move = !t2, e3.zimTouch.scale = !o2, e3.zimTouch.rotate = !n, e3.zimTouch.move || e3.zimTouch.scale || e3.zimTouch.rotate || (e3.off("mousedown", e3.zimTouch.mousedown), e3.off("pressmove", e3.zimTouch.pressmove), e3.off("pressup", e3.zimTouch.pressup), delete e3.zimTouch), e3) : void 0);
        }, To.gestureBoundary = function(e3, t2, o2) {
          if (z_d("34.7"), !zot(e3) && e3.on && !zot(t2) && e3.zimTouch) {
            e3.zimTouch.localBounds && e3.parent ? e3.zimTouch.boundary = To.boundsToGlobal(e3.parent, t2) : e3.zimTouch.boundary = t2, zot(o2) && (o2 = true), o2 && (e3.zimTouch.boundaryStartX = t2.x, e3.zimTouch.boundaryStartY = t2.y, e3.zimTouch.boundaryStartW = t2.width, e3.zimTouch.boundaryStartH = t2.height);
            t2 = e3.zimTouch.checkBounds(e3.x, e3.y);
            return e3.x = t2.x, e3.y = t2.y, e3;
          }
        }, To.effect = function(e3, t2, o2, n, r2, i2) {
          if (z_d("33.16"), zot(t2))
            return e3;
          zot(e3.effects) && (e3.effects = {}), Array.isArray(t2) || (t2 = [t2]);
          for (var a, l = 0, s5 = 0; s5 < t2.length; s5++) {
            var c2 = t2[s5];
            c2.type || (c2 instanceof createjs.BlurFilter ? c2.type = "BlurEffect" : c2 instanceof createjs.ColorFilter ? c2.type = "ColorEffect" : c2 instanceof createjs.AlphaMaskFilter ? c2.type = "AlphaEffect" : c2 instanceof createjs.ColorMatrixFilter ? c2.type = "MultiEffect" : zot(c2.type) && (c2.type = "custom" + l++));
            var u = c2.type.replace(/effect/i, "");
            e3.effects[u.toLowerCase()] = c2;
          }
          for (a in e3.filters = [], e3.effects)
            e3.filters.push(e3.effects[a]);
          return e3.cache(o2, n, r2, i2), e3;
        }, To.updateEffects = function(e3, t2) {
          return z_d("33.163"), e3.updateCache && (t2 ? e3.cache() : e3.updateCache()), e3;
        }, To.noEffect = function(e3, t2, o2) {
          if (z_d("33.165"), zot(o2) && (o2 = false), zot(t2)) {
            var n;
            e3.effects.multi && (n = e3.effects.multi), e3.effects = {}, n && (e3.effects.multi = n);
          } else {
            e3.effects || (e3.effects = {}), Array.isArray(t2) || (t2 = [t2]);
            for (var r2 = 0; r2 < t2.length; r2++) {
              var i2 = t2[r2].replace(/effect/i, "");
              delete e3.effects[i2.toLowerCase()];
            }
          }
          for (var a in e3.filters = [], e3.effects)
            e3.filters.push(e3.effects[a]);
          return o2 || 0 < e3.filters.length ? e3.updateCache && e3.updateCache() : e3.uncache && e3.uncache(), e3;
        }, To.addPhysics = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2) {
          if (C = zob(To.addPhysics, arguments, "obj, dynamic, contract, shape, friction, linear, angular, density, bounciness, maskBits, categoryBits, physics, restitution"))
            return C;
          if (z_d("34.8"), zot(d)) {
            if (typeof zimPhysics == "undefined")
              return zon && zog("ZIM Physics module must be imported"), e3;
            zot(zimDefaultPhysics) && (zimDefaultPhysics = new To.Physics()), d = zimDefaultPhysics;
          }
          e3.physics = d;
          var g, p, f3, m2, z, y, b, v, w, C, x2 = "rectangle";
          function k() {
            zimContactListener = new b2ContactListener(), T = new To.Dictionary(true), A2 = new To.Dictionary(true), zimContactListener.BeginContact = function(e4) {
              var t3 = T.at(e4.m_fixtureB.GetBody());
              t3 && t3(e4.m_fixtureA.GetBody().zimObj, e4.m_fixtureA.GetBody());
              (t3 = T.at(e4.m_fixtureA.GetBody())) && t3(e4.m_fixtureB.GetBody().zimObj, e4.m_fixtureB.GetBody());
            }, zimContactListener.EndContact = function(e4) {
              var t3 = A2.at(e4.m_fixtureB.GetBody());
              t3 && t3(e4.m_fixtureA.GetBody().zimObj, e4.m_fixtureA.GetBody());
              (t3 = A2.at(e4.m_fixtureB.GetBody().zimObj, e4.m_fixtureB.GetBody())) && t3(e4.m_fixtureB.GetBody());
            }, g.physics.world.SetContactListener(zimContactListener);
          }
          return e3.type == "Circle" || e3.type == "Dial" ? x2 = "circle" : e3.type == "Triangle" && (x2 = "triangle"), zot(n) && (n = x2), zot(s5) && (s5 = h2), g = e3, p = t2, f3 = o2, m2 = n, z = r2, y = i2, b = a, v = l, w = s5, C = c2, x2 = u, z_d("69.97"), zot(f3) && (f3 = 0), m2 == "rectangle" ? g.body = g.physics.makeRectangle(g.width - f3, g.height - f3, p, z, b, v, w, C, x2, y) : m2 == "circle" ? g.body = g.physics.makeCircle(g.width / 2 - f3, p, z, b, v, w, C, x2, y) : m2 == "triangle" && (zot(g.a) && (g.a = g.width, g.b = g.c = Math.sqrt(Math.pow(g.a / 2, 2) + Math.pow(g.height, 2))), g.body = g.physics.makeTriangle(g.a - f3, g.b - f3, g.c - f3, p, z, b, v, w, C, x2, y)), g.body.x = g.x, g.body.y = g.y, g.body.rotation = g.rotation, g.physics.addMap(g.body, g), g.impulse = function(e4, t3, o3, n2) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0);
            var r3 = g.body.GetWorldCenter();
            return zot(o3) && (o3 = r3.x * g.physics.scale), zot(n2) && (n2 = r3.y * g.physics.scale), g.body.ApplyImpulse(new b2Vec2(e4, t3), new b2Vec2(o3 / g.physics.scale, n2 / g.physics.scale)), g;
          }, g.force = function(e4, t3, o3, n2) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0);
            var r3 = g.body.GetWorldCenter();
            return zot(o3) && (o3 = r3.x * g.physics.scale), zot(n2) && (n2 = r3.y * g.physics.scale), g.body.ApplyForce(new b2Vec2(e4, t3), new b2Vec2(o3 / g.physics.scale, n2 / g.physics.scale)), g;
          }, g.setLinearVelocity = function(e4, t3) {
            return g.body.SetLinearVelocity(new b2Vec2(e4, t3)), g;
          }, g.setAngularVelocity = function(e4) {
            return g.body.SetAngularVelocity(e4), g;
          }, g.spin = function(e4) {
            return zot(e4) && (e4 = 10), g.body.ApplyTorque(1e3 * e4), g;
          }, g.torque = function(e4) {
            return zot(e4) && (e4 = 10), g.body.ApplyTorque(e4), g;
          }, g.follow = function(e4, t3, o3, n2, r3, i3, a2, l2, s6, c3, u2, d2) {
            var h3;
            return (h3 = zob(g.follow, arguments, "damp, dampY, leftOffset, rightOffset, upOffset, downOffset, offsetDamp, offsetDampY, horizontal, vertical, borderLock, borderOriginal")) ? h3 : (g.physics.follow(g, e4, t3, o3, n2, r3, i3, a2, l2, s6, c3, u2, d2), g);
          }, g.noFollow = function() {
            return g.physics.follow(null), g;
          }, g.control = function(e4, t3, o3, n2, r3) {
            var i3;
            return (i3 = zob(g.control, arguments, "type, speed, speedY, horizontal, vertical")) ? i3 : (g.physics.control(g, e4, t3, o3, n2, r3), g);
          }, g.noControl = function() {
            return g.physics.noControl(g), g;
          }, g.sleep = function() {
            return zog(g.body), g.body.SetAwake(false), g;
          }, g.wake = function() {
            return g.body.SetAwake(true), g;
          }, g.contact = function(e4) {
            return zimContactListener || k(), T.add(g.body, e4), g;
          }, g.noContact = function() {
            return T.remove(g.body), g;
          }, g.contactEnd = function(e4) {
            return zimContactListener || k(), A2.add(g.body, e4), g;
          }, g.noContactEnd = function() {
            return A2.remove(g.body), g;
          }, Object.defineProperty(g, "dynamic", { get: function() {
            return g.body.GetType() == 2;
          }, set: function(e4) {
            g.body.SetType(e4 == 1 ? 2 : 0);
          } }), e3;
        }, To.removePhysics = function(e3) {
          return z_d("34.85"), zot(e3.physics) || (e3 == e3.physics.followObj && e3.physics.follow(null), e3.follow = e3.noFollow = e3.control = e3.noControl = e3.sleep = e3.wake = null, e3.impulse = e3.force = e3.spin = e3.torque = null, e3.physics.remove(e3.body), e3.physics = null), e3;
        }, To.hitTestPoint = function(e3, t2, o2, n) {
          if (To.zimhtp || (z_d("35"), To.zimhtp = true), !e3.stage || zot(t2) || zot(o2))
            return false;
          e3.stage;
          if (!zot(e3) && e3.globalToLocal) {
            if (zot(n) && (n = true), n) {
              var r2 = e3.getBounds();
              if (r2) {
                n = e3.globalToLocal(t2, o2);
                if (n.x > r2.x + r2.width || n.x < r2.x)
                  return false;
                if (n.y > r2.y + r2.height || n.y < r2.y)
                  return false;
              }
            }
            o2 = { x: t2, y: o2 }, o2 = e3.image || e3.spriteSheet || e3.type == "Shape" ? e3.globalToLocal(o2.x, o2.y) : e3.globalToLocal(o2.x * To.scaX, o2.y * To.scaY);
            return e3.hitTest(o2.x, o2.y);
          }
        }, To.hitTestReg = function(e3, t2, o2) {
          if (To.zimhtr || (z_d("36"), To.zimhtr = true), !e3.stage || !t2.stage)
            return false;
          e3.stage;
          if (!zot(e3) && !zot(t2) && e3.localToLocal && t2.localToLocal) {
            zot(o2) && (o2 = true);
            var n = t2.localToGlobal(t2.regX, t2.regY), t2 = e3.getBounds();
            if (o2 && t2) {
              o2 = e3.globalToLocal(n.x, n.y);
              if (o2.x > t2.x + t2.width || o2.x < t2.x)
                return false;
              if (o2.y > t2.y + t2.height || o2.y < t2.y)
                return false;
            }
            return n = e3.image || e3.spriteSheet || e3.type == "Shape" ? e3.globalToLocal(n.x, n.y) : e3.globalToLocal(n.x * To.scaX, n.y * To.scaY), e3.hitTest(n.x, n.y);
          }
        }, To.hitTestRect = function(t2, e3, o2, n) {
          if (To.zimhtr || (z_d("37"), To.zimhtr = true), !t2.stage || !e3.stage)
            return false;
          t2.stage;
          if (!zot(t2) && !zot(e3) && t2.hitTest && e3.getBounds) {
            zot(o2) && (o2 = 0), zot(n) && (n = true);
            var r2 = e3.getBounds();
            if (r2) {
              if (n) {
                if (t2.getBounds() && !To.hitTestBounds(t2, e3))
                  return false;
              }
              var i2, a, l = r2.x + r2.width / 2, n = r2.y + r2.height / 2, s5 = e3.localToGlobal(l, n);
              if (u(s5))
                return true;
              for (var c2 = 0; c2 <= o2; c2++) {
                if (i2 = r2.width * (c2 + 1) / (o2 + 1), a = r2.height * (c2 + 1) / (o2 + 1), u(e3.localToGlobal(r2.x + i2, r2.y)))
                  return true;
                if (u(e3.localToGlobal(r2.x + r2.width, r2.y + a)))
                  return true;
                if (u(e3.localToGlobal(r2.x + r2.width - i2, r2.y + r2.height)))
                  return true;
                if (u(e3.localToGlobal(r2.x, r2.y + r2.height - a)))
                  return true;
              }
            } else
              zon && zogy("hitTestRect():\n please setBounds() on param b object");
          }
          function u(e4) {
            return e4 = t2.image || t2.spriteSheet || t2.type == "Shape" ? t2.globalToLocal(e4.x, e4.y) : t2.globalToLocal(e4.x * To.scaX, e4.y * To.scaY), t2.hitTest(e4.x, e4.y) ? 1 : void 0;
          }
        }, To.hitTestCircle = function(t2, e3, o2, n) {
          if (To.zimhtc || (z_d("38"), To.zimhtr = true), z_d("38"), t2.stage && e3.stage) {
            t2.stage;
            if (!zot(t2) && !zot(e3) && t2.hitTest && e3.getBounds) {
              zot(o2) && (o2 = 8), zot(n) && (n = true);
              var r2 = e3.getBounds();
              if (r2) {
                var i2 = t2.getBounds();
                if (n && i2 && !To.hitTestBounds(t2, e3))
                  return false;
                var a = r2.x + r2.width / 2, l = r2.y + r2.height / 2, s5 = e3.localToGlobal(a, l);
                if (g(s5))
                  return true;
                for (var c2, u, d = (r2.width + r2.height) / 2 / 2, h2 = 0; h2 < o2; h2++)
                  if (u = h2 / o2 * 2 * Math.PI, c2 = a + d * Math.cos(u), u = l + d * Math.sin(u), g(e3.localToGlobal(c2, u)))
                    return true;
                return false;
              }
              zon && zogy("hitTestCircle():\n please setBounds() on param b object");
            }
          }
          function g(e4) {
            return e4 = t2.image || t2.spriteSheet || t2.type == "Shape" ? t2.globalToLocal(e4.x, e4.y) : t2.globalToLocal(e4.x * To.scaX, e4.y * To.scaY), t2.hitTest(e4.x, e4.y) ? 1 : void 0;
          }
        }, To.hitTestCircleRect = function(e3, t2, o2) {
          if (To.zimhtcr || (z_d("38.2"), To.zimhtcr = true), e3.stage && t2.stage) {
            var n = e3.stage;
            if (!zot(e3) && !zot(t2) && e3.getBounds && t2.getBounds) {
              var r2 = e3.getBounds(), i2 = t2.getBounds();
              if (r2 && i2) {
                zot(o2) && (o2 = 0);
                var a = (e3.radius || (r2.width + r2.height) / 2) + o2;
                a *= e3.getConcatenatedMatrix().decompose().scaleX / n.scaleX;
                i2 = t2.boundsToGlobal(), r2 = e3.localToGlobal(0, 0), o2 = r2.x, n = r2.y, t2 = i2.x, e3 = i2.y, r2 = i2.x + i2.width, i2 = i2.y + i2.height, o2 = (o2 < t2 ? t2 : r2 < o2 ? r2 : o2) - o2, n = (n < e3 ? e3 : i2 < n ? i2 : n) - n;
                return o2 * o2 + n * n <= a * a;
              }
              zon && zogy("hitTestCircleRect():\n please setBounds() on both objects");
            }
          }
        }, To.hitTestCircles = function(e3, t2, o2) {
          if (To.zimhtcs || (z_d("38.5"), To.zimhtcs = true), e3.stage && t2.stage) {
            var n = e3.stage;
            if (!zot(e3) && !zot(t2) && e3.hitTest && e3.getBounds && t2.getBounds) {
              var r2 = e3.getBounds(), i2 = t2.getBounds();
              if (r2 && i2) {
                zot(o2) && (o2 = 0);
                var a = e3.localToGlobal(r2.x + r2.width / 2, r2.y + r2.height / 2), l = t2.localToGlobal(i2.x + i2.width / 2, i2.y + i2.height / 2), s5 = e3.getConcatenatedMatrix(), c2 = t2.getConcatenatedMatrix(), e3 = Math.sqrt(s5.a / n.scaleX * s5.a / n.scaleX + s5.c / n.scaleX * s5.c / n.scaleX), t2 = Math.sqrt(s5.b / n.scaleY * s5.b / n.scaleY + s5.d / n.scaleY * s5.d / n.scaleY), s5 = Math.sqrt(c2.a / n.scaleX * c2.a / n.scaleX + c2.c / n.scaleX * c2.c / n.scaleX), n = Math.sqrt(c2.b / n.scaleY * c2.b / n.scaleY + c2.d / n.scaleY * c2.d / n.scaleY), l = Math.sqrt(Math.abs(Math.pow(a.x - l.x, 2) + Math.pow(a.y - l.y, 2)));
                return r2.width * Math.max(e3, t2) / 2 + i2.width * Math.max(s5, n) / 2 >= l - o2;
              }
              zon && zogy("hitTestCircles():\n please setBounds() on both objects");
            }
          }
        }, To.hitTestBounds = function(e3, t2, o2, n) {
          if (To.zimhtb || (z_d("39"), To.zimhtb = true), e3.stage && t2.stage && !zot(e3) && !zot(t2) && e3.getBounds && t2.getBounds) {
            var r2 = false;
            n && n.graphics && (r2 = true);
            var i2 = e3.getBounds(), a = t2.getBounds();
            if (i2 && a) {
              zot(o2) && (o2 = 0);
              e3 = To.boundsToGlobal(e3), t2 = To.boundsToGlobal(t2);
              return r2 && ((r2 = n.graphics).c(), r2.ss(1).s("blue"), r2.r(e3.x, e3.y, e3.width, e3.height), r2.s("green"), r2.r(t2.x, t2.y, t2.width, t2.height), n.stage.update()), To.rectIntersect(e3, t2, o2);
            }
            zon && zogy("hitTestBounds():\n please setBounds() on both objects");
          }
        }, To.hitTestPath = function(e3, t2, o2, n) {
          if (To.zimhtpa || (z_d("37.5"), To.zimhtpa = true), e3.stage && t2.stage) {
            e3.stage;
            if (!zot(e3) && !zot(t2) && e3.hitTest && (t2.type == "Squiggle" || t2.type == "Blob")) {
              var r2 = e3.getBounds();
              zot(o2) && (o2 = 2), zot(n) && (n = false);
              var i2 = t2.interpolate(o2, null, true, null, true);
              if (n) {
                t2.hitPathPoints ? t2.hitPathPoints.removeAllChildren() : t2.hitPathPoints = new To.Container().addTo(), t2.hitPathPoints.top();
                for (var a = 0; a < i2.length; a++) {
                  var l = i2[a];
                  l = t2.localToGlobal(l.x, l.y), new To.Circle(3).loc(l.x, l.y, t2.hitPathPoints);
                }
              }
              if (r2) {
                n = To.boundsAroundPoints(i2);
                if (!To.rectIntersect(e3.boundsToGlobal(r2), t2.boundsToGlobal(n)))
                  return;
              }
              for (var s5, a = 0; a < i2.length; a++) {
                l = i2[a];
                if (l = t2.localToGlobal(l.x, l.y), s5 = l, s5 = e3.image || e3.spriteSheet || e3.type == "Shape" ? e3.globalToLocal(s5.x, s5.y) : e3.globalToLocal(s5.x * To.scaX, s5.y * To.scaY), e3.hitTest(s5.x, s5.y) ? 1 : void 0)
                  return true;
              }
              return false;
            }
          }
        }, To.hitTestGrid = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2) {
          if (To.zimhtg || (z_d("41"), To.zimhtg = true), !e3.stage)
            return false;
          zot(e3) || d || (i2 = (g = e3.globalToLocal(i2, a)).x, a = g.y), zot(l) && (l = 0), zot(s5) && (s5 = 0), zot(c2) && (c2 = 0), zot(u) && (u = 0);
          var g = (t2 += c2) / n, t2 = (o2 += u) / r2, o2 = Math.min(n - 1, Math.max(0, Math.floor((i2 - l + c2 / 2) / g))), r2 = Math.min(r2 - 1, Math.max(0, Math.floor((a - s5 + u / 2) / t2)));
          if (h2 != "open") {
            if (g * (o2 + 1) - c2 < i2 - l || i2 - l < g * o2)
              return;
            if (t2 * (r2 + 1) - u < a - s5 || a - s5 < t2 * r2)
              return;
          }
          n = r2 * n + o2;
          return zot(h2) || h2 == "index" ? n : h2 == "col" ? o2 : h2 == "row" ? r2 : h2 == "array" || h2 == "open" ? [n, o2, r2] : void 0;
        }, To.animate = function(c2, e3, t2, u, d, h2, a, o2, n, r2, i2, l, s5, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, D, X, R, W, F2, H, N, V, G, q, U, Q, Z2, K, J) {
          if (c2 && (c2.props || c2.obj) && ($ = zob(To.animate, arguments, "target, props, time, ease, call, params, wait, waitedCall, waitedParams, loop, loopCount, loopWait, loopCall, loopParams, loopWaitCall, loopWaitParams, loopPick, rewind, rewindWait, rewindCall, rewindParams, rewindWaitCall, rewindWaitParams, rewindTime, rewindEase, sequence, sequenceCall, sequenceParams, sequenceReverse, ticker, cjsProps, css, protect, override, from, set, id, events, sequenceTarget, dynamic, drag, clamp, startPaused, clean, obj, seriesWait, sequenceWait, rate, pauseOnBlur, easeAmount, easeFrequency, timeUnit, timeCheck")))
            return $;
          if (c2.type == "AC" && zdf)
            return zdf.ac("animate", arguments), c2;
          if (To.animateCheck || (z_d("45"), To.animateCheck = true), c2) {
            var $ = To.ANIMATE;
            if (window.ANIMATE != null && ($ = window.ANIMATE), !$)
              return c2;
            zot(J) && (J = true);
            var ee = Ao(null, K, null, null, !zot(J) && !J);
            0 < i2 && (r2 = true);
            var te = arguments, oe = Array.prototype.slice.call(arguments);
            if (zot(e3) && !zot(N) && (e3 = N), zot(N = e3))
              return zon && zog("animate() - need props"), c2;
            if (c2.type == "BeadsContainer" && zot(T2) && (T2 = 0), zot(U) && (U = true), c2.type == "Tone" && (U = false), U && (zot(To.blurCheck) && To.setBlurDetect(), To.pauseAnimateOnBlur = true), zot(T2) || !c2.addChild) {
              t2 = To.Pick.choose(t2), u = To.Pick.choose(u), a = To.Pick.choose(a), i2 = To.Pick.choose(i2), l = To.Pick.choose(l), z = To.Pick.choose(z), y = To.Pick.choose(y), x2 = zot(x2) ? t2 : To.Pick.choose(x2), B = To.Pick.choose(B), j = To.Pick.choose(j), L = To.Pick.choose(L);
              var ne = ["loopCount", "loopWait", "rewind", "rewindWait"];
              for (ue in E)
                0 <= ne.indexOf(ue) && (E[ue] = To.Pick.choose(E[ue]));
            }
            $ = { override: !zot(c2) && !zot(c2.zimX) && !zot(N.x) || !zot(c2) && !zot(c2.zimY) && !zot(N.y) };
            if (zot(r2) || ($.loop = r2), zot(i2) || ($.count = i2), zot(l) || ($.loopWait = l), zot(s5) || ($.loopCall = s5), zot(f3) || ($.loopWaitParams = f3), zot(p) || ($.loopWaitCall = p), zot(g) || ($.loopParams = g), zot(m2) || ($.loopPick = m2), zot(z) || ($.rewind = z), zot(y) || ($.rewindWait = y), zot(b) || ($.rewindCall = b), zot(v) || ($.rewindParams = v), zot(w) || ($.rewindWaitCall = w), zot(C) || ($.rewindWaitParams = C), zot(e3) || ($ = To.merge($, E)), E = $, To.loop(N, function(e4, t3) {
              var o3;
              typeof e4 == "string" && (1 < (o3 = e4.split(".")).length && e4.substr(0, 1) != "." && (N["." + e4] = t3, delete N[e4], e4 = "." + e4), 1 < o3.length && typeof t3 == "string" && ((o3 = t3.substr(0, 1)) != "+" && o3 != "-" && (N[e4] = "+" + t3)));
            }), c2.zimTweenOriginals = {}, !zot(T2) && c2.addChild) {
              for (var re = [], ie = 0; ie < c2.numChildren; ie++)
                re.push(c2.getChildAt(ie));
              D = c2, c2 = re;
            }
            var ae = ["extra", "zoom", "speed", "layer", "fade"], le = { zoom: c2.type == "Pen" ? "size" : "scale", speed: "percentSpeed", layer: "layer", fade: "alpha" };
            if (c2 instanceof Array) {
              B && c2.reverse();
              for (ie = 0; ie < c2.length; ie++) {
                var se, ce = c2[ie];
                if (j)
                  for (ue in ce.zimObj = {}, N)
                    se = 0 <= ae.indexOf(ue) ? N[ue] : To.Pick.choose(N[ue]), ce.zimObj[ue] = ce[ue], typeof se == "string" && (se = (ce.zimLastObj && !zot(ce.zimLastObj[ue]) ? ce.zimLastObj : ce)[ue] + Number(se.replace(/\s/g, ""))), ce.zimLastObj && (ce.zimLastObj[ue] = (z ? ce.zimTweenOriginals : N)[ue]), ce[ue] = se;
                else
                  for (var ue in ce.zimObj = {}, N)
                    ae.indexOf(ue), ce.zimObj[ue] = N[ue];
                var de = ie == 0 && T2 != 0 ? ee == "s" ? 0.02 : 20 : ie * T2;
                To.animate(ce, ce.zimObj, t2, u, ie == c2.length - 1 ? d : null, ie == c2.length - 1 ? h2 : null, a, o2, n, null, null, null, null, null, null, null, m2, null, null, null, null, null, null, x2, k, null, A3, P, null, S2, To.copy(E), I2, M, O, null, L, _, Y, D, X, R, W, F2, H, N, V, de, q, U, Q, Z2, K, J);
              }
              return D;
            }
            var he, ge, pe, fe = t2, me = x2;
            if (zot(fe) && (fe = ee == "s" ? 1 : 1e3), zot(x2) && (x2 = me = fe), zot(u) && (u = "quadInOut"), zot(a) && (a = 0), zot(y) && (y = 0), zot(E) && (E = { override: !zot(c2.zimX) && !zot(N.x) || !zot(c2.zimY) && !zot(N.y) }), zot(h2) && (h2 = c2), zot(S2) && (S2 = true), zot(I2) && (I2 = false), zot(M) && (M = false), zot(j) && (j = false), zot(L) && (L = {}), L.scale && (L.scaleX = L.scaleY = L.scale, delete L.scale), zot(O) || (E.override = O), zot(R) && (R = false), zot(F2) && (F2 = !!R), zot(X) && (X = false), zot(W) && (W = true), zot(H) && (H = true), zot(q) && (q = 1), c2.futureRate = q, N instanceof Array) {
              let ve2 = function() {
                c2.zimLastObj && To.loop(c2.zimLastObj, function(e5) {
                  zot(c2.zimTweenOriginals[e5]) || (c2[e5] = c2.zimTweenOriginals[e5], c2.zimLastObj[e5] = c2.zimTweenOriginals[e5]);
                });
                for (var e4, t3, o3, n2 = a, r3 = 0, i3 = 0; i3 < N.length; i3++)
                  zot((o3 = N[i3]).target) || (zot(o3.time) && (o3.time = fe), n2 += o3.wait || 0, e4 = o3.time, t3 = zot(o3.rewindTime) ? e4 : o3.rewindTime, o3.rewind && (e4 = e4 + t3 + (o3.rewindWait || 0)), o3.loop && (e4 *= o3.loopCount, e4 += (o3.loopCount - 1) * (o3.loopWait || 0)), zot(o3.params) && (o3.params = o3.target), ye = o3.target, n2 < 0 && (r3 += n2, n2 = 0), o3 = { target: o3.target, obj: To.copy(o3.obj), seriesWait: r3, wait: n2, waitedCall: o3.waitedCall, waitedParams: o3.waitedParams, time: o3.time, ease: o3.ease, from: o3.from, rewind: o3.rewind, call: o3.call, params: o3.params, loop: o3.loop, loopCount: o3.loopCount, loopWait: o3.loopWait, loopCall: o3.loopCall, loopParams: o3.loopParams, loopWaitCall: o3.loopWaitCall, loopWaitParams: o3.loopWaitParams, loopPick: o3.loopPick, rewindWait: o3.rewindWait, rewindCall: o3.rewindCall, rewindParams: o3.rewindParams, rewindWaitCall: o3.rewindWaitCall, rewindWaitParams: o3.rewindWaitParams, rewindTime: o3.rewindTime, rewindEase: o3.rewindEase, set: To.copy(o3.masterSet), events: Y, rate: c2.futureRate, pauseOnBlur: o3.pauseOnBlur, easeAmount: o3.easeAmount, easeFrequency: o3.easeFrequency, override: false, id: _ }, i3 == N.length - 1 && function(e5) {
                    var t4 = e5.call, o4 = e5.params;
                    E.loop && (!E.count || be < E.count) ? e5.call = function() {
                      function e6() {
                        for (var e7 = 0; e7 < ze.objects.length; e7++)
                          ze.objects[e7].set && ze.objects[e7].set(ze.values[e7]);
                        E.loopWaitCall && typeof E.loopWaitCall == "function" && E.loopWaitCall(E.loopWaitParams), ve2();
                      }
                      E.loopCall && typeof E.loopCall == "function" && E.loopCall(E.loopParams), E.loopWait ? (zot(c2.zimTweens) && (c2.zimTweens = {}), (he = c2.zimTweens[_] = c2.zimTween = createjs.Tween.get(c2, { override: E.override }).wait(E.loopWait, true).call(e6)).timeScale = c2.futureRate) : e6();
                    } : e5.call = function() {
                      t4 && typeof t4 == "function" && t4(o4), zot(h2) && (h2 = ye), d && typeof d == "function" && d(h2), wo(_), c2.zimLastObj = null;
                    }, be++;
                  }(o3), To.animate(o3), r3 += n2 + e4, n2 = 0);
              };
              var ve = ve2;
              var ze, ye, be = 1;
              return N.length == 0 ? this : (function() {
                c2 && !c2.seriesTweens && (c2.seriesTweens = [], c2.seriesCalls = [], c2.seriesParams = []);
                for (var e4, o3, t3 = 0; t3 < N.length; t3++)
                  (e4 = N[t3]).target ? (e4.target.seriesTweens || (e4.target.seriesTweens = []), e4.target.seriesCalls || (e4.target.seriesCalls = []), e4.target.seriesParams || (e4.target.seriesParams = []), e4.target.seriesTweens.push(e4.props), e4.target.seriesCalls.push(e4.call), e4.target.seriesParams.push(e4.params)) : (c2.seriesTweens.push(e4.props), c2.seriesCalls.push(e4.call), c2.seriesParams.push(e4.params));
                for (c2.seriesCalls.push(d), c2.seriesParams.push(h2), e4 = N[0], (o3 = c2 || e4.target).zimSeriesOriginals = {}, t3 = N.length - 1; 0 <= t3; t3--)
                  zot((e4 = N[t3]).props) && !zot(e4.obj) && (e4.props = e4.obj), e4.obj = e4.props, To.loop(e4.obj, function(e5, t4) {
                    o3.zimSeriesOriginals[e5] = e5 == "path" ? N[e5] : eo(o3, e5);
                  });
                var n2, r3, i3 = new To.Dictionary();
                for (ze = new To.Dictionary(), t3 = 0; t3 < N.length; t3++)
                  if (e4 = N[t3], c2 = c2 || e4.target, zot(e4.target) && (e4.target = c2), zot(e4.ease) && (e4.ease = u), !zot(e4.target)) {
                    t3 == 0 && (e4.target.zimSeriesArgs = te), zot(e4.props) && !zot(e4.obj) && (e4.props = e4.obj), e4.obj = e4.props, e4.loop && (zot(e4.loopCount) || e4.loopCount <= 0) && (e4.loopCount = 0, N.splice(t3 + 1, N.length)), zot(e4.obj.scale) || (e4.obj.scaleX = e4.obj.scaleY = e4.obj.scale, delete e4.obj.scale), e4.from && ((s6 = i3.at(e4.target)) ? (e4.set ? (n2 = To.copy(e4.obj), r3 = To.merge(s6, e4.set), e4.obj = ao(e4.target, e4.obj, r3), e4.set = To.merge(e4.set, n2)) : (e4.set = To.copy(e4.obj), e4.obj = ao(e4.target, e4.obj, s6)), e4.from = false) : i3.add(e4.target, ao(e4.target, e4.obj, e4.set)));
                    var a2, l2 = {};
                    for (a2 in e4.obj)
                      l2[a2] = e4.set && e4.set[a2] || e4.target[a2];
                    zot(ze.at(e4.target)) && ze.add(e4.target, {});
                    var s6 = To.merge(ze.at(e4.target), l2);
                    ze.remove(e4.target), ze.add(e4.target, s6), e4.masterSet = To.copy(e4.set);
                  }
                zot(c2.zimTweens) && (c2.zimTweens = {});
              }(), oo(), ve2(), c2);
            }
            if (N && (N.x && (c2.zimX = true), N.y && (c2.zimY = true)), !zot(N.shape) && N.shape.type == c2.type && (c2.type == "Blob" || c2.type == "Squiggle")) {
              var we = c2.pointObjects, Ce = N.shape.pointObjects;
              if (we.length != Ce.length)
                zon && zogy("animate() - shapes must be of same number of points"), delete N.shape;
              else {
                N.shape;
                delete N.shape;
                var xe = zot(N.blobShift) ? 0 : N.blobShift;
                delete N.blobShift;
                for (var ke = true, ie = 0; ie < we.length; ie++)
                  for (var Te, Ae, Pe = we[ie], Be = Ce[(2e4 * we.length + ie + xe) % we.length], Se = 0; Se < 4; Se++)
                    Se != 1 && (Te = Pe[Se], Be[Se], (Ae = To.copy(oe))[0] = Te, Ae[1] = { x: Be[Se].x, y: Be[Se].y, rotation: Be[Se].rotation }, ke && (Ae[37] = true, Te.animateEvent && Te.off("animation", Te.animateEvent), Te.animateEvent = Te.on("animation", function() {
                      c2.update();
                    })), ke = false, To.animate.apply(To.animate, Ae));
                if (To.isEmpty(N))
                  return c2;
              }
            }
            if (!zot(c2)) {
              c2.tweenStates || (c2.tweenStates = { all: true });
              var Ee, Ie, Me = false;
              if (N.note) {
                if (Array.isArray(N.note))
                  To.loop(N.note, function(e4, t3) {
                    typeof e4 == "string" && (N.note[t3] = To.Synth.note(e4));
                  });
                else if (N.note.min)
                  N.note.min = To.Synth.note(N.note.min), N.note.max = To.Synth.note(N.note.max);
                else if (N.note.array)
                  To.loop(N.note.array, function(e4, t3) {
                    typeof e4 == "string" && (N.note.array[t3] = To.Synth.note(e4));
                  });
                else if (typeof N.note == "function") {
                  if (zon)
                    return zog("animate() - use frequency in ZIM VEE functions not note"), c2;
                } else
                  N.note = To.Synth.note(N.note);
                N.frequency = N.note, delete N.note;
              }
              c2.type != "Sprite" && c2.hasOwnProperty("paused") || (Object.defineProperty(c2, "paused", { get: function() {
                return c2.animatePaused;
              }, set: function(e4) {
                c2.animatePaused = e4;
              } }), c2.paused = true, c2.animating = false), c2.endTween = function(n2, e4) {
                return c2.stopAnimate(e4), n2 != "all" && n2 != "main" && n2 != "none" && (n2 = "all"), c2.seriesTweens ? (To.loop(c2.seriesTweens, function(t3, e5, o3) {
                  To.loop(t3, function(e6) {
                    typeof t3[e6] == "string" && (t3[e6] = c2[e6] + Number(t3[e6].replace(/\s/g, ""))), to(c2, e6, t3[e6]);
                  }), n2 == "all" && c2.seriesCalls[e5] && c2.seriesCalls[e5](c2.seriesParams[e5]);
                }), n2 == "none" || (e4 = c2.seriesCalls[c2.seriesCalls.length - 1]) && e4(c2.seriesParams[c2.seriesParams.length - 1]), c2.seriesTweens = null, c2.seriesCalls = null, c2.seriesParams = null) : (To.loop(c2.zimLastObj, function(e5) {
                  typeof c2.zimLastObj[e5] == "string" && (c2.zimLastObj[e5] = c2[e5] + Number(c2.zimLastObj[e5].replace(/\s/g, ""))), to(c2, e5, c2.zimLastObj[e5]);
                }), n2 != "none" && d && d(h2)), c2.stage && c2.stage.update(), c2;
              }, effectCheck = false, To.loop(N, function(e4, t3) {
                c2.zimTweenOriginals[e4] = e4 == "path" ? N[e4] : eo(c2, e4), e4.match("hue") ? (N.hueBatch = t3, delete N.hue, effectCheck = true) : e4.match("saturation") ? (N.saturationBatch = t3, delete N.saturation, effectCheck = true) : e4.match("brightness") ? (N.brightnessBatch = t3, delete N.brightness, effectCheck = true) : e4.match("contrast") ? (N.contrastBatch = t3, delete N.contrast, effectCheck = true) : e4.match(/^.effects/) && (effectCheck = true);
              }), c2.resetTween = function(e4) {
                zot(e4) && (e4 = true), c2.pauseAnimate(), c2.percent = null, c2.startPercent = null;
                var o3 = c2.zimSeriesOriginals || c2.zimTweenOriginals;
                return To.loop(o3, function(e5) {
                  var t3;
                  e5 == "path" ? (c2.percentComplete = 0, c2.zimPath = o3[e5], t3 = (c2.zimStartPercent, c2.zimPath.getCurvePoint(c2.zimStartPercent / 100)), c2.loc(t3.x, t3.y)) : to(c2, e5, o3[e5]);
                }), c2.zimLastObj = null, c2.stage && c2.stage.update(), c2.stopAnimate(), c2.zimPath && (oe[1].path = c2.zimPath), zot(c2.zimStartRotation) || (c2.rotation = c2.zimStartRotation), c2.zimStartRotation = null, zot(c2.zimStartScaleX) || (c2.scaleX = c2.zimStartScaleX), c2.zimStartScaleX = null, zot(c2.zimStartScaleY) || (c2.scaleY = c2.zimStartScaleY), c2.zimStartScaleY = null, To.animate.apply(null, c2.zimSeriesArgs || oe), c2.pauseAnimate(e4), c2;
              }, c2.replayTween = function() {
                return c2.resetTween(false), c2;
              }, (N.path || X) && (c2.requestedPercentComplete ? Ut = c2.requestedPercentComplete : c2.percentComplete && (Ee = c2, Ie = "percentComplete", !Object.getOwnPropertyDescriptor(Ee, Ie).get) && (Ut = c2.percentComplete), c2.requestedPercentComplete = null, zot(Ut) && (Ut = 0), c2.pathRatio = 0, c2.zimStartRotation = c2.rotation, c2.percent = null, c2.startPercent = null), I2 && (S2 = false), zot(c2.zimTweens) && (c2.zimTweens = {}), I2 || (c2.stage ? Ve = c2.stage : zdf ? Ve = zdf.stage : I2 = true), c2.setColorRange && !zot(N.color) && (De = N.color, delete N.color, N.colorRange = 1, c2.setColorRange(c2.color, De), c2.colorRange = 0);
              var Oe, je, Le, _e = {};
              for (ie in N)
                0 <= ae.indexOf(ie) || (_e[ie] = To.copy(N[ie]), N[ie] = To.Pick.choose(N[ie]));
              for (Oe in zot(N.scale) || (N.scaleX = N.scaleY = To.Pick.choose(N.scale), delete N.scale), N) {
                if (!c2.zimBusy)
                  break;
                c2.zimBusy[Oe] && delete N[Oe];
              }
              if (!To.isEmpty(N)) {
                for (ie in c2.type != "Sprite" && (c2.paused = false, c2.animating = true), (M || E.loop || E.rewind) && (c2.zimMouseEnabledCheck || (c2.zimMouseEnabledCheck = true, c2.zimLastMouseEnabled = c2.mouseEnabled), c2.mouseEnabled = false, setTimeout(function() {
                  for (var e4 in c2.zimBusy || (c2.zimBusy = {}), N)
                    c2.zimBusy[e4] = true;
                  c2.zimMouseEnabledCheck = null, c2.mouseEnabled = c2.zimLastMouseEnabled;
                }, 70)), oo(), ae.shift(), L)
                  L[ie] = To.Pick.choose(L[ie]);
                for (ie in E)
                  ie != "waitedCall" && ie != "waitedParams" && ie != "loopCall" && ie != "rewindCall" && ie != "loopWaitCall" && ie != "rewindWaitCall" && (E[ie] = To.Pick.choose(E[ie]));
                ro(), function() {
                  var e4;
                  for (ie in L) {
                    if (typeof L[ie] == "string") {
                      if (L[ie].substr(0, 1) == "+")
                        continue;
                      e4 = (c2.zimLastObj && !zot(c2.zimLastObj[ie]) ? c2.zimLastObj : c2)[ie], L[ie] = e4 + Number(L[ie].replace(/\s/g, ""));
                    }
                    c2.zimLastObj[ie] = (z ? c2.zimTweenOriginals : N)[ie];
                  }
                }(), c2.seriesTweens && (c2.seriesTweens[0] = N), !void (j && !Me && (N = ao(c2, N, L, true))), c2.getBounds && zot(c2.percentCompleteCheck) && (c2.percentCompleteCheck = true, Object.defineProperty(c2, "percentComplete", { get: function() {
                  return this.zimTween && this.zimTween.duration ? this.zimTween.position / this.zimTween.duration * 100 : 0;
                }, set: function(e4) {
                  this.zimTween ? io(e4, nt = true) : this.requestedPercentComplete = e4;
                } }), Object.defineProperty(c2, "percentCompleteNoAngle", { get: function() {
                  return this.zimTween && this.zimTween.duration ? this.zimTween.position / this.zimTween.duration * 100 : 0;
                }, set: function(e4) {
                  this.zimTween ? io(e4, false) : this.requestedPercentComplete = e4;
                } })), Object.defineProperty(c2, "rate", { get: function() {
                  return c2.futureRate;
                }, set: function(o3) {
                  c2.futureRate = o3, To.loop(c2.zimTweens, function(e4, t3) {
                    t3.timeScale = o3;
                  });
                }, configurable: true }), !zot(N.path) && N.path.segmentPoints && (zot(N.orient) && (N.orient = true), N.orient && zot(N.flip) && (N.flip = true), c2.type == "Pen" && (c2.infinite = true), c2.zimOnPath = true, zot(c2.pathRatio) && (c2.pathRatio = 0), N.orient && (N.orient = N.path, N.startOrient = N.rotation), je = N.path, R ? (delete N.path, delete N.percent, (zon && c2.startPercent && 0 < c2.startPercent || c2.percent && c2.percent != 100) && zog("ZIM.animate() - startPercent and percent currently not supported with drag on path"), (Xe = je.getCurvePoint(c2.pathRatio, Ye, Ge2)) && (Xe.z, it = c2.parent.globalToLocal(Xe.x, Xe.y), c2.x = it.x, c2.y = it.y)) : (zot(c2.startPercent) && (c2.startPercent = To.Pick.choose(zot(N.startPercent) ? 0 : N.startPercent)), zot(c2.percent) && (c2.percent = To.Pick.choose(zot(N.percent) ? 100 : N.percent)), delete N.path, delete N.percent), Le = !je.lockControls, delete N.path, N.pathRatio = 1);
                c2.percentComplete;
                var Ye, De, Xe, Re, We, Fe, He, Ne, Ve, Ge2, qe, Ue, Qe, Ze, Ke, Je, $e, et, tt, ot, nt, rt, it, at, lt, st, ct, ut, dt = true, ht = false, gt = true, pt = true;
                zot(N.redirect) || (pt = N.redirect, delete N.redirect), je && (Le || (Ge2 = To.copy(je.segmentPoints), Ye = To.copy(je.segmentRatios)), c2.currentPercent = c2.startPercent + c2.percent * c2.pathRatio, De = (1e6 + c2.currentPercent) % 100 / 100, Xe = je.getCurvePoint(De, Ye, Ge2), c2.parent && Xe && (it = c2.parent.globalToLocal(Xe.x, Xe.y), c2.x = it.x, c2.y = it.y), R && (u = "linear", c2.cursor = "pointer", Re = c2.percentComplete, We = false, F2 || c2.paused, He = Fe = true, Ne = Re, Ge2 = To.copy(je.segmentPoints), qe = 0, To.loop(Ge2, function(e4) {
                  qe += To.distanceAlongCurve(e4);
                }), Ue = Math.round(qe / Ge2.length / 10), Qe = je.interpolate(Ue, null, true, null, true), Ke = Ze = (Re || 0) / 100 * qe, je.zimAnimateChanged = false, To.copy(je.segmentRatios), c2.zimAnimatePathChange = je.on("change", function() {
                  je.zimAnimateChanged = true;
                }), c2.zimAnimatePathDown = je.on("mousedown", function() {
                  We = true, c2.paused == 1 && (ht = true);
                }), c2.zimAnimatePathUp = je.on("pressup", function() {
                  ht = false;
                }), c2.zimAnimateDragDown = c2.on("mousedown", function(e4) {
                  Ve = e4.target.stage, c2.amu || (c2.amu = Ve.frame.on("mouseupplus", function() {
                    ht = false;
                  })), Ve.mouseMoveOutside = true, gt = !(dt = false), setTimeout(function() {
                    dt = true;
                  }, 50), ht = true, je.zimAnimateChanged && (Ge2 = To.copy(je.segmentPoints), qe = 0, To.loop(Ge2, function(e5) {
                    qe += To.distanceAlongCurve(e5);
                  }), Ue = Math.round(qe / Ge2.length / 10), Qe = je.interpolate(Ue, null, true, null, true), To.copy(je.segmentRatios)), je.zimAnimateChanged = false, Re = c2.percentComplete, $e.immediate(Re);
                  e4 = Re;
                  z && (e4 = he.position > he.duration / 2 ? 2 * (100 - Re) : 2 * Re), Ke = Ze = (e4 || 0) / 100 * qe;
                }), Je = false, c2.zimAnimateDragPress = c2.on("pressmove", function(e4) {
                  Je = true, function(e5) {
                    var t3 = je.globalToLocal(e5.rawX / To.scaX, e5.rawY / To.scaY), e5 = Ze;
                    je.type == "Blob" && (ot[0] < ot[4] ? He = true : ot[0] > ot[4] && (He = false), e5 < 10 && !He ? (Ke = Ze = e5 = qe - 5, $e.immediate(Ke / qe * 100), ot = [qe - 1, qe - 2, qe, qe - 3, qe - 4]) : qe - 10 < e5 && He && (Ke = Ze = e5 = 5, $e.immediate(Ke / qe * 100), ot = [0, 0, 0, 0, 0]));
                    var a2 = t3.x, l2 = t3.y, s6 = e5;
                    Qe.sort(function(e6, t4) {
                      var o3 = e6.x, n2 = e6.y, r3 = e6.r * qe, i3 = t4.x, e6 = t4.y, t4 = t4.r * qe;
                      return Math.sqrt(Math.pow(a2 - o3, 2) + Math.pow(l2 - n2, 2) + Math.pow(s6 - r3, 2)) - Math.sqrt(Math.pow(a2 - i3, 2) + Math.pow(l2 - e6, 2) + Math.pow(s6 - t4, 2));
                    }), Ke = Qe[0].r * qe, Re = Ke / qe * 100, Re = To.constrain(Re, 0, 99.95), z && (Re /= 2, he.position > he.duration / 2 && (Re = 100 - Re));
                  }(e4);
                }), c2.animateReturn = function() {
                  z ? (He = Fe = false, c2.percentComplete < 50 && (c2.percentComplete = 100 - c2.percentComplete), c2.pauseAnimate(false)) : zon && zogy("animate() - animateReturn() needs rewind set to true");
                }, c2.zimAnimateDragUp = c2.on("pressup", function() {
                  c2.paused == 0 && (ht = false), dt = false, setTimeout(function() {
                    dt = true;
                  }, 50), ot[0] < ot[4] ? He = true : ot[0] > ot[4] && (He = false), !c2.paused && z && pt && He != Fe && (c2.percentComplete = 100 - c2.percentComplete, Fe = He);
                }), $e = new To.Damp(Re, 0.15), nt = !(ot = [tt = et = 0, 0, 0, 0, 0]), c2.zimDragAnimateTicker = To.Ticker.add(function() {
                  var e4;
                  R && (++tt % 20 && (ot.push(Ke), ot.shift()), Ze = Ke, We && (Re = c2.percentComplete), ht || gt && c2.paused == 1 ? (We || nt || je.type == "Blob" && Math.abs(et - Re) > (z ? 45 : 90) ? (We = false, e4 = Re, $e.immediate(e4), nt = false) : e4 = $e.convert(Re), 0.1 < Math.abs(et - e4) ? (c2.percentCompleteNoAngle = e4, et = e4) : (c2.percentCompleteNoAngle = e4, Je = gt = false)) : gt = false);
                }, Ve))), N.orient && (N.orient === true && (it = c2.parent.localToGlobal((zot(N.x) ? c2 : N).x, (zot(N.y) ? c2 : N).y), N.orient = { x: it.x, y: it.y }), rt = N.orient, delete N.orient, at = c2.rotation, c2.rotation = je.getPointAngle(0) + at, rt != je && (Lt = rt.parent ? rt.parent.localToLocal(rt.x, rt.y, c2.parent) : c2.parent.globalToLocal(rt.x, rt.y), c2.rotation = To.angle(c2.x, c2.y, Lt.x, Lt.y) + at)), N.flip && (lt = N.flip, delete N.flip, st = c2.scaleX), N.flipVertical && (ct = N.flipVertical, delete N.flipVertical, ut = c2.scaleY);
                var ft = c2.x, mt = c2.y, zt = 0;
                E.loop && (zot(E.count) || (zt = E.count, delete E.count, be = 1));
                var yt, bt = 0;
                E.loopWait && (bt = E.loopWait, l = E.loopWait, delete E.loopWait), E.loopCall && (yt = E.loopCall, delete E.loopCall);
                var vt, wt = c2;
                E.loopParams && (wt = E.loopParams, delete E.loopParams), TIMECHECK && J && (fe && Po(fe, ee), me && Po(me, ee), a && Po(a, ee), St && Po(St, ee), bt && Po(bt, ee), l && Po(l, ee), E.rewindWait && Po(E.rewindWait, ee), V && Po(V, ee), G && Po(G, ee)), ee == "s" && (fe && (fe *= 1e3), me && (me *= 1e3), a && (a *= 1e3), St && (St *= 1e3), bt && (bt *= 1e3), l && (l *= 1e3), E.rewindWait && (E.rewindWait *= 1e3), V && (V *= 1e3), G && (G *= 1e3)), E.loopWaitCall && (vt = E.loopWaitCall, delete E.loopWaitCall);
                var Ct = c2;
                E.loopWaitParams && (Ct = E.loopWaitParams, delete E.loopWaitParams);
                var xt, kt, Tt, At, Pt, Bt, St, Et, It, Mt, Ot, jt, Lt = ["ballisticIn", "ballisticOut", "ballisticInOut", "snapIn", "snapOut", "snapInOut", "slowmoIn", "slowmoOut", "slowmoInOut"];
                Lt.indexOf(u) != -1 && (u = co(u)), E.rewind && (u && (u instanceof Function ? (zogr(u), xt = zik(u.reverse())) : (xt = u).indexOf("InOut") == -1 && (xt.indexOf("Out") != -1 ? xt = xt.replace("Out", "In") : xt.indexOf("In") != -1 && (xt = xt.replace("In", "Out")))), k && (xt = k, Lt.indexOf(xt) != -1 && (xt = co(xt)))), kt = u instanceof Function ? u : (At = "get" + u.charAt(0).toUpperCase() + u.slice(1), Pt = zik(Q), Bt = zik(Z2), zot(Pt) && zot(Bt) || !createjs.Ease[At] ? createjs.Ease[u] : (!zot(Bt) && zot(Pt) && (Pt = 1), !zot(Pt) && zot(Bt) && (Bt = 0.3 * 1.5), createjs.Ease[At](Pt, Bt))), xt && (xt instanceof Function ? zog(Tt = xt) : (At = "get" + xt.charAt(0).toUpperCase() + xt.slice(1), Pt = zik(Q), Bt = zik(Z2), Tt = zot(Pt) && zot(Bt) || !createjs.Ease[At] ? createjs.Ease[xt] : (!zot(Bt) && zot(Pt) && (Pt = 1), !zot(Pt) && zot(Bt) && (Bt = 0.3 * 1.5), createjs.Ease[At](Pt, Bt)))), E.rewind ? (St = 0, delete E.rewind, z = true, y = E.rewindWait, E.rewindWait && (St = E.rewindWait, delete E.rewindWait), E.rewindCall && (Et = E.rewindCall, zot(It = E.rewindParams) && (It = c2), delete E.rewindCall, delete E.rewindParams), E.rewindWaitCall && (Mt = E.rewindWaitCall, zot(Ot = E.rewindWaitParams) && (Ot = c2), delete E.rewindWaitCall, delete E.rewindWaitParams), 0 < V || 0 < G || 0 < a ? 0 < V || 0 < G ? (c2.waiting = true, (he = c2.zimTweens[_] = c2.zimTween = createjs.Tween.get(c2, { override: E.override }).wait(0 < V ? V : 0, true).wait(0 < G ? G : 0, true).call(function(e4) {
                  e4.waiting = false, G = V = 0, go(he);
                })).timeScale = c2.futureRate) : go() : (no(), po())) : 0 < V || 0 < G || 0 < a ? 0 < V || 0 < G ? (c2.waiting = true, (he = c2.zimTweens[_] = c2.zimTween = createjs.Tween.get(c2, { override: E.override }).wait(0 < V ? V : 0, true).wait(0 < G ? G : 0, true).call(function() {
                  G = V = 0, c2.waiting = false, fo(he);
                })).timeScale = c2.futureRate) : fo() : (no(), mo()), he.startPaused = F2, he.rewinding = false, zot(q) || (he.timeScale = To.Pick.choose(q)), !I2 && S2 && (Ut && (c2.pathRatio = c2.percentComplete && Math.round(c2.percentComplete) != 100 ? c2.percentComplete / 100 : 0, c2.percentCompleteNoAngle = Math.round(Ut) != 100 ? Ut : 0), jt = Y && !zot(D) && D.dispatchEvent ? To.Ticker.add(function() {
                  effectCheck && c2.updateEffects(), (je || rt || lt || ct) && Yt(), D.dispatchEvent("animation");
                }, Ve) : Y && c2.dispatchEvent ? To.Ticker.add(function() {
                  effectCheck && c2.updateEffects(), (je || rt || lt || ct) && Yt(), c2.dispatchEvent("animation");
                }, Ve) : To.Ticker.add(function() {
                  effectCheck && c2.updateEffects(), (je || rt || lt || ct) && Yt();
                }, Ve));
                var _t = [1, 1, 1], Yt = function() {
                  var e4, t3, o3, n2;
                  !c2.parent || he.passive || he.startPaused || (R && z && (Ne < 50 && 50 < c2.percentComplete || 50 < Ne && c2.percentComplete < 50) && (Fe = c2.percentComplete < 50), Ne = c2.percentComplete, je && (Le && (Ge2 = je.segmentPoints, Ye = je.segmentRatios), (e4 = R ? je.getCurvePoint(c2.pathRatio, Ye, Ge2) : (c2.currentPercent = c2.startPercent + c2.percent * c2.pathRatio, e4 = (1e6 + c2.currentPercent) % 100 / 100, c2.pathRatio == 1 && (e4 += 0 < c2.percent ? 1 : 0), je.getCurvePoint(e4, Ye, Ge2))) && (e4.z, t3 = c2.parent.globalToLocal(e4.x, e4.y), c2.x = t3.x, c2.y = t3.y)), t3 = at == 90 || at == 270 || at == -90, lt && dt && (ft > c2.x && To.sign(t3 ? c2.scaleY : c2.scaleX) == To.sign(st) && (t3 ? c2.scaleY *= -1 : c2.scaleX *= -1), ft < c2.x && To.sign(t3 ? c2.scaleY : c2.scaleX) != To.sign(st) && (t3 ? c2.scaleY *= -1 : c2.scaleX *= -1)), ct && dt && (mt > c2.y && To.sign(t3 ? c2.scaleX : c2.scaleY) == To.sign(ut) && (t3 ? c2.scaleX *= -1 : c2.scaleY *= -1), mt < c2.y && To.sign(t3 ? c2.scaleX : c2.scaleY) != To.sign(ut) && (t3 ? c2.scaleX *= -1 : c2.scaleY *= -1)), rt && (o3 = je == rt ? To.angle(ft, mt, c2.x, c2.y) + at : (o3 = rt.parent ? rt.parent.localToLocal(rt.x, rt.y, c2.parent) : c2.parent.globalToLocal(rt.x, rt.y), To.angle(c2.x, c2.y, o3.x, o3.y) + at)) != 0 && (c2.paused && !Je || (lt && 0 < ft - c2.x && (o3 += 180), n2 = o3, !lt && 0 < ft - c2.x && (n2 = o3 - 180), c2.rotation = n2 == at ? c2.rotation : n2)), R && (n2 = c2.x - ft + c2.y - mt, 2 < Math.abs(n2) && (_t.push(To.sign(n2)), _t.shift(), he.forward = function(e5) {
                    if (Array.isArray(e5)) {
                      for (var t4 = 0, o4 = 0, n3 = e5.length; o4 < n3; o4++)
                        t4 += e5[o4];
                      return t4;
                    }
                  }(_t))), ft = c2.x, mt = c2.y);
                };
                je && (c2.handlePath = Yt), zot(c2.zimMaskDynamic) || c2.zimMaskApply();
                var Dt, Xt = false;
                vo(), c2.stopAnimate && c2.stopAnimate.real || (c2.stopAnimate = function(e4, t3, o3, n2, r3) {
                  if (!r3 || !R) {
                    if (zot(e4) && (c2.tweenStates = {}), t3)
                      return c2.endTween(null, e4), c2;
                    if (zot(n2) && (n2 = true), c2.pan == null && (c2.paused = true, c2.animating = false), c2.type == "Pen" && c2.zimOnPath && (c2.stop(), c2.zimOnPath = false), zot(o3) && (o3 = true), n2 && R && (je && je.off("change", c2.zimAnimatePathChange), c2.off("mousedown", c2.zimAnimateDragDown), c2.off("pressmove", c2.zimAnimateDragPress), c2.off("pressup", c2.zimAnimateDragUp), c2.amu && Ve.frame.off("mouseupplus", c2.amu), To.Ticker.remove(c2.zimDragAnimateTicker)), zot(e4)) {
                      if (!o3)
                        return c2;
                      for (var i3 in c2.zimBusy = null, createjs.Tween.removeTweens(c2), c2.zimTweens)
                        Co(i3);
                      c2.zimTweens = null, c2.zimIdSets = null, c2.zimTween = null, To.idSets && To.idSets[ge || i3] && (delete To.idSets[ge || i3], To.isEmpty(To.idSets) && delete To.idSets), To.animatedObjects.remove(c2);
                    } else {
                      Array.isArray(e4) || (e4 = [e4]);
                      var a2 = ko(e4);
                      for (i3 in c2.zimTweens)
                        c2.zimTweens[i3].requestID && cancelAnimationFrame(c2.zimTweens[i3].requestID), o3 && 0 <= a2.indexOf(i3) && wo(i3), !o3 && a2.indexOf(i3) < 0 && wo(i3);
                    }
                    return c2;
                  }
                  c2.pauseAnimate();
                }, c2.stopAnimate.real = true, c2.pauseAnimate = function(e4, t3, o3, n2) {
                  if (t3 == "pauseOnBlur" ? t3 = null : zot(t3) && (c2.tweenStates = { all: e4 === false }), c2.type == "Pen" && (e4 === false ? c2.zimOnPath && (c2.infinite = true) : c2.stop()), Ht && !n2)
                    return c2.pause(e4, t3), c2;
                  if (zot(e4) && (e4 = true), ht = false, c2.paused = e4, c2.animating = !e4, zot(o3) && (o3 = true), zot(t3) && !o3)
                    return c2;
                  if (zot(t3))
                    for (var r3 in c2.zimTweens)
                      xo(r3, e4);
                  else {
                    Array.isArray(t3) || (t3 = [t3]);
                    var i3 = ko(t3);
                    for (r3 in c2.zimTweens)
                      o3 && 0 <= i3.indexOf(r3) && (xo(r3, e4), c2.tweenStates[r3] = !e4), !o3 && i3.indexOf(r3) < 0 && (xo(r3, e4), c2.tweenStates[r3] = !e4);
                  }
                  return c2.type == "Sprite" && (c2.running || c2.stop()), c2;
                }), F2 && c2.pauseAnimate(true, _, null, true), N.extra && (Dt = N.extra, delete N.extra, Array.isArray(Dt) || (Dt = [Dt]));
                for (var Rt, Wt, Ft, Ht, Nt, Vt, Gt, qt, Ut, Qt, Zt, ie = 0; ie < ae.length; ie++) {
                  var Kt = ae[ie];
                  N[Kt] && (zot(Dt) && (Dt = []), (Wt = N[Rt = Kt]) === true ? Dt.push({ outputProp: le[Rt] }) : Array.isArray(Wt) ? Dt.push({ outputProp: le[Rt], outputMin: Wt[0], outputMax: Wt[1], inputMin: Wt[2], inputMax: Wt[3] }) : Dt.push({ outputProp: le[Rt], outputMax: Wt }), delete N[Kt]);
                }
                if (Dt) {
                  c2.zimStartScaleX = c2.scaleX, c2.zimStartScaleY = c2.scaleY, he.extraTickers = [];
                  for (ie = 0; ie < Dt.length; ie++) {
                    var Se, Jt = Dt[ie];
                    for (Se in zot(Jt.inputObj) && (Jt.inputObj = c2), zot(Jt.inputProp) && (Jt.inputProp = "y"), zot(Jt.inputMin) && (Jt.inputMin = 0), zot(Jt.inputMax) && (Jt.inputMax = Jt.inputProp == "x" ? Ve.width : Ve.height), zot(Jt.outputObj) && (Jt.outputObj = c2), zot(Jt.outputProp) && (Jt.outputProp = "scale"), zot(Jt.outputMin) && (Jt.outputMin = 0), zot(Jt.outputMax) && (Jt.outputMax = Jt.outputMin + 1), zot(Jt.constrain) && (Jt.constrain = true), Jt)
                      N[Se] = To.Pick.choose(N[Se]);
                    Jt.outputProp == "percentSpeed" && (X = true), Ft = new To.Proportion(Jt.inputMin, Jt.inputMax, Jt.outputMin, Jt.outputMax, Jt.factor, Jt.outputRound);
                    var $t = function() {
                      var n2 = Jt, r3 = Ft;
                      return function() {
                        var e4, t3 = n2.outputObj, o3 = n2.inputObj[n2.inputProp];
                        n2.inputProp != "x" && n2.inputProp != "y" || n2.inputObj.parent && (o3 = n2.inputObj.parent.localToGlobal(o3, o3)[n2.inputProp]), e4 = n2.constrain ? To.constrain(r3.convert(o3), n2.outputMin, n2.outputMax) : r3.convert(o3), Number.isNaN(e4) && (e4 = n2.outputMin != null ? n2.outputMin : 0), n2.outputProp == "scale" ? (t3.scaleX = To.sign(t3.scaleX) * e4, t3.scaleY = To.sign(t3.scaleY) * e4) : n2.outputProp == "scaleX" ? t3.scaleX = To.sign(t3.scaleX) * e4 : n2.outputProp == "scaleY" ? t3.scaleY = To.sign(t3.scaleY) * e4 : n2.outputProp == "layer" ? !t3.parent || (o3 = To.constrain(Math.round(e4), 0, t3.parent.numChildren - 1)) != t3.parent.getChildIndex(t3) && t3.parent.setChildIndex(t3, o3) : n2.outputProp == "percentSpeed" ? t3[n2.outputProp] = 100 * e4 : t3[n2.outputProp] = e4;
                      };
                    }();
                    $t(), he.extraTickers.push(To.Ticker.add($t, Ve));
                  }
                }
                return (X || c2.zimAnimateDragDown) && (X && (Ht = true, c2.pauseAnimate(true, _, null, true), c2.paused = false, c2.animating = true, he.currentTime = 0, Nt = he, zot(c2.percentSpeed) && (c2.percentSpeed = he.startPaused ? 0 : 100), Vt = 1e3 / 60, he.currentTime = 0, Gt = !G && !V && !a && !zt && E.loop, W && E.loop && !zt && (W = false), qt = t2 + (z ? x2 || t2 : 0) + (y || 0) + (l || 0), qt *= ee == "s" ? 1e3 : 1, Ut = 1, E.loop && zt && (Ut = zt), W && (Qt = qt * Ut), function e4() {
                  var t3;
                  he.requestID = requestAnimationFrame(e4), !X || he.startPaused && c2.percentSpeed == 0 || (he.startPaused = false, he != Nt && ((Nt = he).currentTime = 0, c2.pauseAnimate(true, _, null, true), c2.paused = false, c2.animating = true, Gt = !G && !V && !a && !zt && E.loop), Gt && (he.currentTime += 1e4 * qt, he.setPosition(he.currentTime, true), Gt = false), t3 = he.currentTime + Vt * c2.percentSpeed / 100, Qt && a == 0 && (t3 = To.constrain(t3, 0, Qt)), he.currentTime = t3, he.setPosition(he.currentTime), (je || rt || lt || ct) && Yt(), Ve.update());
                }()), c2.pause = function(e4, t3) {
                  if (zot(e4) && (e4 = true), zot(t3) && (t3 = 0), e4) {
                    if (c2.zimAnimateDragDown && (R = false, c2.cursor = "default", je && je.off("change", c2.zimAnimatePathChange), c2.off("mousedown", c2.zimAnimateDragDown), c2.off("pressmove", c2.zimAnimateDragPress), c2.off("pressup", c2.zimAnimateDragUp), !X))
                      return;
                    Zt = c2.percentSpeed, 0 < t3 ? To.animate({ target: c2, props: { percentSpeed: 0 }, override: false, ticker: false, time: t3, call: function() {
                      c2.percentSpeed = 0, c2.paused = true, c2.animating = false, X = false, c2.dispatchEvent("pause");
                    } }) : (he.startPaused = false, c2.percentSpeed = 0, c2.paused = true, c2.animating = false, X = false, setTimeout(function() {
                      c2.dispatchEvent("pause");
                    }, 10));
                  } else {
                    if (c2.zimAnimateDragDown && (R = true, c2.cursor = "pointer", je && (c2.zimAnimatePathChange = je.on("change", c2.zimAnimatePathChange)), c2.zimAnimateDragDown = c2.on("mousedown", c2.zimAnimateDragDown), c2.zimAnimateDragPress = c2.on("pressmove", c2.zimAnimateDragPress), c2.zimAnimateDragUp = c2.on("pressup", c2.zimAnimateDragUp), !X && F2 != 0))
                      return;
                    ht = false, he.currentTime = he.position, 0 < t3 ? To.animate({ target: c2, props: { percentSpeed: Zt }, override: false, ticker: false, time: t3, call: function() {
                      c2.percentSpeed = Zt, c2.paused = false, c2.animating = true, X = true;
                    } }) : (c2.percentSpeed = Zt, c2.paused = false, c2.animating = true, X = true);
                  }
                  return c2;
                }), c2;
              }
            }
          }
          function eo(e4, t3) {
            if (t3.substr(0, 1) != ".")
              return e4[t3];
            for (var o3 = t3.split("."), n2 = e4, r3 = 1; r3 < o3.length; r3++)
              n2 = n2[o3[r3]];
            return n2;
          }
          function to(e4, t3, o3) {
            if (t3.substr(0, 1) == ".") {
              for (var n2 = t3.split("."), r3 = e4, i3 = 1; i3 < n2.length - 1; i3++)
                r3 = r3[n2[i3]];
              r3[n2[n2.length - 1]] = o3;
            } else
              e4[t3] = o3;
          }
          function oo() {
            zot(_) ? _ = To.makeID(10) : (_ = String(_), pe = _), zot(c2.zimIdSets) && (c2.zimIdSets = {}), zot(c2.zimIdSets[_]) ? zot(c2.zimTweens[_]) || (ge = _, _ = To.makeID(10), c2.zimIdSets[ge] = [ge], c2.zimTweens[ge].zimIdSet = ge, c2.zimIdSets[ge].push(_)) : (ge = _, _ = To.makeID(10), c2.zimIdSets[ge].push(_));
          }
          function no() {
            ro(), j && !Me && (N = ao(c2, N, L, true));
          }
          function ro() {
            var e4;
            for (ie in c2.zimLastObj || (c2.zimLastObj = {}), N) {
              if (typeof N[ie] == "string") {
                if (N[ie].substr(0, 1) == "+")
                  continue;
                e4 = (c2.zimLastObj && !zot(c2.zimLastObj[ie]) ? c2.zimLastObj : c2)[ie], N[ie] = e4 + Number(N[ie].replace(/\s/g, ""));
              }
              c2.zimLastObj[ie] = (z ? c2.zimTweenOriginals : N)[ie];
            }
          }
          function io(e4, t3) {
            c2.zimTween.startPaused = false, X ? zot(c2.zimTween.currentTime) || (c2.zimTween.currentTime = c2.zimTween.currentTime - c2.zimTween.position + e4 * c2.zimTween.duration / 100) : c2.zimTween.setPosition(Math.round(e4 * c2.zimTween.duration / 100)), t3 && je && N.orient !== false && je.getCurvePoint && (c2.rotation = je.getCurvePoint(e4 / 100, null, null, true).angle + (at || 0)), nt && Re !== void 0 && (Re = e4), c2.handlePath && c2.handlePath();
          }
          function ao(e4, t3, o3, n2) {
            Me = true, je && (!zot(e4.percentComplete) || o3 && !zot(o3.percentComplete)) && zot((o3 = o3 || {}).pathRatio) && (o3.pathRatio = zot(o3.percentComplete) ? e4.percentComplete / 100 : o3.percentComplete / 100);
            var r3 = {};
            for (ie in t3)
              o3 && !zot(o3[ie]) ? r3[ie] = o3[ie] : r3[ie] = e4[ie], n2 && (e4[ie] = t3[ie]);
            return r3;
          }
          function lo() {
            if ((0 < bt && (c2.waiting = false), E.loop) && (A3 && typeof A3 == "function" && (o3 = zot(P) ? c2 : P, A3(o3)), yt && typeof yt == "function" && yt(wt), m2)) {
              var e4, t3, o3 = To.Pick.choose(c2.futureRate);
              if (zot(c2.futureRate) || (he.timeScale = o3), zot(_e.scale) || (e4 = To.Pick.choose(_e.scale)), !j && he.step && he.step.prev && he.step.prev.props)
                for (var n2 in he.step.prev.props)
                  0 <= ae.indexOf(n2) || (typeof (t3 = To.Pick.choose(_e[n2])) == "string" && t3.substr(0, 1) != "+" && (t3 = (c2.zimLastObj && !zot(c2.zimLastObj[n2]) ? c2.zimLastObj : c2)[n2] + Number(t3.replace(/\s/g, ""))), c2.zimLastObj[n2] = z ? c2.zimTweenOriginals[n2] : t3, zot(_e[n2]) || (he.step.prev.props[n2] = t3), n2 != "scaleX" || zot(e4) || (he.step.prev.props.scaleX = e4), n2 != "scaleY" || zot(e4) || (he.step.prev.props.scaleY = e4));
            }
          }
          function so() {
            vt && typeof vt == "function" && vt(Ct);
          }
          function co(e4) {
            var t3 = [0.4, 0.75, 0.9, 0.95], o3 = [0.99, -0.69, 0.53, 0.014], n2 = [1.18, 0.69, 1, 0.96];
            return e4 == "ballisticIn" ? e4 = zik(To.zimEase(t3)) : e4 == "ballisticOut" ? e4 = zik(To.zimEase(t3).reverse()) : e4 == "ballisticInOut" ? e4 = zik(To.zimEase(t3, null, true)) : e4 == "snapIn" ? e4 = zik(To.zimEase(o3)) : e4 == "snapOut" ? e4 = zik(To.zimEase(o3).reverse()) : e4 == "snapInOut" ? e4 = zik(To.zimEase(o3, null, true)) : e4 == "slowmoIn" ? e4 = zik(To.zimEase(n2)) : e4 == "slowmoOut" ? e4 = zik(To.zimEase(n2).reverse()) : e4 == "slowmoInOut" && (e4 = zik(To.zimEase(n2, null, true))), e4;
          }
          function uo() {
            0 < St && (c2.waiting = false), Et && typeof Et == "function" && Et(It);
          }
          function ho() {
            0 < St && (c2.waiting = true), Mt && typeof Mt == "function" && Mt(Ot);
          }
          function go(e4) {
            no(), 0 < a && (c2.waiting = true), (he = c2.zimTweens[_] = c2.zimTween = createjs.Tween.get(c2, { override: E.override }).wait(a, true).call(function() {
              c2.waiting = false, o2 && typeof o2 == "function" && o2(zot(n) ? c2 : n), a = 0, po(he);
            })).timeScale = c2.futureRate, e4 && zo(e4, he);
          }
          function po(e4) {
            var t3 = bo();
            c2.set && !j && c2.set(L), (he = c2.zimTweens[_] = c2.zimTween = createjs.Tween.get(c2, E).to(N, fe, kt).call(ho).wait(St, true).call(uo).to(t3, me, Tt).call(yo).wait(bt, true).call(lo)).timeScale = c2.futureRate, e4 && zo(e4, he), vo();
          }
          function fo(e4) {
            no(), 0 < a && (c2.waiting = true), (he = c2.zimTweens[_] = c2.zimTween = createjs.Tween.get(c2, { override: E.override }).wait(a, true).call(function() {
              a = 0, c2.waiting = false, o2 && typeof o2 == "function" && o2(zot(n) ? c2 : n), mo(he);
            })).timeScale = c2.futureRate, e4 && zo(e4, he);
          }
          function mo(e4) {
            c2.set && !j && c2.set(L), (he = c2.zimTweens[_] = c2.zimTween = createjs.Tween.get(c2, E).to(N, fe, kt).call(yo).wait(bt, true).call(lo)).timeScale = c2.futureRate, e4 && zo(e4, he), vo();
          }
          function zo(e4, t3) {
            t3.zimIdSet = e4.zimIdSet, t3.zimObj = e4.zimObj, t3.zimTicker = e4.zimTicker, t3.zimExtraTickers = e4.zimExtraTickers, t3.requestID = e4.requestID;
          }
          function yo() {
            if (c2.seriesTweens && c2.seriesTweens.shift(), c2.seriesCalls && c2.seriesCalls.shift(), c2.seriesParams && c2.seriesParams.shift(), c2.paused && c2.type != "Sprite")
              d && typeof d == "function" && d(h2);
            else {
              if (E.loop) {
                if (!(0 < zt))
                  return 0 < bt && (c2.waiting = true), void so();
                if (be < zt)
                  return 0 < bt && (c2.waiting = true), so(), void be++;
                z ? c2.set && c2.set(bo()) : c2.set && c2.set(N);
              }
              var e4;
              H ? wo(_) : c2.pauseAnimate(true, _), !E.loop && A3 && typeof A3 == "function" && (e4 = zot(P) ? c2 : P, A3(e4)), d && typeof d == "function" && d(h2);
            }
          }
          function bo() {
            var e4, t3 = {};
            for (e4 in N)
              if (I2 && c2.style)
                zot(L[e4]) || j ? t3[e4] = c2.style[e4] : t3[e4] = L[e4];
              else if (zot(L[e4]) || j)
                if (e4.substr(0, 1) == ".") {
                  for (var o3 = e4.split("."), n2 = c2, r3 = 1; r3 < o3.length; r3++)
                    n2 = n2[o3[r3]];
                  t3[e4] = n2;
                } else
                  t3[e4] = c2[e4];
              else
                t3[e4] = L[e4];
            return t3;
          }
          function vo() {
            he.zimObj = N, he.zimTicker = jt, he.zimPaused = Xt, ge && (he.zimIdSet = ge), pe && (zot(To.idSets) && (To.idSets = {}), zot(To.idSets[pe]) ? To.idSets[pe] = [c2] : To.idSets[pe].indexOf(c2) < 0 && To.idSets[pe].push(c2)), To.animatedObjects || (To.animatedObjects = new To.Dictionary(true)), To.animatedObjects.add(c2, true);
          }
          function wo(e4) {
            var t3, o3;
            c2.tweenStates && c2.tweenStates[e4] && delete c2.tweenStates[e4], zot(c2.zimTweens) || zot(c2.zimTweens[e4]) || (c2.zimX = null, c2.zimY = null, function(e5) {
              if (c2.zimBusy) {
                for (var t4 in e5)
                  delete c2.zimBusy[t4];
                To.isEmpty(c2.zimBusy) && (c2.zimBusy = null);
              }
            }(c2.zimTweens[e4].zimObj), c2.zimTweens[e4].paused = true, Co(e4), !zot(t3 = c2.zimTweens[e4].zimIdSet) && c2.zimIdSets && ((o3 = c2.zimIdSets[t3]) && o3.splice(o3.indexOf(e4), 1), o3 && o3.length == 0 && (delete c2.zimIdSets[t3], To.isEmpty(c2.zimIdSets) && delete c2.zimIdSets)), c2.type == "Pen" && c2.zimOnPath && (c2.stop(), c2.zimOnPath = false), delete c2.zimTweens[e4], To.isEmpty(c2.zimTweens) && c2.stopAnimate(null, null, null, false, true), c2.zimTweens && c2.zimTweens[e4] || c2.zimIdSets && c2.zimIdSets[t3 || e4] || To.idSets && To.idSets[t3 || e4] && (To.idSets[t3 || e4], 0 <= (o3 = To.idSets[t3 || e4].indexOf(c2)) && To.idSets[t3 || e4].splice(o3, 1), To.idSets[t3 || e4].length <= 0 && (delete To.idSets[t3 || e4], To.isEmpty(To.idSets) && delete To.idSets)));
          }
          function Co(o3) {
            !function() {
              var e4 = c2.zimTweens[o3].zimTicker;
              if (c2.zimTweens[o3].extraTickers)
                for (var t3 = 0; t3 < c2.zimTweens[o3].extraTickers.length; t3++)
                  To.Ticker.remove(c2.zimTweens[o3].extraTickers[t3]);
              c2.zimTweens[o3].requestID && cancelAnimationFrame(c2.zimTweens[o3].requestID), e4 && setTimeout(function() {
                e4 && To.Ticker.remove(e4), e4 = null;
              }, 200);
            }();
          }
          function xo(e4, t3) {
            var o3 = c2.zimTweens[e4];
            (o3.paused = t3) != o3.zimPaused && ((o3.zimPaused = t3) ? o3.zimTicker && (o3.zimAnimateTimeout = setTimeout(function() {
              To.Ticker.remove(o3.zimTicker);
            }, 200)) : (o3.startPaused = false, clearTimeout(o3.zimAnimateTimeout), o3.zimTicker && (o3.zimTicker = To.Ticker.add(o3.zimTicker, Ve))));
          }
          function ko(e4) {
            for (var t3 = [], o3 = 0; o3 < e4.length; o3++)
              c2.zimIdSets && !zot(c2.zimIdSets[e4[o3]]) ? t3 = t3.concat(c2.zimIdSets[e4[o3]]) : t3.push(e4[o3]);
            return t3;
          }
        }, To.stopAnimate = function(e3, t2) {
          if (z_d("45.12"), zot(e3)) {
            if (To.animatedObjects)
              for (var o2 = To.animatedObjects.length - 1; 0 <= o2; o2--)
                To.animatedObjects.objects[o2].stopAnimate(null, t2);
          } else if (Array.isArray(e3) || (e3 = [e3]), To.idSets)
            for (var n = 0; n < e3.length; n++) {
              var r2 = e3[n];
              if (To.idSets[r2])
                for (o2 = To.idSets[r2].length - 1; 0 <= o2; o2--)
                  To.idSets[r2][o2].stopAnimate(r2, t2);
            }
        }, To.stopZimAnimate = function(e3) {
          z_d("45.1"), To.stopAnimate(e3);
        }, To.pauseAnimate = function(e3, t2) {
          if (z_d("45.22"), zot(e3) && (e3 = true), zot(t2) || t2 == "pauseOnBlur") {
            if (To.animatedObjects)
              for (var o2 = To.animatedObjects.length - 1; 0 <= o2; o2--)
                To.animatedObjects.objects[o2].pauseAnimate(e3, t2);
          } else if (Array.isArray(t2) || (t2 = [t2]), To.idSets)
            for (var n = 0; n < t2.length; n++) {
              var r2 = t2[n];
              if (To.idSets[r2])
                for (o2 = To.idSets[r2].length - 1; 0 <= o2; o2--)
                  To.idSets[r2][o2].pauseAnimate(e3, r2);
            }
        }, To.pauseZimAnimate = function(e3, t2) {
          z_d("45.2"), To.pauseAnimate(e3, t2);
        }, To.wiggle = function(r2, i2, a, l, s5, c2, u, e3, d, h2, g, p, f3, t2, m2) {
          if (o2 = zob(To.wiggle, arguments, "target, property, baseAmount, minAmount, maxAmount, minTime, maxTime, totalTime, type, ease, integer, id, startType, ticker, wait"))
            return o2;
          if (z_d("45.25"), zot(r2) || zot(a) || zot(l))
            return r2;
          zot(s5) && (s5 = l);
          var o2 = Ao(c2, null, 40);
          zot(c2) && (c2 = o2 == "s" ? 1 : 1e3), zot(u) && (u = c2), Po(u, o2, 40), zot(h2) && (h2 = "quadInOut"), zot(g) && (g = false), zot(p) && (p = To.makeID()), zot(d) && (d = "both"), zot(f3) && (f3 = "both"), zot(t2) && (t2 = true), zot(m2) && (m2 = 0), Po(e3, o2, 40), zot(e3) || (r2.wiggleTimeout = setTimeout(function() {
            r2.stopAnimate(p), r2.dispatchEvent("wigglestop");
          }, e3 * (o2 == "s" ? 1e3 : 1)));
          var z, y = 0;
          function b() {
            var e4, t3 = To.rand(To.Pick.choose(c2), To.Pick.choose(u), false), o3 = {}, n = {};
            n[i2] = To.Pick.choose(a), e4 = d == "negative" || y == 0 && f3 == "negative" ? -To.rand(To.Pick.choose(l), To.Pick.choose(s5), g) : d == "positive" || y == 0 && f3 == "positive" ? To.rand(To.Pick.choose(l), To.Pick.choose(s5), g) : y == 0 ? To.rand(To.Pick.choose(l), To.Pick.choose(s5), g, true) : To.rand(To.Pick.choose(l), To.Pick.choose(s5), g) * To.sign(z) * -1, o3[i2] = To.Pick.choose(a) + e4, y == 0 && (t3 /= 2), z = e4, y++, d == "negative" || d == "positive" ? To.animate({ target: r2, obj: o3, set: n, ease: h2, time: 2 * t3, wait: zik(m2), rewind: true, override: false, call: b, id: p, ticker: !!r2.stage, timeCheck: false }) : To.animate({ target: r2, obj: o3, ease: h2, time: t3, wait: zik(m2), override: false, call: b, id: p, ticker: !!r2.stage, timeCheck: false });
          }
          return r2.addTo && !r2.stage ? r2.added(b) : b(), r2;
        }, To.loop = function(e3, t2, o2, n, r2, i2) {
          var a;
          if (a = zob(To.loop, arguments, "obj, call, reverse, step, start, end"))
            return a;
          if (To.zimLoopCheck || z_d("45.3"), To.zimLoopCheck = true, !zot(e3) && !zot(t2)) {
            zot(o2) && (o2 = false), (zot(n) || n <= 0) && (n = 1);
            var l = typeof e3 == "number" ? "number" : e3.constructor === Array ? "array" : e3.constructor === {}.constructor ? "object" : e3 instanceof NodeList ? "nodelist" : typeof e3 == "string" ? "string" : e3 instanceof HTMLCollection ? "htmlcollection" : "invalid";
            if (l != "container" || e3.addChild) {
              if (l == "number" || l == "string" || l == "array" || l == "nodelist" || l == "htmlcollection") {
                if ((c2 = g((u = l == "number" ? e3 : e3.length) - 1)) != 0) {
                  if (o2) {
                    for (var s5 = r2; i2 <= s5; s5 -= n)
                      if ((h2 = l == "number" ? t2(s5, c2, r2, i2, e3) : t2(l == "array" || l == "string" ? e3[s5] : e3.item(s5), s5, c2, r2, i2, e3)) !== void 0)
                        return h2;
                  } else
                    for (s5 = r2; s5 <= i2; s5 += n)
                      if ((h2 = l == "number" ? t2(s5, c2, r2, i2, e3) : t2(l == "array" || l == "string" ? e3[s5] : e3.item(s5), s5, c2, r2, i2, e3)) !== void 0)
                        return h2;
                  return true;
                }
              } else if (l == "object") {
                var c2, u = 0, d = [];
                for (s5 in e3)
                  u++, d.push(s5);
                if ((c2 = g(u - 1)) != 0) {
                  if (o2) {
                    for (s5 = r2; i2 <= s5; s5 -= n)
                      if ((h2 = t2(d[s5], e3[d[s5]], s5, c2, r2, i2, e3)) !== void 0)
                        return h2;
                  } else
                    for (s5 = r2; s5 <= i2; s5 += n)
                      if ((h2 = t2(d[s5], e3[d[s5]], s5, c2, r2, i2, e3)) !== void 0)
                        return h2;
                  return true;
                }
              } else if ((c2 = g(e3.numChildren - 1)) != 0) {
                if (o2) {
                  for (s5 = r2; i2 <= s5; s5 -= n)
                    if ((h2 = t2(e3.getChildAt(s5), s5, c2, r2, i2, e3)) !== void 0)
                      return h2;
                } else
                  for (var h2, s5 = r2; s5 <= i2; s5 += n)
                    if ((h2 = t2(e3.getChildAt(s5), s5, c2, r2, i2, e3)) !== void 0)
                      return h2;
                return true;
              }
            }
          }
          function g(e4) {
            return zot(r2) && (r2 = o2 ? e4 : 0), zot(i2) && (i2 = o2 ? 0 : e4), o2 && r2 < i2 || !o2 && i2 < r2 || (r2 < 0 && i2) < 0 || e4 < r2 && e4 < i2 ? 0 : (r2 = Math.max(0, Math.min(r2, e4)), i2 = Math.max(0, Math.min(i2, e4)), Math.floor((o2 ? r2 - i2 : i2 - r2) / n) + 1);
          }
        }, To.scaleTo = function(e3, t2, o2, n, r2, i2) {
          if (u = zob(To.scaleTo, arguments, "obj, boundObj, percentX, percentY, type, boundsOnly"))
            return u;
          if (e3.type == "AC" && zdf)
            return zdf.ac("scaleTo", arguments), e3;
          if (z_d("43"), zot(t2) && (t2 = zdf && zdf.stage ? zdf.stage : null), zot(e3) || !e3.getBounds || !e3.getBounds())
            return zog("zim methods - scaleTo(): please provide an object (with setBounds) to scale"), e3;
          if (zot(t2) || !t2.getBounds || !t2.getBounds())
            return zog("zim methods - scaleTo(): please provide a boundObject (with setBounds) to scale to"), e3;
          zot(o2) && (o2 = -1), zot(n) && (n = -1), o2 == -1 && n == -1 && (o2 = n = 100, zot(r2) && (r2 = "fill")), zot(r2) && (r2 = "fit"), r2 == "smallest" ? r2 = "fit" : r2 == "biggest" || r2 == "outside" || r2 == "largest" ? r2 = "fill" : r2 != "both" && r2 != "stretch" || (r2 = "full"), zot(i2) && (i2 = false);
          var a = t2.getBounds().width * o2 / 100 * (i2 ? 1 : t2.scaleX), l = t2.getBounds().height * n / 100 * (i2 ? 1 : t2.scaleY);
          t2.type != "Stage" && t2.type != "StageGL" || (a = t2.width * o2 / 100, l = t2.height * n / 100);
          var s5 = To.boundsToGlobal(e3), c2 = s5.height / e3.scaleX, u = s5.width / e3.scaleY;
          return (isNaN(c2) || isNaN(u)) && (c2 = e3.getBounds().height, u = e3.getBounds().width), o2 != -1 && n != -1 || r2 == "full" ? r2 == "full" ? (e3.scaleX = o2 != -1 ? a / u : e3.scaleX, e3.scaleY = n != -1 ? l / c2 : e3.scaleY) : (s5 = r2 == "fill" ? Math.max(a / u, l / c2) : Math.min(a / u, l / c2), To.sca(e3, s5)) : o2 == -1 ? To.sca(e3, l / c2) : To.sca(e3, a / u), e3;
        }, To.fit = function(e3, t2, o2, n, r2, i2) {
          if (p = zob(To.fit, arguments, "obj, left, top, width, height, type"))
            return p;
          if (e3.type == "AC" && zdf)
            return zdf.ac("fit", arguments), e3;
          if (z_d("46"), !zot(e3) && e3.getBounds) {
            if (e3.getBounds()) {
              if (zot(t2)) {
                if (!e3.stage)
                  return void zog("zim methods - fit(): please add boundary dimensions or add obj to stage first");
                if (!e3.stage.getBounds())
                  return void zog("zim methods - fit(): please add boundary dimensions or add obj with bounds to stage first");
                o2 = t2 = 0, n = e3.stage.getBounds().width, r2 = e3.stage.getBounds().height;
              }
              i2 === true ? i2 = "fit" : i2 === false && (i2 = "fill"), zot(i2) && (i2 = "fit"), e3.scaleX = e3.scaleY = 1;
              var a, l, s5, c2, u, d = n, h2 = r2, g = e3.getBounds().width, p = e3.getBounds().height;
              return i2 == "full" ? (e3.scaleX = s5 = d / g, e3.scaleY = c2 = h2 / p, a = d, l = h2) : (i2 == "fit" ? u = g / p <= d / h2 ? h2 / p : d / g : i2 == "fill" && (u = g / p <= d / h2 ? d / g : h2 / p), s5 = c2 = u), a = g * (e3.scaleX = s5), l = p * (e3.scaleY = c2), e3.x = (e3.regX - e3.getBounds().x) * s5 + t2 + (d - a) / 2, e3.y = (e3.regY - e3.getBounds().y) * c2 + o2 + (h2 - l) / 2, { x: e3.x, y: e3.y, width: a, height: l, scale: u, scaleX: s5, scaleY: c2, bX: t2, bY: o2, bWidth: n, bHeight: r2 };
            }
            zog("zim methods - fit(): please setBounds() on object");
          }
        }, To.boundsCheck = false, To.boundsToGlobal = function(e3, t2, o2, n, r2) {
          if (To.boundsCheck || (z_d("40"), To.boundsCheck = true), !zot(e3) && e3.getBounds) {
            if (zot(o2) && (o2 = false), r2 && !e3.getBounds && !e3.getBounds())
              return e3;
            var i2, a, l, s5 = e3.getBounds();
            if (s5 || !zot(t2)) {
              t2 && (s5 = t2), r2 = r2 && r2.type && (r2.type == "Stage" || r2.type == "StageGL") ? (i2 = e3.localToLocal(s5.x, s5.y, r2), a = e3.localToLocal(s5.x + s5.width, s5.y, r2), l = e3.localToLocal(s5.x + s5.width, s5.y + s5.height, r2), e3.localToLocal(s5.x, s5.y + s5.height, r2)) : o2 ? (i2 = e3.globalToLocal(s5.x, s5.y), a = e3.globalToLocal(s5.x + s5.width, s5.y), l = e3.globalToLocal(s5.x + s5.width, s5.y + s5.height), e3.globalToLocal(s5.x, s5.y + s5.height)) : (i2 = e3.localToGlobal(s5.x, s5.y), a = e3.localToGlobal(s5.x + s5.width, s5.y), l = e3.localToGlobal(s5.x + s5.width, s5.y + s5.height), e3.localToGlobal(s5.x, s5.y + s5.height));
              o2 = Math.min(i2.x, a.x, l.x, r2.x), e3 = Math.min(i2.y, a.y, l.y, r2.y), s5 = Math.max(i2.x, a.x, l.x, r2.x), r2 = Math.max(i2.y, a.y, l.y, r2.y);
              return new createjs.Rectangle(o2, e3, s5 - o2, r2 - e3);
            }
            zog("zim methods - boundsToGlobal():\n please setBounds() on object (or a rectangle)");
          }
        }, To.resetBounds = function(e3, t2, o2, n, r2) {
          var i2, a, l;
          return z_d("40.5"), r2 = zot(n) ? (a = t2, l = i2 = 0, o2) : (i2 = t2, a = n, l = o2, r2), zot(r2) && (r2 = a), zot(t2) ? e3.setBounds(null) : e3.setBounds(i2, l, a, r2), e3;
        }, To.copyMatrix = function(e3, t2) {
          return z_d("45.5"), e3.x = t2.x, e3.y = t2.y, e3.scaleX = t2.scaleX, e3.scaleY = t2.scaleY, e3.regX = t2.regX, e3.regY = t2.regY, e3.rotation = t2.rotation, e3.skewX = t2.skewX, e3.skewY = t2.skewY, e3;
        }, To.duplicate = function(e3, t2) {
          z_d("45.6");
          var o2, n = e3.clone(t2);
          for (o2 in e3)
            e3.hasOwnProperty(o2) && n[o2] == null && o2 != "parent" && o2 != "zimTouch" && (n[o2] = e3[o2]);
          return n;
        }, To.expand = function(e3, t2, o2, n, r2) {
          var i2, a;
          if (s5 = zob(To.expand, arguments, "padding, paddingVertical, paddingRight, paddingBottom"))
            return s5;
          if (z_d("50"), zot(e3) || !e3.getBounds || !e3.getBounds())
            return zog("zim methods - expand(): please provide object with bounds set"), e3;
          zot(t2) && (t2 = 20), zot(o2) && (o2 = t2), a = zot(n) && zot(r2) ? (i2 = n = t2, r2 = o2) : (zot(n) && (n = t2), zot(r2) && (r2 = o2), i2 = t2, o2);
          var l = e3.getBounds(), s5 = new createjs.Shape();
          return s5.graphics.f("0").r(l.x - i2, l.y - a, l.width + i2 + n, l.height + a + r2), e3.hitArea = s5, e3;
        }, To.setSwipe = function(i2, e3) {
          if (z_d("34"), !zot(i2) && i2.on)
            return i2.zimNoSwipe = !e3 || null, i2 instanceof createjs.Container && function e4(t2) {
              var o2 = t2.numChildren;
              var n;
              for (var r2 = 0; r2 < o2; r2++)
                (n = t2.getChildAt(r2)).zimNoSwipe = i2.zimNoSwipe, n instanceof createjs.Container && e4(n);
            }(i2), i2;
        }, To.setMask = function(o2, n, r2) {
          if (z_d("50.1"), zot(o2) && zog("zim methods - setMask(): please provide obj"), zot(n))
            return e3(), o2;
          var i2, a = o2.stage || (zdf ? zdf.stage : null);
          function e3() {
            o2.zimMask && o2.zimMask.parent && o2.zimMask.parent.removeChild(o2.zimMask), o2.zimMask = null, o2.zimMaskTicker && To.Ticker.remove(o2.zimMaskTicker), o2.mask = null;
          }
          function t2() {
            if (r2 && (!a || !n.stage))
              return o2;
            var e4, t3;
            i2 && i2.dispose && i2.dispose(), i2 = null, o2.zimMask = n.zimMask = i2 = n.shape.clone(), To.copyMatrix(i2, n), n.addChildAt(i2, 0), i2.alpha = 0, o2.parent && (e4 = n.getConcatenatedMatrix().decompose(), t3 = o2.parent.getConcatenatedMatrix().decompose(), i2.scaleX = e4.scaleX / t3.scaleX, i2.scaleY = e4.scaleY / t3.scaleY, i2.rotation = (e4.rotation || 0) - (t3.rotation || 0), t3 = n.localToLocal(n.shape.x + n.regX, n.shape.y + n.regY, o2.parent), i2.x = t3.x, i2.y = t3.y), o2.mask = i2;
          }
          return o2.zimMaskOriginal && o2.zimMaskOriginal != n && e3(), zot(r2) && (r2 = !(n.type != "Blob" && zot(n.zimDown) && zot(n.transformControls) && zot(n.zimTouch) && zot(n.zimTweens)), n.zimMaskDynamic = r2), (o2.zimMaskOriginal = n).zimMaskApply = function() {
            o2.zimMaskTicker && To.Ticker.remove(o2.zimMaskTicker), o2.zimMaskTicker = To.Ticker.add(t2);
          }, n && n.shape ? (t2(), r2 && n.zimMaskApply()) : (i2 = n, o2.mask = i2), o2;
        }, To.outline = function(t2, e3, o2, n) {
          if (h2 = zob(To.outline, arguments, "obj, color, size, boundsOnly"))
            return h2;
          if (z_d("47"), t2.type && t2.type == "zimOultineShape")
            return zon && zogy("zim.outline() - warning, you are trying to outline an outline - do not outline in a loop"), t2;
          if (zot(t2) || !t2.getBounds)
            return zog("zim methods - outline(): please provide object with bounds set"), t2;
          if (!t2.getBounds())
            return zog("zim methods - outline(): please setBounds() on object"), t2;
          if (!t2.parent)
            return zog("zim methods - outline(): object should be on stage first"), t2;
          if (zot(e3) && (e3 = "brown"), zot(o2) && (o2 = 2), o2 <= 0)
            return t2.ZIMoutlineShape && t2.ZIMoutlineShape.parent.removeChild(t2.ZIMoutlineShape), t2.ZIMoutlineShapeC && t2.ZIMoutlineShapeC.parent.removeChild(t2.ZIMoutlineShapeC), void (t2.ZIMoutlineShape = t2.ZIMoutlineShapeC = null);
          var r2 = t2.getBounds(), i2 = t2.ZIMoutlineShape = t2.ZIMoutlineShape || new To.Shape();
          i2.type = "zimOutlineShape";
          var a = t2.ZIMoutlineShapeC = t2.ZIMoutlineShapeC || new To.Shape();
          a.type = "zimOutlineShape";
          var l = t2.parent;
          t2.outlineToggled = true, t2.outlineToggle = function(e4) {
            return e4 === true ? (t2.ZIMoutlineShape.visible = true, t2.ZIMoutlineShapeC.visible = true) : e4 === false ? (t2.ZIMoutlineShape.visible = false, t2.ZIMoutlineShapeC.visible = false) : (t2.ZIMoutlineShape.visible = !t2.ZIMoutlineShape.visible, t2.ZIMoutlineShapeC.visible = !t2.ZIMoutlineShapeC.visible), t2.outlineToggled = t2.ZIMoutlineShape.visible, t2;
          };
          var s5 = t2.localToLocal(r2.x, r2.y, l), c2 = t2.localToLocal(r2.x + r2.width, r2.y, l), u = t2.localToLocal(r2.x + r2.width, r2.y + r2.height, l), d = t2.localToLocal(r2.x, r2.y + r2.height, l), h2 = t2.localToLocal(0, 0, l), r2 = i2.graphics.c(), l = a.graphics.c();
          r2.s(e3).ss(o2).mt(s5.x, s5.y).lt(c2.x, c2.y).lt(u.x, u.y).lt(d.x, d.y).lt(s5.x, s5.y).cp(), n || (l.s("white").ss(o2 + 2), l.mt(-11, 0).lt(11, 0), l.mt(0, -11).lt(0, 11), l.s(e3).ss(o2), l.mt(-10, 0).lt(10, 0), l.mt(0, -10).lt(0, 10), l.cp(), a.x = h2.x, a.y = h2.y, a.rotation = t2.rotation, r2.s("white").ss(o2 + 2).dc(t2.x, t2.y, 16), r2.s(e3).ss(o2).dc(t2.x, t2.y, 16)), t2.parent.removeChild(i2), t2.parent.removeChild(a);
          r2 = t2.parent.getChildIndex(t2);
          return t2.parent.addChildAt(a, r2 + 1), t2.parent.addChildAt(i2, r2 + 1), i2.mouseEnabled = false, a.mouseEnabled = false, t2;
        }, To.STYLE = null, To.ignore = "ignore", To.getStyle = function(e3, t2, o2) {
          To.STYLECHECK || (z_d("50.34"), To.STYLECHECK = true);
          var n, r2 = ["pos", "addTo", "center", "centerReg", "mov", "drag", "transform", "gesture", "outline", "bounds", "animate", "wiggle", "cache"], i2 = To.STYLE;
          for (n in STYLE !== void 0 && (i2 = STYLE), STYLE) {
            var a = STYLE[n];
            n.match(/^[(A-Z)]/) && (STYLE.type || (STYLE.type = {}), STYLE.type[n] ? STYLE.type[n] = To.merge(STYLE.type[n], a) : STYLE.type[n] = a, delete STYLE[n]);
          }
          if (i2 = zot(i2) ? {} : To.copy(i2), zot(o2))
            o2 = {};
          else
            for (var l = 0; l < r2.length; l++)
              delete o2[r2[l]];
          var s5, c2 = o2, u = i2.type;
          if (u && delete i2.type, !zot(t2) && !zot(i2.group)) {
            for (var d = t2.split(","), h2 = {}, l = 0; l < d.length; l++) {
              var g = d[l].trim();
              zot(i2.group[g]) || (h2 = To.merge(h2, i2.group[g]));
            }
            delete i2.group;
          }
          for (s5 in zot(e3) || zot(u) || zot(u[e3]) || (i2 = To.merge(i2, u[e3])), zot(t2) || zot(h2) || (i2 = To.merge(i2, h2)), i2)
            !c2[s5] && (a = r2.indexOf(s5) != -1 || i2.delayPick ? i2[s5] : To.Pick.choose(i2[s5])) != "ignore" ? (a && a.constructor === {}.constructor && (a = To.copy(a, true, false)), i2[s5] = a) : delete i2[s5];
          return (i2 = To.merge(i2, c2)).style === false ? {} : i2;
        }, To.styleTransforms = function(t2, o2) {
          var e3 = ["visible", "x", "y", "scale", "scaleX", "scaleY", "rotation", "alpha", "skewX", "skewY", "regX", "regY", "blendMode"];
          if (o2) {
            o2.add && t2.addTo(), o2.addTo && t2.addTo(o2.addTo === true ? null : o2.addTo), o2.center && t2.center(o2.center === true ? null : o2.center), o2.centerReg && t2.centerReg(o2.centerReg === true ? null : o2.centerReg);
            for (var n, r2 = 0; r2 < e3.length; r2++)
              o2[e3[r2]] != null && (t2[e3[r2]] = To.Pick.choose(o2[e3[r2]]));
            if (o2.bounds && o2.bounds.constructor === {}.constructor && t2.setBounds(o2.bounds.x || 0, o2.bounds.y || 0, o2.bounds.width || 100, o2.bounds.height || 100), o2.x != null && (o2.loc ? o2.loc.x == null && (o2.loc.x = o2.x) : o2.loc = { x: o2.x }), o2.y != null && (o2.loc ? o2.loc.y == null && (o2.loc.y = o2.y) : o2.loc = { y: o2.y }), o2.loc && (o2.loc.constructor === {}.constructor ? t2.loc(To.Pick.choose(o2.loc.x), To.Pick.choose(o2.loc.y)) : t2.loc(To.Pick.choose(o2.loc))), o2.pos && (o2.pos.constructor === {}.constructor ? t2.pos(To.Pick.choose(o2.pos.x), To.Pick.choose(o2.pos.y), To.Pick.choose(o2.pos.right), To.Pick.choose(o2.pos.bottom), To.Pick.choose(o2.pos.container), To.Pick.choose(o2.pos.index), o2.pos.add, To.Pick.choose(o2.pos.reg), To.Pick.choose(o2.pos.regX), To.Pick.choose(o2.pos.regY)) : ((n = To.Pick.choose(o2.pos)) != "left" && n != "top" || t2.pos(), n == "right" && t2.pos({ right: true }), n == "bottom" && t2.pos({ bottom: true }), n != "rightbottom" && n != "bottomright" || t2.pos({ right: true, bottom: true }), n == "center" && t2.center())), (o2.mov || o2.move) && (o2.move && (o2.mov = o2.move), o2.mov.constructor === {}.constructor ? t2.mov(To.Pick.choose(o2.mov.x), To.Pick.choose(o2.mov.y)) : t2.mov(To.Pick.choose(o2.mov))), o2.outline && setTimeout(function() {
              t2.outline(o2.outline.constructor === {}.constructor ? o2.outline : null), t2.stage && t2.stage.update();
            }, 20), o2.drag && t2.drag(o2.drag.constructor === {}.constructor ? o2.drag : { currentTarget: true }), o2.gesture && t2.gesture(o2.gesture.constructor === {}.constructor ? o2.gesture : null), o2.transform && setTimeout(function() {
              t2.transform(o2.transform.constructor === {}.constructor ? o2.transform : null);
            }, 20), o2.animate) {
              Array.isArray(o2.animate) || (o2.animate = [o2.animate]);
              for (r2 = 0; r2 < o2.animate.length; r2++)
                !function() {
                  var e4 = o2.animate[r2];
                  e4.constructor === {}.constructor && setTimeout(function() {
                    t2.animate(e4);
                  }, 20);
                }();
            }
            if (o2.wiggle) {
              Array.isArray(o2.wiggle) || (o2.wiggle = [o2.wiggle]);
              for (r2 = 0; r2 < o2.wiggle.length; r2++)
                !function() {
                  var e4 = o2.wiggle[r2];
                  e4.constructor === {}.constructor && setTimeout(function() {
                    t2.wiggle(e4);
                  }, 20);
                }();
            }
            o2.expand && t2.expand(o2.expand === true ? null : o2.expand), o2.cache && (o2.cache.constructor === {}.constructor ? o2.cache.x ? t2.cache(To.Pick.choose(o2.cache.x), To.Pick.choose(o2.cache.y), To.Pick.choose(o2.cache.x), To.Pick.choose(o2.cache.y)) : t2.cache(To.Pick.choose(o2.cache.width), To.Pick.choose(o2.cache.height)) : t2.cache());
          }
        }, To.Style = { remembered: {}, clear: function() {
          return STYLE = {}, To.Style;
        }, clearTypes: function() {
          return delete (STYLE = {}).types, To.Style;
        }, clearGroups: function() {
          return delete (STYLE = {}).groups, To.Style;
        }, remember: function(e3) {
          return STYLE = STYLE || {}, zot(e3) && (e3 = "default"), To.Style.remembered[e3] = To.copy(STYLE, true), To.Style;
        }, clearRemembered: function(e3) {
          return zot(e3) ? To.Style.remembered = {} : delete To.Style.remembered[e3], To.Style;
        }, recall: function(e3) {
          return zot(e3) && (e3 = "default"), STYLE = To.Style.remembered[e3], To.Style;
        }, add: function(e3) {
          return STYLE = STYLE || {}, STYLE = To.merge(STYLE, e3), To.Style;
        }, addType: function(e3, t2) {
          return (STYLE = STYLE || {}).type || (STYLE.type = {}), STYLE.type[e3] = t2, To.Style;
        }, addGroup: function(e3, t2) {
          return (STYLE = STYLE || {}).group || (STYLE.group = {}), STYLE.group[e3] = t2, To.Style;
        }, remove: function(e3) {
          return delete (STYLE = STYLE || {})[e3], To.Style;
        }, removeType: function(e3) {
          return (STYLE = STYLE || {}).type && delete STYLE.type[e3], To.Style;
        }, removeGroup: function(e3) {
          return (STYLE = STYLE || {}).group && delete STYLE.group[e3], To.Style;
        } }, To.TIME = "seconds", To.TIMECHECK = false, To.ANIMATE = true, To.OPTIMIZE = false, To.ACTIONEVENT = "mousedown", To.DEFAULTWIRE = "currentValue", To.KEYFOCUS = null, To.POSREG = false, To.DRAGALL = false, To.MOBILE = "default", To.Ticker = { stages: null, myUpdate: null, alwaysList: new To.Dictionary(), list: new To.Dictionary(), wire: new To.Dictionary(), setFPS: function(e3, t2) {
          zot(e3) && zot(t2) ? t2 = e3 = 60 : zot(e3) ? e3 = 60 : zot(t2) && (t2 = e3), To.Ticker.framerate = createjs.Ticker.framerate = To.mobile() ? e3 : t2;
        }, setTimingMode: function(e3) {
          createjs.Ticker.timingMode = createjs.Ticker.RAF, e3 == "synched" && (createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED), e3 == "timeout" && (createjs.Ticker.timingMode = createjs.Ticker.TIMEOUT);
        }, add: function(e3, t2, o2) {
          z_d("30");
          var n = To.Ticker;
          return n.has(e3, t2) ? e3 : (!zot(t2) && t2.update || (t2 = zdf.stage), zot(e3) || typeof e3 != "function" ? void zog("zim.Ticker.add() - only add functions") : (n.list.at(t2) ? n.list.at(t2).push(e3) : n.list.add(t2, [e3]), n.ticker || (n.ticker = createjs.Ticker.on("tick", n.call)), n.framerate || n.setFPS(), e3));
        }, addWire: function(e3, t2) {
          if (z_d("30"), zot(t2[0]))
            return e3;
          var o2 = To.Ticker;
          o2.wire.add(e3, t2);
          var n = t2[0][t2[1]];
          return t2[4] && (n = t2[4](n, "from")), t2[3] && (e3[t2[6]] = t2[7] = n), o2.ticker || (o2.ticker = createjs.Ticker.on("tick", o2.call)), o2.framerate || o2.setFPS(), e3;
        }, rawID: {}, raw: function(o2) {
          z_d("30");
          var n = To.makeID(7, "letters");
          return function e3(t2) {
            o2(t2), To.Ticker.rawID[n] = requestAnimationFrame(e3);
          }(), n;
        }, removeRaw: function(e3) {
          cancelAnimationFrame(To.Ticker.rawID[e3]), delete To.Ticker.rawID[e3];
        }, call: function(e3) {
          for (var t2, o2, n = To.Ticker, r2 = [], i2 = 0; i2 < n.list.length; i2++) {
            t2 = n.list.objects[i2], o2 = n.list.values[i2];
            for (var a = 0; a < o2.length; a++)
              o2[a](e3);
            var l = false;
            (n.alwaysList.at(t2) || 0 < o2.length && (zot(n.update) && !To.OPTIMIZE && (zns || !OPTIMIZE) || n.update)) && (l = true), l && r2.indexOf(t2) < 0 && r2.push(t2);
          }
          for (i2 = n.wire.length - 1; 0 <= i2; i2--) {
            var s5, c2 = n.wire.objects[i2], u = n.wire.values[i2];
            u && ((s5 = c2[u[6]]) != u[7] && (u[4] && (s5 = u[4](s5, "to", u[7])), u[0][u[1]] = u[7] = s5, u[5] && u[5](s5), (t2 = u[0].stage) && r2.indexOf(t2) < 0 && r2.push(t2)), u[2] && u[0] && (s5 = u[0][u[1]], u[7] != s5 && (u[4] && (s5 = u[4](s5, "from", u[7])), c2[u[6]] = u[7] = s5, u[5] && u[5](s5), (t2 = c2.stage) && r2.indexOf(t2) < 0 && r2.push(t2))));
          }
          if (n.list.length == 0)
            for (i2 = 0; i2 < n.alwaysList.length; i2++)
              t2 = n.alwaysList.objects[i2], r2.indexOf(t2) < 0 && r2.push(t2);
          for (var d = r2.length, i2 = 0; i2 < d; i2++)
            r2[i2].update();
        }, always: function(e3) {
          z_d("30");
          var t2 = To.Ticker;
          t2.framerate || t2.setFPS(), !zot(e3) && e3.update || (e3 = zdf.stage), t2.alwaysList.add(e3, true), t2.ticker || (t2.ticker = createjs.Ticker.on("tick", t2.call));
        }, alwaysOff: function(e3) {
          var t2 = To.Ticker;
          !zot(e3) && e3.update || (e3 = zdf.stage), t2.alwaysList.remove(e3);
        }, remove: function(e3) {
          var t2 = To.Ticker;
          if (zot(e3) || typeof e3 != "function")
            zog("zim.Ticker - only remove functions");
          else {
            for (var o2 = 0; o2 < t2.list.length; o2++) {
              t2.list.objects[o2];
              var n = t2.list.values[o2].indexOf(e3);
              -1 < n && t2.list.values[o2].splice(n, 1), t2.list.values[o2].length;
            }
            0 < t2.alwaysList.length || 0 < t2.list.length || 0 < t2.wire.length || (createjs.Ticker.off("tick", t2.ticker), t2.ticker = null);
          }
        }, removeAll: function(e3) {
          for (var t2, o2 = To.Ticker, n = 0; n < o2.list.length; n++)
            t2 = o2.list.objects[n], !zot(e3) && e3 !== t2 || (o2.list.values[n] = []), o2.list.values[n].length;
          0 < o2.alwaysList.length || 0 < o2.list.length || 0 < o2.wire.length || (createjs.Ticker.off("tick", o2.ticker), o2.ticker = null);
        }, removeWire: function(e3, t2, o2, n) {
          var r2 = To.Ticker;
          if (zot(e3) && zot(t2) && zot(o2) && zot(n))
            r2.wire.clear();
          else
            for (var i2 = r2.wire.length - 1; 0 <= i2; i2--) {
              var a = r2.wire.objects[i2], l = r2.wire.values[i2];
              l && (e3 && a != e3 || t2 && l[0] != t2 || o2 && l[1] != o2 || n && l[6] != n || (r2.wire.objects.splice(i2, 1), r2.wire.values.splice(i2, 1)));
            }
          0 < r2.alwaysList.length || 0 < r2.list.length || 0 < r2.wire.length || (createjs.Ticker.off("tick", r2.ticker), r2.ticker = null);
        }, has: function(e3, t2) {
          return !zot(t2) && t2.update || (t2 = zdf.stage), To.Ticker.list && To.Ticker.list.at(t2) && 0 <= To.Ticker.list.at(t2).indexOf(e3);
        }, dispose: function(e3) {
          for (var t2, o2 = To.Ticker, n = 0, r2 = o2.list.length - 1; 0 <= r2; r2--)
            t2 = o2.list.objects[r2], zot(e3) || e3 === t2 ? (o2.list.remove(e3), o2.alwaysList.remove(e3)) : n += o2.list.values[r2].length;
          if (!(0 < o2.alwaysList.length))
            return n == 0 && (createjs.Ticker.off("tick", o2.ticker), o2.ticker = null), true;
        } }, To.Ticker.setFPS(), Object.defineProperty(To.Ticker, "update", { get: function() {
          return To.Ticker.myUpdate;
        }, set: function(e3) {
          var t2 = To.Ticker;
          typeof e3 != "boolean" && (e3 = null), t2.myUpdate = e3, t2.myUpdate === false && (cancelAnimationFrame(t2.ticker), t2.alwaysList = new To.Dictionary());
        } }), To.Pages = function(z, y, e3, t2, b, o2, n, r2, i2) {
          if (a = zob(To.Pages, arguments, "pages, transition, speed, transitionTable, holder, arrowDisableColor, style, group, inherit", this))
            return a;
          z_d("71"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Pages", this.group = r2;
          var a = n === false ? {} : To.getStyle(this.type, this.group, i2), l = Ao(e3);
          if (zot(z) && (z = a.pages != null ? a.pages : []), this.pages = z, zot(y) && (y = a.transition != null ? a.transition : "none"), zot(e3) && (e3 = a.speed != null ? a.speed : l == "s" ? 0.2 : 200), zot(t2) && (t2 = a.transitionTable != null ? a.transitionTable : []), this.transitionTable = t2, zot(o2) && (o2 = a.arrowDisableColor != null ? a.arrowDisableColor : To.grey), this.arrowDisableColor = o2, zot(b) && (b = a.holder != null ? a.holder : null), zot(b) && zdf && (b = zdf.stage), b.getBounds && b.getBounds()) {
            this.speed = e3, this.active = true;
            var v = this;
            v.transitioning = false;
            var w, C, x2 = b.getBounds().width, k = b.getBounds().height;
            y == "none" && t2 == [] || m2();
            for (var s5, T2 = ["left", "right", "up", "down"], c2 = true, u = 0; u < z.length; u++)
              (g = z[u]).constructor != {}.constructor && (g = z[u] = { page: z[u] }), g.swipe && (c2 = false);
            for (var d, h2, g, u = 0; u < z.length; u++)
              (g = z[u]).constructor !== {}.constructor && (g = z[u] = { page: z[u] }), c2 && (d = z[u - 1], h2 = z[u + 1], g.swipe = [d ? d.page : null, h2 ? h2.page : null]), S2(g.page, g.swipe);
            var p, A3 = this.page = z[0] ? z[0].page : null;
            zot(this.page) || (this.index = 0), this.addChild(A3), E(A3), this.swipe = new To.Swipe(b);
            var P = false, f3 = this.swipe.on("swipe", function(e4) {
              var t3;
              !v.active || (t3 = e4.currentTarget.direction) != "none" && (e4 = "", t3 == "left" ? e4 = "right" : t3 == "right" ? e4 = "left" : t3 == "up" ? e4 = "down" : t3 == "down" && (e4 = "up"), t3 = e4, e4 = T2.indexOf(t3), s5 = A3.zimSwipeArray[e4], p = [s5, t3, null, null, true], v.page = A3, v.nextPage = s5, v.direction = t3, v.dispatchEvent("swipe"), setTimeout(function() {
                P || v.go(s5, t3, null, null, true);
              }, 50));
            });
            this.addPage = function(e4, t3) {
              S2(e4, t3), v.pages.push({ page: e4 }), A3 ? e4.parent && e4.parent.removeChild(e4) : (A3 = v.page = e4, v.addChild(A3));
            }, this.removePage = function(o3) {
              I2(o3), v.currentPage == o3 && (v.removeChild(o3), b.stage && b.stage.update()), To.loop(v.pages, function(e4, t3) {
                e4.page != o3 && e4 != o3 || v.pages.splice(t3, 1);
              }, true), o3.zimSwipeArray = null;
            }, this.setSwipeArray = function(e4, t3) {
              zot(t3) && (t3 = []);
              t3 = { page: e4, swipe: t3 };
              t3.page.zimSwipeArray = t3.swipe || [];
            }, this.pause = function() {
              P = true;
            }, this.unpause = function() {
              P && v.go(p[0], p[1], p[2], p[3], p[4]);
            };
            var B = true;
            this.go = function(e4, t3, o3, n2, r3) {
              if (typeof e4 == "number") {
                var i3 = v.pages[e4];
                if (zot(i3))
                  return;
                e4 = i3.page;
              }
              setTimeout(function() {
                P = false;
              }, 200);
              for (var a2 = [{ x: x2 }, { x: -x2 }, { y: k }, { y: -k }], i3 = [{ x: x2 / 2, alpha: 0 }, { x: -x2 / 2, alpha: 0 }, { y: k / 2, alpha: 0 }, { y: -k / 2, alpha: 0 }], l2 = y, s6 = v.speed, c3 = 0; c3 < v.transitionTable.length; c3++)
                if (v.transitionTable[c3][0] == A3 && v.transitionTable[c3][1] == e4) {
                  l2 = v.transitionTable[c3][2], zot(v.transitionTable[c3][3]) || (s6 = v.transitionTable[c3][3]);
                  break;
                }
              if (zot(o3) && (o3 = l2), zot(n2) && (n2 = s6), v.speed = n2, v.direction = t3, e4 == "" || e4 == null)
                v.page = A3, v.dispatchEvent("nothing");
              else if (typeof e4 == "string")
                v.page = A3, v.dispatchEvent(e4);
              else {
                let f5 = function(e5) {
                  e5[0].uncache(), e5[1].uncache(), v.transitioning = false, v.dispatchEvent("pagetransitioned"), v.removeChild(v.lastPage), o3 == "fan" && (t3 == "right" || t3 == "down" ? (v.lastPage.rotation = 0, v.lastPage.regY = 0, v.lastPage.mov(0, -v.lastPage.height)) : (v.page.rotation = 0, v.page.regY = 0, v.page.mov(0, -v.lastPage.height))), v.removeChild(w), v.removeChild(C), E(A3), B = true;
                }, m4 = function(e5) {
                  v.removeChild(v.lastPage), To.animate(e5.shift(), { alpha: 0 }, v.speed / 2, null, f5, e5);
                };
                var f4 = f5, m3 = m4;
                if (e4 != A3) {
                  zot(t3) && (t3 = "right");
                  n2 = T2.indexOf(t3);
                  if (B) {
                    B = false, e4.x = 0, e4.y = 0, e4.alpha = e4.zimOriginalAlpha;
                    var u2, d2;
                    0 <= ["pixelDark", "pixelLight", "pixelZIM", "bubbleDark", "bubbleLight", "bubbleZIM", "lineDark", "lineLight", "lineZIM"].indexOf(o3) && (u2 = o3, d2 = true, o3 = "slide");
                    var h3, g2, p2;
                    0 <= ["explodeDark", "explodeLight", "explodeZIM"].indexOf(o3) && (h3 = o3, d2 = true, o3 = "fade"), o3.type == "Emitter" && (o3 = (d2 = o3).horizontal || o3.vertical ? "slide" : "fade"), v.transitioning = true, o3 == "slide" ? (e4.x = -(0 | a2[n2].x), e4.y = -(0 | a2[n2].y), e4.cache(0, 0, (x2 + 1) / e4.scaleX, (k + 1) / e4.scaleY), A3.cache(0, 0, (x2 + 1) / A3.scaleX, (k + 1) / A3.scaleY), v.addChild(e4), v.addChild(A3), To.animate(A3, a2[n2], v.speed, null, f5, [A3, e4]), To.animate(e4, [{ x: 0 }, { x: 0 }, { y: 0 }, { y: 0 }][n2], v.speed)) : o3 == "reveal" ? (e4.cache(0, 0, (x2 + 1) / e4.scaleX, (k + 1) / e4.scaleY), A3.cache(0, 0, (x2 + 1) / A3.scaleX, (k + 1) / A3.scaleY), v.addChild(e4), v.addChild(A3), To.animate(A3, i3[n2], v.speed, null, f5, [A3, e4])) : o3 == "fade" ? (e4.cache(0, 0, (x2 + 1) / e4.scaleX, (k + 1) / e4.scaleY), A3.cache(0, 0, (x2 + 1) / A3.scaleX, (k + 1) / A3.scaleY), e4.alpha = 1, v.addChild(e4), v.addChild(A3), To.animate(A3, { alpha: 0 }, v.speed, null, f5, [A3, e4])) : o3 == "black" ? (e4.cache(0, 0, (x2 + 1) / e4.scaleX, (k + 1) / e4.scaleY), A3.cache(0, 0, (x2 + 1) / A3.scaleX, (k + 1) / A3.scaleY), e4.alpha = 1, v.addChild(e4), v.addChild(A3), w.alpha = 0, v.addChild(w), To.animate(w, { alpha: 1 }, v.speed / 2, null, m4, [w, A3, e4])) : o3 == "clear" ? (e4.cache(0, 0, (x2 + 1) / e4.scaleX, (k + 1) / e4.scaleY), A3.cache(0, 0, (x2 + 1) / A3.scaleX, (k + 1) / A3.scaleY), e4.alpha = 0, v.addChild(e4), v.addChild(A3), To.animate(A3, { alpha: 0 }, v.speed / 2), To.animate(e4, { alpha: 1 }, v.speed / 2, null, f5, [A3, e4], v.speed / 2)) : o3 == "white" ? (e4.cache(0, 0, (x2 + 1) / e4.scaleX, (k + 1) / e4.scaleY), A3.cache(0, 0, (x2 + 1) / A3.scaleX, (k + 1) / A3.scaleY), e4.alpha = 1, v.addChild(e4), v.addChild(A3), C.alpha = 0, v.addChild(C), To.animate(C, { alpha: 1 }, v.speed / 2, null, m4, [C, A3, e4])) : o3 == "fan" ? (e4.cache(0, 0, (x2 + 1) / e4.scaleX, (k + 1) / e4.scaleY), A3.cache(0, 0, (x2 + 1) / A3.scaleX, (k + 1) / A3.scaleY), e4.alpha = 1, t3 == "right" || t3 == "down" ? (v.addChild(e4), v.addChild(A3), A3.regY = A3.height, A3.mov(0, A3.height), To.animate(A3, { rotation: -90 }, v.speed, null, f5, [A3, e4])) : (v.addChild(A3), v.addChild(e4), e4.regY = A3.height, e4.mov(0, A3.height), e4.rotation = -90, To.animate(e4, { rotation: 0 }, v.speed, null, f5, [A3, e4]))) : (v.transitioning = false, v.addChild(e4), v.removeChild(A3), B = true), d2 && (a2 = n2 < 2, u2 || o3 == "slide" ? (p2 = u2 ? (u2 == "lineDark" || u2 == "lineLight" ? g2 = new To.Rectangle(a2 ? 30 : x2 + 5, a2 ? k + 5 : 30, u2 == "lineDark" ? To.dark : To.white).alp(0.2) : u2 == "lineZIM" ? g2 = new To.Rectangle(a2 ? 50 : x2 + 5, a2 ? k + 5 : 50, [To.green, To.yellow, To.orange, To.pink, To.blue]).alp(0.5) : u2 == "pixelDark" || u2 == "pixelLight" ? g2 = new To.Rectangle(40, 40, To.clear, u2 == "pixelDark" ? To.dark : To.white, 2).alp(0.7) : u2 == "pixelZIM" ? g2 = new To.Rectangle(40, 40, [To.green, To.yellow, To.orange, To.pink, To.blue]).alp(0.7) : u2 == "bubbleDark" || u2 == "bubbleLight" ? g2 = new To.Circle(30, To.clear, u2 == "bubbleDark" ? To.dark : To.white, 2).alp(0.7) : u2 == "bubbleZIM" && (g2 = new To.Circle(30, [To.green, To.yellow, To.orange, To.pink, To.blue]).alp(0.7)), g2.centerReg({ add: false }), u2 == "lineDark" || u2 == "lineLight" || u2 == "lineZIM" ? new To.Emitter({ obj: g2, life: 0.5, decayTime: 0.5, shrink: false, force: 0, gravity: 0, width: 0, startPaused: true }) : new To.Emitter({ obj: g2, num: 6, life: 0.5, decayTime: 0.5, width: a2 ? 0 : x2, height: a2 ? k : 0, vertical: a2, horizontal: !a2, startPaused: true })) : d2, i3 = [{ x: 0, y: k / 2 }, { x: x2, y: k / 2 }, { x: x2 / 2, y: 0 }, { x: x2 / 2, y: k }], a2 = [{ x: x2, y: k / 2 }, { x: 0, y: k / 2 }, { x: x2 / 2, y: k }, { x: x2 / 2, y: 0 }], p2.centerReg(b).spurt(null, v.speed), p2.x = i3[n2].x, p2.y = i3[n2].y, To.animate(p2, a2[n2], v.speed, null, function() {
                      u2 && p2.dispose();
                    })) : !h3 && o3 != "fade" || ((p2 = h3 ? (h3 == "explodeDark" || h3 == "explodeLight" ? g2 = new To.Circle(150, h3 == "explodeDark" ? To.dark : To.white).alp(0.5) : h3 == "explodeZIM" && (g2 = new To.Circle(130, [To.green, To.yellow, To.orange, To.pink, To.blue]).alp(0.7)), new To.Emitter({ obj: g2, num: 5, gravity: 0, force: { min: 20, max: 40 }, life: 0.5, shrink: false, decayTime: 0.5, startPaused: true })) : d2).centerReg(b).spurt(null, 0.35 * v.speed), p2.on("fizzed", function() {
                      h3 && p2.dispose();
                    }))), I2(A3), v.lastPage = A3, v.page = e4, v.index = -1;
                    for (c3 = 0; c3 < v.pages.length; c3++)
                      v.pages[c3].page == v.page && (v.index = c3);
                    o3 == "none" && E(e4), zot(r3) && (r3 = false), v.fromSwipe = r3, v.dispatchEvent("page"), A3 = e4, v.setArrows(z.index), b.stage && b.stage.update();
                  }
                }
              }
            }, this.resize = function() {
              x2 = b.getBounds().width, k = b.getBounds().height, y == "none" && t2 == [] || m2();
            }, this.puff = function(e4) {
              for (var t3 = 0; t3 < z.length; t3++)
                v.addChild(z[t3].page);
              v.addChild(A3), 0 < e4 && setTimeout(function() {
                v.settle();
              }, e4 * (l == "s" ? 1e3 : 1));
            }, this.settle = function() {
              v.removeAllChildren(), v.addChild(A3), v.dispatchEvent("puffed");
            }, this.disable = function() {
              v.active = false;
            }, this.enable = function() {
              v.active = true;
            }, this.arrows = {}, !(this.setArrows = function(e4) {
              var o3, t3;
              To.isEmpty(v.arrows) || (t3 = v.pages[v.index]) && t3.swipe && (o3 = t3.swipe, t3 = [LEFT, RIGHT, DOWN, UP], To.loop(t3, function(e5, t4) {
                o3[t4] ? To.loop(v.arrows[e5], function(e6) {
                  return e6.setDisabled === true ? (e6.activate(false, v.arrowDisableColor), void (e6.setDisabled = null)) : void (e6.enabled || e6.activate(true, e6.arrowBackgroundColor));
                }) : To.loop(v.arrows[e5], function(e6) {
                  return e6.setDisabled === false ? (e6.activate(true, e6.arrowBackgroundColor), void (e6.setDisabled = null)) : void (e6.enabled && e6.activate(false, v.arrowDisableColor));
                });
              }), v.stage && v.stage.update());
            }) !== n && To.styleTransforms(this, a), this.dispose = function(e4, t3, o3) {
              return v.swipe.off("swipe", f3), v.swipe.dispose(), o3 || this.zimContainer_dispose(true), true;
            };
          } else
            zog("zim controls - Pages():\nholder object must have bounds set");
          function m2() {
            (w = new createjs.Shape()).graphics.f("black").r(0, 0, x2, k + 1), (C = new createjs.Shape()).graphics.f("white").r(0, 0, x2, k + 1);
          }
          function S2(e4, t3) {
            e4.zimHTMLList = new To.Dictionary(), I2(e4), e4.zimSwipeArray = t3 || [], e4.zimOriginalAlpha = e4.alpha, e4.parent && e4.parent.removeChild(g.page);
          }
          function E(e4) {
            if (!zot(e4))
              for (var t3 = 0; t3 < e4.zimHTMLList.length; t3++)
                e4.addChildAt(e4.zimHTMLList.values[t3].obj, e4.zimHTMLList.values[t3].depth);
          }
          function I2(e4) {
            e4.zimHTMLList.clear();
            for (var t3, o3 = 0; o3 < e4.numChildren; o3++)
              (n2 = e4.getChildAt(o3)).type != "TextArea" && n2.type != "Loader" && n2.type != "Tag" || (t3 = { obj: n2, depth: e4.getChildIndex(n2) }, e4.zimHTMLList.add(n2, t3));
            for (var n2, o3 = e4.numChildren - 1; 0 <= o3; o3--)
              (n2 = e4.getChildAt(o3)).type != "TextArea" && n2.type != "Loader" && n2.type != "Tag" || e4.removeChild(n2);
          }
        }, To.extend(To.Pages, To.Container, ["clone", "dispose"], "zimContainer", false), To.Arrow = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u) {
          if (m2 = zob(To.Arrow, arguments, "backgroundColor, rollBackgroundColor, pages, direction, type, newPage, trans, speed, style, group, inherit", this))
            return m2;
          z_d("71.2"), this.group = c2;
          var d, h2, g, p, f3, m2 = s5 === false ? {} : To.getStyle("Arrow", this.group, u);
          function z() {
            var e4 = o2.pages[o2.index];
            if (e4 && e4.swipe) {
              e4 = e4.swipe;
              return n == "left" ? e4[0] : n == "right" ? e4[1] : n == "up" ? e4[2] : n == "down" ? e4[3] : void 0;
            }
          }
          zot(n) && (n = m2.direction != null ? m2.direction : "right"), zot(e3) && (e3 = m2.backgroundColor != null ? m2.backgroundColor : To.blue), this.arrowBackgroundColor = e3, zot(t2) && (t2 = m2.rollBackgroundColor != null ? m2.rollBackgroundColor : To.blue.lighten(0.2)), zot(r2) && (r2 = m2.type != null ? m2.type : "triangle"), zot(i2) && (i2 = m2.newPage != null ? m2.newPage : null), zot(a) && (a = m2.trans != null ? m2.trans : null), zot(l) && (l = m2.speed != null ? m2.speed : null), r2 == "triangle" ? (d = new To.Triangle(45, 45, 45, e3, null, null, null, null, -7).rot(90), p = new To.Triangle(45, 45, 45, t2, null, null, null, null, -7).rot(90)) : r2 == "thick" ? (d = new To.Shape(), h2 = d.graphics.f(e3).command, g = "AhFBdIiWAAIAAi4ICWAAIAAh7IEhDWIkhDXg", d.p(g).reg(-4), p = new To.Shape().f(t2).p(g).reg(-4)) : r2 == "thin" ? (d = new To.Shape(), h2 = d.graphics.f(e3).command, g = "AhBCIIBZhbIjWAAIAAhVIDaAAIhdhfIA9g+IDDDFIAAAAIAAAAIjDDGg", d.p(g).reg(-4), p = new To.Shape().f(t2).p(g).reg(-4)) : r2 == "angle" && (d = new To.Shape(), h2 = d.graphics.f(e3).command, g = "AiNC5IC4i5Ii4i5IAxgxIDqDqIjqDrg", d.p(g).reg(-3), p = new To.Shape().f(t2).p(g).reg(-3)), this.zimButton_constructor(50, 50, "", clear, clear, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, d, p), this.type = "Arrow", zot(o2) || o2.type != "Pages" || (p = (zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", f3 = this, zot(o2.arrows) && (o2.arrows = {}), zot(o2.arrows[n]) && (o2.arrows[n] = []), o2.arrows[n].push(this), this.activate = function(e4, t3) {
            zot(e4) && (e4 = true), zot(t3) && (t3 = To.grey()), t3 !== false && (e4 ? !(f3.enabled = true) !== t3 && (r2 == "triangle" ? f3.icon.color = f3.arrowBackgroundColor : h2.style = f3.arrowBackgroundColor) : (f3.enabled = false) !== t3 && (r2 == "triangle" ? f3.icon.color = t3 : h2.style = t3));
          }, z() || this.activate(false, o2.arrowDisableColor), this.expand(), this.on(p, function() {
            var e4;
            o2.transitioning || (e4 = z()) && o2.go(e4, n, a, l);
          }), s5 !== false && To.styleTransforms(this, m2), this.clone = function() {
            return f3.cloneProps(new To.Arrow(e3, t2, o2, n, r2, i2, a, l, s5, this.group, u));
          });
        }, To.extend(To.Arrow, To.Button, "clone", "zimButton", false), To.HotSpots = function(a, o2, r2) {
          var e3;
          if (e3 = zob(To.HotSpots, arguments, "spots, local, mouseDowns", this))
            return e3;
          z_d("72"), this.zimContainer_constructor(null, null, null, null, false), this.type = "HotSpots", zot(o2) && (o2 = true), zot(r2) && (r2 = false);
          var l, i2, s5 = (zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", c2 = this.hotSpots = [];
          zot(a) && (a = []);
          for (var t2 = 0; t2 < a.length; t2++)
            u(a[t2]);
          function u(e4) {
            var t3 = null;
            if (!Array.isArray(e4.rect)) {
              if (!(t3 = e4.rect))
                return void zog("zim controls - HotSpots(): HotSpot " + e4.page + " " + e4.rect + " button does not exist");
              e4.rect = [t3.x, t3.y, t3.width || 1, t3.height || 1];
            }
            (i2 = new To.HotSpot(e4.page, e4.rect[0], e4.rect[1], e4.rect[2], e4.rect[3], e4.call, e4.callOver, e4.callOut, o2, e4.talk)).zimHSpage = e4.page, i2.button = t3, c2.push(i2), i2.on(s5, d), t3 && zot(e4.callOver) && zot(e4.callOut) && (i2.spot.mouseEnabled = false, i2.spot.mouseChildren = false, t3.zimHScall = e4.call, t3.zimHSEvent = t3.on(s5, d, true), r2 || (t3.zimHSMDEvent = t3.on("mousedown", function(e5) {
              e5.stopImmediatePropagation();
            })), t3.cursor = "pointer");
          }
          function d(e4) {
            e4.stopImmediatePropagation && e4.stopImmediatePropagation(), window.event && (window.event.cancelBubble = true), typeof e4.currentTarget.zimHScall == "function" && e4.currentTarget.zimHScall(e4);
          }
          this.add = this.addHotSpot = function(e4, t3, o3, n, r3, i3) {
            l = { page: e4, rect: t3, call: o3, callOver: n, callOut: r3, talk: i3 }, a.push(l), u(l);
          }, this.show = function() {
            for (var e4 = 0; e4 < c2.length; e4++)
              (i2 = c2[e4]).button || (i2.spot.alpha = 0.2);
          }, this.hide = function() {
            for (var e4 = 0; e4 < c2.length; e4++)
              (i2 = c2[e4]).spot.alpha = 0;
          }, this.remove = this.removeHotSpots = function(e4, t3) {
            for (var o3 = a.length - 1; 0 <= o3; o3--)
              l = a[o3], i2 = c2[o3], t3 && !Array.isArray(t3) && (t3 = [t3.x, t3.y, t3.getBounds().width, t3.getBounds().height]), (zot(e4) && zot(t3) || zot(t3) && e4 == l.page || zot(e4) && To.arraysEqual(t3, l.rect) || e4 == l.page && To.arraysEqual(t3, l.rect)) && (a.splice(o3, 1), i2.button && (i2.button.off(s5, i2.button.zimHSEvent), i2.button.zimHSEvent = null, r2 || (i2.button.off("mousedown", i2.button.zimHSMDEvent), i2.button.zimHSMDEvent = null)), i2.off(s5, d), i2.dispose(), c2.splice(o3, 1));
          }, this.dispose = function(e4, t3, o3) {
            for (var n = 0; n < c2.length; n++)
              (i2 = c2[n]).button && (i2.button.off(s5, i2.button.zimHSEvent), i2.button.zimHSCall = null, i2.button.zimHSEvent = null, r2 || (i2.button.off("mousedown", i2.button.zimHSMDEvent), i2.button.zimHSMDEvent = null)), i2.off(s5, d), i2.dispose();
            return true;
          };
        }, To.extend(To.HotSpots, To.Container, "dispose", "zimContainer", false), To.HotSpot = function(n, e3, t2, o2, r2, i2, a, l, s5, c2) {
          var u, d, h2, g, p, f3, m2, z, y, b;
          if (h2 = zob(To.HotSpot, arguments, "obj, x, y, width, height, call, callOver, callOut, local, talk", this))
            return h2;
          z_d("73"), this.zimContainer_constructor(null, null, null, null, false), this.type = "HotSpot", !zot(n) && n.addChild ? n instanceof createjs.Container != 0 ? zot(e3) || zot(t2) || zot(o2) || zot(r2) ? zog("zim controls - HotSpot():\nPlease pass in x, y, width, height") : (zot(s5) && (s5 = true), u = (zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", d = o2, h2 = r2, f3 = s5 ? (g = new To.Point(e3, t2), p = o2, r2) : (g = n.globalToLocal(e3, t2), p = (f3 = n.globalToLocal(e3 + d, t2 + h2)).x - g.x, f3.y - g.y), (m2 = new To.Shape(o2, r2)).talk = zot(c2) ? "HotSpot" : c2, m2.alpha = 0, m2.graphics.f("black").dr(0, 0, p, f3), m2.x = g.x, m2.y = g.y, m2.cursor = "pointer", m2.expand(0), this.spot = m2, typeof i2 == "function" && (z = m2.on(u, function(e4) {
            i2(e4);
          })), typeof a == "function" && (y = m2.on("mouseover", function(e4) {
            a(e4);
          })), typeof l == "function" && (b = m2.on("mouseout", function(e4) {
            l(e4);
          })), n.addChild(m2), this.show = function() {
            m2.alpha = 0.5, n.stage && n.stage.update();
          }, this.hide = function() {
            m2.alpha = 0, n.stage && n.stage.update();
          }, this.dispose = function(e4, t3, o3) {
            return z && m2.off(u, y), y && m2.off("mouseover", y), b && m2.off("mouseout", b), n.removeChild(m2), !(m2 = null);
          }) : zog("zim controls - HotSpot():\nObjects passed in should be Containers") : zog("zim controls - HotSpot():\nPlease pass in container object for obj");
        }, To.extend(To.HotSpot, To.Container, "dispose", "zimContainer", false), To.Guide = function(n, r2, i2, t2, o2, e3, a, l) {
          if (T2 = zob(To.Guide, arguments, "obj, vertical, percent, hideKey, pixelKey, style, group, inherit", this))
            return T2;
          z_d("76"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Guide", this.group = a;
          var s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2 = e3 === false ? {} : To.getStyle(this.type, this.group, l);
          function A3(e4, t3, o3) {
            var n2 = new To.Container({ style: false });
            return n2.shape = new To.Shape(), n2.shape.graphics.s(t3).ss(1).f(e4).r(0, 0, u, d), n2.shape.alpha = 0.9, n2.addChild(n2.shape), n2.label = new createjs.Text("10", "16px arial", o3), n2.label.textAlign = "center", n2.label.textBaseline = "middle", n2.addChild(n2.label), n2.mouseChildren = false, n2.mouseEnabled = false, n2;
          }
          function P(e4) {
            var t3, o3;
            e4 ? (t3 = n.globalToLocal(e4.rawX / To.scaX, e4.rawY / To.scaY), k = t3) : t3 = { x: k.x, y: k.y }, i2 ? r2 ? (o3 = Math.round(Math.abs(t3.x - C.x) / v * 100), m2.label.text = "x:" + Math.max(0, Math.min(o3, 100)) + "%", m2.y = Math.max(g, Math.min(t3.y, f3))) : (o3 = Math.round(Math.abs(t3.y - C.y) / w * 100), m2.label.text = "y:" + Math.max(0, Math.min(o3, 100)) + "%", m2.x = Math.max(h2, Math.min(t3.x, p))) : r2 ? (o3 = Math.round(Math.abs(t3.x - C.x)), m2.label.text = "x:" + Math.max(0, Math.min(o3, Math.round(v))), m2.y = Math.max(g, Math.min(t3.y, f3))) : (o3 = Math.round(Math.abs(t3.y - C.y)), m2.label.text = "y:" + Math.max(0, Math.min(o3, Math.round(w))), m2.x = Math.max(h2, Math.min(t3.x, p))), z && z.update();
          }
          function B() {
            var e4;
            b = true, v = n.getBounds().width, w = n.getBounds().height, x2 = r2 ? (e4 = "ew-resize", new createjs.Rectangle(0, 0, v, 0)) : (e4 = "ns-resize", new createjs.Rectangle(0, 0, 0, w)), To.noDrag(C), setTimeout(function() {
              To.drag(C, x2, e4, e4, null, null, true);
            }, 500), z.mouseMoveOutside = true, z.enableMouseOver(10), p = v - 2 * u / 3, f3 = w - d - d, C.uncache();
            var t3 = C.graphics;
            r2 ? (t3.c().s("rgba(0,255,255,.1)").ss(20).mt(0, 0).lt(0, w), t3.f().s("white").ss(2).mt(0, 0).lt(0, w), t3.s("#00c5af").sd([20, 20]).mt(0, 0).lt(0, w).sd(), C.cache(-10, 0, 20, w)) : (t3.c().s("rgba(255,0,255,.1)").ss(20).mt(0, 0).lt(v, 0), t3.f().s("white").ss(2).mt(0, 0).lt(v, 0), t3.s("#d61fa0").sd([20, 20]).mt(0, 0).lt(v, 0).sd(), C.cache(0, -10, v, 20)), r2 ? m2.x = v : m2.y = w, s5.addChild(m2);
          }
          function S2(e4) {
            e4 = e4 || event, z && (String.fromCharCode(e4.keyCode) == t2.toUpperCase() && s5.toggle(), String.fromCharCode(e4.keyCode) == o2.toUpperCase() && (s5.pixels = !s5.pixels));
          }
          !zot(n) || T2.obj != null && T2.obj, zot(n) && (n = zdf ? zdf.stage : "stage"), zot(r2) && (r2 = T2.vertical == null || T2.vertical), n == "stage" || n.addChild && n.getBounds && n.getBounds() ? (zot(i2) && (i2 = T2.percent == null || T2.percent), zot(t2) && (t2 = T2.hideKey != null ? T2.hideKey : "G"), zot(o2) && (o2 = T2.pixelKey != null ? T2.pixelKey : "P"), s5 = this, h2 = (u = 80) / 6 + u / 2, g = 2 * (d = 26), r2 ? ((m2 = A3("#00c5af", "white", "white")).shape.regX = u + u / 6, m2.shape.regY = d / 2, m2.label.x = -u / 2 - u / 6) : ((m2 = A3("#d61fa0", "white", "white")).shape.regX = u / 2, m2.shape.regY = d + d / 4, m2.label.y = 3 * -d / 4), n != "stage" && n.addChild(s5), y = To.added(s5, function() {
            n == "stage" ? (z = s5.stage, n = z) : z = n.stage;
            n.addChild(s5), v = n.getBounds().width, w = n.getBounds().height, r2 ? (m2.y = w / 2, m2.label.text = "x:" + (s5.percent ? "70%" : Math.round(70 * v / 100))) : (m2.x = v / 2, m2.label.text = "y:" + (s5.percent ? "70%" : Math.round(70 * w / 100)));
            C = new To.Shape(), s5.addChild(C), r2 ? C.x = 0.7 * v : C.y = 0.7 * w, b || (n.addChild(s5), B());
            z.off("stagemousemove", c2), c2 = z.on("stagemousemove", P), z.update();
          }), b = false, k = { x: 0, y: 0 }, Object.defineProperty(this, "pixels", { get: function() {
            return !i2;
          }, set: function(e4) {
            i2 = !e4, s5.resize();
          } }), window.addEventListener("keydown", S2), this.toggled = true, this.toggle = function(e4) {
            return e4 === true ? s5.visible = s5.toggled = true : e4 === false ? s5.visible = s5.toggled = false : (s5.visible = !s5.visible, s5.toggled = s5.visible), z && (z.off("stagemousemove", c2), s5.visible && (c2 = z.on("stagemousemove", P, s5)), z.update()), s5;
          }, !(this.resize = function() {
            return !!s5 && (z && (B(), P()), true);
          }) !== e3 && To.styleTransforms(this, T2), this.dispose = function(e4, t3, o3) {
            return !!s5 && (To.noDrag(C), clearInterval(y), s5.removeAllChildren(), window.removeEventListener("keydown", S2), s5.parent && s5.parent.removeChild(s5), !(s5 = null));
          }) : zog("zim controls - Guide(): Please provide container with bounds for the obj (setBounds())");
        }, To.extend(To.Guide, To.Container, "clone", "zimContainer", false), To.Grid = function(r2, i2, a, t2, o2, n, l, e3, s5, c2, u) {
          if (S2 = zob(To.Grid, arguments, "obj, color, percent, hideKey, pixelKey, allowToggle, cache, numbers, style, group, inherit", this))
            return S2;
          z_d("78"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Grid", this.group = c2;
          var d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2 = s5 === false ? {} : To.getStyle(this.type, this.group, u);
          function E(e4, t3, o3) {
            var n2 = new To.Container({ style: false });
            return n2.shape = new createjs.Shape(), n2.shape.graphics.s(t3).ss(1).f(e4).r(0, 0, p, f3), n2.shape.alpha = 0.9, n2.addChild(n2.shape), n2.label = new createjs.Text("10", "16px arial", o3), n2.label.textAlign = "center", n2.label.textBaseline = "middle", n2.addChild(n2.label), n2.mouseChildren = false, n2.mouseEnabled = false, n2;
          }
          function I2(e4) {
            var t3;
            e4 ? (t3 = r2.globalToLocal(e4.rawX / To.scaX, e4.rawY / To.scaY), T2 = t3) : t3 = { x: T2.x, y: T2.y }, a ? (m2.label.text = "x:" + Math.max(0, Math.min(Math.round(t3.x / A3 * 100), 100)) + "%", m2.x = Math.max(y, Math.min(t3.x, v)), z.label.text = "y:" + Math.max(0, Math.min(Math.round(t3.y / P * 100), 100)) + "%") : (m2.label.text = "x:" + Math.max(0, Math.min(Math.round(t3.x), Math.round(A3))), m2.x = Math.max(y, Math.min(t3.x, v)), z.label.text = "y:" + Math.max(0, Math.min(Math.round(t3.y), Math.round(P)))), z.y = Math.max(b, Math.min(t3.y, w)), C && C.update();
          }
          function M() {
            k = true, r2 && r2.getBounds && (A3 = r2.getBounds().width, P = r2.getBounds().height), C && (C.mouseMoveOutside = true, C.enableMouseOver(10)), v = A3 - 2 * p / 3, w = P - f3 - f3, B = d.grid = new To.Container({ style: false }), d.addChild(B);
            var e4 = new createjs.Shape();
            B.addChild(e4);
            var t3 = e4.graphics;
            t3.s(i2).ss(1);
            var o3 = new createjs.Shape();
            if (B.addChild(o3), a) {
              for (n2 = 1; n2 < 21; n2++)
                t3.mt(n2 * A3 / 20, 0).lt(n2 * A3 / 20, P);
              for (n2 = 1; n2 < 20; n2++)
                t3.mt(0, n2 * P / 20).lt(A3, n2 * P / 20);
              e4.alpha = 0.3, (t3 = o3.graphics).s(i2).ss(1);
              for (n2 = 1; n2 < 10; n2++)
                t3.mt(n2 * A3 / 10, 0).lt(n2 * A3 / 10, P);
              for (n2 = 1; n2 < 10; n2++)
                t3.mt(0, n2 * P / 10).lt(A3, n2 * P / 10);
            } else {
              for (var n2 = 0; n2 < A3 / h2; n2++)
                t3.mt(n2 * h2, 0).lt(n2 * h2, P);
              for (var n2 = 0; n2 < P / h2; n2++)
                t3.mt(0, n2 * h2).lt(A3, n2 * h2);
              e4.alpha = 0.3, (t3 = o3.graphics).s(i2).ss(1);
              for (var n2 = 0; n2 < A3 / (10 * h2); n2++)
                t3.mt(n2 * (10 * h2), 0).lt(n2 * (10 * h2), P);
              for (var n2 = 0; n2 < P / (10 * h2); n2++)
                t3.mt(0, n2 * (10 * h2)).lt(A3, n2 * (10 * h2));
            }
            t3.s("#FFFFFF").ss(8), t3.mt(A3 / 2, P / 2 - 40).lt(A3 / 2, P / 2 + 40), t3.mt(A3 / 2 - 40, P / 2).lt(A3 / 2 + 40, P / 2), t3.s("#000000").ss(4), t3.mt(A3 / 2, P / 2 - 40).lt(A3 / 2, P / 2 + 40), t3.mt(A3 / 2 - 40, P / 2).lt(A3 / 2 + 40, P / 2), t3.s(i2).ss(l ? 3 : 2), t3.dr(0, 0, A3, P), o3.alpha = 0.5, l && B.cache(0, 0, A3, P), d.addChild(m2), d.addChild(z), C && C.update();
          }
          function O(e4) {
            e4 = e4 || event, C && n && (String.fromCharCode(e4.keyCode) == t2.toUpperCase() && d.toggle(), String.fromCharCode(e4.keyCode) == o2.toUpperCase() && (d.removeChild(B), B = null, d.pixels = !d.pixels));
          }
          !zot(r2) || S2.obj != null && S2.obj, zot(r2) && (r2 = zdf ? zdf.stage : "stage"), zot(i2) && (i2 = S2.color != null ? S2.color : "black"), r2 == "stage" || r2.addChild && r2.getBounds && r2.getBounds() ? (zot(a) && (a = S2.percent == null || S2.percent), zot(t2) && (t2 = S2.hideKey != null ? S2.hideKey : "G"), zot(o2) && (o2 = S2.pixelKey != null ? S2.pixelKey : "P"), zot(n) && (n = S2.allowToggle == null || S2.allowToggle), zot(l) && (l = S2.cache == null || S2.cache), zot(e3) && (e3 = S2.numbers == null || S2.numbers), h2 = 10, (d = this).mouseChildren = false, this.mouseEnabled = false, p = 80, f3 = 26, (m2 = d.numbersX = E("#dddddd", i2, "#333333")).shape.regX = p / 2, m2.shape.regY = -f3 / 4, m2.label.y = 3 * f3 / 4, (z = d.numbersY = E("#dddddd", i2, "#333333")).shape.regX = -p / 6, z.shape.regY = f3 / 2, z.label.x = p / 2 + p / 6, e3 || (m2.visible = false, z.visible = false), y = p / 6 + p / 2, b = 2 * f3, m2.x = y, z.y = b, m2.label.text = "x:0", z.label.text = "y:0", r2 != "stage" && r2.addChild(d), x2 = To.added(d, function() {
            r2 == "stage" ? (C = d.stage, r2 = C) : C = r2.stage;
            k || (M(), r2.addChild(d));
            C.off("stagemousemove", g), g = C.on("stagemousemove", I2), C.update();
          }), k = false, T2 = { x: 0, y: 0 }, Object.defineProperty(this, "pixels", { get: function() {
            return !a;
          }, set: function(e4) {
            a = !e4, d.resize();
          } }), window.addEventListener("keydown", O), this.toggled = true, this.toggle = function(e4) {
            return e4 === true ? d.visible = d.toggled = true : e4 === false ? d.visible = d.toggled = false : (d.visible = !d.visible, d.toggled = d.visible), C.off("stagemousemove", g), d.visible && (g = C.on("stagemousemove", I2, d)), C && C.update(), d;
          }, !(this.resize = function() {
            return !!d && (d.removeChild(B), B = null, C && (M(), I2(), setTimeout(function() {
              d.removeChild(B), B = null, M();
            }, 200)), true);
          }) !== s5 && To.styleTransforms(this, S2), this.dispose = function(e4, t3, o3) {
            return clearInterval(x2), d.removeAllChildren(), window.removeEventListener("keydown", O), d.parent && d.parent.removeChild(d), !(d = null);
          }) : zog("zim controls - Grid(): Please provide container with bounds for the obj (setBounds())");
        }, To.extend(To.Grid, To.Container, "clone", "zimContainer", false), To.Wrapper = function(e3, A3, v, w, a, P, C, B, S2, E, x2, I2, k, T2, M, t2, O, j, L, _, Y, o2, n, r2) {
          if (i2 = zob(To.Wrapper, arguments, "items, width, spacingH, spacingV, wrapperType, align, valign, alignInner, valignInner, flip, reverse, bottomFull, colSize, rowSize, height, minSpreadNum, minStretchNum, percentVoidH, offsetVoidH, percentVoidV, offsetVoidV, style, group, inherit", this))
            return i2;
          z_d("78.5"), this.group = n;
          var i2 = o2 === false ? {} : To.getStyle("Wrapper", this.group, r2);
          zot(A3) && (A3 = i2.width != null ? i2.width : 300), zot(M) && (M = i2.height != null ? i2.height : null), zot(v) && (v = i2.spacingH != null ? i2.spacingH : null), zot(w) && (w = i2.spacingV != null ? i2.spacingV : null), zot(a) && (a = i2.wrapperType != null ? i2.wrapperType : "spacing"), zot(P) && (P = i2.align != null ? i2.align : "left"), zot(C) && (C = i2.valign != null ? i2.valign : "top"), zot(B) && (B = i2.alignInner != null ? i2.alignInner : "left"), zot(S2) && (S2 = i2.valignInner != null ? i2.valignInner : "bottom"), zot(E) && (E = i2.flip != null && i2.flip), zot(x2) && (x2 = i2.reverse != null && i2.reverse), zot(I2) && (I2 = i2.bottomFull != null && i2.bottomFull), zot(k) && (k = i2.colSize != null ? i2.colSize : 100), zot(T2) && (T2 = i2.rowSize != null ? i2.rowSize : null), zot(v) && (v = 0), zot(w) && (w = 0), zot(t2) && (t2 = i2.minSpreadNum != null ? i2.minSpreadNum : 2), zot(O) && (O = i2.minStretchNum != null ? i2.minStretchNum : 3), zot(j) && (j = i2.percentVoidH != null ? i2.percentVoidH : 0), zot(L) && (L = i2.offsetVoidH != null ? i2.offsetVoidH : 0), zot(_) && (_ = i2.percentVoidV != null ? i2.percentVoidV : 0), zot(Y) && (Y = i2.offsetVoidV != null ? i2.offsetVoidV : 0);
          var D, X, R = 0, W = 0, F2 = 0, H = A3;
          this.items = [], a == "spread" ? D = true : a == "stretch" && (X = true), this.zimContainer_constructor(A3, 200), this.type = "Wrapper", P == "middle" && (P = "center"), C == "middle" && (C = "center"), B == "middle" && (B = "center"), S2 == "middle" && (S2 = "center");
          var N = this;
          function V(r3, t3, o3, e4, n2, i3, a2, l) {
            var s5 = To.Pick.choose(P), c2 = To.Pick.choose(D), u = To.Pick.choose(X), d = To.Pick.choose(E), h2 = To.Pick.choose(B), g = To.Pick.choose(S2);
            zot(s5) && (s5 = "left"), zot(g) && (g = "top"), zot(h2) && (h2 = "left"), d && r3.reverse();
            var p, f3, m2, z, y, b, v2, w2, C2 = ((100 - i3) / 100 / 2 + a2 / 100) * A3, x3 = A3 * i3 / 100, k2 = 0, T3 = false;
            n2 ? ((I2 || E) && r3.reverse(), p = H % n2, f3 = H / 2 + a2 / 100 * H, m2 = 0, d = Math.floor(H / n2), N.rows != 0 && l && (T3 = true), To.loop(r3, function(e5, t4) {
              k2 = 0, m2 = h2 == "right" ? n2 * t4 + 0 + n2 - e5.wrapWidth : h2 == "center" || h2 == "middle" ? n2 * t4 + 0 + (n2 - e5.wrapWidth) / 2 : n2 * t4 + 0;
              var o4, t4 = e5.x;
              e5.pos(m2), v2 = e5.x - t4, e5.centerX += v2, e5.marginLeft && (k2 += e5.marginLeft), e5.marginRight && (k2 -= e5.marginRight), s5 == "center" || s5 == "middle" ? (o4 = Math.floor(H / n2) - r3.length, k2 += (p + (o4 ? o4 * n2 : 0)) / 2) : s5 == "right" && (o4 = Math.floor(H / n2) - r3.length, k2 += p + (o4 ? o4 * n2 : 0)), e5.mov(k2), e5.centerX += k2;
            }), s5 == "center" && T3 && (r3.length + d) % 2 != 0 && (k2 = (f3 <= H / 2 ? -1 : 1) * n2 / 2, To.loop(r3, function(e5, t4) {
              e5.mov(k2), e5.centerX += k2;
            }))) : c2 || u ? (c2 ? z = r3.length ? (H - e4) / (r3.length + 1) : 0 : u && (z = 0 < r3.length - 1 ? (H - e4) / (r3.length - 1) : 0), r3.length < O && N.rows != 0 && l && (z = F2, T3 = true), F2 = z, y = 0, (I2 || E) && r3.reverse(), To.loop(r3, function(e5, t4, o4) {
              k2 = 0;
              var n3 = e5.x;
              e5.pos(z * (t4 + (c2 ? 1 : 0)) + y), v2 = e5.x - n3, e5.centerX += v2, T3 || (e5.marginLeft && (k2 += e5.marginLeft), e5.marginRight && (k2 -= e5.marginRight), e5.mov(k2), e5.centerX += k2), y += e5.wrapWidth;
            }), T3 && (b = c2 ? z : 0, v2 = k2 = 0, To.loop(r3, function(e5, t4) {
              var o4, n3;
              s5 == "right" ? (n3 = e5.x, e5.pos(b, null, To.RIGHT), v2 = e5.x - n3, b += e5.wrapWidth + z) : s5 == "center" && (o4 = (H - (y + (r3.length - 1) * z)) / 2 - (c2 ? z : 0), n3 = e5.x, e5.pos(b + o4, null, To.RIGHT), v2 = e5.x - n3, b += e5.wrapWidth + z), e5.marginLeft && (k2 += e5.marginLeft), e5.marginRight && (k2 -= e5.marginRight), e5.mov(k2), e5.centerX += v2 + k2;
            }, true))) : s5 == "center" ? To.loop(r3, function(e5) {
              k2 = ((I2 || E ? 0 : A3) - t3.x) / 2, (c2 || u) && (e5.marginLeft && (k2 += e5.marginLeft), e5.marginRight && (k2 -= e5.marginRight)), e5.mov(k2), e5.centerX += k2;
            }) : (I2 || E) && s5 == "left" ? (w2 = r3[r3.length - 1].marginLeft, To.loop(r3, function(e5) {
              k2 = -t3.x + (w2 || 0), c2 && (k2 += W), e5.mov(k2), e5.centerX += k2;
            })) : I2 || E || s5 != "right" ? c2 && c2 && To.loop(r3, function(e5) {
              k2 = W * (s5 == "right" ? -1 : 1), e5.mov(k2), e5.centerX += k2;
            }) : (w2 = r3[r3.length - 1].marginRight, To.loop(r3, function(e5) {
              k2 = A3 - t3.x - (w2 || 0), c2 && (k2 -= W), e5.mov(k2), e5.centerX += k2;
            })), i3 && (C2 = (0.5 + a2 / 100) * H, x3 = A3 * i3 / 100, To.loop(r3, function(e5) {
              n2 || u || c2 ? s5 == "right" ? e5.centerX > H - C2 && e5.mov(x3) : s5 == "center" ? Math.round(e5.centerX) == Math.round(H / 2 + a2 / 100 * H) ? e5.mov(x3 / 2) : Math.round(e5.centerX) > Math.round(H / 2 + a2 / 100 * H) && e5.mov(x3) : e5.centerX > C2 && e5.mov(x3) : I2 || E || s5 != "right" ? I2 || E || s5 != "center" ? (I2 || E) && s5 == "right" ? e5.centerX > H - C2 && e5.mov(x3) : (I2 || E) && s5 == "center" ? e5.centerX > H / 2 + a2 / 100 * H && e5.mov(x3) : e5.centerX > C2 && e5.mov(x3) : e5.centerX > A3 / 2 + a2 / 100 * H ? e5.mov(x3 / 2) : e5.mov(-x3 / 2) : e5.centerX < A3 - C2 && e5.mov(-x3);
            })), c2 && (W = (R += z) / (N.rows + 1)), g == "center" ? To.loop(r3, function(e5) {
              e5.mov(0, (o3 - e5.wrapHeight) / 2 * (I2 ? -1 : 1));
            }) : I2 || g != "bottom" ? I2 && g == "top" && To.loop(r3, function(e5) {
              e5.mov(0, -(o3 - e5.wrapHeight) + (e5.marginTop || 0));
            }) : To.loop(r3, function(e5) {
              e5.mov(0, o3 - e5.wrapHeight - (e5.marginBottom || 0));
            });
          }
          this.add = function(e4) {
            return this.addAt(e4, this.numChildren - 1), N;
          }, this.addAt = function(e4, o3) {
            return zot(e4) || ((zot(o3) || o3 < 0) && (o3 = 0), Array.isArray(e4) || (e4 = [e4]), To.loop(e4, function(e5, t3) {
              N.addChildAt(e5, o3 + t3);
            }), N.resize()), N;
          }, this.remove = function(e4) {
            return Array.isArray(e4) || (e4 = [e4]), To.loop(e4, function(e5) {
              e5 && e5.removeFrom && e5.removeFrom();
            }, true), N.resize(), N;
          }, this.convert = function(e4, t3) {
            var o3 = [];
            return e4.loop(function(e5) {
              o3.push(e5), t3 && e5.cache();
            }), N.add(o3), e4.removeFrom(), N;
          }, this.resize = function(e4, t3) {
            if (!N.preventResize) {
              zot(e4) || (A3 = e4), zot(t3) || (M = t3), this.items2D = [], this.items = [], F2 = W = R = 0, zot(j) && (j = 0), zot(L) && (L = 0);
              var l = To.Pick.choose(j), s5 = To.Pick.choose(L);
              H = A3 * (100 - l) / 100, this.setBounds(H, 200);
              var c2 = 0, u = 0, d = 0;
              N.cols = 0, N.rows = 0;
              var h2 = [], g = [0], p = null, f3 = 0, m2 = null, z = To.Pick.choose(k);
              a != "column" && (z = null);
              var y = To.Pick.choose(T2), b = 0;
              To.loop(this, function(e5, t4, o4) {
                I2 || E ? e5.pos(c2 + (e5.marginRight || 0), u + (e5.marginTop || 0), To.RIGHT, E ? To.TOP : To.BOTTOM) : e5.pos(c2 + (e5.marginLeft || 0), u + (e5.marginTop || 0)), b++, m2 = e5.boundsToGlobal();
                var n3, r4, i4 = N.globalToLocal(m2.x, m2.y), a2 = N.globalToLocal(m2.x + m2.width, m2.y + m2.height);
                n3 = I2 || E ? N.globalToLocal(m2.x, m2.y) : N.globalToLocal(m2.x + m2.width, m2.y + m2.height), e5.wrapHeight = a2.y - i4.y, e5.wrapWidth = a2.x - i4.x, l && (r4 = N.globalToLocal(m2.x + e5.wrapWidth / 2, m2.y + e5.wrapHeight / 2), e5.centerX = r4.x, e5.centerY = r4.y, r4 = null), i4 = z ? z * b : I2 || E ? H - n3.x + (e5.marginLeft || 0) + v : n3.x + (e5.marginRight || 0) + v, Math.round(i4) - v > H && (V(h2, p, d, f3, z, l, s5, false), (f3 = 0) == N.cols && (N.cols = t4), c2 = 0, u += d + (y ? 0 : To.Pick.choose(w)), d = 0, y = To.Pick.choose(T2), l = To.Pick.choose(j), s5 = To.Pick.choose(L), b = 0, N.items2D.push(To.copy(h2)), N.rows++, g.push(u), h2 = [], I2 || E ? e5.pos(c2 + (e5.marginRight || 0), u + (e5.marginTop || 0), To.RIGHT, E ? To.TOP : To.BOTTOM) : e5.pos(c2 + (e5.marginLeft || 0), u + (e5.marginTop || 0)), l && (m2 = e5.boundsToGlobal(), r4 = N.globalToLocal(m2.x + e5.wrapWidth / 2, m2.y + e5.wrapHeight / 2), e5.centerX = r4.x, e5.centerY = r4.y, r4 = null), b++, z ? i4 = 0 : (i4 = (e5.marginLeft || 0) + e5.wrapWidth + (e5.marginRight || 0) + To.Pick.choose(v), n3.x = I2 || E ? H - ((e5.marginRight || 0) + e5.wrapWidth) : (e5.marginLeft || 0) + e5.wrapWidth)), h2.push(e5), f3 += e5.wrapWidth, c2 = i4, d = y || Math.max(d, e5.wrapHeight + (e5.marginTop || 0) + (e5.marginBottom || 0)), p = new To.Point(n3.x, u + d);
              }, (!x2 || !I2) && (x2 || I2)), 0 < N.numChildren && (N.cols == 0 && (N.cols = N.numChildren), N.items2D.push(To.copy(h2)), g.push(u), V(h2, p, d, f3, z, l, s5, true), N.rows += 1);
              var o3 = To.Pick.choose(C);
              zot(o3), I2 && (i3 = u + d - 200, To.loop(this, function(e5) {
                e5.mov(0, i3);
              }), N.items2D.reverse(), To.loop(N.items2D, function(e5) {
                e5.reverse();
              }));
              var n2, r3, i3, e4 = To.Pick.choose(_), t3 = To.Pick.choose(Y);
              return zot(e4) || (zot(t3) && (t3 = 0), n2 = (o3 = u + d) * e4 / 100, r3 = o3 / 2 + t3 / 100 * o3, To.loop(g, function(e5, t4) {
                if (r3 <= e5)
                  return To.loop(N.items2D, function(e6, t5) {
                    To.loop(e6, function(e7) {
                      e7.mov(0, n2);
                    });
                  }, null, 1, t4), "break";
              })), zot(M) || (C == "bottom" ? (i3 = M - (u + d), To.loop(this, function(e5) {
                e5.mov(0, i3);
              })) : C != "center" && C != "middle" || (i3 = (M - (u + d)) / 2, To.loop(this, function(e5) {
                e5.mov(0, i3);
              }))), N.setBounds(null), (m2 = N.getBounds()) && N.setBounds(0, m2.y, A3, m2.height), To.loop(N.items2D, function(e5) {
                To.loop(e5, function(e6) {
                  N.items.push(e6);
                });
              }), this.stage && this.stage.update(), N;
            }
          }, Object.defineProperty(N, "spacingH", { get: function() {
            return v;
          }, set: function(e4) {
            v = e4, this.resize();
          } }), Object.defineProperty(N, "spacingV", { get: function() {
            return w;
          }, set: function(e4) {
            w = e4, this.resize();
          } }), Object.defineProperty(N, "wrapperType", { get: function() {
            return a;
          }, set: function(e4) {
            D = e4 == "spread", X = e4 == "stretch", a = e4, this.resize();
          } }), Object.defineProperty(N, "align", { get: function() {
            return P;
          }, set: function(e4) {
            (P = e4) == "middle" && (P = "center"), this.resize();
          } }), Object.defineProperty(N, "valign", { get: function() {
            return C;
          }, set: function(e4) {
            (C = e4) == "middle" && (C = "center"), this.resize();
          } }), Object.defineProperty(N, "alignInner", { get: function() {
            return B;
          }, set: function(e4) {
            (B = e4) == "middle" && (B = "center"), this.resize();
          } }), Object.defineProperty(N, "valignInner", { get: function() {
            return S2;
          }, set: function(e4) {
            (S2 = e4) == "middle" && (S2 = "center"), this.resize();
          } }), Object.defineProperty(N, "colSize", { get: function() {
            return k;
          }, set: function(e4) {
            k = e4, a == "column" && this.resize();
          } }), Object.defineProperty(N, "rowSize", { get: function() {
            return T2;
          }, set: function(e4) {
            T2 = e4, this.resize();
          } }), Object.defineProperty(N, "flip", { get: function() {
            return E;
          }, set: function(e4) {
            E = e4, this.resize();
          } }), Object.defineProperty(N, "reverse", { get: function() {
            return x2;
          }, set: function(e4) {
            x2 = e4, this.resize();
          } }), Object.defineProperty(N, "bottomFull", { get: function() {
            return I2;
          }, set: function(e4) {
            I2 = e4, this.resize();
          } }), Object.defineProperty(N, "percentVoidH", { get: function() {
            return j;
          }, set: function(e4) {
            j = e4, this.resize();
          } }), Object.defineProperty(N, "offsetVoidH", { get: function() {
            return L;
          }, set: function(e4) {
            L = e4, this.resize();
          } }), Object.defineProperty(N, "percentVoidV", { get: function() {
            return _;
          }, set: function(e4) {
            _ = e4, this.resize();
          } }), Object.defineProperty(N, "offsetVoidV", { get: function() {
            return Y;
          }, set: function(e4) {
            Y = e4, this.resize();
          } }), zot(e3) || N.add(e3), o2 !== false && To.styleTransforms(this, i2), this.clone = function() {
            return N.cloneProps(new To.Wrapper(e3, A3, v, w, a, P, C, B, S2, E, x2, I2, k, T2, M, t2, O, j, L, _, Y, this.style, this.group));
          };
        }, To.extend(To.Wrapper, To.Container, "clone", "zimContainer", false), To.Tile = function(n, l, s5, e3, t2, r2, c2, u, o2, i2, d, h2, g, p, f3, a, m2, z, y, b, v, w, C) {
          if (k = zob(To.Tile, arguments, "obj, cols, rows, spacingH, spacingV, unique, width, height, squeezeH, squeezeV, colSize, rowSize, align, valign, count, mirrorH, mirrorV, snapToPixel, clone, events, group, style, inherit", this))
            return k;
          z_d("66.5"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Tile", this.group = v;
          var x2, k = w === false ? {} : To.getStyle(this.type, this.group, C);
          zot(n) && (n = k.obj != null ? k.obj : new To.Circle()), zot(l) && (l = k.cols != null ? k.cols : 1121), zot(s5) && (s5 = k.rows != null ? k.rows : 1121), l == 1121 && s5 == 1121 ? l = s5 = x2 = 3 : l == 1121 ? l = 1 : s5 == 1121 && (s5 = 1), zot(r2) && (r2 = k.unique != null && k.unique), zot(c2) && (c2 = k.width != null ? k.width : null), zot(u) && (u = k.height != null ? k.height : null), zot(d) && (d = k.colSize != null ? k.colSize : null), zot(h2) && (h2 = k.rowSize != null ? k.rowSize : null), zot(c2) || (d = null), zot(u) || (h2 = null), zot(e3) && (e3 = k.spacingH != null ? k.spacingH : x2 ? 3 : null), zot(t2) && (t2 = k.spacingV != null ? k.spacingV : x2 ? 3 : null), !zot(e3) && zot(d) || (e3 = 0), !zot(t2) && zot(h2) || (t2 = 0), zot(o2) && (o2 = k.squeezeH != null && k.squeezeH), zot(i2) && (i2 = k.squeezeV != null && k.squeezeV), zot(g) && (g = k.align != null ? k.align : "left"), zot(p) && (p = k.valign != null ? k.valign : "top"), zot(f3) && (f3 = k.count != null ? k.count : r2 && Array.isArray(n) ? n.length : null), f3 === 0 && (f3 = null, zon && zog("ZIM Tile() - count parameter of 0 is ignored - see docs")), zot(a) && (a = k.mirrorH != null && k.mirrorH), zot(m2) && (m2 = k.mirrorV != null && k.mirrorV), zot(z) && (z = k.snapToPixel == null || k.snapToPixel), z && (n && n.stage ? n.stage.snapToPixelEnabled = true : typeof elem != "undefined" && zdf && (zdf.stage.snapToPixelEnabled = true)), zot(y) && (y = k.clone != null ? k.clone : !r2), zot(b) && (b = k.events == null || k.events);
          var T2 = this;
          T2.cols = l = Math.round(l), T2.rows = s5 = Math.round(s5), T2.spacingH = e3, T2.spacingV = t2, T2.squeezeH = o2, T2.squeezeV = i2;
          var A3, P = typeof g == "function", B = typeof p == "function";
          T2.align = P ? "left" : g, T2.valign = B ? "top" : p, T2.mirrorH = a, T2.mirrorV = m2, T2.items = [];
          var S2, E, I2, M, O, j, L, _, Y, D, X, R, W, F2, H, N, V, G, q = 0;
          e:
            for (var U = 0; U < s5; U++)
              for (var Q = 0; Q < l; Q++) {
                if (q++, !zot(f3) && f3 < q)
                  break e;
                typeof (A3 = r2 ? n[q - 1] : To.Pick.choose(n)) == "string" && (A3 = window.asset(A3).centerReg({ add: false }).clone()), zot(A3) && (A3 = new To.Container(0, 0, 0, 0)), y && (U == 0 && Q == 0 || (A3 = A3.clone())), b && A3.on("change", function(e4) {
                  var t3 = new createjs.Event("change");
                  t3.item = e4.currentTarget, T2.dispatchEvent(t3);
                }), T2.items.push(A3), A3.tileNum = q - 1, A3.tileCol = Q, A3.tileRow = U;
              }
          function Z2() {
            T2.removeAllChildren(), S2 = [], E = [], I2 = [], M = [], O = [], Y = _ = L = j = 0, D = [], X = [], R = [], F2 = [], W = [], T2.items && T2.items.length || (T2.items = []), f3 = T2.items.length;
            for (var e4, t3, o3, n2, r3 = 0, i3 = 0, a2 = 0; a2 < f3; a2++)
              i3 = Math.floor(a2 / T2.cols), t3 = a2 % T2.cols, zot(S2[i3]) && (S2[i3] = []), zot(T2.items[a2]) && (T2.items[a2] = new To.Container(0, 0, 0, 0)), S2[i3][t3] = T2.items[a2];
            T2.rows = Math.max(1, S2.length), T2.cols = Math.max(1, zot(S2[0]) ? 0 : S2[0].length);
            e:
              for (i3 = 0; i3 < T2.rows; i3++) {
                D.push([]), X.push([]), F2.push([]), h2 && zot(u) && (o3 = To.Pick.choose(h2));
                for (a2 = 0; a2 < T2.cols; a2++) {
                  if (r3++, !zot(f3) && f3 < r3)
                    break e;
                  (e4 = S2[i3][a2]).snapToPixel = z, T2.addChild(e4), D[i3].push(e4.scaleX), X[i3].push(e4.scaleY), i3 == 0 && d && zot(c2) && (n2 = To.Pick.choose(d)), i3 == 0 && W.push(To.Pick.choose(g)), d && zot(c2) || (n2 = Math.abs(e4.width)), h2 && zot(u) || (o3 = Math.abs(e4.height)), F2[i3][a2] = [n2, o3], zot(M[a2]) && (M[a2] = 0), zot(O[i3]) && (O[i3] = 0), n2 > M[a2] && (M[a2] = n2), o3 > O[i3] && (O[i3] = o3), zot(E[i3]) && (E[i3] = 0), zot(I2[a2]) && (I2[a2] = 0), E[i3] += n2, I2[a2] += o3, E[i3] > j && (j = E[i3]), I2[a2] > L && (L = I2[a2]), zot(R[a2]) && (R[a2] = 0), R[a2]++;
                }
              }
            if (T2.squeezeH === false)
              for (a2 = 0; a2 < M.length; a2++) {
                var l2 = M[a2];
                _ += l2;
              }
            if (T2.squeezeV === false)
              for (a2 = 0; a2 < O.length; a2++) {
                l2 = O[a2];
                Y += l2;
              }
          }
          function K(e4, t3) {
            var o3, n2;
            e4 <= 0 && (e4 = null), t3 <= 0 && (t3 = null), H = zot(e4) || T2.squeezeH != "full" ? zot(e4) ? 0 < _ ? _ + (T2.cols - 1) * T2.spacingH : j + (T2.cols - 1) * T2.spacingH : Math.max(j + (T2.cols - 1) * T2.spacingH, e4) : e4, N = zot(t3) || T2.squeezeV != "full" ? zot(t3) ? 0 < Y ? Y + (T2.rows - 1) * T2.spacingV : L + (T2.rows - 1) * T2.spacingV : Math.max(L + (T2.rows - 1) * T2.spacingV, t3) : t3, T2.setBounds(0, 0, H, N), V = [], G = [];
            var r3, i3, a2, l2 = [];
            for (U = 0; U < S2.length; U++)
              for (o3 = S2[U], n2 = 0, zot(e4), Q = 0; Q < o3.length; Q++) {
                A3 = o3[Q], U == 0 && (V[Q] = 0, zot(t3) || (T2.squeezeV == "full" ? G[Q] = 1 < R[Q] ? (t3 - I2[Q]) / (R[Q] - 1) : 0 : T2.squeezeV ? G[Q] = 1 < R[Q] ? Math.max(T2.spacingV, (t3 - I2[Q]) / (R[Q] - 1)) : 0 : G[Q] = 1 < R[Q] ? Math.max(T2.spacingV, (N - I2[Q]) / (R[Q] - 1)) : 0), T2.squeezeV ? T2.valign == "center" || T2.valign == "middle" ? l2[Q] = (N - (I2[Q] + (R[Q] - 1) * (zot(t3) ? T2.spacingV : G[Q]))) / 2 : T2.valign == "bottom" ? l2[Q] = N - (I2[Q] + (R[Q] - 1) * (zot(t3) ? T2.spacingV : G[Q])) : l2[Q] = 0 : l2[Q] = 0), A3.getBounds(), Q == 0 && (zot(e4) || (i3 = T2.squeezeH == "full" ? 1 < o3.length ? (e4 - E[U]) / (o3.length - 1) : 0 : T2.squeezeH ? 1 < o3.length ? Math.max(T2.spacingH, (e4 - E[U]) / (o3.length - 1)) : 0 : 1 < o3.length ? Math.max(T2.spacingH, (H - E[U]) / (o3.length - 1)) : 0), r3 = T2.squeezeH ? T2.align == "center" || T2.align == "middle" ? (H - (E[U] + (o3.length - 1) * (zot(e4) ? T2.spacingH : i3))) / 2 : T2.align == "right" ? H - (E[U] + (o3.length - 1) * (zot(e4) ? T2.spacingH : i3)) : 0 : 0, a2 = To.Pick.choose(p)), g = W[Q];
                var s6 = F2[U][Q][0], c3 = F2[U][Q][1];
                T2.mirrorH && Q % 2 == 1 && (A3.scaleX = -D[U][Q]), A3.pos(n2, null), !T2.squeezeH && P ? !zot(e4) || g != "center" && g != "middle" ? zot(e4) && g == "right" && (A3.x += M[Q] - A3.width) : A3.x += (M[Q] - A3.width) / 2 : T2.squeezeH ? !zot(e4) || T2.align != "center" && T2.align != "middle" ? zot(e4) && T2.align == "right" && (A3.x += s6 - A3.width) : A3.x += (s6 - A3.width) / 2 : !zot(e4) || T2.align != "center" && T2.align != "middle" ? zot(e4) && T2.align == "right" && (A3.x += M[Q] - A3.width) : A3.x += (M[Q] - A3.width) / 2, T2.mirrorV && U % 2 == 1 && (A3.scaleY = -X[U][Q]), A3.pos(null, V[Q]), !T2.squeezeV && B ? !zot(t3) || a2 != "center" && a2 != "middle" ? zot(t3) && a2 == "bottom" && (A3.y += O[U] - A3.height) : A3.y += (O[U] - A3.height) / 2 : T2.squeezeV ? !zot(t3) || T2.valign != "center" && T2.valign != "middle" ? zot(t3) && T2.valign == "bottom" && (A3.y += c3 - A3.height) : A3.y += (c3 - A3.height) / 2 : !zot(t3) || T2.valign != "center" && T2.valign != "middle" ? zot(t3) && T2.valign == "bottom" && (A3.y += O[U] - A3.height) : A3.y += (O[U] - A3.height) / 2, T2.squeezeH !== true && zot(e4) ? n2 += M[Q] + (zot(e4) ? T2.spacingH : i3) : n2 += s6 + (zot(e4) ? T2.spacingH : i3), A3.x += r3, A3.y += l2[Q], T2.squeezeV !== true && zot(t3) ? V[Q] += O[U] + (zot(t3) ? T2.spacingV : G[Q]) : V[Q] += c3 + (zot(t3) ? T2.spacingV : G[Q]);
              }
          }
          function J(e4) {
            for (var t3, o3 = [], n2 = 0; n2 < e4.length; n2++)
              n2 % T2.cols == 0 && (t3 = [], o3.push(t3)), t3.push(e4[n2]);
            return o3;
          }
          function $(e4) {
            for (var t3 = [], o3 = 0; o3 < T2.cols; o3++)
              t3.push([]);
            for (o3 = 0; o3 < e4.length; o3++)
              t3[o3 % T2.cols][Math.floor(o3 / T2.cols)] = e4[o3];
            return t3;
          }
          Z2(), K(c2, u), this.itemUnderPoint = function(o3, n2, r3) {
            if (zot(r3) && (r3 = true), !zot(o3) && !zot(n2)) {
              var e4 = T2.globalToLocal(o3, n2);
              o3 = e4.x, n2 = e4.y;
              var i3 = 0, t3 = To.loop(M, function(e5, t4) {
                return i3 += e5 + T2.spacingH, !((!r3 || r3 == "vertical") && o3 > i3 - T2.spacingH && o3 < i3) && (o3 < i3 - T2.spacingH / 2 ? t4 : void 0);
              });
              if (t3 !== false && (t3 === true && (t3 = l - 1), !(o3 < 0 || H < o3 || n2 < 0 || N < n2))) {
                var a2 = 0, e4 = To.loop(O, function(e5, t4) {
                  var o4 = zot(u) ? T2.spacingV : G[Q];
                  return !((!r3 || r3 == "horizontal") && a2 - o4 < n2 && n2 < a2) && (n2 < (a2 += e5 + o4) - o4 / 2 ? t4 : void 0);
                });
                if (e4 !== false)
                  return e4 === true && (e4 = s5 - 1), T2.items2D[e4][t3];
              }
            }
          }, this.remake = function(e4) {
            return zot(e4) || (T2.items = e4), Z2(), K(c2, u), T2;
          }, this.resize = function(e4, t3) {
            return zot(e4) && (e4 = c2), zot(t3) && (t3 = u), K(c2 = e4, u = t3), T2;
          }, Object.defineProperty(this, "items2D", { get: function() {
            return J(T2.items);
          }, set: function(e4) {
            zon && zogy("Tile() - items2D is read only");
          } }), Object.defineProperty(this, "items2DCols", { get: function() {
            return $(T2.items);
          }, set: function(e4) {
            zon && zogy("Tile() - items2DCols is read only");
          } }), Object.defineProperty(this, "current", { get: function() {
            var n2 = [];
            T2.width, T2.cols, T2.spacingH, T2.cols, T2.height, T2.rows, T2.spacingV, T2.rows;
            return To.loop(T2.items, function(e4) {
              var t3 = e4.getBounds(), o3 = e4.x - e4.regX + t3.x + t3.width / 2, t3 = e4.y - e4.regY + t3.y + t3.height / 2, t3 = T2.hitTestGrid(T2.width, T2.height, T2.cols, T2.rows, o3, t3, null, null, T2.spacingH, T2.spacingV, true, "open");
              t3 != null && (n2[t3[0]] = e4);
            }), n2;
          }, set: function(e4) {
            zon && zogy("Tile() - current is read only");
          } }), Object.defineProperty(this, "current2D", { get: function() {
            return J(T2.current);
          }, set: function(e4) {
            zon && zogy("Tile() - current2D is read only");
          } }), Object.defineProperty(this, "current2DCols", { get: function() {
            return $(T2.current);
          }, set: function(e4) {
            zon && zogy("Tile() - current2DCols is read only");
          } }), w !== false && To.styleTransforms(this, k), this.clone = function(e4) {
            if (e4)
              for (var t3 = [], o3 = 0; o3 < T2.items.length; o3++)
                t3.push(T2.items[o3].clone(true));
            return T2.cloneProps(new To.Tile(e4 ? To.series(t3) : n.clone ? n.clone() : n, T2.cols, T2.rows, T2.spacingH, T2.spacingV, r2, c2, u, T2.squeezeH, T2.squeezeV, d, h2, g, p, T2.items.length, T2.mirrorH, T2.mirrorV, z, !e4 && y, b, this.style, this.group));
          };
        }, To.extend(To.Tile, To.Container, "clone", "zimContainer", false), To.Beads = function(i2, n, e3, a, r2, l, s5, c2, u, d, h2, g, t2, o2, p) {
          if (m2 = zob(To.Beads, arguments, "path, obj, count, angle, startPercent, endPercent, percents, onTop, showControls, visible, interactive, clone, group, style, inherit", this))
            return m2;
          z_d("66.7"), this.zimContainer_constructor(null, null, null, null, false), this.type = "Beads", this.group = t2;
          var f3 = o2 === false ? {} : To.getStyle(this.type, this.group, p);
          zot(c2) && (c2 = f3.onTop != null && f3.onTop), zot(u) && (u = f3.showControls != null && f3.showControls), zot(d) && (d = f3.visible == null || f3.visible), zot(h2) && (h2 = f3.interactive == null || f3.interactive), zot(i2) && (i2 = f3.path != null ? f3.path : new To.Blob({ color: null, borderWidth: 3, borderColor: To.blue })), i2.visible = d, i2.interactive = h2, i2.toggle(u), i2.onTop = c2, zot(n) && (n = f3.obj != null ? f3.obj : new To.Circle(10)), zot(e3) && (e3 = f3.count != null ? f3.count : 10), zot(a) && (a = f3.angle != null ? f3.angle : null), zot(r2) && (r2 = f3.startPercent != null ? f3.startPercent : 0), zot(l) && (l = f3.endPercent != null ? f3.endPercent : 100), zot(s5) && (s5 = f3.percents != null ? f3.percents : null);
          var m2 = l < r2 ? 100 + l : l;
          if (zot(s5)) {
            var z = i2.type == "Squiggle" ? (m2 - r2) / (e3 - 1) : (m2 - r2) / (e3 - (r2 != m2 % 100 ? 1 : 0));
            s5 = [];
            for (var y = r2 - z, b = 0; b < e3; b++)
              s5.push(y + z), 100 < (y += z) && (y -= 100);
          }
          zot(g) && (g = f3.clone == null || f3.clone);
          var v, w = this;
          w.count = e3, w.percents = s5, w.items = [];
          for (b = 0; b < e3; b++)
            v = To.Pick.choose(n), g && b != 0 && (v = v.clone()), v.beadNum = b, v.startPercent = s5[b], w.items.push(v);
          w.path = i2.addTo(w), w.beads = new To.Container().addTo(w, c2 ? 0 : null), w.beads.type = "BeadsContainer", this.resize = function() {
            for (var e4 = i2.segmentRatios, t3 = i2.segmentPoints, o3 = 0; o3 < w.count; o3++) {
              var n2, r3 = i2.getCurvePoint(Math.max(0, Math.min(0.9999, s5[o3] / 100)), e4, t3, true);
              r3 && ((n2 = w.beads.globalToLocal(r3.x, r3.y)) && w.items[o3].loc(n2, null, w.beads).rot((zot(a) ? 180 < r3.angle ? r3.angle - 360 : r3.angle : a) + w.items[o3].rotation));
            }
            return this;
          }, w.resize(), h2 && (i2.on("pressmove", w.resize), i2.on("update", w.resize)), o2 !== false && To.styleTransforms(this, f3), this.dispose = function(e4) {
            return e4 || this.zimContainer_dispose(true), w.items = [], true;
          }, this.clone = function(e4) {
            if (e4)
              for (var t3 = [], o3 = 0; o3 < w.items.length; o3++)
                t3.push(w.items[o3].clone(true));
            return w.cloneProps(new To.Beads(i2.clone(), e4 ? To.series(t3) : n.clone ? n.clone() : n, w.count, a, r2, l, s5, c2, u, d, h2, g, this.style, this.group));
          };
        }, To.extend(To.Beads, To.Container, ["clone", "dispose"], "zimContainer", false), To.Layout = function(x2, k, T2, e3, A3, P, t2, B, o2, n, r2, i2) {
          if (a = zob(To.Layout, arguments, "holder, regions, lastMargin, lastMarginMin, backgroundColor, vertical, showRegions, scalingObject, hideKey, style, group, inherit", this))
            return a;
          z_d("80"), this.cjsEventDispatcher_constructor(), this.type = "Layout", this.group = r2;
          var a = n === false ? {} : To.getStyle(this.type, this.group, i2);
          if (zot(x2) && (x2 = a.holder != null ? a.holder : null), zot(B) && (B = a.scalingObject != null ? a.scalingObject : null), !zot(x2) && x2.getBounds)
            if ((B = zot(B) ? x2 : B).getBounds && B.getBounds()) {
              var S2, E = B.getBounds();
              x2.setBounds(0, 0, E.width, E.height), zot(T2) && (T2 = a.lastMargin != null ? a.lastMargin : 0), zot(e3) && (e3 = a.lastMarginMin != null ? a.lastMarginMin : 0), zot(P) && (P = a.vertical == null || a.vertical), zot(A3) && (A3 = a.backgroundColor != null ? a.backgroundColor : ""), zot(o2) && (o2 = a.hideKey != null ? a.hideKey : "B"), zot(t2) && (t2 = a.showRegions != null ? a.showRegions : null), t2 && (S2 = new To.Shape());
              var I2, M = this.backing = new To.Shape(), O = this;
              if (this.active = true, zot(k) && (k = a.regions != null ? To.copy(a.regions) : null), !zot(k)) {
                To.loop(k, function(e4, t3) {
                  e4 instanceof createjs.DisplayObject && (k[t3] = { object: e4 });
                }), this.regions = k;
                var j = 0, L = "minWidth", _ = "width", Y = "height", D = "marginLeft", X = "marginMinLeft", R = "maxHeight";
                P && (L = "minHeight", _ = "height", Y = "width", D = "marginTop", X = "marginMinTop", R = "maxWidth");
                for (var W, F2 = [], H = 0, l = 0; l < k.length; l++) {
                  if (!(I2 = k[l]).object || !I2.object.getBounds())
                    return void zogy("Layout(): each region object must have an object with setBounds() set");
                  I2[L] || (I2[L] = 0), I2[_] || (I2[_] = 0), I2.backgroundColor || (I2.backgroundColor = ""), I2.given = 0, I2.maxGiven = 0, I2[D] == "auto" ? (F2[l] = true, H++, I2[X] ? I2[D] = I2[X] : delete I2[D]) : I2[D] && I2[X] && I2[D] < I2[X] && (I2[D] = I2[X]), zot(I2[D]) && (I2[D] = 1e-4), I2[R] || (I2[R] = 100), P ? (I2.align || (I2.align = "middle"), I2.valign || (l == 0 ? I2.valign = "top" : l == k.length - 1 ? I2.valign = "bottom" : I2.valign = "middle", k.length == 1 && (I2.valign = "middle"))) : (I2.valign || (I2.valign = "top"), I2.align || (l == 0 ? I2.align = "left" : l == k.length - 1 ? I2.align = "right" : I2.align = "middle", k.length == 1 && (I2.align = "middle"))), I2[_] && (I2[L] = 0), j += I2[_] + I2[D];
                }
                T2 == "auto" ? (F2[k.length] = true, T2 = e3 || 0) : T2 && e3 && T2 < e3 && (T2 = e3), 100 < (j += T2) ? zogy("Layout(): cannot fit regions into 100% bounds") : (W = 100 - j, N(), this.resize = function() {
                  if (O.active) {
                    E = B.getBounds(), x2.setBounds(0, 0, E.width, E.height), M.graphics.clear(), A3 != "" && (V(M, A3), M.graphics.r(0, 0, E.width, E.height));
                    for (var e4 = 0; e4 < k.length; e4++)
                      (I2 = k[e4]).maxGiven = 0, I2.marginGiven = 0;
                    for (var t3, o3, n2, r3 = true, i3 = W; r3; ) {
                      t3 = !(r3 = false);
                      for (e4 = 0; e4 < k.length; e4++)
                        0 < (I2 = k[e4]).given && I2.maxGiven == 0 && (m2 = I2.object.getBounds()[_], z = I2.object.getBounds()[Y], o3 = I2.given * E[_] / 100, (n2 = I2[R] * E[Y] / 100) < z / m2 * o3 && I2.object.type != "Window" ? (I2.maxGiven = m2 / z * n2 * 100 / E[_], I2.given, I2.maxGiven, i3 -= I2.maxGiven) : t3 = false);
                      if (t3)
                        break;
                      for (var a2 = 0, e4 = 0; e4 < k.length; e4++)
                        (I2 = k[e4])[_] == 0 && I2.maxGiven == 0 && (a2 += I2.object.getBounds()[_]);
                      for (e4 = 0; e4 < k.length; e4++)
                        (I2 = k[e4])[_] == 0 && I2.maxGiven == 0 && (I2.given = I2.object.getBounds()[_] / a2 * i3);
                    }
                    var l2 = true;
                    if (0 < (I2 = k[0]).maxGiven ? I2.maxGiven < I2[L] && (I2[_] = I2[L], l2 = false) : 0 < I2.given && I2.given < I2[L] && (I2[_] = I2[L], l2 = false), 0 < (I2 = k[k.length - 1]).maxGiven ? I2.maxGiven < I2[L] && (I2[_] = I2[L], l2 = false) : 0 < I2.given && I2.given < I2[L] && (I2[_] = I2[L], l2 = false), !l2) {
                      for (e4 = j = 0; e4 < k.length; e4++)
                        I2 = k[e4], j += I2[_] + I2[D];
                      return 100 < (j += T2) ? void zog("zim display - Layout(): cannot fit regions into 100% bounds") : (W = 100 - j, N(), void O.resize());
                    }
                    for (var s6 = true, c2 = 0, u = 0, e4 = 0; e4 < k.length; e4++)
                      c2 += (I2 = k[e4])[D], 0 < I2[_] ? u += I2[_] : 0 < I2.maxGiven ? u += I2.maxGiven : 0 < I2.given && (u += I2.given), I2[_] == 0 && (s6 = false);
                    if (s6 || t3) {
                      var d = 100 - u - (c2 += T2);
                      if (c2 -= T2 + k[0][D], d != 0 && c2 != 0)
                        for (e4 = 0; e4 < k.length; e4++)
                          e4 != 0 && ((I2 = k[e4]).marginGiven = I2[D] / c2 * (c2 + d));
                    }
                    if (0 < H) {
                      for (var h2 = 0, g = 0, e4 = 0; e4 < k.length; e4++)
                        0 < (I2 = k[e4]).marginGiven ? g += I2.marginGiven : g += I2[D], I2.marginGiven = 0, h2 += 0.05 < I2[D] ? I2[D] : 0;
                      var p = (g - h2) / H;
                      for (e4 = 0; e4 < F2.length; e4++)
                        F2[e4] && k[e4] && ((I2 = k[e4]).marginGiven = (I2[X] || 0) + p);
                    }
                    var f3, m2, z, y, b, v, w, C = 0;
                    S2 && S2.graphics && (w = S2.graphics).c();
                    for (e4 = 0; e4 < k.length; e4++)
                      0 < (I2 = k[e4]).marginGiven ? C += I2.marginGiven * E[_] / 100 : C += I2[D] * E[_] / 100, m2 = (m2 = 0 < I2[_] ? I2[_] : 0 < I2.maxGiven ? I2.maxGiven : 0 < I2.given ? I2.given : 0) * E[_] / 100, z = I2[R] * E[Y] / 100, f3 = (E[Y] - z) / 2, y = P ? (I2.object.type == "Wrapper" && I2.object.resize(z), I2.object.type == "Window" && I2.object.resize(z, m2), I2.object.type == "Region" && I2.object.setBounds(z, m2), To.fit(I2.object, f3, C, z, m2)) : (I2.object.type == "Wrapper" && I2.object.resize(m2), I2.object.type == "Window" && I2.object.resize(m2, z), I2.object.type == "Region" && I2.object.setBounds(m2, z), To.fit(I2.object, C, f3, m2, z)), I2.valign == "top" ? I2.object.y = y.bY : I2.valign == "bottom" && (I2.object.y = y.bY + y.bHeight - y.height), I2.align == "left" ? I2.object.x = y.bX : I2.align == "right" && (I2.object.x = y.bX + y.bWidth - y.width), S2 && S2.graphics && (w.s("white").ss(2).r(y.bX, y.bY, y.bWidth, y.bHeight), w.s("#ff8203").sd([20, 20]).r(y.bX, y.bY, y.bWidth, y.bHeight).sd()), (v = b = 0) != C && C + m2 != E[_] || (P ? v = 1 : b = 1), z == E[Y] && (P ? b = 1 : v = 1), I2.backgroundColor != "" && (V(M, I2.backgroundColor), M.graphics.r(y.bX, y.bY, y.bWidth + b, y.bHeight + v)), C += m2, I2.object.ZIMoutlineShape && I2.object.outline();
                  }
                }, this.resize(), S2 && x2.addChild(S2), x2.addChildAt(M, 0), window.addEventListener("keydown", s5), this.disable = function() {
                  O.active = false, window.removeEventListener("keydown", s5), S2 && (S2.alpha = 0);
                }, this.enable = function() {
                  O.active = true, window.addEventListener("keydown", s5), O.resize(), S2 && (S2.alpha = 1);
                }, this.removeShape = function() {
                  S2 && (S2.graphics.clear(), S2.dispose(), S2 = null, S2 = false), window.removeEventListener("keydown", s5);
                }, this.toggled = true, this.toggle = function(e4) {
                  return S2.visible = e4 === true || e4 !== false && !S2.visible, O.toggled = S2.visible, O;
                }, !(this.addShape = function(e4, t3) {
                  O.removeShape(), S2 = e4, window.addEventListener("keydown", s5), x2.addChild(S2), O.resize();
                }) !== n && To.styleTransforms(this, a), this.dispose = function() {
                  return O.resize = null, O.backing && O.backing.dispose(), O.backing = null, O.removeShape(), true;
                });
              }
            } else
              zog("zim controls - Layout(): holder must have bounds set or provide a scalingObject with bounds");
          else
            zog("zim controls - Layout(): please provide an object with bounds set that holds the objects being laid out");
          function N() {
            for (var e4 = 0, t3 = 0; t3 < k.length; t3++)
              ((I2 = k[t3]).given = 0) == I2[_] && (e4 += I2.object.getBounds()[_]);
            for (t3 = 0; t3 < k.length; t3++)
              (I2 = k[t3])[_] == 0 && (I2.given = I2.object.getBounds()[_] / e4 * W);
          }
          function V(e4, t3) {
            t3.type == "GradientColor" ? e4.graphics.lf(t3.colors, t3.ratios, t3.x0, t3.y0, t3.x1, t3.y1) : t3.type == "GradientColor" ? e4.graphics.rf(t3.colors, t3.ratios, t3.x0, t3.y0, t3.r0, t3.x1, t3.y1, t3.r1) : t3.type == "BitmapColor" ? e4.graphics.bf(t3.image, t3.repetition, t3.matrix) : e4.graphics.f(I2.backgroundColor);
          }
          function s5(e4) {
            e4 = e4 || event, S2 && String.fromCharCode(e4.keyCode) == o2.toUpperCase() && (O.toggle(), S2.stage && S2.stage.update());
          }
        }, To.extend(To.Layout, createjs.EventDispatcher, null, "cjsEventDispatcher", false), To.Accessibility = function(u, e3, o2, t2, n, h2, g, r2, i2, a, l, s5, c2, d, p) {
          var f3;
          if (f3 = zob(To.Accessibility, arguments, "appName, tabOrder, tabIndex, cycle, decimals, frame, application, alwaysHighlight, AHTime, AHColor, AHBorderWidth, AHBorderPadding, AHAlpha, AHObject, AHObjectScale", this))
            return f3;
          z_d("30.5"), this.cjsEventDispatcher_constructor(), this.type = "Accessibility", zot(u) && (u = "application"), zot(t2) && (t2 = false), zot(n) && (n = 2), zot(h2) && (h2 = zdf), zot(g) && (g = !To.mobile()), zot(r2) && (r2 = false);
          var m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, D, X, R, W, F2, H, N = Ao(i2);
          function V(e4) {
            var t3 = e4.currentTarget.boundsToGlobal(), o3 = t3.x + t3.width / 2, t3 = t3.y + t3.height / 2;
            (e4.stageX / To.scaX < o3 - 5 || e4.stageX / To.scaX > o3 + 5 || e4.stageY / To.scaY < t3 - 5 || e4.stageY / To.scaY > t3 + 5 ? U : q)();
          }
          function G() {
            M && (M.innerHTML = "");
          }
          function q() {
            var e4, t3;
            B = true, J(), M && M.setAttribute("aria-hidden", false), To.ACTIONEVENT = "click", zns || (ACTIONEVENT = "click"), h2.stage.removeChild(k), A3 && (y.alwaysHighlight = false), h2.stage.update();
            for (var o3 = 0; o3 < b.length; o3++)
              (t3 = (e4 = b[o3]).obj.zimTabTag).disabled = false, e4.title = e4.title.replace(/\s\(use arrow keys\)/, ""), t3.setAttribute("aria-label", e4.title), t3.addEventListener("focus", Q);
          }
          function U() {
            B = false;
            for (var e4 = 0; e4 < b.length; e4++)
              b[e4].obj.zimTabTag.disabled = false;
            J(), r2 && function() {
              for (var e5 = 0; e5 < w.length; e5++) {
                var t3 = w[e5];
                t3.zimObject && (t3.zimObject.type == "Loader" || t3.zimObject.type == "TextArea" || t3.zimObject.type == "Tag") || (w[e5].style.left = "-2000px");
              }
            }();
          }
          function Q(e4) {
            var t3 = e4.currentTarget, e4 = t3.zimObject;
            v = e4.zimTabIndex, e4.focus = true;
            e4 = new createjs.Event("change");
            e4.title = t3.getAttribute("aria-label"), y.dispatchEvent(e4);
          }
          function Z2(e4) {
            B = false, e4.target.focusTab.focus();
          }
          function K() {
            (zot(B) || B ? q : U)();
          }
          function J() {
            P = true, E.removeEventListener("focus", K), I2.removeEventListener("focus", K), O.removeEventListener("focus", Z2), j.removeEventListener("focus", Z2), O.parentNode && (O.parentNode.removeChild(O), j.parentNode.removeChild(j)), L.removeEventListener("focus", Z2), _.removeEventListener("focus", Z2), L.parentNode && (L.parentNode.removeChild(L), _.parentNode.removeChild(_));
            for (var e4 = 0; e4 < S2.length; e4++)
              S2[e4][0].off("mousedown", S2[e4][1]);
          }
          function $(e4) {
            var t3 = e4.currentTarget;
            if (t3.type == "RadioButton" || t3.type == "TabsButton" || t3.type == "PadButton")
              for (var o3 = 0; o3 < t3.zimTabParent.buttons.length; o3++) {
                var n2 = t3.zimTabParent.buttons[o3];
                n2.zimTabTag.setAttribute("aria-label", n2.zimTabTag.getAttribute("aria-label").split(" - currently")[0] + (t3.zimTabParent.selectedIndex == n2.tabIndex ? " - currently selected." : " - currently not selected."));
              }
            y.tabIndex = e4.currentTarget.zimTabIndex, y.activatedObject = t3;
          }
          function ee(e4) {
            return e4.talk || (e4.type == "TextArea" || e4.type == "RadioButtons" || e4.type == "Tabs" || e4.type == "Pad" ? e4.type : e4.type == "Waiter" ? "Waiter active - please wait" : e4.text ? e4.type + " - " + (e4.text == "a" || e4.text == "A" ? "eh" : e4.text) : e4.type + (e4.type == "Dial" || e4.type == "Slider" || e4.type == "ColorPicker" || e4.type == "Stepper" ? " (use arrow keys)" : "") + (e4.type == "TextArea" ? " (press ENTER to edit)" : ""));
          }
          function te(e4) {
            var t3 = e4.obj;
            e4.title = e4.title.replace(/\.$/, ""), t3.type == "RadioButton" || t3.type == "TabsButton" || t3.type == "PadButton" ? e4.title = e4.title + (t3.tabIndex == t3.zimTabParent.selectedIndex ? " - currently selected" : " - currently not selected") : t3.type == "CheckBox" ? e4.title = e4.title + (t3.checked ? " - currently checked" : " - currently not checked") : t3.type == "Stepper" ? e4.title = e4.title + " - currently displaying " + t3.currentValue : t3.type == "Slider" || t3.type == "Dial" ? e4.title = e4.title + " - currently at " + To.decimals(t3.currentValue, y.decimals) : t3.type == "ColorPicker" ? e4.title = e4.title + " - currently at " + t3.selectedColor : t3.type == "TextArea" ? e4.title = e4.title + (t3.tag.value != "" ? "" : " - placeholder: " + t3.tag.placeholder) : t3.type == "Indicator" && (e4.title = e4.title + " - currently " + (0 <= t3.selectedIndex ? "at " + (t3.selectedIndex + 1) + " of " + t3.num : "not indicating")), e4.title += ".";
          }
          function oe(e4, t3, o3, n2, r3) {
            var i3, a2;
            if (n2 && (a2 = n2.obj), n2 && (a2.type == "TextArea" || a2.type == "Loader"))
              return (i3 = a2.tag).setAttribute("aria-label", t3), a2 && i3.setAttribute("aria-hidden", !a2.stage), r3 == "before" ? o3.parentNode.insertBefore(i3, o3) : o3.parentNode.insertBefore(i3, o3.nextSibling), i3.style.zIndex = -5, i3.zimObject = a2, n2.obj.zimTabTag = i3, w.push(i3), i3;
            if (!n2 || a2.type != "Dial" && a2.type != "Slider" && a2.type != "Stepper" && a2.type != "ColorPicker")
              i3 = document.createElement("div"), a2 && (i3.zimObject = a2), i3.innerHTML = "tag", i3.setAttribute("role", g ? "application" : "button"), A3 == "android" && i3.addEventListener("click", function(e5) {
                a2.dispatchEvent("click");
              });
            else {
              var l2, s6, c3 = [];
              if (a2.type == "Dial" || a2.type == "Slider")
                for (var u2 = a2.step <= 0 ? (a2.max - a2.min) / 20 : a2.step, d2 = a2.min; d2 < a2.max; d2 += u2)
                  c3.push(a2.min + d2);
              else
                a2.type == "Stepper" ? c3 = a2.stepperArray : a2.type == "ColorPicker" && (c3 = a2.colors);
              (i3 = document.createElement("select")).disabled = true, i3.zimObject = a2, i3.addEventListener("change", function(e5) {
                !B && !A3 == "android" || (e5.currentTarget.zimObject.zimTabParent.currentValueEvent = e5.target.value, h2.stage.update());
              }), i3.size = 1;
              for (d2 = 0; d2 < c3.length; d2++)
                l2 = c3[d2], (s6 = document.createElement("option")).setAttribute("aria-label", l2), s6.innerHTML = l2, i3.add(s6), l2 == a2.zimTabParent.currentValue && s6.setAttribute("selected", "selected");
              i3.setAttribute("role", "button");
            }
            return i3.setAttribute("id", e4), i3.setAttribute("tabindex", 0), i3.setAttribute("aria-label", t3), a2 && i3.setAttribute("aria-hidden", !a2.stage), r3 == "before" ? o3.parentNode.insertBefore(i3, o3) : o3.parentNode.insertBefore(i3, o3.nextSibling), i3.style.position = "absolute", n2 ? (o3 = (a2 = n2.obj).boundsToGlobal(), h2.retina ? (i3.style.left = h2.x + o3.x * h2.scale / z + "px", i3.style.top = h2.y + o3.y * h2.scale / z + "px", i3.style.width = o3.width * h2.scale / z + "px", i3.style.height = o3.height * h2.scale / z + "px") : (i3.style.left = h2.x + o3.x * h2.scale + "px", i3.style.top = h2.y + o3.y * h2.scale + "px", i3.style.width = o3.width * h2.scale + "px", i3.style.height = o3.height * h2.scale + "px"), n2.obj.zimTabTag = i3) : (i3.style.left = "-1000px", i3.style.top = h2.y + "px"), i3.style.overflow = "hidden", i3.style.zIndex = -5, i3.style.fontSize = "20px", i3.style.color = "rgba(0,0,0,.01)", w.push(i3), i3;
          }
          function ne(e4) {
            e4.ctrlKey ? re(e4.shiftKey ? -1 : 1) : (e4.shiftKey ? y.tab(-1) : y.tab(1), e4.preventDefault());
          }
          function re(e4) {
            D = false, zid(T2 + (e4 == 1 ? "SuffixTab" : "PrefixTab")).focus(), h2.stage.removeChild(d), h2.stage.update(), y.tabIndex = -1;
          }
          zot(i2) && (i2 = N == "s" ? 0.7 : 700), zot(a) && (a = "brown"), zot(l) && (l = 3), zot(s5) && (s5 = 5), zot(c2) && (c2 = 0.8), zot(p) && (p = 0.8), zot(d) ? (m2 = new To.Shape({ style: false })).mouseEnabled = false : d.mouseEnabled && (d.mouseEnabled = false), zot(h2 = zdf) ? zon && zogy("Accessibility - needs a Frame") : (z = h2.retina && window.devicePixelRatio || 1, (y = this).cycle = t2, y.decimals = n, y.alwaysHighlight = r2, y.AHTime = i2, y.AHColor = a, y.AHBorderWidth = l, y.AHBorderPadding = s5, y.AHAlpha = c2, y.AHObjectScale = p, v = b = -1, w = [], C = [], x2 = { RadioButtons: "option", Tabs: "tab", Pad: "key" }, T2 = h2.canvas.id, A3 = To.mobile(), P = false, B = null, S2 = [], Object.defineProperty(this, "tabOrder", { get: function() {
            return b;
          }, set: function(e4) {
            E && E.removeEventListener("focus", G), I2 && I2.removeEventListener("focus", G);
            for (var t3, o3, n2 = 0; n2 < w.length; n2++)
              w[n2].parentElement && (w[n2].outerHTML = "");
            for (w = [], n2 = 0; n2 < C.length; n2++)
              (t3 = b[n2]) && C[n2][0].off("mousedown", C[n2][1]);
            C = [], b = [];
            var r3 = [];
            Y = h2.shim ? document.body : h2.canvas, F2 = false;
            for (var i3 = 0, n2 = 0; n2 < e4.length; n2++) {
              if ((t3 = e4[n2]).type == "HotSpots" && (e4.splice.apply(e4, [n2, 1].concat(t3.hotSpots)), t3 = t3.hotSpots[0]), t3.type == "HotSpot" && (t3 = t3.spot), t3.constructor == {}.constructor) {
                if (!(o3 = t3.obj) || !o3.getStage)
                  continue;
                t3.title || (t3.title = ee(o3));
              } else
                t3 = { obj: o3 = t3, title: ee(t3) };
              if (o3.type == "RadioButtons" || o3.type == "Tabs" || o3.type == "Pad") {
                var a2 = [];
                i3--;
                for (var l2 = 0; l2 < o3.buttons.length; l2++) {
                  i3++;
                  var s6 = o3.buttons[l2], c3 = { obj: s6, title: t3.title + " - " + x2[o3.type] + ": " + (s6.text == "a" || s6.text == "A" ? "eh" : s6.text) };
                  a2.push(c3), s6.zimTabParent = o3, s6.zimTabParent.zimAccessibility = y, s6.zimTabIndex = n2 + i3, s6.tabIndex = l2, s6.zimAccessibility = y, te(c3), Y = oe(T2 + "Tab" + (n2 + i3), c3.title, Y, c3), C.push([s6, s6.on("mousedown", $)]), P || S2.push([s6, s6.on("mousedown", V)]);
                }
                r3 = r3.concat(a2);
              } else
                o3.zimTabIndex = n2 + i3, o3.zimTabParent = o3, te(t3), o3.zimAccessibility = y, C.push([o3, o3.on("mousedown", $)]), P || S2.push([o3, o3.on("mousedown", V)]), r3.push(t3), Y = oe(T2 + "Tab" + (n2 + i3), t3.title, Y, t3);
            }
            (E = y.startAppTag = oe(T2 + "PrefixTab", u + " start", h2.shim ? document.body : h2.canvas, null, "before")).addEventListener("focus", G), P || (E.addEventListener("focus", K), (O = oe(T2 + "noAriaTab", "", E, null, "before")).setAttribute("aria-hidden", true), O.focusTab = E, O.addEventListener("focus", Z2), (L = oe(T2 + "noAriaTab", "", E)).setAttribute("aria-hidden", true), L.focusTab = E, L.addEventListener("focus", Z2)), Y = oe(T2 + "BufferTab", "", Y), A3 && Y.setAttribute("aria-hidden", true), Y = I2 = y.endAppTag = oe(T2 + "SuffixTab", u + " end", Y), I2.addEventListener("focus", G), P || (I2.addEventListener("focus", K), Y = j = oe(T2 + "noAriaTab", "", I2), j.setAttribute("aria-hidden", true), j.focusTab = I2, j.addEventListener("focus", Z2), (_ = oe(T2 + "noAriaTab", "", I2, null, "before")).setAttribute("aria-hidden", true), _.focusTab = I2, _.addEventListener("focus", Z2)), b = r3;
          } }), Object.defineProperty(this, "tabIndex", { get: function() {
            return v;
          }, set: function(e4) {
            var t3, o3, n2, r3, i3;
            function a2() {
              if (v && -1 < v)
                b && b[v] && (b[v].obj.focus = false);
              else
                for (var e5 = 0; e5 < b.length; e5++)
                  b[e5].obj.focus = false;
            }
            function l2() {
              a2(), D = false, y.AHObject && h2.stage.removeChild(y.AHObject), y.alwaysHighlightShape && h2.stage.removeChild(y.alwaysHighlightShape), h2.stage.update(), v = -1;
            }
            H && (e4 < 0 || e4 >= b.length ? l2() : (e4 != v && a2(), (t3 = b[e4].obj).stage ? (v = e4, t3.focus = true, X = !(D = true), y.changeTitle(t3), t3.zimTabTag.focus(), setTimeout(function() {
              t3.zimTabTag.focus();
              var e5 = new createjs.Event("change");
              e5.title = t3.zimTabTag.getAttribute("aria-label"), y.dispatchEvent(e5);
            }, 150), !y.alwaysHighlight || B && A3 || (y.AHObject ? (k = y.AHObject, r3 = To.boundsToGlobal(t3), y.AHObject.alp(y.AHAlpha).addTo(h2.stage, null, false), y.AHObject.fit(r3.x, r3.y, r3.width, r3.height), y.AHObject.sca(y.AHObject.scaleX * y.AHObjectScale), 0 < y.AHTime && (W = setTimeout(function() {
              h2.stage.removeChild(y.AHObject), h2.stage.update();
            }, y.AHTime * (N == "s" ? 1e3 : 1)))) : (k = m2, i3 = t3.getBounds(), o3 = t3.localToGlobal(i3.x - 5, i3.y - 5), n2 = t3.localToGlobal(i3.x + i3.width + 5, i3.y - 5), e4 = t3.localToGlobal(i3.x + i3.width + 5, i3.y + i3.height + 5), r3 = t3.localToGlobal(i3.x - 5, i3.y + i3.height + 5), (i3 = m2.graphics).clear(), i3.s(y.AHColor).ss(y.AHBorderWidth).mt(o3.x - y.AHBorderPadding, o3.y - y.AHBorderPadding).lt(n2.x + y.AHBorderPadding, n2.y - y.AHBorderPadding).lt(e4.x + y.AHBorderPadding, e4.y + y.AHBorderPadding).lt(r3.x - y.AHBorderPadding, r3.y + y.AHBorderPadding).lt(o3.x - y.AHBorderPadding, o3.y - y.AHBorderPadding).cp(), m2.alpha = y.AHAlpha, 0 < y.AHTime && (W = setTimeout(function() {
              h2.stage.removeChild(m2), h2.stage.update();
            }, y.AHTime * (N == "s" ? 1e3 : 1)))), h2.stage.addChild(k), h2.stage.update())) : l2()));
          } }), Object.defineProperty(this, "aria", { get: function() {
            return B;
          }, set: function(e4) {
            (B = e4) && q();
          } }), A3 == "android" && (To.ACTIONEVENT = "click", zns || (ACTIONEVENT = "click")), zot(e3) ? setTimeout(function() {
            var t3;
            b == -1 && (b = [], t3 = [], To.loop(h2.stage, function(e4) {
              e4.type && t3.push(e4);
            }), y.tabOrder = t3, zot(o2) || (y.tabIndex = o2));
          }, 50) : (b = [], y.tabOrder = e3, zot(o2) || (y.tabIndex = o2)), X = !(D = false), R = h2.on("keydown", function(e4) {
            var t3, o3;
            e4.keyCode == 9 && (!function() {
              for (var e5 = false, t4 = 0; t4 < w.length; t4++)
                if (document.activeElement == w[t4]) {
                  e5 = true;
                  break;
                }
              return !(document.activeElement != h2.canvas && !e5);
            }() && (D = false, y.tabIndex != -1 && (y.tabIndex = -1)), D ? ne(e4) : (t3 = e4, h2.shiftKey || zid(T2 + "PrefixTab") != document.activeElement && h2.canvas != document.activeElement ? !h2.shiftKey || zid(T2 + "SuffixTab") != document.activeElement && zid(T2 + "BufferTab") != document.activeElement || (0 < b.length && (b[0].obj.focus = true), D = X = true, ne(t3)) : (0 < b.length && (b[b.length - 1].obj.focus = true), D = X = true, ne(t3)))), D && 0 < b.length && 0 <= y.tabIndex && e4.keyCode == 13 && (t3 = (o3 = b[y.tabIndex]).obj, o3 && t3.stage && (e4 = new createjs.Event("mousedown"), o3 = new createjs.Event("click"), e4.fromEnter = o3.fromEnter = true, t3.type == "Pane" ? (t3.backdrop.dispatchEvent(e4), t3.backdrop.dispatchEvent(o3)) : (t3.dispatchEvent(e4), t3.dispatchEvent(o3))));
          }), this.tab = function(e4) {
            if (clearTimeout(W), k && h2.stage.removeChild(k), zot(e4) && (e4 = 1), b.length != 0) {
              for (var t3 = 0; t3 < b.length; t3++)
                if ((i3 = b[t3].obj).focus) {
                  i3.focus = false;
                  for (var o3 = t3 + e4, n2 = (o3 + 1e4 * b.length) % b.length, r3 = b[n2], i3 = r3.obj, a2 = 0, l2 = false; !i3.stage || !(!i3.zimTabParent && (zot(i3.enabled) || i3.enabled) || i3.zimTabParent && (zot(i3.zimTabParent.enabled) || i3.zimTabParent.enabled)); )
                    if (a2++, n2 = ((o3 += e4) + 100 * b.length) % b.length, i3 = b[n2].obj, a2 == b.length) {
                      l2 = true;
                      break;
                    }
                  if (l2 || !y.cycle && o3 != n2 && !X)
                    return void re(e4);
                  X = false, y.tabIndex = n2;
                  break;
                }
            } else
              re(e4);
          }, F2 = !(this.changeTitle = function(e4, t3, o3) {
            var n2, r3;
            typeof e4 != "number" && (e4 = e4.zimTabIndex), zot(e4) || (o3 && zot(t3) ? y.tabIndex = e4 : (r3 = (n2 = b[e4]).obj, zot(t3) && (t3 = r3.zimTabTag.getAttribute("aria-label").split(" - currently")[0]), n2.title = t3, te(n2), r3.zimTabTag.setAttribute("aria-label", n2.title), o3 && (y.tabIndex = e4)));
          }), this.talk = function(e4) {
            F2 || ((M = oe(T2 + "TalkTab", "", I2)).setAttribute("role", "alert"), F2 = true), M.removeAttribute("role"), M.setAttribute("aria-label", e4), M.setAttribute("role", "alert");
            var t3 = new createjs.Event("change");
            t3.title = e4, y.dispatchEvent(t3);
          }, this.resize = function(e4) {
            if (zot(e4))
              for (var t3 = 0; t3 < b.length; t3++)
                o3(b[t3].obj);
            else
              typeof e4 != "number" && (e4 = e4.zimTabIndex), e4 < 0 || (!(e4 = b[e4].obj).stage && k && e4 == y.currentObject && (h2.stage.removeChild(k), h2.stage.update()), o3(e4));
            function o3(e5) {
              var t4, o4;
              e5.type != "TextArea" && e5.type != "Loader" ? (t4 = e5.boundsToGlobal(), o4 = e5.zimTabTag, h2.retina ? (o4.style.left = h2.x + t4.x * h2.scale / z + "px", o4.style.top = h2.y + t4.y * h2.scale / z + "px", o4.style.width = t4.width * h2.scale / z + "px", o4.style.height = t4.height * h2.scale / z + "px") : (o4.style.left = h2.x + t4.x * h2.scale / z / z + "px", o4.style.top = h2.y + t4.y * h2.scale / z / z + "px", o4.style.width = t4.width * h2.scale / z / z + "px", o4.style.height = t4.height * h2.scale / z / z + "px"), o4.setAttribute("aria-hidden", !e5.stage), o4.hidden = !e5.stage) : e5.resize();
            }
          }, Object.defineProperty(this, "currentObject", { get: function() {
            return b[v] && b[v].obj ? b[v].obj : null;
          }, set: function(e4) {
            for (var t3 = 0; t3 < b.length; t3++)
              if (b[t3].obj == e4) {
                y.tabIndex = t3;
                break;
              }
          } }), H = true, Object.defineProperty(this, "enabled", { get: function() {
            return H;
          }, set: function(e4) {
            H = e4;
          } }), this.dispose = function(e4, t3, o3) {
            m2 && m2.graphics.clear(), y.tabOrder = [];
            for (var n2 = 0; n2 < w.length; n2++)
              w[n2].parentElement && (w[n2].outerHTML = "");
            E && (E.removeEventListener("focus", G), E.removeEventListener("focus", K), E.parentNode && (E.outerHTML = "")), O && (O.removeEventListener("focus", Z2), O.parentNode && (O.outerHTML = "")), L && (L.removeEventListener("focus", Z2), L.parentNode && (L.outerHTML = "")), Y && Y.parentNode && (Y.outerHTML = ""), I2 && (I2.removeEventListener("focus", G), I2.removeEventListener("focus", K), I2.parentNode && (I2.outerHTML = "")), j && (j.removeEventListener("focus", Z2), j.parentNode && (j.outerHTML = "")), _ && (_.removeEventListener("focus", Z2), _.parentNode && (_.outerHTML = "")), y.removeAllEventListeners(), h2.off("keydown", R);
          });
        }, To.extend(To.Accessibility, createjs.EventDispatcher, null, "cjsEventDispatcher", false), To.Manager = function(e3) {
          z_d("75");
          var r2 = this;
          this.type = e3, this.items = [], this.add = function(e4) {
            return Array.isArray(e4) ? r2.items = r2.items.concat(e4) : r2.items.push(e4), r2;
          }, this.remove = function(e4) {
            if (r2) {
              if (e4) {
                Array.isArray(e4) || (e4 = [e4]);
                for (var t2 = e4.length - 1; 0 <= t2; t2--) {
                  o = e4[t2];
                  var n = r2.items.indexOf(o);
                  n != -1 && r2.items.splice(n, 1);
                }
              } else
                r2.items = [];
              return r2;
            }
          }, this.resize = function(e4) {
            if (r2) {
              if (e4) {
                Array.isArray(e4) || (e4 = [e4]);
                for (t2 = e4.length - 1; 0 <= t2; t2--)
                  o = e4[t2], o.resize || r2.items.indexOf(o) == -1 ? o.resize() : r2.items.splice(r2.items.indexOf(o), 1);
              } else
                for (var t2 = r2.items.length - 1; 0 <= t2; t2--)
                  r2.items[t2].resize ? r2.items[t2].resize() : r2.items.splice(t2, 1);
              return r2;
            }
          }, this.toggle = function(e4, t2) {
            if (r2) {
              if (t2) {
                Array.isArray(t2) || (t2 = [t2]);
                for (n = t2.length - 1; 0 <= n; n--)
                  o = t2[n], o.resize || r2.items.indexOf(o) == -1 ? o.toggle(e4) : r2.items.splice(r2.items.indexOf(o), 1);
              } else
                for (var n = r2.items.length - 1; 0 <= n; n--)
                  r2.items[n].resize ? r2.items[n].toggle(e4) : r2.items.splice(n, 1);
              return r2;
            }
          }, this.dispose = function(e4) {
            if (r2) {
              if (r2.resize = null, e4) {
                Array.isArray(e4) || (e4 = [e4]);
                for (t2 = e4.length - 1; 0 <= t2; t2--)
                  o = e4[t2], r2.items.indexOf(o) != -1 && r2.items.splice(r2.items.indexOf(o)), o.dispose && o.dispose();
              } else {
                for (var t2 = r2.items.length - 1; 0 <= t2; t2--)
                  r2.items[t2].resize ? r2.items[t2].dispose() : r2.items.splice(t2, 1);
                r2.items = null;
              }
              return true;
            }
          };
        }, To.ResizeManager = function() {
          z_d("75.5"), To.Manager.call(this, "ResizeManager");
        }, To.ResizeManager.prototype = new To.Manager(), To.ResizeManager.prototype.constructor = To.ResizeManager, To.TransformManager = function(e3, n) {
          z_d("75.7");
          var a = this;
          function t2(e4) {
            !localStorage || e4 && !e4.pressup || a.savePersist(e4);
          }
          this.type = "TransformManager", this.persistID = n, this.items = [], this.add = function(e4) {
            for (var t3, o2, n2 = [], n2 = Array.isArray(e4) ? e4 : [e4], r2 = false, i2 = 0; i2 < n2.length; i2++)
              (o2 = n2[i2]).transformControls && (o2.originalVisible = o2.transformControls.visible), o2.toggle && o2.toggle(false), a.items.length == 0 && i2 == 0 && (r2 = true), o2.type == "Blob" || o2.type == "Squiggle" ? (a.persistID || r2 && (r2 = false, o2.controlsVisible = true, a.currentObject = o2), o2.on("change", function(e5) {
                var t4 = new createjs.Event("transformed");
                t4.transformObject = e5.target, t4.transformType = e5.controlType, a.dispatchEvent(t4);
              }), o2.on("controlsshow", function(e5) {
                var t4 = new createjs.Event("transformshow");
                a.currentObject = t4.transformObject = e5.target, a.dispatchEvent(t4);
              }), o2.on("controlshide", function(e5) {
                var t4 = new createjs.Event("transformhide");
                t4.transformObject = e5.target, a.currentObject = null, a.dispatchEvent(t4);
              }), o2.on("update", function(e5) {
                var t4 = new createjs.Event("transformed");
                t4.transformObject = e5.target, t4.transformType = e5.controlType, a.dispatchEvent(t4);
              })) : (t3 = o2.transformControls, a.persistID || r2 && o2.type != "Layer" && (r2 = false, o2.originalVisible && (t3.show(), a.currentObject = o2)), o2.on("transformed", function(e5) {
                var t4 = new createjs.Event("transformed");
                t4.transformObject = e5.target, t4.transformType = e5.transformType, a.dispatchEvent(t4);
              }), o2.on("transformshow", function(e5) {
                var t4 = new createjs.Event("transformshow");
                a.currentObject = t4.transformObject = e5.target, a.dispatchEvent(t4);
              }), o2.on("transformhide", function(e5) {
                var t4 = new createjs.Event("transformhide");
                t4.transformObject = e5.target, a.currentObject = null, a.dispatchEvent(t4);
              }));
            a.items = a.items.concat(e4), a.persist && !zot(a.persistID) && a.persist(a.persistID);
          }, this.remove = function(e4) {
            if (zot(e4))
              a.items = [];
            else {
              Array.isArray(e4) || (e4 = [e4]);
              for (var t3 = 0; t3 < e4.length; t3++) {
                o2 = e4[t3], a.currentObject == o2 && (a.currentObject = null), o2.transformedEvent && (o2.off("transformed", o2.transformedEvent), o2.transformedEvent = null), o2.type == "Blob" || o2.type == "Squiggle" ? o2.controlsVisible = false : o2.transformControls.remove();
                var o2 = a.items.indexOf(o2);
                o2 != -1 && a.items.splice(o2, 1);
              }
              n && a.savePersist();
            }
          }, this.show = function(e4) {
            if (!zot(e4)) {
              if (e4.type == "Blob" || e4.type == "Squiggle")
                e4.controlsVisible || (e4.controlsVisible = true);
              else {
                var t3 = e4.transformControls;
                if (!t3 || t3.visible)
                  return;
                t3.show();
              }
              a.currentObject = e4;
            }
          }, this.hide = function(e4) {
            zot(e4) || (a.currentObject == e4 && (a.currentObject = null), e4.type == "Blob" || e4.type == "Squiggle" ? e4.controlsVisible && (e4.controlsVisible = false) : (e4 = e4.transformControls) && !e4.visible && e4.hide());
          }, this.hideAll = function(e4) {
            for (var t3, o2 = 0; o2 < a.items.length; o2++)
              (t3 = a.items[o2]) && (t3.transformControls || t3.update) ? a.items[o2] != e4 && (t3.type == "Blob" || t3.type == "Squiggle" ? t3.controlsVisible && (t3.controlsVisible = false) : (t3 = a.items[o2].transformControls).visible && t3.hide()) : a.items.splice(o2);
            a.currentObject = null;
          }, this.resize = function() {
            if (a) {
              for (var e4, t3 = 0; t3 < a.items.length; t3++)
                (e4 = a.items[t3]) && (e4.transformControls || e4.update) ? e4.type == "Blob" || e4.type == "Squiggle" ? e4.update() : e4.transformControls.resize() : a.items.splice(t3);
              n && a.savePersist();
            }
          }, zot(e3) || a.add(e3);
          var l = "TransformManager persist(persistID) - sorry, must provide id";
          this.persist = function(e4) {
            var o2;
            if (zot(e4) && zon)
              zog(l);
            else {
              a.persistID = e4;
              var n2 = 0;
              if (localStorage && localStorage[e4]) {
                var r2 = a.persistData = JSON.parse(localStorage[e4]);
                if (r2.length == a.items.length)
                  for (var i2 = 0; i2 < a.items.length; i2++)
                    r2[i2].controls && (a.currentObject = a.items[i2]), !r2[i2] || r2[i2].type != "Blob" && r2[i2].type != "Squiggle" ? r2[i2] && (zot(a.items[i2].transformControls) ? function() {
                      o2 = a.items[i2];
                      var t3 = r2[i2];
                      To.interval(50, function(e5) {
                        o2.transformControls && (o2.transformControls.setData(t3), o2.dispatchEvent("persistset"), ++n2 == r2.length && (setTimeout(function() {
                          o2 == a.currentObject && a.currentObject.toggle(true), a.dispatchEvent("persistcomplete");
                        }, 100), e5.clear()));
                      }, 20, null, null, "ms");
                    }() : (a.items[i2].transformControls.setData(r2[i2]), o2 = a.items[i2], To.interval(50, function(e5) {
                      o2.dispatchEvent("persistset"), ++n2 == r2.length && (setTimeout(function() {
                        o2 == a.currentObject && a.currentObject.toggle(true), a.dispatchEvent("persistcomplete");
                      }, 100), e5.clear());
                    }, 20, null, null, "ms"))) : (a.items[i2].points.length != r2[i2].points.length && (a.items[i2].points = r2[i2].points), a.items[i2].setData(r2[i2]), a.items[i2] == a.currentObject && a.currentObject.toggle(true), ++n2 == r2.length && setTimeout(function() {
                      a.dispatchEvent("persistcomplete");
                    }, 100));
              }
              for (i2 = 0; i2 < a.items.length; i2++)
                (o2 = a.items[i2]).transformedEvent || (o2.type == "Blob" || o2.type == "Squiggle" ? (o2.transformedEvent = o2.on("change", function(e5) {
                  e5.pressup = true, t2(e5);
                }), o2.transformedEvent = o2.on("update", function(e5) {
                  e5.pressup = true, t2(e5);
                }), o2.transformedEvent = o2.on("controlsshow", function(e5) {
                  e5.pressup = true, t2(e5);
                }), o2.transformedEvent = o2.on("controlshide", function(e5) {
                  e5.pressup = true, t2(e5);
                })) : (o2.transformedEvent = o2.on("transformed", t2), o2.transformedEvent = o2.on("transformshow", t2), o2.transformedEvent = o2.on("transformhide", t2)));
            }
          }, this.savePersist = function(e4) {
            for (var t3 = [], o2 = 0; o2 < a.items.length; o2++) {
              var n2 = a.items[o2];
              n2.type == "Blob" || n2.type == "Squiggle" ? n2.recordData && t3.push(n2.recordData()) : n2.transformControls && n2.transformControls.recordData && t3.push(n2.transformControls.recordData());
            }
            a.persistData = t3, localStorage[a.persistID] = JSON.stringify(t3);
          }, this.clearPersist = function(e4) {
            zot(e4) && zon ? zog(l) : (a.persistData = null, localStorage && localStorage.removeItem(e4));
          }, this.stopPersist = function() {
            for (var e4 = 0; e4 < a.items.length; e4++) {
              var t3 = a.items[e4];
              t3.transformedEvent && (t3.type == "Blob" || t3.type == "Squiggle" ? t3.off("change", t3.transformedEvent) : t3.off("transformed", t3.transformedEvent), t3.transformedEvent = null);
            }
            a.persistData = null;
          }, zot(n) || a.persist(n), this.dispose = function(e4, t3, o2) {
            if (zot(e4) && (e4 = true), a.removeAllEventListeners(), a.persistID && e4 && a.stopPersist(), t3)
              for (var n2 = 0; n2 < a.items.length; n2++) {
                var r2 = a.items[n2];
                (r2.type == "Blob" || r2.type == "Squiggle" ? r2 : r2.transformControls).dispose();
              }
          };
        }, To.extend(To.TransformManager, createjs.EventDispatcher, null, "cjsEventDispatcher", false), To.GuideManager = function() {
          z_d("77"), To.Manager.call(this, "GuideManager");
        }, To.GuideManager.prototype = new To.Manager(), To.GuideManager.prototype.constructor = To.GuideManager, To.GridManager = function() {
          z_d("79"), To.Manager.call(this, "GridManager");
        }, To.GridManager.prototype = new To.Manager(), To.GridManager.prototype.constructor = To.GridManager, To.LayoutManager = function() {
          z_d("81"), To.Manager.call(this, "LayoutManager");
        }, To.LayoutManager.prototype = new To.Manager(), To.LayoutManager.prototype.constructor = To.LayoutManager, To.SelectionSet = function(e3) {
          z_d("81.5"), this.type = "SelectionSet", zot(e3) && (e3 = []), this.selections = e3, this.clear = function() {
            this.selections = [];
          }, this.isSelected = function(e4) {
            return 0 <= this.selections.indexOf(e4);
          }, this.add = function(e4, t2, o2, n) {
            if (!zot(e4) && (zot(t2) && (zot(this.selectionManager) || (t2 = this.selectionManager.multiple)), zot(this.selectionManager) || (this.selectionManager.setCurrent(this), !t2 && this.selectionManager.multipleSets && this.selectionManager.clear()), t2 || this.clear(), !(0 <= this.selections.indexOf(e4)))) {
              if (this.selections.push(e4), !zot(o2)) {
                Array.isArray(o2) || (o2 = [o2]);
                for (var r2 = 0; r2 <= o2.length; r2++)
                  o2[r2].add(e4, t2);
              }
              if (!zot(n))
                for (Array.isArray(n) || (n = [n]), r2 = 0; r2 <= n.length; r2++)
                  n[r2].remove(e4, t2);
            }
          }, this.remove = function(e4, t2, o2, n) {
            if (!zot(e4)) {
              zot(t2) && (zot(this.selectionManager) || (t2 = this.selectionManager.multiple)), zot(this.selectionManager) || this.selectionManager.setCurrent(this), t2 || this.clear();
              var r2 = this.selections.indexOf(e4);
              if (zot(this.selectionManager) || (this.selectionManager.setCurrent(this), !t2 && this.selectionManager.multipleSets && this.selectionManager.clear()), t2 || this.clear(), t2 ? 0 <= r2 && this.selections.splice(r2, 1) : this.clear(), !zot(o2)) {
                Array.isArray(o2) || (o2 = [o2]);
                for (var i2 = 0; i2 <= o2.length; i2++)
                  o2[i2].remove(e4, t2);
              }
              if (!zot(n))
                for (Array.isArray(n) || (n = [n]), i2 = 0; i2 <= n.length; i2++)
                  n[i2].add(e4, t2);
            }
          }, this.toggle = function(e4, t2, o2, n) {
            this.isSelected(e4) ? this.remove(e4, t2, o2, n) : this.add(e4, t2, o2, n);
          }, this.dispose = function(e4, t2, o2) {
            return this.clear(), !(this.selections = null);
          };
        }, To.SelectionManager = function(o2, e3, t2) {
          z_d("81.6"), this.cjsEventDispatcher_constructor(), this.type = "SelectionManager", zot(o2) && (o2 = []), zot(t2) && (t2 = true), Array.isArray(o2) || (o2 = [o2]), this.sets = o2, this.multipleKey = e3, this.multipleSets = t2, this.multiple = false;
          for (var n = this, r2 = 0; r2 < o2.length; r2++)
            o2[r2].selectionManager = this;
          this.clear = function() {
            this.currentSet = null;
            for (var e4 = 0; e4 < o2.length; e4++)
              o2[e4].clear();
          }, this.setCurrent = function(e4) {
            this.currentSet = e4;
            for (var t3 = 0; t3 < o2.length; t3++)
              o2[t3] != e4 && (this.multipleSets || o2[t3].clear());
          };
          t2 = new createjs.Event("keydown");
          this.eventRemove = t2.remove, this.keydownEvent = function(e4) {
            e4.remove = n.eventRemove, n.multipleKey && (n.multiple = e4[n.multipleKey + "Key"]), n.ctrlKey = e4.ctrlKey, n.shiftKey = e4.shiftKey, n.metaKey = e4.metaKey, n.dispatchEvent(e4), e4.keyCode == 90 && (n.ctrlKey || n.metaKey) && n.dispatchEvent("undo");
          }, window.addEventListener("keydown", this.keydownEvent), this.keyupEvent = function(e4) {
            n.multipleKey && (n.multiple = e4[n.multipleKey + "Key"]), n.ctrlKey = e4.ctrlKey, n.shiftKey = e4.shiftKey, n.metaKey = e4.metaKey, e4.remove = n.eventRemove, n.dispatchEvent(e4);
          }, window.addEventListener("keyup", this.keyupEvent), this.dispose = function() {
            this.clear(), window.removeEventListener("keydown", this.keydownEvent), window.removeEventListener("keyup", this.keyupEvent);
          };
        }, To.extend(To.SelectionManager, createjs.EventDispatcher, null, "cjsEventDispatcher", false), To.Bind = function(e3, t2, m2, o2, z, n, y, r2) {
          var i2;
          if (i2 = zob(To.Bind, arguments, "connection, bindType, master, masterFilter, couple, smartDecimals, report, setDefault", this))
            return i2;
          z_d("81.8"), this.type = "Bind";
          var b = this;
          function v(r3, e4, t3) {
            var i3 = [];
            if (zot(e4) && zot(t3)) {
              if (r3 == "from" && b.bindType != LOCALSTORAGE)
                return To.loop(b.bindings, function(e5) {
                  e5.filter && i3.push(e5.filter);
                }), [i3, "full"];
              var o3 = b.ids;
            } else
              zot(e4) || Array.isArray(e4) || (e4 = [e4]), zot(t3) || Array.isArray(t3) || (t3 = [t3]), e4 && (o3 = [], To.loop(e4, function(e5) {
                typeof e5 == "string" ? o3.indexOf(e5) < 0 && o3.push(e5) : (e5 = b.objIDs.at(e5)) && To.loop(e5, function(e6) {
                  o3.indexOf(e6) < 0 && o3.push(e6);
                });
              }));
            var n2, a, l2 = {};
            return o3 ? (a = t3, To.loop(o3, function(o4) {
              var n3, e5 = b.bindings[o4];
              e5 && (e5.filter && i3.push(e5.filter), n3 = e5.obj, To.loop(a || e5.props, function(e6) {
                var t4 = b.toIDs[e6];
                t4 && 0 <= t4.indexOf(o4) && (r3 == "from" ? (l2[o4] || (l2[o4] = []), l2[o4].push(e6)) : (l2[o4] || (l2[o4] = {}), typeof (t4 = n3[e6]) == "number" && b.smartDecimals && (t4 = 1 < t4 ? To.decimals(t4, 1) : To.decimals(t4, 2)), l2[o4][e6] = To.copy(t4)));
              }));
            })) : t3 && (n2 = [], To.loop(t3, function(o4) {
              To.loop(b.toIDs[o4], function(e5) {
                var t4 = b.bindings[e5];
                n2.indexOf(e5) < 0 && (t4.filter && i3.push(t4.filter), n2.push(e5));
                t4 = t4.obj;
                r3 == "from" ? (l2[e5] || (l2[e5] = []), l2[e5].push(o4)) : (l2[e5] || (l2[e5] = {}), typeof (t4 = t4[o4]) == "number" && b.smartDecimals && (t4 = 1 < t4 ? To.decimals(t4, 1) : To.decimals(t4, 2)), l2[e5][o4] = To.copy(t4));
              });
            })), [i3, l2];
          }
          zot(e3) && localStorage && zot(c) && (zot(t2) || t2 == LOCALSTORAGE) ? (e3 = "zimBind", t2 = LOCALSTORAGE) : e3 && e3.match(/\/|\./) ? (zot(t2) && (t2 = GET), e3.match(/\?/) ? e3 += "&" : e3 += "?") : e3 && zot(t2) && (t2 = LOCALSTORAGE), zot(n) && (n = true), t2 != LOCALSTORAGE || localStorage || (zon && zogy("Bind() - no localStorage"), b.error = "error - no localStorage"), this.connection = e3, this.bindType = t2, this.master = m2, this.masterFilter = o2, this.smartDecimals = n, zot(y) && (y = false), c && !r2 || (c = this), Object.defineProperty(b, "default", { get: function() {
            return b == c;
          }, set: function(e4) {
            e4 || c != b ? e4 && (c = b) : c = null;
          } }), this.bindType == POST && (b.ajax = new To.Ajax()), this.bindings = {}, this.ids = [], this.data = {}, this.objIDs = new To.Dictionary(true), this.toIDs = {}, this.fromIDs = {}, this.add = function(o3, e4, t3, n2, r3) {
            if (zot(t3) || zot(e4) || zot(o3))
              return b;
            if (b.bindings[o3]) {
              if (b.bindings[o3].obj != e4)
                return zon && zogy("Bind() - id can be used with only one object"), b;
            } else {
              b.ids.indexOf(o3) <= 0 && b.ids.push(o3), b.bindings[o3] = { obj: e4, props: [] }, zot(r3) || typeof r3 != "function" || (b.bindings[o3].filter = r3);
              var i3 = b.objIDs.at(e4);
              i3 ? i3.indexOf(o3) < 0 && i3.push(o3) : b.objIDs.add(e4, [o3]);
            }
            Array.isArray(t3) || t3.constructor == {}.constructor || (t3 = [t3]);
            var a = b.bindings[o3].props;
            function l2(e5, t4, o4) {
              zot(e5[t4]) ? e5[t4] = [o4] : e5[t4].indexOf(o4) < 0 && e5[t4].push(o4);
            }
            return Array.isArray(t3) ? To.loop(t3, function(e5) {
              l2(b.toIDs, e5, o3), l2(b.fromIDs, e5, o3), a.indexOf(e5) < 0 && a.push(e5);
            }) : To.loop(t3, function(e5, t4) {
              t4 != To.BOTH && t4 != To.TO || l2(b.toIDs, e5, o3), t4 != To.BOTH && t4 != To.FROM || l2(b.fromIDs, e5, o3), a.indexOf(e5) < 0 && a.push(e5);
            }), y && C("Bind Report: ADD [" + o3 + "]", (t3 ? " " + t3 : "") + (n2 ? " " + n2 : "")), b.bindType == LOCALSTORAGE ? (b.from(null, o3, t3, n2), b.data && !To.isEmpty(b.data) || b.to(o3, t3)) : (w("bind", null, [r3], b.data, n2), b.applyData()), b;
          }, this.updatefilter = function(e4, t3) {
            e4 = b.bindings[e4];
            return e4 && (zot(t3) ? e4.filter && delete e4.filter : typeof t3 == "function" && (e4.filter = t3)), b;
          }, this.remove = function(e4, t3, o3, n2, r3, i3) {
            var a;
            zot(e4) || Array.isArray(e4) || (e4 = [e4]), zot(e4) || (s6 = [], a = [], To.loop(e4, function(e5) {
              (typeof e5 == "string" ? s6 : a).push(e5);
            })), zot(t3) || Array.isArray(t3) || (t3 = [t3]), zot(r3) && (r3 = true), (e4 = s6.concat(a)).length == 0 && (e4 = null);
            var l2 = v("from", e4, t3);
            if ((e4 = w("remove", n2, l2[0], l2 = l2[1], o3)) != "stop") {
              var s6, n2 = To.copy(l2);
              return zot(t3) || t3.length == 0 ? (0 < s6.length && To.loop(s6, function(e5) {
                d(e5, true);
              }), 0 < a.length && To.loop(a, function(e5) {
                0 < (s6 = b.objIDs.at(e5)).length && To.loop(s6, function(e6) {
                  d(e6, false);
                }), b.objIDs.remove(e5);
              })) : (s6 = [], To.loop(l2, function(o4, e5) {
                var n3 = b.bindings[o4].props;
                To.loop(e5, function(e6) {
                  var t4 = n3.indexOf(e6);
                  0 <= t4 && n3.splice(t4, 1), u(e6, o4);
                }), n3.length == 0 && s6.push(o4);
              }), 0 < s6.length && b.remove(s6)), r3 && (r3 = "type=" + b.bindType + "&", b.bindType == LOCALSTORAGE ? (b.to(), c2("success")) : b.bindType == GET ? (e4 = JSON.stringify(n2), z && (e4 = To.couple(e4)), To.async(b.connection + r3 + "remove=" + e4, c2, "callbackRemove")) : b.bindType == POST ? b.ajax.post(b.connection + r3, n2, c2, "remove") : b.bindType), b;
            }
            function c2(e5) {
              i3 && typeof i3 == "function" && (z && (e5 = To.couple(e5)), i3(e5)), y && C("Bind Report: REMOVE" + (o3 ? " [" + o3 + "]" : ""), e5);
            }
            function u(e5, t4) {
              var o4, n3 = b.fromIDs[e5];
              n3 && (0 <= (o4 = n3.indexOf(t4)) && n3.splice(o4, 1), n3.length == 0 && delete b.fromIDs[e5]), (n3 = b.toIDs[e5]) && (0 <= (o4 = n3.indexOf(t4)) && n3.splice(o4, 1), n3.length == 0 && delete b.toIDs[e5]);
            }
            function d(t4, e5) {
              var o4 = b.bindings[t4].obj, n3 = b.bindings[t4].props, r4 = b.objIDs.at(o4), i4 = r4.indexOf(t4);
              0 <= i4 && r4.splice(i4, 1), e5 && r4.length == 0 && a.push(o4), 0 <= (i4 = b.ids.indexOf(t4)) && b.ids.splice(i4, 1), To.loop(n3, function(e6) {
                u(e6, t4);
              }), delete b.bindings[t4];
            }
          }, this.stopProcess = false, this.stop = function() {
            b.stopped = true;
          };
          var l = function() {
            var e4 = this;
            e4.stop = function() {
              e4.stopped = true;
            };
          };
          function w(t3, e4, o3, n2, r3) {
            var i3 = new l(), a = n2 != null && !To.isEmpty(n2) && b.data;
            return s5(i3, r3) ? ["stop", n2] : (b.masterFilter && typeof b.masterFilter == "function" && (n2 = b.data = b.masterFilter(n2, t3, r3, i3)), To.loop(o3, function(e5) {
              if (typeof e5 == "function") {
                if (s5(i3, r3))
                  return "stop";
                n2 = b.data = e5(n2, t3, r3, i3);
              }
            }) == "stop" || s5(i3, r3) ? ["stop", n2] : (e4 && typeof e4 == "function" && (n2 = b.data = e4(n2, t3, r3, i3)), s5(i3, r3) ? ["stop", n2] : (a && !b.data && zon && zogy("Bind()" + (t3 ? " [" + t3 + "]" : "") + (r3 ? " [" + r3 + "]" : "") + " - warning, a filter may not have returned data"), ["go", n2])));
          }
          function s5(e4, t3) {
            return (b.stopped || e4.stopped) && (C("STOP" + (t3 ? " [" + t3 + "]" : ""), e4.stopped ? "process stopped" : "bind stopped"), e4.stopped ? e4.stop = null : b.stopped = false, 1);
          }
          function C(e4, t3) {
            (b == c ? zogl : zogd)(e4, t3);
          }
          return this.to = function(e4, t3, o3, n2, r3, i3, a, l2) {
            if (g = zob(b.to, arguments, "targets, props, extra, filter, smartDecimals, call, lock, unique"))
              return g;
            var s6 = v("to", e4, t3), c2 = w("to", n2, s6[0], s6 = s6[1], o3);
            if (s6 = c2[1], c2[0] != "stop") {
              if (b.bindType == LOCALSTORAGE)
                localStorage[b.connection] = JSON.stringify(s6), f3(s6);
              else {
                var u, d, h2, g, p = "type=" + b.bindType + "&";
                if (!s6 || To.isEmpty(s6))
                  return b;
                b.bindType == GET ? (u = s6, To.isJSON(u) || (u = JSON.stringify(u)), z && (u = To.couple(u)), y && C("Bind Report: TO [bindings]", u), u = To.urlEncode(u), d = zot(b.master) ? "" : "&master=" + To.urlEncode(m2), h2 = zot(a) ? "" : "&lock=" + To.urlEncode(a), g = zot(l2) ? "" : "&unique=" + To.urlEncode(l2), c2 = zot(o3) ? "" : "&extra=" + To.urlEncode(o3), c2 = b.connection + p + "command=to&data=" + u + d + h2 + g + c2, y && C("Bind Report: TO [url]", c2), To.async(c2, f3, "callbackTo")) : b.bindType == POST ? (b.ajax.master = m2, b.ajax.couple = z, b.ajax.lock = a, b.ajax.unique = l2, y && C("Bind Report: TO [bindings]", s6), b.ajax.post(b.connection + p, s6, "to", o3, f3)) : b.bindType;
              }
              return b;
            }
            function f3(e5) {
              z && (e5 = To.decouple(e5)), i3 && typeof i3 == "function" && i3(e5), y && C("Bind Report: TO" + (o3 ? " [" + o3 + "]" : " -"), e5);
            }
          }, this.toLock = function(t3, o3, n2, r3, i3, a) {
            var e4;
            if (e4 = zob(b.toLock, arguments, "targets, props, extra, filter, smartDecimals, call"))
              return e4;
            if (b.bindType.toLowerCase() == "localstorage")
              return b.to(t3, o3, n2, r3, i3, a), b;
            var l2 = To.makeID();
            b.from(function(e5) {
              b.to(t3, o3, n2, r3, i3, a, l2);
            }, t3, o3, n2, r3, l2);
          }, this.toUnique = function(e4, t3, o3, n2, r3, i3) {
            var a;
            if (a = zob(b.toUnique, arguments, "targets, props, extra, filter, smartDecimals, call"))
              return a;
            b.to(e4, t3, o3, n2, r3, i3, null, true);
          }, this.toggleReport = function(e4) {
            return y = zot(e4) ? !y : e4, b;
          }, y && C("Bind Report: CREATE [" + t2.toUpperCase() + "]", e3 + (m2 ? " " + m2 : "")), this.report = function() {
            var e4 = "Bind {DATA} Report:", t3 = To.copy(b.data);
            (b == c ? zogl : zogd)(e4, t3);
            e4 = "Bind {BINDINGS} Report:", t3 = To.copy(b.bindings);
            (b == c ? zogl : zogd)(e4, t3);
          }, this.from = function(o3, e4, t3, n2, r3, i3) {
            if (d = zob(b.from, arguments, "call, targets, props, extra, filter, lock"))
              return d;
            var a = (l2 = v("from", e4, t3))[0], l2 = l2[1], s6 = w("fromTo", r3, a, l2, n2);
            if (l2 = s6[1], s6[0] != "stop") {
              var c2, u, d, h2 = "type=" + b.bindType + "&";
              return b.bindType == LOCALSTORAGE ? (localStorage[b.connection] && localStorage[b.connection] != null || (localStorage[b.connection] = "{}"), b.data = JSON.parse(localStorage[b.connection]), g(b.data)) : b.bindType == GET ? (c2 = l2, To.isJSON(c2) || (c2 = JSON.stringify(c2)), z && (c2 = To.couple(c2)), y && C("Bind Report: FROM [bindings]", c2), c2 = To.urlEncode(c2), u = zot(b.master) ? "" : "&master=" + To.urlEncode(m2), d = zot(i3) ? "" : "&lock=" + To.urlEncode(i3), s6 = zot(n2) ? "" : "&extra=" + To.urlEncode(n2), s6 = b.connection + h2 + "data=" + c2 + "&command=from" + u + d + s6, y && C("Bind Report: FROM [url]", s6), To.async(s6, g, "callbackFrom")) : b.bindType == POST ? (b.ajax.master = m2, b.ajax.couple = z, b.ajax.lock = i3, y && C("Bind Report: FROM [bindings]", l2), b.ajax.post(b.connection + h2, l2, "from", n2, g)) : b.bindType, b;
            }
            function g(e5) {
              var t4;
              b.data = e5, z && (b.data = To.decouple(b.data)), zot(i3) || (t4 = JSON.stringify(b.data)), w("from", r3, a, b.data, n2)[0] != "stop" && (e5 = false, !zot(i3) && t4 == JSON.stringify(b.data) || (e5 = true, b.applyData()), y && C("Bind Report: FROM" + (n2 ? " [" + n2 + "]" : " -"), e5 ? b.data : "data not applied in toLock()"), o3 && typeof o3 == "function" && o3(b.data));
            }
          }, this.applyData = function() {
            return To.loop(b.data, function(e4, t3) {
              var o3;
              b.bindings[e4] && (o3 = b.bindings[e4].obj, To.loop(t3, function(e5, t4) {
                o3[e5] = t4;
              }));
            }), b;
          }, this.clear = function() {
            return b.bindType == LOCALSTORAGE && (localStorage[b.connection] = null), b;
          }, this.removeAllBindings = function(e4, t3) {
            function o3(e5) {
              t3 && typeof t3 == "function" && t3(e5), y && C("Bind Report: REMOVEALL", e5);
            }
            var n2;
            return zot(e4) && (e4 = true), this.bindings = {}, this.ids = [], this.data = {}, this.objIDs = new To.Dictionary(true), this.toIDs = {}, this.fromIDs = {}, e4 && (n2 = "type=" + b.bindType + "&", b.bindType == LOCALSTORAGE ? (b.clear(), o3("success")) : b.bindType == GET ? (e4 = zot(b.master) ? "" : "&master=" + encodeURI(m2), To.async(b.connection + n2 + "command=removeAll" + e4, o3, "callbackRemoveAll")) : b.bindType == POST ? (b.ajax.master = m2, b.ajax.post(b.connection + n2, {}, "removeAll", null, o3, "removeAll")) : b.bindType), b;
          }, b;
        }, To.Swipe = function(e3, t2, o2, n, r2) {
          var i2, a, l, s5, c2, u, d, h2, g, p, f3, m2;
          if (i2 = zob(To.Swipe, arguments, "obj, distance, duration, isometric, overrideNoSwipe", this))
            return i2;
          z_d("70"), this.cjsEventDispatcher_constructor(), this.type = "Swipe", !zot(e3) && e3.on ? (zot(t2) && (t2 = 30), a = Ao(o2), zot(o2) && (o2 = a == "s" ? 0.08 : 80), this.distance = t2, this.duration = o2, this.active = true, g = this, m2 = e3.on("mousedown", function(o3) {
            function t3() {
              var e4, t4 = new createjs.Event("swipe");
              t4.obj = g.obj, t4.stageX = o3.stageX / To.scaX, t4.stageY = o3.stageY / To.scaY, t4.rawX = o3.rawX / To.scaX, t4.rawY = o3.rawY / To.scaY, t4.swipeX = t4.swipeY = 0, g.direction = "none", n ? (Math.abs(c2 - l) > g.distance || Math.abs(u - s5) > g.distance) && (270 <= (e4 = (360 + (e4 = 180 * Math.atan2(u - s5, c2 - l) / Math.PI)) % 360) && e4 < 360 ? (t4.swipeY = -1, g.direction = "up") : 0 <= e4 && e4 < 90 ? (t4.swipeX = 1, g.direction = "right") : 90 <= e4 && e4 < 180 ? (t4.swipeY = 1, g.direction = "down") : 180 <= e4 && e4 < 270 && (t4.swipeX = -1, g.direction = "left")) : Math.abs(c2 - l) > Math.abs(u - s5) ? (c2 - l > g.distance && (t4.swipeX = 1, g.direction = "right"), l - c2 > g.distance && (t4.swipeX = -1, g.direction = "left")) : (u - s5 > g.distance && (t4.swipeY = 1, g.direction = "down"), s5 - u > g.distance && (t4.swipeY = -1, g.direction = "up")), g.dispatchEvent(t4);
            }
            !g.active || !r2 && o3.target.zimNoSwipe || (g.obj = o3.target, o3.target.stage, c2 = l = o3.stageX / To.scaX, u = s5 = o3.stageY / To.scaY, d = true, g.dispatchEvent("swipedown"), clearTimeout(h2), h2 = setTimeout(function() {
              d && (t3(), d = false);
            }, g.duration * (a == "s" ? 1e3 : 1)), p = e3.on("pressmove", function(e4) {
              c2 = e4.stageX / To.scaX, u = e4.stageY / To.scaY;
            }), f3 = e3.on("pressup", function(e4) {
              d && (t3(), d = false, clearTimeout(h2));
            }));
          }), this.disable = function() {
            g.active = false;
          }, this.enable = function() {
            g.active = true;
          }, this.dispose = function() {
            m2 && e3.off("mousedown", m2), p && e3.off("pressmove", p), f3 && e3.off("pressup", f3);
          }) : zog("zim controls - Swipe():\nPlease pass in object");
        }, To.extend(To.Swipe, createjs.EventDispatcher, null, "cjsEventDispatcher", false), To.Swiper = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d) {
          var h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E;
          if (h2 = zob(To.Swiper, arguments, "swipeOn, target, property, sensitivity, swiperType, min, max, damp, integer, factor, loop, pauseTime", this))
            return h2;
          function I2(e4) {
            C = e4.target.stage, T2 = (p.parent || p).localToGlobal(p.x, p.y), w = true, r2 == "radial" ? (startPosX = e4.stageX / To.scaX, startPosY = e4.stageY / To.scaY, x2 = Math.atan2(startPosY - T2.y, startPosX - T2.x) * DEG) : f3 = r2 == "horizontal" ? e4.stageX / To.scaX : e4.stageY / To.scaY, m2 = g.target[g.property], g.dispatchEvent("swipedown");
          }
          function M(e4) {
            if (r2 == "radial") {
              if (!w)
                return;
              var t3 = To.dist(startPosX, startPosY, e4.stageX / To.scaX, e4.stageY / To.scaY);
              k = Math.atan2(e4.stageY / To.scaY - T2.y, e4.stageX / To.scaX - T2.x) * DEG;
              var o3 = To.sign(x2 - k);
              if (180 < Math.abs(k - x2))
                return void (w = false);
              t3 *= o3;
              o3 = Math.max(10, To.dist(T2.x, T2.y, e4.stageX / To.scaX, e4.stageY / To.scaY));
              t3 *= (A3 - o3) / A3;
            } else
              t3 = f3 - (r2 == "horizontal" ? e4.stageX / To.scaX : e4.stageY / To.scaY);
            0 < Math.abs(t3) && (g.swiperMoving = true), z = m2 - t3 * g.sensitivity * c2, zot(i2) || zot(a) || !u ? (zot(i2) || (z = Math.max(z, i2)), zot(a) || (z = Math.min(z, a))) : (z = ((t3 = z) + 1e4 * (a - i2) - i2) % (a - i2) + i2, Math.abs(t3 - z) > 0.8 * Math.abs(a - i2) && (g.immediate(z), f3 = r2 == "horizontal" ? e4.stageX / To.scaX : e4.stageY / To.scaY, m2 = g.target[g.property])), g.desiredValue = z, g.dispatchEvent("swipemove");
          }
          function O() {
            p.off("mousedown", y), p.off("pressmove", b), p.off("pressup", v);
          }
          function j() {
            p.canvas ? (p.off("stagemousedown", y), p.off("stagemousemove", b), p.off("stagemouseup", v)) : O(), To.Ticker.remove(g.target.swiperTicker);
          }
          z_d("69.5"), this.cjsEventDispatcher_constructor(), this.type = "Swiper", !zot(e3) && e3.getStage && e3.stage ? zot(t2) || (zot(n) && (n = 1), zot(r2) && (r2 = "horizontal"), zot(l) && (l = 0.1), zot(s5) && (s5 = false), zot(c2) && (c2 = 1), zot(u) && (u = false), h2 = Ao(d), zot(d) && (d = h2 == "s" ? 0.2 : 200), p = e3, z = (g = this).desiredValue = t2[o2], this.target = t2, this.property = o2, this.sensitivity = n, w = false, p.canvas ? (y = p.on("stagemousedown", function(e4) {
            w = true, I2(e4), b = p.on("stagemousemove", M), v = p.on("stagemouseup", function() {
              w = false, p.off("stagemousemove", b), p.off("stagemouseup", v), g.dispatchEvent("swipeup");
            });
          }), C = p) : (C = p.stage, O(), y = p.on("mousedown", I2), b = p.on("pressmove", M), v = p.on("pressup", function() {
            w = false, g.dispatchEvent("swipeup");
          })), A3 = Math.sqrt(Math.pow(p.width, 2) + Math.pow(p.height, 2)), P = new To.Damp(g.target[g.property], l), g.target[g.property], S2 = B = z, g.target.swiperTicker = To.Ticker.add(function() {
            z == B ? z != S2 && (g.pauseTimeout && g.pauseTimeout.clear(), S2 = z, g.pauseTimeout = To.timeout(d, function() {
              w && g.dispatchEvent("swipepause"), g.pauseTimeout = null;
            })) : (S2 = null, B = z, g.pauseTimeout && g.pauseTimeout.clear()), g.swiperMoving && (g.target[g.property] = s5 ? Math.round(P.convert(z)) : P.convert(z), !w && Math.abs(g.target[g.property] - z) < (zot(a) || zot(i2) ? 0.5 : Math.abs(a - i2) / 1e3) ? (g.swiperMoving = false, g.target[g.property] = z, g.immediate(g.target[g.property]), g.dispatchEvent("swipestop")) : g.target[g.property]);
          }, C), this.immediate = function(e4) {
            P.immediate(e4), g.target[g.property] = s5 ? Math.round(e4) : e4, g.desiredValue = z = e4;
          }, E = true, Object.defineProperty(g, "enabled", { get: function() {
            return E;
          }, set: function(e4) {
            E != e4 && (e4 ? (p.canvas ? y = p.on("stagemousedown", y) : (y = p.on("mousedown", y), b = p.on("pressmove", b), v = p.on("pressup", v)), g.immediate(g.target[g.property]), g.target.swiperTicker = To.Ticker.add(g.target.swiperTicker, C)) : j(), E = Boolean(e4));
          } }), Object.defineProperty(g, "desiredValue", { get: function() {
            return z;
          }, set: function(e4) {
            z = e4;
          } }), Object.defineProperty(g, "damp", { get: function() {
            return l;
          }, set: function(e4) {
            l = e4, P.damp = l;
          } }), this.dispose = function(e4, t3, o3) {
            j(), P = null;
          }) : zog("zim.Swiper() - please provide container on stage");
        }, To.extend(To.Swiper, createjs.EventDispatcher, null, "cjsEventDispatcher", false), To.MotionController = function(l, s5, e3, c2, t2, n, r2, o2, i2, a, u, d, h2, g, p, f3, m2, z, y, b, v, w, C) {
          if (T2 = zob(To.MotionController, arguments, "target, type, speed, axis, boundary, map, diagonal, damp, flip, orient, constant, firstPerson, turnSpeed, moveThreshold, stickThreshold, container, localBounds, mouseMoveOutside, mousedownIncludes, minPercentSpeed, maxPercentSpeed, dampKeyup, rotate", this))
            return T2;
          z_d("69.7"), this.cjsEventDispatcher_constructor(), this.type = "MotionController";
          var x2, k = this, T2 = "zim MotionController(): Please pass in a reference to the stage or a container on the stage";
          if (zot(f3)) {
            if (!zdf)
              return void zog(T2);
            x2 = f3 = zdf.stage;
          } else if (zot(f3.stage)) {
            if (!zdf)
              return void zog(T2);
            x2 = zdf.stage;
          } else
            x2 = f3.stage;
          var A3 = x2.frame;
          zot(a) || (C = a), zot(l) && (l = new To.Container(1, 1, null, null, false));
          var P, B = l.type == "Accelerator";
          zot(e3) && (e3 = 7), zot(s5) || s5.type != "DPad" || (P = s5, s5 = "manual", zot(c2) && (c2 = P.axis), c2 == "all" && (c2 = "both"), l.x, l.y, P.on("change", function() {
            k.convert(l.x + P.dirX * e3, l.y + P.dirY * e3);
          })), (zot(s5) || s5 != "mousemove" && s5 != "pressmove" && s5 != "pressdrag" && s5 != "keydown" && s5 != "gamebutton" && s5 != "gamestick" && s5 != "swipe" && s5 != "follow" && s5 != "manual") && (s5 = "mousedown"), zot(c2) && (c2 = B ? "horizontal" : "both"), s5 == "keydown" && zot(n) && (n = [[65, 37], [68, 39], [87, 38], [83, 40]]), s5 == "gamebutton" && zot(n) && (n = d ? [14, 15, To.GamePad.RT, To.GamePad.LT] : [14, 15, 12, 13]), s5 == "gamestick" && zot(n) && (n = d ? [[0, 2], [0, 2], [1], [1]] : [0, 0, 1, 1]), s5 == "gamestick" && zot(n) && (n = [0, 0, 1, 1]), zot(r2) && (r2 = true), c2 != "horizontal" && c2 != "vertical" || (r2 = false), zot(o2) && (o2 = s5 == "keydown" || s5 == "gamebutton" ? 1 : s5 == "pressmove" ? 0.2 : 0.1), zot(d) && (d = false), zot(h2) && (h2 = 0.4 * e3), zot(g) && (g = 4), zot(p) && (p = 0.2), zot(z) && (z = false), x2.mouseMoveOutside = z, zot(y) && (y = []), Array.isArray(y) || (y = [y]), l.type != "Pen" || l.move ? y.push(l) : y.push(l, l.paper), (l.motionController = this).mousedownIncludes = y, zot(w) && (w = 0.3), k.dampKeyup = w, this.dirX = 0, this.dirY = 0, this.speed = e3, this.turnSpeed = h2, this.axis = c2, this.target = l, this.moveThreshold = g, this.stickThreshold = p, this.boundary = t2, l.zimMCStartAngle = l.rotation;
          var S2, E, I2, M = k.speed, O = k.speed, j = 0;
          k.rotation = l.zimMCStartAngle, B ? (I2 = !(E = f3.getBounds()) || c2 == "vertical" && !E.height || c2 != "vertical" && !E.width ? 1e3 : c2 == "vertical" ? E.height : E.width, zot(b) && (b = 0), zot(v) && (v = 100), zot(this.target.percentSpeed) && (this.target.percentSpeed = (v - b) / 2), k.x = I2 / 2, k.y = I2 / 2, S2 = new To.Proportion(0, I2, b, v)) : (k.x = this.target.x, k.y = this.target.y);
          var L, _, Y, D, X, R, W, F2 = k.scaleX = l.scaleX, H = k.scaleY = l.scaleY, N = false, V = false;
          if (s5 == "keydown" || s5 == "gamebutton") {
            let oe2 = function(e4) {
              var t3, o3 = s5 == "keydown" ? e4.keyCode : e4.buttonCode;
              for (G = 0; G < 4; G++)
                if (-1 < n[G].indexOf(o3))
                  return r2 || k.axis != "both" || (te.dirX = te.dirY = 0), te["dir" + $[G]] = ee[G], K[G] = 1, (t3 = J.indexOf(G)) == 0 ? void 0 : (0 < t3 && J.splice(t3, 1), void J.unshift(G));
            }, ne2 = function(e4) {
              var t3, o3 = s5 == "keydown" ? e4.keyCode : e4.buttonCode;
              for (G = 0; G < 4; G++)
                if (-1 < n[G].indexOf(o3))
                  return (K[G] = 0) <= (t3 = J.indexOf(G)) && J.splice(t3, 1), void (k.axis != "both" || r2 ? te["dir" + $[G]] = -K[2 * Math.floor(G / 2)] + K[2 * Math.floor(G / 2) + 1] : 0 < J.length ? (te["dir" + $[G]] = 0, t3 = J[0], te["dir" + $[t3]] = ee[t3]) : te.dirX = te.dirY = 0);
            };
            var oe = oe2, ne = ne2;
            for (var G = 0; G < 4; G++)
              Array.isArray(n[G]) || (n[G] = [n[G]]);
            var q, U, Q, Z2, K = [0, 0, 0, 0], J = [], $ = ["X", "X", "Y", "Y"], ee = [-1, 1, -1, 1], te = { dirX: 0, dirY: 0 };
            s5 == "keydown" ? q = A3.on("keydown", oe2) : U = (le = k.gamepad = new To.GamePad()).on("buttondown", oe2), zot(u) && (s5 == "keydown" ? Q = A3.on("keyup", ne2) : Z2 = le.on("buttonup", ne2));
            var re = { rotation: 0, speedX: k.speed, speedY: k.speed }, ie = To.Ticker.add(function() {
              var e4, t3, o3;
              d ? ce(te) : (t3 = k.speed, o3 = k.speed, k.axis == "both" && te.dirX != 0 && te.dirY != 0 && (t3 = (e4 = he(te.dirX, te.dirY)).speedX, o3 = e4.speedY), k.axis != "horizontal" && k.axis != "both" || (k.x += t3 * te.dirX), k.axis != "vertical" && k.axis != "both" || (k.y += o3 * te.dirY), ue());
            }, x2);
          } else if (s5 == "mousedown" || s5 == "mousemove")
            L = x2.on("stage" + s5, function(e4) {
              if (x2 = e4.target.stage, s5 == "mousedown") {
                if (Array.isArray(k.mousedownIncludes) || (k.mousedownIncludes = [k.mousedownIncludes]), k.mousedownIncludes.indexOf(f3) < 0)
                  for (var t3 = 0; t3 < f3.numChildren; t3++) {
                    var o3 = f3.getChildAt(t3);
                    if (k.mousedownIncludes.indexOf(o3) == -1 && o3.mouseEnabled && o3.hitTestPoint && o3.hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY))
                      return;
                  }
                k.dispatchEvent("mousedown");
              }
              var n2 = f3.globalToLocal(z ? e4.rawX / To.scaX : e4.stageX / To.scaX, z ? e4.rawY / To.scaY : e4.stageY / To.scaY);
              k.x = n2.x, k.y = n2.y, ue();
            });
          else if (s5 == "pressmove" || s5 == "pressdrag" || s5 == "follow") {
            let ae2 = function() {
              var e4 = f3.globalToLocal(k.moveX, k.moveY);
              k.x = e4.x, k.y = e4.y, ue(), l.type == "Pen" && !V && l.drawing && (V = true);
            };
            var ae = ae2;
            l.type == "Pen" && (l.write = false), L = x2.on("stagemousedown", function(e4) {
              if (l.type == "Pen" && k.boundary) {
                var t3 = e4.stageX / To.scaX, o3 = e4.stageY / To.scaY;
                if (t3 < k.boundary.x || t3 > k.boundary.x + k.boundary.width || o3 < k.boundary.y || o3 > k.boundary.y + k.boundary.height)
                  return;
              }
              if (s5 != "pressdrag" || l.hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY)) {
                V = false, Array.isArray(k.mousedownIncludes) || (k.mousedownIncludes = [k.mousedownIncludes]);
                var n2, r3 = false;
                k.mouseDownIncludes && (n2 = x2.getObjectUnderPoint(e4.stageX, e4.stageY, 1));
                for (var i3 = 0; i3 < k.mousedownIncludes.length; i3++)
                  n2 && k.mousedownIncludes[i3].hitTestPoint && k.mousedownIncludes[i3].hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY) && k.mousedownIncludes[i3].contains(n2) && (r3 = true);
                if (!r3)
                  for (i3 = 0; i3 < f3.numChildren; i3++) {
                    var a2 = f3.getChildAt(i3);
                    if (k.mousedownIncludes.indexOf(a2) == -1 && a2.mouseEnabled && a2.hitTestPoint && a2.hitTestPoint(e4.stageX / To.scaX, e4.stageY / To.scaY))
                      return;
                  }
                o3 = f3.globalToLocal(z ? e4.rawX / To.scaX : e4.stageX / To.scaX, z ? e4.rawY / To.scaY : e4.stageY / To.scaY);
                s5 != "follow" && s5 != "pressdrag" && k.immediate(c2 == "both" || c2 == "horizontal" ? o3.x : null, c2 == "both" || c2 == "vertical" ? o3.y : null), ue(), k.dispatchEvent("mousedown"), N = true, k.moveX = z ? e4.rawX / To.scaX : e4.stageX / To.scaX, k.moveY = z ? e4.rawY / To.scaY : e4.stageY / To.scaY, _ = x2.on("stagemousemove", function(e5) {
                  k.moveX = z ? e5.rawX / To.scaX : e5.stageX / To.scaX, k.moveY = z ? e5.rawY / To.scaY : e5.stageY / To.scaY, s5 != "follow" && ae2();
                }), D && To.Ticker.remove(D), s5 == "follow" && (D = To.Ticker.add(ae2)), l.type == "Pen" && (l.write = true, l.zimDragCheck = true);
              }
            }), Y = x2.on("stagemouseup", function(e4) {
              l.type == "Pen" && (l.write = false, l.zimDragCheck = false, V && l.stopCheck()), D && To.Ticker.remove(D), x2.off("stagemousemove", _), N = false;
            });
          } else if (s5 == "gamestick") {
            for (var le = this.gamepad = new To.GamePad(), G = 0; G < 4; G++)
              Array.isArray(n[G]) || (n[G] = [n[G]]);
            var re = { rotation: l.zimMCStartAngle, speedX: k.speed, speedY: k.speed }, se = le.on("data", function(e4) {
              te = { dirX: 0, dirY: 0 };
              for (var t3 = 0; t3 < n[0].length; t3++) {
                var o3 = e4.axes[n[0][t3]];
                if (Math.abs(o3) > k.stickThreshold) {
                  te.dirX = o3;
                  break;
                }
              }
              for (t3 = 0; t3 < n[2].length; t3++) {
                o3 = e4.axes[n[2][t3]];
                if (Math.abs(o3) > k.stickThreshold) {
                  te.dirY = o3;
                  break;
                }
              }
              d ? ce(te) : (k.x += k.speed * te.dirX, k.y += k.speed * te.dirY, ue());
            });
          } else
            s5 == "swipe" && (X = new To.Swiper(x2, k, "x", 0.8), R = new To.Swiper(x2, k, "y", 0.8, false), W = X.on("swipemove", function() {
              ue();
            }));
          function ce(e4) {
            re.rotation += e4.dirX * k.turnSpeed, k.rotation = re.rotation, re.speedX = Math.sin(re.rotation * Math.PI / 180) * k.speed * -e4.dirY, re.speedY = -Math.cos(re.rotation * Math.PI / 180) * k.speed * -e4.dirY, k.x += re.speedX, k.y += re.speedY;
          }
          function ue() {
            var e4, t3 = he(k.x - (B ? k.target.percentSpeed : k.target.x), k.y - (B ? k.target.percentSpeed : k.target.y));
            M = t3.speedX, O = t3.speedY, C && (zot(t3.angle) || (k.rotation = t3.angle + l.zimMCStartAngle), zot(k.rotation) ? k.rotation = k.target.rotation : (k.rotation += j, e4 = de(k.rotation), t3 = k.target.rotation = de(k.target.rotation), 180 < Math.abs(e4 - t3) && (e4 < t3 ? t3 -= 360 : e4 -= 360), k.dampR.immediate(t3), k.target.rotation = t3, k.rotation = e4));
          }
          function de(e4) {
            return (e4 % 360 + 360) % 360;
          }
          function he(e4, t3) {
            var o3, n2 = k.speed, r3 = k.speed, i3 = Math.sqrt(Math.pow(e4, 2) + Math.pow(t3, 2));
            return 0 < i3 && (n2 = Math.abs(e4) / i3 * k.speed, r3 = Math.abs(t3) / i3 * k.speed, o3 = 90 - 180 * Math.atan2(e4, t3) / Math.PI), { speedX: n2, speedY: r3, angle: o3 };
          }
          var ge = this.x, pe = this.y, fe = this.x = B ? I2 / 2 : this.target.x, me = this.y = B ? I2 / 2 : this.target.y;
          this.dampX = new To.Damp(fe, o2), this.dampY = new To.Damp(me, o2), this.dampR = new To.Damp(this.target.rotation, o2);
          var ze, ye = 0, be = 0, ve = To.Ticker.add(function() {
            var e4, t3, o3, n2;
            s5 == "manual" && ue(), k.boundary && k.boundary.type != "Blob" && (k.x = To.constrain(k.x, k.boundary.x, k.boundary.x + k.boundary.width), k.y = To.constrain(k.y, k.boundary.y, k.boundary.y + k.boundary.height)), k.axis != "horizontal" && k.axis != "both" || (k.dirX = To.sign(k.x - fe), Math.abs(k.x - fe) < M ? fe = k.x : fe += k.dirX * M, te && te.dirX == 0 && (t3 = k.boundary ? k.boundary.width / 2 : x2.width / 2, e4 = k.x - (k.x - t3) * (B ? k.dampKeyup : 0), fe = e4, k.x = fe), B && E && E.width ? k.target.percentSpeed = S2.convert(k.dampX.convert(fe)) : k.target.x = k.dampX.convert(fe)), k.axis != "vertical" && k.axis != "both" || (k.dirY = To.sign(k.y - me), Math.abs(k.y - me) < O ? me = k.y : me += To.sign(k.y - me) * O, te && te.dirY == 0 && (t3 = k.boundary ? k.boundary.height / 2 : x2.height / 2, o3 = k.y - (k.y - t3) * (B ? k.dampKeyup : 0), me = o3, k.y = me), B && E && E.height ? k.target.percentSpeed = S2.convert(k.dampY.convert(me)) : k.target.y = k.dampY.convert(me)), k.boundary && k.boundary.type == "Blob" && (k.boundary.shape.hitTestPoint(k.target.x, k.target.y) ? (ge = k.target.x, pe = k.target.y) : (k.target.x = k.x = ge, k.target.y = k.y = pe, k.immediate(ge, pe))), s5 == "pressmove" && N && k.dispatchEvent("pressing"), k.movingX = Math.abs(fe - (B ? k.target.percentSpeed : k.target.x)) > k.moveThreshold, k.movingY = Math.abs(me - (B ? k.target.percentSpeed : k.target.y)) > k.moveThreshold, !k.moving || k.movingX || k.movingY ? k.moving || !k.movingX && !k.movingY || k.dispatchEvent("startmoving") : k.dispatchEvent("stopmoving"), k.moving = k.movingX || k.movingY, k.moving && k.dispatchEvent("moving"), k.dirX == ye && k.dirY == be || (o3 = new createjs.Event("change"), k.dirX != ye ? (n2 = ["left", null, "right"], o3.dir = n2[k.dirX + 1], ye = k.dirX, l.zimMCStartAngle || i2 != "horizontal" && i2 != "both" || (k.scaleX = l.scaleX = k.dirX ? Math.abs(l.scaleX) * k.dirX : l.scaleX, j = F2 != 0 && Math.round(k.scaleX / F2) == -1 ? 180 : 0)) : (n2 = ["up", null, "down"], o3.dir = n2[k.dirY + 1], be = k.dirY, l.zimMCStartAngle || i2 != "vertical" && i2 != "both" || (k.scaleY = l.scaleY = k.dirY ? Math.abs(l.scaleY) * k.dirY : l.scaleY, j = H != 0 && Math.round(k.scaleY / H) == -1 ? 180 : 0)), k.dispatchEvent(o3)), C && !zot(k.rotation) && (k.target.rotation = k.dampR.convert(k.rotation));
          }, x2);
          this.immediate = function(e4, t3, o3) {
            return !zot(e4) && k.dampX && (k.dampX.immediate(e4), k.x = B ? k.target.percentSpeed = fe = e4 : k.target.x = fe = e4, X && X.immediate(e4)), !zot(t3) && k.dampY && (k.dampY.immediate(t3), k.y = B ? k.target.percentSpeed = me = t3 : k.target.y = me = t3, R && R.immediate(t3)), !zot(o3) && k.dampR && (k.dampR.immediate(o3), k.rotation = k.target.rotation = o3), ge = k.x, pe = k.y, k;
          }, this.convert = function(e4, t3) {
            zot(e4) || (k.x = e4), zot(t3) || (k.y = t3), ue();
          }, Object.defineProperty(k, "pausingSpeed", { get: function() {
            return k.speed;
          }, set: function(e4) {
            k.speed = e4;
          } }), this.paused = false, this.pause = function(e4, t3, o3) {
            return zot(e4) && (e4 = true), zot(t3) && (t3 = 0), zot(o3) && (o3 = false), e4 ? (ze = k.speed, 0 < t3 ? (To.animate({ target: k, obj: { pausingSpeed: 0 }, ticker: false, time: t3, call: function() {
              k.speed = 0, k.paused = true, k.enabled = false, k.immediate(k.target.x, k.target.y), k.dispatchEvent("pause");
            } }), o3 && (N = false, _ && x2.off("stagemousemove", _), D && To.Ticker.remove(D), l.type == "Pen" && (l.write = false, l.zimDragCheck = false), Y && x2.off("stagemouseup", Y), V && l.stopCheck(), s5 == "keydown" ? Q && A3.off("keyup", Q) : Z2 && le.off("buttonup", Z2))) : (k.speed = 0, k.paused = true, k.enabled = false, k.immediate(k.target.x, k.target.y), setTimeout(function() {
              k.dispatchEvent("pause");
            }, 10))) : (k.enabled = true, 0 < t3 ? To.animate({ target: k, obj: { pausingSpeed: ze }, ticker: false, time: t3, call: function() {
              k.speed = ze, k.paused = false, 0;
            } }) : (k.speed = ze, k.paused = false)), k;
          };
          var we = true;
          function Ce() {
            s5 == "keydown" ? (A3.off("keydown", q), A3.off("keyup", Q), To.Ticker.remove(ie)) : s5 == "gamebutton" ? (le.off("buttondown", U), le.off("buttonup", Z2), To.Ticker.remove(ie)) : s5 == "gamestick" ? le.off("data", se) : s5 == "swipe" ? (X.enabled = false, R.enabled = false, X.off("swipemove", W)) : s5 == "mousedown" || s5 == "mousemove" ? x2.off("stage" + s5, L) : s5 == "pressmove" && (x2.off("stagemousedown", L), x2.off("stagemousemove", _), x2.off("stagemouseup", Y)), To.Ticker.remove(ve);
          }
          Object.defineProperty(k, "enabled", { get: function() {
            return we;
          }, set: function(e4) {
            we != e4 && (e4 ? (s5 == "keydown" ? (q = A3.on("keydown", q), Q = Q && A3.on("keyup", Q), ie = To.Ticker.add(ie, x2)) : s5 == "gamebutton" ? (U = le.on("buttondown", U), Z2 = Z2 && le.on("buttonup", Z2), ie = To.Ticker.add(ie, x2)) : s5 == "gamestick" ? se = le.on("data", se) : s5 == "swipe" ? (X.enabled = true, R.enabled = true, W = W && X.on("swipemove", W)) : s5 == "mousedown" || s5 == "mousemove" ? L = x2.on("stage" + s5, L) : s5 == "pressmove" && (L = x2.on("stagemousedown", L), _ = _ && x2.on("stagemousemove", _), Y = Y && x2.on("stagemouseup", Y)), ve = To.Ticker.add(ve, x2), k.paused = false) : (Ce(), k.paused = true), we = Boolean(e4));
          } }), this.dispose = function(e4, t3, o3) {
            Ce(), le && le.dispose(), X && X.dispose(), R && X.dispose();
          };
        }, To.extend(To.MotionController, createjs.EventDispatcher, "enabled", "cjsEventDispatcher"), To.GamePad = function() {
          if (z_d("69.8"), this.type = "GamePad", this.cjsEventDispatcher_constructor(), !navigator.getGamepads)
            return this.error = true, void (zon && zog("zim.GamePad() - no browswer support"));
          var r2;
          window.addEventListener("gamepadconnected", n), this.currentIndex = 0;
          var i2 = this;
          function n(e3) {
            var t2;
            i2.connected = true, t2 = "gamepadconnected", e3 = e3, (t2 = new createjs.Event(t2)).index = e3.gamepad.index, t2.id = e3.gamepad.id, t2.buttons = e3.gamepad.buttons, t2.axes = e3.gamepad.axes, i2.dispatchEvent(t2);
            var o2 = navigator.getGamepads()[i2.currentIndex];
            i2.lastData = [];
            for (var n2 = 0; n2 < o2.buttons.length; n2++)
              i2.lastData[n2] = o2.buttons[n2].pressed;
            !function e4() {
              if (r2 = requestAnimationFrame(e4), i2.data = navigator.getGamepads()[i2.currentIndex], i2.data) {
                for (var t3, o3 = i2.buttons = [], n3 = 0; n3 < i2.data.buttons.length; n3++)
                  o3[n3] = i2.data.buttons[n3].pressed, o3[n3] != i2.lastData[n3] && (i2.lastData[n3] = o3[n3], (t3 = o3[n3] ? new createjs.Event("buttondown") : new createjs.Event("buttonup")).buttonCode = n3, t3.button = s4[n3], i2.dispatchEvent(t3));
                (t3 = new createjs.Event("data")).axes = i2.axes = i2.data.axes, t3.buttons = i2.buttons, i2.dispatchEvent(t3);
              }
            }();
          }
          var a = setInterval(function() {
            navigator.getGamepads && navigator.getGamepads()[0] && (i2.connected || n(), clearInterval(a));
          }, 500);
          function l(e3) {
            e3.gamepad.index == i2.currentIndex && (cancelAnimationFrame(r2), i2.connected = false, i2.dispatchEvent("gamepaddisconnected"));
          }
          window.addEventListener("gamepaddisconnected", l), this.dispose = function(e3, t2, o2) {
            window.removeEventListener("gamepadconnected", n), window.removeEventListener("gamepaddisconnected", l), cancelAnimationFrame(r2), clearInterval(a), i2.connected = false;
          };
        };
        for (var s4 = ["A", "B", "X", "Y", "LB", "RB", "LT", "RT", "BACK", "START", "LS", "RS", "DPAD_UP", "DPAD_DOWN", "DPAD_LEFT", "DPAD_RIGHT"], I = 0; I < s4.length; I++)
          To.GamePad[s4[I]] = I;
        var T, A2, e2 = ["LSX", "LSY", "RSX", "RSY"];
        for (I = 0; I < e2.length; I++)
          To.GamePad[e2[I]] = I;
        To.extend(To.GamePad, createjs.EventDispatcher, null, "cjsEventDispatcher"), To.Portal = function(t2, o2) {
          var e3, n, r2, i2, a;
          if (e3 = zob(To.Portal, arguments, "obj, lands", this))
            return e3;
          function l() {
            o2.setChildIndex(i2, 0), i2 = a, a = o2.getChildAt(o2.numChildren - 2), o2.setChildIndex(a, o2.numChildren - 1), i2.setMask(null), a.setMask(t2), t2.stage.update();
          }
          z_d("69.96"), !zot(t2) && t2.stage && (this.type = "Portal", n = this, (r2 = o2 && o2.numChildren && 0 < o2.numChildren) && (i2 = o2.getChildAt(o2.numChildren - 1), a = o2.getChildAt(o2.numChildren - 2), o2.setChildIndex(a, o2.numChildren - 1), a.setMask(t2)), t2.on(To.mobile() ? "mousedown" : "mouseover", function() {
            n._enabled && (r2 && l(), n.dispatchEvent("enter"));
          }), t2.on(To.mobile() ? "pressup" : "mouseout", function() {
            n._enabled && n.dispatchEvent("exit");
          }), Object.defineProperty(this, "portal", { get: function() {
            return t2;
          }, set: function(e4) {
            !zot(e4) && e4.stage || !zon ? a.setMask(t2) : zog("zim.Portal() - please provide a Display Object to act as the portal");
          } }), Object.defineProperty(this, "currentLand", { get: function() {
            return i2;
          }, set: function(e4) {
            if (o2.contains(e4))
              for (; e4 != i2; )
                l();
          } }), Object.defineProperty(this, "nextLand", { get: function() {
            return a;
          }, set: function(e4) {
            zon && zog("zim.Portal() - nextLand is read only - remake Portal to change");
          } }), this._enabled = true, Object.defineProperty(n, "enabled", { get: function() {
            return n._enabled;
          }, set: function(e4) {
            n._enabled = e4;
          } }), this.dispose = function(e4, t3, o3) {
          });
        }, To.extend(To.Portal, createjs.EventDispatcher, null, "cjsEventDispatcher", false), window.zimContactListener = null, To.BlurEffect = function(t2, o2, n, r2, e3, i2) {
          if (a = zob(To.BlurEffect, arguments, "blurX, blurY, quality, style, group, inherit", this))
            return a;
          z_d("69.972"), this.group = e3;
          var a = r2 === false ? {} : To.getStyle("BlurEffect", e3, i2);
          zot(t2) && (t2 = a.blurX != null ? a.blurX : 10), zot(o2) && (o2 = a.blurY != null ? a.blurY : 10), zot(n) && (n = a.quality != null ? a.quality : 1);
          var l = function() {
            return arguments;
          }(t2, o2, n);
          t2 = zik(t2), o2 = zik(o2), n = zik(n), this.createjsBlurFilter_constructor(t2, o2, n), this.type = "BlurEffect", this.clone = function(e4) {
            return new To.BlurEffect(e4 || !To.isPick(l[0]) ? t2 : l[0], e4 || !To.isPick(l[1]) ? o2 : l[1], e4 || !To.isPick(l[2]) ? n : l[2], r2, this.group, i2);
          };
        }, To.extend(To.BlurEffect, createjs.BlurFilter, "clone", "createjsBlurFilter", false), To.GlowEffect = function(t2, o2, n, r2, i2, a, l, s5, e3, c2, u, d) {
          if (h2 = zob(To.GlowEffect, arguments, "color, alpha, blurX, blurY, strength, quality, inner, knockout, hideObject, style, group, inherit", this))
            return h2;
          z_d("69.9725"), this.group = u;
          var h2 = c2 === false ? {} : To.getStyle("GlowEffect", u, d);
          zot(t2) && (t2 = h2.color != null ? h2.color : "white"), zot(o2) && (o2 = h2.alpha != null ? h2.alpha : 1), zot(n) && (n = h2.blurX != null ? h2.blurX : 30), zot(r2) && (r2 = h2.blurY != null ? h2.blurY : 30), zot(i2) && (i2 = h2.strength != null ? h2.strength : 1), zot(a) && (a = h2.quality != null ? h2.quality : 1), zot(l) && (l = h2.inner != null && h2.inner), zot(s5) && (s5 = h2.knockout != null && h2.knockout), zot(e3) && (e3 = h2.hideObject != null && h2.hideObject);
          var g = function() {
            return arguments;
          }(t2, o2, n, r2, i2, a, l, s5, e3);
          n = zik(n), r2 = zik(r2), a = zik(a), t2 = zik(t2), this.alpha = zik(o2), this.strength = zik(i2), this.inner = zik(l), this.knockout = zik(s5), this.hideObject = zik(e3), this.createjsBlurFilter_constructor(n, r2, a), this.type = "GlowEffect", this.usesContext = true, this.applyFilter = function(e4, t3, o3, n2, r3, i3, a2, l2) {
            if ((this.alpha <= 0 || this.strength <= 0) && !this.knockout)
              return true;
            a2 === void 0 && (a2 = t3), l2 === void 0 && (l2 = o3);
            var s6 = (i3 = i3 || e4).getImageData(a2, l2, n2, r3).data, c3 = document.createElement("canvas");
            c3.width = n2, c3.height = r3;
            for (var u2 = c3.getContext("2d"), e4 = u2.getImageData(0, 0, n2, r3), d2 = e4.data, h3 = this.inner, g2 = this._red, p = this._green, f3 = this._blue, m2 = 0, z = d2.length; m2 < z; m2 += 4) {
              var y = m2 + 3, b = s6[y];
              h3 ? b !== 255 && (d2[m2] = g2, d2[m2 + 1] = p, d2[m2 + 2] = f3, d2[y] = 255 - b) : b !== 0 && (d2[m2] = g2, d2[m2 + 1] = p, d2[m2 + 2] = f3, d2[y] = b);
            }
            u2.putImageData(e4, 0, 0);
            var v = this.strength;
            if (0 < v) {
              this.createjsBlurFilter_applyFilter(u2, 0, 0, n2, r3), 255 < v && (v = 255);
              for (var w = 1; w < v; w++)
                u2.drawImage(c3, 0, 0);
            }
            n2 = this.alpha;
            return n2 < 0 ? n2 = 0 : 1 < n2 && (n2 = 1), r3 = this.knockout ? h3 ? "source-in" : "source-out" : this.hideObject ? (zog("hdfd"), h3 ? "source-in" : "copy") : h3 ? "source-atop" : "destination-over", i3.save(), i3.setTransform(1, 0, 0, 1, 0, 0), i3.globalAlpha = n2, i3.globalCompositeOperation = r3, i3.drawImage(c3, a2, l2), i3.restore(), true;
          }, Object.defineProperty(this, "color", { get: function() {
            return this._red << 16 | this._green << 8 | this._blue;
          }, set: function(e4) {
            e4 = To.convertColor(e4, "hexNumber"), this._red = e4 >> 16 & 255, this._green = e4 >> 8 & 255, this._blue = 255 & e4;
          } }), this.color = t2, this.clone = function(e4) {
            return new To.GlowFilter(e4 || !To.isPick(g[0]) ? t2 : g[0], e4 || !To.isPick(g[1]) ? o2 : g[1], e4 || !To.isPick(g[2]) ? n : g[2], e4 || !To.isPick(g[3]) ? r2 : g[3], e4 || !To.isPick(g[4]) ? a : g[4], e4 || !To.isPick(g[5]) ? i2 : g[5], e4 || !To.isPick(g[6]) ? l : g[6], e4 || !To.isPick(g[7]) ? s5 : g[7], e4 || !To.isPick(g[8]) ? s5 : g[8], c2, this.group, d);
          };
        }, To.extend(To.GlowEffect, createjs.BlurFilter, ["clone", "applyFilter"], "createjsBlurFilter", false), To.ShadowEffect = function(t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, e3, g) {
          if (p = zob(To.ShadowEffect, arguments, "distance, angle, color, alpha, blurX, blurY, strength, quality, inner, knockout, hideObject, style, group, inherit", this))
            return p;
          z_d("69.973"), this.group = e3;
          var p = h2 === false ? {} : To.getStyle("ShadowEffect", e3, g);
          zot(t2) && (t2 = p.distance != null ? p.distance : 10), zot(o2) && (o2 = p.angle != null ? p.angle : 45), zot(n) && (n = p.color != null ? p.color : black), zot(r2) && (r2 = p.alpha != null ? p.alpha : 0.4), zot(i2) && (i2 = p.blurX != null ? p.blurX : 15), zot(a) && (a = p.blurY != null ? p.blurY : 15), zot(l) && (l = p.strength != null ? p.strength : 1), zot(s5) && (s5 = p.quality != null ? p.quality : 1), zot(c2) && (c2 = p.inner != null && p.inner), zot(u) && (u = p.knockout != null && p.knockout), zot(d) && (d = p.hideObject != null && p.hideObject);
          var f3 = function() {
            return arguments;
          }(t2, o2, n, r2, i2, a, l, s5, c2, u, d);
          i2 = zik(i2), a = zik(a), s5 = zik(s5), n = zik(n), t2 = zik(t2), o2 = zik(o2);
          var m2 = this;
          function z(e4, t3) {
            t3 *= To.RAD;
            m2._offsetX = Math.cos(t3) * e4, m2._offsetY = Math.sin(t3) * e4;
          }
          this.alpha = zik(r2), this.strength = zik(l), this.inner = zik(c2), this.knockout = zik(u), this.hideObject = zik(d), this.createjsBlurFilter_constructor(i2, a, s5), this.type = "ShadowEffect", this.usesContext = true, Object.defineProperty(this, "angle", { get: function() {
            return o2;
          }, set: function(e4) {
            o2 = e4 = (e4 % 360 + 360) % 360, z(t2, e4);
          } }), this.angle = o2, Object.defineProperty(this, "distance", { get: function() {
            return t2;
          }, set: function(e4) {
            z(t2 = e4, o2);
          } }), this.distance = t2, Object.defineProperty(this, "color", { get: function() {
            return this._red << 16 | this._green << 8 | this._blue;
          }, set: function(e4) {
            e4 = To.convertColor(e4, "hexNumber"), this._red = e4 >> 16 & 255, this._green = e4 >> 8 & 255, this._blue = 255 & e4;
          } }), this.color = n, this.applyFilter = function(e4, t3, o3, n2, r3, i3, a2, l2) {
            if ((this.alpha <= 0 || this.strength <= 0) && !this.knockout && !this.hideObject)
              return true;
            a2 === void 0 && (a2 = t3), l2 === void 0 && (l2 = o3);
            var s6 = (i3 = i3 || e4).getImageData(a2, l2, n2, r3).data, c3 = document.createElement("canvas");
            c3.width = n2, c3.height = r3;
            for (var u2 = c3.getContext("2d"), e4 = u2.getImageData(0, 0, n2, r3), d2 = e4.data, h3 = this.inner, g2 = this._red, p2 = this._green, f4 = this._blue, m3 = 0, z2 = d2.length; m3 < z2; m3 += 4) {
              var y = m3 + 3, b = s6[y];
              h3 ? b !== 255 && (d2[m3] = g2, d2[m3 + 1] = p2, d2[m3 + 2] = f4, d2[y] = 255 - b) : b !== 0 && (d2[m3] = g2, d2[m3 + 1] = p2, d2[m3 + 2] = f4, d2[y] = b);
            }
            u2.putImageData(e4, 0, 0);
            var v = this.strength;
            if (0 < v) {
              this.createjsBlurFilter_applyFilter(u2, 0, 0, n2, r3), 255 < v && (v = 255);
              for (var w = 1; w < v; w++)
                u2.drawImage(c3, 0, 0);
            }
            n2 = this.alpha;
            return n2 < 0 ? n2 = 0 : 1 < n2 && (n2 = 1), r3 = this.knockout ? h3 ? "source-in" : "source-out" : this.hideObject ? h3 ? "source-in" : "copy" : h3 ? "source-atop" : "destination-over", i3.save(), i3.setTransform(1, 0, 0, 1, 0, 0), i3.globalAlpha = n2, i3.globalCompositeOperation = r3, i3.drawImage(c3, a2 + this._offsetX, l2 + this._offsetY), i3.restore(), true;
          }, this.getBounds = function(e4) {
            var t3 = this.createjsBlurFilter_getBounds(e4), o3 = this._offsetX, e4 = this._offsetY;
            return o3 !== 0 && (o3 < 0 ? (t3.x += o3, t3.width += -o3) : t3.width += o3), e4 !== 0 && (e4 < 0 ? (t3.y += e4, t3.height += -e4) : t3.height += e4), t3;
          }, this.clone = function(e4) {
            return new To.ShadowFilter(e4 || !To.isPick(f3[0]) ? t2 : f3[0], e4 || !To.isPick(f3[1]) ? o2 : f3[1], e4 || !To.isPick(f3[2]) ? n : f3[2], e4 || !To.isPick(f3[3]) ? r2 : f3[3], e4 || !To.isPick(f3[4]) ? i2 : f3[4], e4 || !To.isPick(f3[5]) ? a : f3[5], e4 || !To.isPick(f3[6]) ? s5 : f3[6], e4 || !To.isPick(f3[7]) ? l : f3[7], e4 || !To.isPick(f3[8]) ? c2 : f3[8], e4 || !To.isPick(f3[9]) ? u : f3[9], e4 || !To.isPick(f3[10]) ? d : f3[10], h2, this.group, g);
          };
        }, To.extend(To.ShadowEffect, createjs.BlurFilter, ["clone", "getBounds", "applyFilter"], "createjsBlurFilter", false), To.ColorEffect = function(t2, o2, n, r2, i2, a, l, s5, c2, e3, u) {
          if (d = zob(To.ColorEffect, arguments, "redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset, style, group, inherit", this))
            return d;
          z_d("69.9735"), this.group = e3;
          var d = c2 === false ? {} : To.getStyle("ColorEffect", e3, u);
          zot(t2) && (red = d.redMultiplier != null ? d.redMultiplier : 1), zot(o2) && (green = d.greenMultiplier != null ? d.greenMultiplier : 1), zot(n) && (blue = d.blueMultiplier != null ? d.blueMultiplier : 1), zot(r2) && (alpha = d.alphaMultiplier != null ? d.alphaMultiplier : 1), zot(i2) && (i2 = d.redOffset != null ? d.redOffset : 0), zot(a) && (a = d.greenOffset != null ? d.greenOffset : 0), zot(l) && (l = d.blueOffset != null ? d.blueOffset : 0), zot(s5) && (s5 = d.alphaOffset != null ? d.alphaOffset : 0);
          var h2 = function() {
            return arguments;
          }(t2, o2, n, r2, i2, a, l, s5);
          t2 = zik(t2), o2 = zik(o2), n = zik(n), r2 = zik(r2), i2 = zik(i2), a = zik(a), l = zik(l), s5 = zik(s5), this.createjsColorFilter_constructor(t2, o2, n, r2, i2, a, l, s5), this.type = "ColorEffect", this.clone = function(e4) {
            return new To.ColorEffect(t2, o2, n, r2, i2, a, l, s5(e4 || !To.isPick(h2[0])) ? t2 : h2[0], e4 || !To.isPick(h2[1]) ? o2 : h2[1], e4 || !To.isPick(h2[2]) ? n : h2[2], e4 || !To.isPick(h2[2]) ? r2 : h2[3], e4 || !To.isPick(h2[2]) ? i2 : h2[4], e4 || !To.isPick(h2[2]) ? a : h2[5], e4 || !To.isPick(h2[2]) ? l : h2[6], e4 || !To.isPick(h2[2]) ? s5 : h2[7], c2, this.group, u);
          };
        }, To.extend(To.ColorEffect, createjs.ColorFilter, "clone", "createjsColorFilter", false), To.MultiEffect = function(r2, i2, a, l, t2, e3, o2) {
          if (n = zob(To.MultiEffect, arguments, "hue, saturation, brightness, contrast, style, group, inherit", this))
            return n;
          z_d("69.974"), this.group = e3;
          var n = t2 === false ? {} : To.getStyle("MultiEffect", e3, o2);
          zot(r2) && (r2 = n.hue != null ? n.hue : 0), zot(i2) && (i2 = n.saturation != null ? n.saturation : 0), zot(a) && (a = n.brightness != null ? n.brightness : 0), zot(l) && (l = n.contrast != null ? n.contrast : 0);
          var s5 = function() {
            return arguments;
          }(r2, i2, a, l);
          r2 = zik(r2), this.createjsColorMatrixFilter_constructor(new createjs.ColorMatrix().adjustColor(a, l, i2, r2)), this.type = "MultiEffect", this.adjustColor = function(e4, t3, o3, n2) {
            zot(r2) || (r2 = zik(e4)), zot(i2) || (i2 = zik(t3)), zot(a) || (a = zik(o3)), zot(l) || (l = zik(n2)), this.matrix.reset().adjustColor(e4, t3, o3, n2);
          }, Object.defineProperty(this, "brightness", { get: function() {
            return a;
          }, set: function(e4) {
            a = zik(e4), this.matrix.reset().adjustColor(a, l, i2, r2);
          } }), Object.defineProperty(this, "contrast", { get: function() {
            return l;
          }, set: function(e4) {
            l = zik(e4), this.matrix.reset().adjustColor(a, l, i2, r2);
          } }), Object.defineProperty(this, "saturation", { get: function() {
            return i2;
          }, set: function(e4) {
            i2 = zik(e4), this.matrix.reset().adjustColor(a, l, i2, r2);
          } }), Object.defineProperty(this, "hue", { get: function() {
            return r2;
          }, set: function(e4) {
            r2 = zik(e4), this.matrix = new createjs.ColorMatrix().adjustColor(a, l, i2, r2), this.applyFilter();
          } }), this.clone = function(e4) {
            return new To.MultiEffect(e4 || !To.isPick(s5[0]) ? r2 : s5[0], e4 || !To.isPick(s5[0]) ? i2 : s5[0], e4 || !To.isPick(s5[0]) ? a : s5[0], e4 || !To.isPick(s5[0]) ? l : s5[0], t2, this.group, o2);
          };
        }, To.extend(To.MultiEffect, createjs.ColorMatrixFilter, "clone", "createjsColorMatrixFilter", false), To.AlphaEffect = function(t2, o2, e3, n) {
          if (r2 = zob(To.AlphaEffect, arguments, "mask, style, group, inherit", this))
            return r2;
          z_d("69.9745"), this.group = e3;
          var r2 = o2 === false ? {} : To.getStyle("AlphaEffect", e3, n);
          zot(t2) && (t2 = r2.mask != null ? r2.mask : null);
          var i2 = function() {
            return arguments;
          }(t2);
          (t2 = zik(t2)).type == "Bitmap" ? t2 = t2.image : t2.cache && (t2 = t2.cache().cacheCanvas), this.createjsAlphaMaskFilter_constructor(t2), this.type = "AlphaEffect", this.clone = function(e4) {
            return new To.AlphaEffect(e4 || !To.isPick(i2[0]) ? t2 : i2[0], o2, this.group, n);
          };
        }, To.extend(To.AlphaEffect, createjs.AlphaMaskFilter, "clone", "createjsAlphaMaskFilter", false), To.Parallax = function(e3, t2, a, n, o2, r2, l) {
          var i2;
          if (i2 = zob(To.Parallax, arguments, "layers, damp, auto, stage, startPaused, mouseMoveOutside, clamp", this))
            return i2;
          if (z_d("68"), this.type = "Parallax", zot(n))
            if (e3 && e3[0] && e3[0].obj && e3[0].obj.stage)
              n = e3[0].obj.stage;
            else {
              if (!zdf)
                return;
              n = zdf.stage;
            }
          a = !!zot(a), zot(o2) && (o2 = false), zot(r2) && (r2 = false);
          var s5 = n.getBounds().width, c2 = n.getBounds().height;
          n.mouseMoveOutside = r2;
          var u = this;
          u.stageEvent = n.on("stagemousemove", function(e4) {
            u.mouseX = e4.rawX / To.scaX, u.mouseY = e4.rawY / To.scaY;
          });
          var d = zot(t2) ? 0.1 : t2;
          this.addLayer = function(e4) {
            if (!(zot(e4.obj) || zot(e4.prop) || zot(e4.propChange))) {
              var t3 = { obj: e4.obj, prop: e4.prop };
              t3[t3.prop] = e4.propChange, zot(e4.input) && (e4.input = "mouseX"), t3.input = e4.input, t3.split = zot(e4.split) ? !(e4.input != "mouseX" || !a) : e4.split;
              var o3 = zot(e4.inMin) ? 0 : e4.inMin, n2 = zot(e4.inMax) ? e4.input == "mouseX" || e4.input == "scrollX" ? s5 : c2 : e4.inMax, r3 = zot(e4.factor) ? 1 : e4.factor, i3 = !zot(e4.integer) && e4.integer;
              return t3["p_" + t3.prop] = new To.ProportionDamp(o3, n2, 0, t3[t3.prop], d, r3, i3, l), t3.prop == "scale" ? t3["s_" + t3.prop] = t3.obj.scaleX : t3.prop == "frame" ? t3["s_" + t3.prop] = t3.obj.currentFrame : t3["s_" + t3.prop] = t3.obj[t3.prop], zot(e4.immediate) || t3["p_" + t3.prop].immediate(e4.immediate), g.push(t3), u;
            }
          }, this.removeLayer = function(e4) {
            if (!zot(e4)) {
              var t3 = g[e4];
              return t3["p_" + t3.prop].dispose(), g.splice(e4, 1), u;
            }
          }, this.immediate = function(e4) {
            for (var t3, o3 = 0; o3 < g.length; o3++)
              (t3 = g[o3])["p_" + t3.prop].immediate(e4[o3]);
            return u;
          }, this.dispose = function(e4, t3, o3) {
            return n.off("stagemousemove", u.stageEvent), g = null, a && To.Ticker.remove(h2), true;
          }, e3 = zot(e3) ? [] : e3;
          for (var h2, g = [], p = 0; p < e3.length; p++)
            this.addLayer(e3[p]);
          a && (h2 = To.Ticker.add(function(e4) {
            u.step();
          }, n), o2 && To.Ticker.remove(h2)), this.step = function(e4) {
            for (var t3, o3, n2 = 0; n2 < g.length; n2++)
              t3 = g[n2], zot(e4) ? t3.input == "mouseX" ? o3 = u.mouseX : t3.input == "mouseY" ? o3 = u.mouseY : t3.input == "scrollX" ? o3 = To.scrollX() : t3.input == "scrollY" && (o3 = To.scrollY()) : o3 = e4, t3.prop == "scale" ? t3.obj.scaleX = t3.obj.scaleY = t3["s_" + t3.prop] + t3["p_" + t3.prop].convert(o3) : t3.prop == "frame" ? t3.obj.gotoAndStop(t3["s_" + t3.prop] + t3["p_" + t3.prop].convert(o3)) : (t3.obj[t3.prop] = t3["s_" + t3.prop] + t3["p_" + t3.prop].convert(o3), t3.split && (t3.obj[t3.prop] -= t3[t3.prop] / 2));
            return u;
          }, u.paused = o2, u.pause = function(e4) {
            return zot(e4) && (e4 = true), u.paused != e4 && (u.paused = e4, h2 && (e4 ? To.Ticker.remove(h2) : h2 = To.Ticker.add(h2))), u;
          }, Object.defineProperty(u, "damp", { get: function() {
            return d;
          }, set: function(e4) {
            var t3;
            d = e4;
            for (var o3 = 0; o3 < g.length; o3++)
              (t3 = g[o3])["p_" + t3.prop].damp = d;
          } });
        }, To.Flipper = function(o2, n, e3, a, l, t2, s5, r2, i2, c2, u, d) {
          if (g = zob(To.Flipper, arguments, "front, back, interactive, time, vertical, flipped, easeRoot, frontPress, backPress, style, group, inherit", this))
            return g;
          z_d("68.5"), this.group = u;
          var h2 = c2 === false ? {} : To.getStyle("Flipper", this.group, d);
          zot(o2) && (o2 = h2.front != null ? h2.front : zimDefaultFrame.makeIcon().sca(2)), zot(n) && (n = h2.back != null ? h2.back : new To.Page(o2.width, o2.height, To.dark)), this.front = o2, this.back = n, t2 && (p = o2, o2 = n, n = p);
          var g = Math.max(o2.width, n.width), p = Math.max(o2.height, n.height);
          this.zimContainer_constructor(g, p), this.type = "Flipper", zot(a) && (a = h2.time != null ? h2.time : 0.2), zot(l) && (l = h2.vertical != null && h2.vertical), zot(e3) && (e3 = h2.interactive != null && h2.interactive), zot(t2) && (t2 = h2.flipped != null && h2.flipped), zot(s5) && (s5 = h2.easeRoot != null ? h2.easeRoot : "quad"), zot(r2) && (r2 = h2.frontPress == null || h2.frontPress), zot(i2) && (i2 = h2.backPress == null || h2.backPress), this.flipped = t2;
          var f3, m2 = this;
          function z(e4, t3, o3, n2) {
            if (zot(o3) && (o3 = 1), zot(n2) && (n2 = a), m2.flipped = !m2.flipped, m2.dispatchEvent("flip"), n2 == 0)
              return m2.removeAllChildren(), t3.scale = t3.oScale, t3.skewX = t3.skewY = 0, t3.centerReg(m2), void m2.dispatchEvent("flipped");
            var r3, i3;
            l ? (r3 = { skewX: -90 * o3, scaleY: e4.oScale / 2 }, i3 = { skewX: 0, scaleY: t3.oScale }, t3.ske(90 * o3, 0).sca(t3.oScale, t3.oScale / 2)) : (r3 = { skewY: -90 * o3, scaleX: e4.oScale / 2 }, i3 = { skewY: 0, scaleX: t3.oScale }, t3.ske(0, 90 * o3).sca(t3.oScale / 2, t3.oScale)), e4.animate({ props: r3, time: a, ease: s5 + "In", call: function() {
              e4.removeFrom(), t3.centerReg(m2).animate({ props: i3, time: a, ease: s5 + "Out", call: function() {
                m2.dispatchEvent("flipped");
              } });
            } });
          }
          o2.centerReg(this), (r2 && !t2 || i2 && t2) && ((f3 = e3 && o2.backing ? o2.backing : o2).on("mousedown", function() {
            z(o2, n);
          }), f3.cur()), (i2 && !t2 || r2 && t2) && ((f3 = e3 && n.backing ? n.backing : n).on("mousedown", function() {
            z(n, o2, -1);
          }), f3.cur()), o2.oScale = o2.scale, n.oScale = n.scale, o2.flipper = m2, (o2.other = n).flipper = m2, n.other = o2, e3 || (o2.mouseChildren = n.mouseChildren = false), !(this.flip = function(e4, t3) {
            e4 != m2.flipped && (m2.flipped ? z(n, o2, -1, t3) : z(o2, n, 1, t3));
          }) !== c2 && To.styleTransforms(this, h2), this.clone = function() {
            return m2.cloneProps(new To.Flipper(o2.clone(), n.clone(), e3, a, l, t2, s5, r2, i2, c2, this.group, d));
          };
        }, To.extend(To.Flipper, To.Container, "clone", "zimContainer"), To.Book = function(z, y, b, n, v, w, C, x2) {
          var e3;
          if (e3 = zob(To.Book, arguments, "width, height, pages, startPage, rollUp, radius, backgroundColor, arrows", this))
            return e3;
          z_d("68.7"), zot(z) && (z = zdf ? zdf.stage.width : 1024), zot(y) && (y = zdf ? zdf.stage.height : 768), this.zimContainer_constructor(z, y), this.type = "Book", zot(b) && (b = []), zot(n) && (n = 0), zot(v) && (v = true), zot(C) && (C = To.darker), zot(x2) && (x2 = true);
          var k, T2 = Ao(), A3 = this;
          b.length != 0 && (A3.backing = new Rectangle(z - 2, y - 2, C), To.loop(b, function(e4, t2) {
            typeof e4 == "string" && (b[t2] = To.asset(e4)), b[t2].zimBookIndex = t2;
          }), A3.added(function(e4) {
            var a, l, s5, c2, u, d, t2, r2 = (k = e4).frame, i2 = new Shape();
            function h2(e5) {
              A3._currentPage = e5, A3.removeAllChildren(), A3.backing.loc(1, 1, A3), A3.setMask(A3.backing), i2.addTo(A3), i2.c().f(black).dr(0, 0, 0, 0), A3.moving = false, b[e5 - 1] ? a = b[e5 - 1].reg(0, 0).rot(0).loc(0, 0, A3) : 0 < e5 && t2.reg(0, 0).rot(0).loc(0, 0, A3).setMask(null), b[e5 - 2] ? l = b[e5 - 2].reg(z / 2, y).loc(0, y, A3).rot(-90) : (l = new Rectangle(z / 2, y, C).reg(z / 2, y).loc(0, y, A3).rot(-90), 0), s5 = (b[e5 - 3] ? b[e5 - 3].rot(0) : new Rectangle(z / 2, y, C)).loc(0, 0, A3).setMask(i2), b[e5] && (c2 = b[e5].rot(0).reg(0, 0).pos(0, 0, RIGHT, TOP, A3), b[e5 + 1] ? u = b[e5 + 1].reg(0, y).loc(z, y, A3).rot(90) : (u = new Rectangle(z / 2, y, C).reg(0, y).loc(z, y, A3).rot(90), t2 = u), d = (b[e5 + 2] ? b[e5 + 2].rot(0) : new Rectangle(z / 2, y, C)).pos(0, 0, RIGHT, TOP, A3).setMask(i2)), k.update();
            }
            A3._currentPage = n, h2(n), Object.defineProperty(A3, "directPage", { get: function() {
              return A3._currentPage;
            }, set: function(e5) {
              h2(e5 = n % 2 == 1 ? 2 * Math.ceil(e5 / 2) - 1 : 2 * Math.ceil(e5 / 2));
            } });
            var g = false;
            function o2() {
              A3.stageEvent = k.on("stagemousedown", function() {
                var e5, t3, o3, n2;
                A3.moving || ((o3 = A3.globalToLocal(r2.mouseX, r2.mouseY)).x < 0 || o3.x > z || o3.y < 0 || o3.y > y || 0 < w && dist(o3, new Point(0, y)) > w && dist(o3, new Point(z, y)) > w || ((n2 = o3.x > z / 2 ? "right" : "left") == "right" && A3._currentPage >= b.length - 1 || n2 == "left" && A3._currentPage <= 1 || (A3.moving = true, n2 == "right" ? (c2.addTo(A3), u.addTo(A3), d.addTo(A3), A3.pageNext = d.zimBookIndex) : (a.addTo(A3), l.addTo(A3), s5.addTo(A3), A3.rolledUp && m2(0, 0, "right"), A3.pageNext = l.zimBookIndex), A3.direction = n2, A3.dispatchEvent("rollpress"), A3.moveEvent = k.on("stagemousemove", function() {
                  p && (p.clear(), p = null);
                  A3.globalToLocal(r2.mouseX, r2.mouseY);
                  e5 = n2 == "right" ? z - r2.mouseX : r2.mouseX, t3 = y - r2.mouseY + e5, A3.currentW = e5 = constrain(e5, 0, z / 2), A3.currentH = t3 = constrain(t3, 0, y), m2(e5, t3, n2);
                }), A3.upEvent = k.on("stagemouseup", function() {
                  k.off("stagemousemove", A3.moveEvent), g || f3(0, 0, n2);
                }, null, true))));
              });
            }
            {
              var p;
              A3.currentW = 0, A3.currentH = 0, A3.moving = false, o2(), !(A3.rollUp = function(e5, t3, o3, n2, r3) {
                var i3;
                A3.moving || o3 == "right" && A3._currentPage >= b.length - 1 || o3 == "left" && A3._currentPage <= 1 || (o3 == "right" ? (c2.addTo(A3), u.addTo(A3), d.addTo(A3)) : (A3.rolledUp && m2(0, 0, "right"), a.addTo(A3), l.addTo(A3), s5.addTo(A3)), A3.moving = true, zot(n2) && (n2 = T2 == "s" ? 0.5 : 5e-4), zot(r3) && (r3 = null), A3.animate({ props: { currentW: e5, currentH: t3 }, time: n2, ease: r3, call: function() {
                  Ticker.remove(i3), A3.moving = false, m2(e5, t3, o3);
                } }), i3 = Ticker.add(function() {
                  m2(A3.currentW, A3.currentH, o3);
                }));
              }) !== v && ((A3.rolledUp = true) === v && (v = T2 == "s" ? 1 : 1e-3), p = timeout(v, function() {
                A3.rollUp(60, 130, "right", 0.5), A3.dispatchEvent("rollup");
              }));
            }
            function f3(e5, t3, o3, n2) {
              A3.moving = true, A3.rolledUp = false, zot(n2) && (n2 = T2 == "s" ? 0.7 : 7e-4), A3.animate({ props: { currentW: 0, currentH: 0 }, time: n2, call: function() {
                Ticker.remove(r3), m2(0, 0, o3), A3.moving = false, A3.dispatchEvent("rolldown");
              } });
              var r3 = Ticker.add(function() {
                m2(A3.currentW, A3.currentH, o3);
              });
            }
            function m2(e5, t3, o3) {
              var n2;
              o3 == "right" ? (i2.c().mt(z, y).lt(z - e5, y).lt(z, y - t3).cp(), n2 = Math.atan2(e5, t3), u.loc(z - (e5 + e5 * Math.cos(2 * n2)), y - e5 * Math.sin(2 * n2)).rot(2 * n2 * DEG), !g && z / 2 <= e5 && y <= t3 && function() {
                g = true, A3.moving = true, A3.moveEvent && k.off("stagemousemove", A3.moveEvent), A3.upEvent && k.off("stagemouseup", A3.upEvent), A3.currentW = 0, A3.currentH = 0, A3.lastPage = To.constrain(A3._currentPage), A3.direction = "right", A3.pageNext = d.zimBookIndex, A3.dispatchEvent("pageanimate"), A3.animate({ ease: "quadOut", props: { currentW: z / 2 }, time: 0.3, timeUnit: "s", call: function() {
                  Ticker.remove(e6), u.reg(0, 0), d.setMask(null), h2(A3._currentPage + 2), A3.moving = false, g = false, A3.currentW = 0, A3.currentH = 0, A3.dispatchEvent("page");
                } });
                var e6 = Ticker.add(function() {
                  i2.c().mt(z, y).lt(z / 2, y).lt(z - A3.currentW, 0).lt(z, 0).cp();
                });
                u.reg(z / 2, y).loc(z / 2, y, A3).animate({ props: { rotation: 0 }, time: 0.3, ease: "quadOut", timeUnit: "s" });
              }()) : (i2.c().mt(0, y).lt(e5, y).lt(0, y - t3).cp(), n2 = Math.atan2(e5, t3), l.loc(e5 + e5 * Math.cos(2 * n2), y - e5 * Math.sin(2 * n2)).rot(2 * -n2 * DEG), !g && z / 2 <= e5 && y <= t3 && function() {
                g = true, A3.moving = true, A3.moveEvent && k.off("stagemousemove", A3.moveEvent), A3.upEvent && k.off("stagemouseup", A3.upEvent), A3.currentW = 0, A3.currentH = 0, A3.lastPage = To.constrain(A3._currentPage), A3.direction = "left", A3.pageNext = l.zimBookIndex, A3.dispatchEvent("pageanimate"), A3.animate({ ease: "quadOut", props: { currentW: z / 2 }, time: 0.3, timeUnit: "s", call: function() {
                  Ticker.remove(e6), l.reg(0, 0), s5.setMask(null), h2(A3._currentPage - 2), A3.moving = false, g = false, A3.currentW = 0, A3.currentH = 0, A3.dispatchEvent("page");
                } });
                var e6 = Ticker.add(function() {
                  i2.c().mt(0, y).lt(z / 2, y).lt(A3.currentW, 0).lt(0, 0).cp();
                });
                l.reg(0, y).loc(z / 2, y, A3).animate({ props: { rotation: 0 }, time: 0.3, timeUnit: "s", ease: "quadOut" });
              }()), k.update();
            }
            A3.rollDown = function(e5, t3, o3, n2) {
              A3.moving || o3 == "right" && A3._currentPage >= b.length - 1 || o3 == "left" && A3._currentPage <= 1 || f3(0, 0, o3, n2);
            }, x2 && (x2 === true && (x2 = 0.2), A3.keydown = r2.on("keydown", function(e5) {
              e5.keyCode == 39 ? A3.nextPage(x2) : e5.keyCode == 37 && A3.prevPage(x2);
            }));
            A3.changeFrame = function(e5) {
              return A3.stageEvent && k.off("stagemousedown", A3.stageEvent), A3.moveEvent && k.off("stagemousemove", A3.moveEvent), A3.upEvent && k.off("stagemouseup", A3.upEvent), k = (r2 = e5).stage, o2(), A3;
            };
          }), A3.nextPage = function(e4) {
            if (zot(A3.rollUp))
              return timeout(0.01, function() {
                A3.nextPage(e4);
              }), A3;
            A3.moving || A3.rollUp(z / 2 + 0.1, y + 0.1, "right", e4, "quadIn");
          }, A3.prevPage = function(e4) {
            if (zot(A3.rollUp))
              return timeout(0.01, function() {
                A3.prevPage(e4);
              }), A3;
            A3.moving || A3.rollUp(z / 2 + 0.1, y + 0.1, "left", e4, "quadIn");
          }, A3.gotoPage = function(o2, n2) {
            if (zot(A3.rollUp))
              return timeout(0.01, function() {
                A3.gotoPage(o2, n2);
              }), A3;
            o2 = constrain(o2, 0, A3.pages.length - 1), zot(n2) && (n2 = T2 == "s" ? 0.3 : 300);
            var r2 = n2 + (T2 == "s" ? 0.35 : 350);
            A3.pageInterval = interval(r2, function(e4) {
              var t2 = false;
              A3._currentPage < o2 ? A3.nextPage(n2) : A3._currentPage > o2 ? A3.prevPage(n2) : t2 = true, A3.dispatchEvent("pageturn"), e4.count == e4.total - 1 && (t2 ? A3.dispatchEvent("pagedone") : timeout(r2, function() {
                A3.dispatchEvent("pagedone");
              }));
            }, Math.floor(Math.abs(o2 - A3._currentPage) / 2 + 1), true);
          }, Object.defineProperty(A3, "page", { get: function() {
            return A3._currentPage;
          }, set: function(e4) {
            A3.gotoPage(e4, T2 == "s" ? 0.1 : 100);
          } }), Object.defineProperty(A3, "pages", { get: function() {
            return b;
          }, set: function(e4) {
            zon && zogy("Book() - pages is read only");
          } }), this.dispose = function(e4, t2, o2) {
            return A3.stageEvent && k.off("stagemousedown", A3.stageEvent), A3.moveEvent && k.off("stagemousemove", A3.moveEvent), A3.upEvent && k.off("stagemouseup", A3.upEvent), A3.keydown && frame.off("keydown", A3.keydown), A3.removeFrom(), o2 || this.zimContainer_dispose(true), true;
          });
        }, To.extend(To.Book, To.Container, ["clone", "dispose"], "zimContainer"), To.Scroller = function(e3, t2, o2, n, r2, i2, a, l, s5, c2) {
          if (p = zob(To.Scroller, arguments, "backing, speed, direction, horizontal, gapFix, stage, container, style, group, inherit", this))
            return p;
          z_d("69"), this.cjsEventDispatcher_constructor(), this.type = "Scroller", this.group = s5;
          var u, d, h2, g, p, f3, m2, z, y, b, v, w = l === false ? {} : To.getStyle(this.type, this.group, c2);
          zot(e3) && (e3 = w.backing != null ? w.backing : null), zot(e3) || !zot(u = this.backing1 = e3) && u.getBounds && (d = this.backing2 = e3.clone(), zot(n) && (n = w.horizontal == null || w.horizontal), zot(r2) && (r2 = w.gapFix != null ? w.gapFix : 0), zot(a) && (a = w.container != null ? w.container : null), zot(i2) && (i2 = w.stage != null ? w.stage : null), h2 = this, zot(t2) && (t2 = w.speed != null ? w.speed : 1), this.speed = t2, g = this.baseSpeed = this.speed, zot(o2) && (o2 = w.direction != null ? w.direction : 1), this.direction = o2, p = n ? u.scaleX : u.scaleY, u.getBounds() ? i2 || u.stage ? u.parent ? (u.parent.addChildAt(d, u.parent.getChildIndex(u)), i2 = i2 || u.stage, zot(a) && (a = i2), a.getBounds() ? (f3 = u.getBounds().width * p - r2, m2 = u.getBounds().height * p - r2, n ? d.x = f3 : d.y = m2, b = false, v = To.Ticker.add(function(e4) {
            z || (z = a.getBounds().width, y = a.getBounds().height);
            if (h2.speed == 0 || h2.direction == 0)
              return;
            n ? (u.x -= h2.speed * h2.direction, u.x < d.x ? d.x = u.x + f3 : d.x = u.x - f3, 0 < h2.direction * h2.speed ? d.x < 0 && u.x < d.x ? u.x = d.x + f3 : u.x < 0 && d.x < u.x && (d.x = u.x + f3) : d.x > z && d.x > u.x ? d.x = u.x - f3 : u.x > z && u.x > d.x && (u.x = d.x - f3)) : (u.y -= h2.speed * h2.direction, u.y < d.y ? d.y = u.y + m2 : d.y = u.y - m2, 0 < h2.direction * h2.speed ? d.y < 0 && u.y < d.y ? u.y = d.y + m2 : u.y < 0 && d.y < u.y && (d.y = u.y + m2) : d.y > y && d.y > u.y ? d.y = u.y - m2 : u.y > y && u.y > d.y && (u.y = d.y - m2));
          }, i2), this.paused = false, this.pause = function(e4, t3) {
            return zot(e4) && (e4 = true), zot(t3) && (t3 = 0), e4 ? (g = h2.speed, 0 < t3 ? (b = true, To.animate({ target: h2, obj: { pausingSpeed: 0 }, ticker: false, time: t3, call: function() {
              h2.speed = 0, h2.paused = true, b = false, h2.dispatchEvent("pause");
            } })) : (b = false, h2.speed = 0, h2.paused = true, setTimeout(function() {
              h2.dispatchEvent("pause");
            }, 10))) : (b = false, 0 < t3 ? To.animate({ target: h2, obj: { pausingSpeed: g }, ticker: false, time: t3, call: function() {
              h2.speed = g, h2.paused = false, b = false;
            } }) : (h2.speed = g, h2.paused = false)), h2;
          }, Object.defineProperty(h2, "percentSpeed", { get: function() {
            return h2.baseSpeed == 0 ? NaN : h2.speed / h2.baseSpeed * 100;
          }, set: function(e4) {
            b || h2.paused || (h2.speed = h2.baseSpeed * e4 / 100);
          } }), Object.defineProperty(h2, "pausingSpeed", { get: function() {
            return h2.baseSpeed == 0 ? NaN : h2.speed / h2.baseSpeed * 100;
          }, set: function(e4) {
            h2.speed = h2.baseSpeed * e4 / 100;
          } }), l !== false && To.styleTransforms(this, w), this.dispose = function(e4, t3, o3) {
            return To.Ticker.remove(v), true;
          }) : zog("zim display - Scroller(): please setBounds() on container or stage if no container")) : zog("zim display - Scroller(): please add object to container or stage before adding to Scroller") : zog("zim display - Scroller(): please pass in stage parameter or add backing objects to stage to start") : zog("zim display - Scroller(): please setBounds() on backing objects"));
        }, To.extend(To.Scroller, createjs.EventDispatcher, null, "cjsEventDispatcher"), To.Dynamo = function(n, e3, t2, o2, r2, i2, a, l, s5, c2, u, d) {
          if (x2 = zob(To.Dynamo, arguments, "sprite, speed, label, startFrame, endFrame, update, reversible, flip, flipVertical, style, group, inherit", this))
            return x2;
          z_d("69.2"), this.cjsEventDispatcher_constructor(), this.type = "Dynamo", this.group = u;
          var h2, g, p, f3, m2, z, y, b, v, w, C, x2 = c2 === false ? {} : To.getStyle(this.type, this.group, d);
          zot(n) && (n = x2.sprite != null ? x2.sprite : null), zot(n) || (h2 = this.frames = n.parseFrames(t2, o2, r2, true)).length != 0 && (this.totalFrames = h2.length, g = 0, zot(e3) && (e3 = x2.speed != null ? x2.speed : 30), zot(a) && (a = x2.reversible == null || x2.reversible), p = this.baseSpeed = this.speed = e3, zot(i2) && (i2 = x2.update != null && x2.update), zot(l) && (l = x2.flip != null ? x2.flip : null), zot(l) && a == 0 && (l = true), f3 = this, y = Date.now(), C = false, f3.scaleX = n.scaleX, f3.scaleY = n.scaleY, function e4() {
            var t3, o3;
            m2 = requestAnimationFrame(e4), z = h2[g].s, f3.speed != 0 && z != 0 && (v = 1e3 / Math.abs(f3.speed) * z, b = Date.now(), v < b - y && (y = b, o3 = false, (t3 = f3.frame + (0 < f3.speed || !a ? 1 : -1)) >= h2.length && (o3 = true, t3 = 0), t3 < 0 && (o3 = true, t3 = h2.length - 1), f3.frame = t3, l && (f3.speed < 0 ? n.scaleX = -f3.scaleX : n.scaleX = f3.scaleX), s5 && (f3.speed < 0 ? n.scaleY = -f3.scaleY : n.scaleY = f3.scaleY), o3 && f3.dispatchEvent("loop"), f3.dispatchEvent("change"), i2 && n.stage && n.stage.update(), zot(w) || w != f3.frame || (C = false, f3.speed = 0, f3.paused = true, f3.dispatchEvent("pause"))));
          }(), this.paused = false, this.pause = function(e4, t3, o3) {
            if (zot(e4) && (e4 = true), e4 != f3.paused)
              return zot(t3) && (t3 = 0), e4 ? (p = f3.speed, zot(o3) ? 0 < t3 ? (C = true, To.animate({ target: f3, obj: { pausingSpeed: 0 }, ticker: false, time: t3, call: function() {
                C = false, f3.speed = 0, f3.paused = true, f3.dispatchEvent("pause");
              } })) : (C = false, f3.speed = 0, f3.paused = true, setTimeout(function() {
                f3.dispatchEvent("pause");
              }, 10)) : (C = true, w = o3)) : (w = null, 0 < t3 ? (C = true, To.animate({ target: f3, obj: { pausingSpeed: p }, ticker: false, time: t3, call: function() {
                C = false, f3.speed = p, f3.paused = false;
              } })) : (C = false, f3.speed = p, f3.paused = false)), f3;
          }, Object.defineProperty(f3, "frame", { get: function() {
            return g;
          }, set: function(e4) {
            g = Math.round(e4) % h2.length;
            e4 = h2[g];
            zot(e4) || (n.frame = e4.f);
          } }), Object.defineProperty(f3, "percentSpeed", { get: function() {
            return f3.baseSpeed == 0 ? NaN : C || f3.paused ? p / f3.baseSpeed * 100 : f3.speed / f3.baseSpeed * 100;
          }, set: function(e4) {
            C || f3.paused ? p = f3.baseSpeed * e4 / 100 : f3.speed = f3.baseSpeed * e4 / 100;
          } }), Object.defineProperty(f3, "pausingSpeed", { get: function() {
            return f3.baseSpeed == 0 ? NaN : f3.speed / f3.baseSpeed * 100;
          }, set: function(e4) {
            f3.speed = f3.baseSpeed * e4 / 100;
          } }), c2 !== false && To.styleTransforms(this, x2), this.dispose = function(e4, t3, o3) {
            cancelAnimationFrame(m2);
          });
        }, To.extend(To.Dynamo, createjs.EventDispatcher, null, "cjsEventDispatcher"), To.Accelerator = function(e3) {
          z_d("69.3"), this.cjsEventDispatcher_constructor();
          var l = this;
          this.type = "Accelerator", this.paused = false, this.items = [], this.paused = false, this._percentSpeed = 100, this.add = function(e4) {
            for (var t2 = Array.isArray(e4) ? e4 : [e4], o2 = 0; o2 < t2.length; o2++)
              l.items.indexOf(t2[o2]) < 0 && l.items.push(t2[o2]);
            return l;
          }, e3 && this.add(e3), this.remove = function(e4) {
            for (var t2, o2 = Array.isArray(e4) ? e4 : [e4], n = 0; n < o2.length; n++)
              0 <= (t2 = l.items.indexOf(o2[n])) && l.items.splice(t2, 1);
            return l;
          }, this.pause = function(t2, e4, o2) {
            if (zot(t2) && (t2 = true), t2 != l.paused) {
              var n = [];
              if (t2) {
                zot(o2) || (e4 = null);
                for (var r2 = false, i2 = 0; i2 < l.items.length; i2++)
                  (zot(e4) || !zot(o2) || l.items[i2].totalFrames) && (!l.items[i2].totalFrames || zot(e4) && zot(o2)) || (l.items[i2].pause(true, e4, o2), r2 = true, n[i2] = 1, l.items[i2].on("pause", function() {
                    l.paused || (a(), l.paused = true, l.dispatchEvent("pause"));
                  }, null, true));
                r2 || (a(), l.paused = true, setTimeout(function() {
                  l.dispatchEvent("pause");
                }, 10));
              } else
                l.paused = false, a();
            }
            function a() {
              for (var e5 = 0; e5 < l.items.length; e5++)
                n[e5] != 1 && l.items[e5].pause(t2);
            }
          }, Object.defineProperty(l, "percentSpeed", { get: function() {
            return l._percentSpeed;
          }, set: function(e4) {
            l._percentSpeed = e4;
            for (var t2 = 0; t2 < l.items.length; t2++)
              l.items[t2].percentSpeed = e4;
          } }), this.dispose = function(e4, t2, o2) {
            for (var n = 0; n < l.items.length; n++)
              l.items[n].dispose();
            return !(l.items = null);
          };
        }, To.extend(To.Accelerator, createjs.EventDispatcher, null, "cjsEventDispatcher"), To.Emitter = function(d, h2, g, t2, e3, o2, n, r2, i2, a, l, s5, p, f3, c2, u, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O) {
          if (j = zob(To.Emitter, arguments, "obj, width, height, interval, num, life, fade, shrink, decayTime, decayStart, trace, traceFadeTime, traceShiftX, traceShiftY, angle, force, gravity, wind, layers, animation, random, horizontal, vertical, sink, sinkForce, cache, events, startPaused, pool, poolMin, particles, style, group, inherit", this))
            return j;
          z_d("69.9"), this.type = "Emitter", this.group = M;
          var j = I2 === false ? {} : To.getStyle(this.type, this.group, O);
          zot(d) && (d = j.obj != null ? j.obj : [new To.Circle(20, "#e472c4"), new To.Circle(20, "#acd241"), new To.Circle(20, "#50c4b7")]), zot(h2) && (h2 = j.width != null ? j.width : 300), zot(g) && (g = j.height != null ? j.height : 300);
          var L = Ao(t2);
          zot(t2) && (t2 = j.interval != null ? j.interval : L == "s" ? 0.02 : 20), typeof t2 == "number" && (t2 = Math.max(L == "s" ? 0.01 : 10, t2)), zot(e3) && (e3 = j.num != null ? j.num : 1), zot(l) && (l = j.trace != null && l.size), zot(s5) && (s5 = j.traceFadeTime != null ? j.traceFadeTime : i2), zot(p) && (p = j.traceShiftX != null ? j.traceShiftX : 0), zot(f3) && (f3 = j.traceShiftY != null ? j.traceShiftY : 0), Po(o2, L), zot(o2) && (o2 = j.life != null ? j.life : L == "s" ? 1 : 1e3), zot(n) && (n = j.fade == null || j.fade), zot(r2) && (r2 = j.shrink != null ? j.shrink : !l), Po(i2, L), zot(i2) && (i2 = j.decayTime != null ? j.decayTime : L == "s" ? 1 : 1e3), zot(c2) && (c2 = j.angle != null ? j.angle : { min: 0, max: 360 }), zot(u) && (u = j.force != null ? j.force : 5), zot(m2) && (m2 = j.gravity != null ? j.gravity : 9.8), zot(z) && (z = j.wind != null ? j.wind : 0), zot(y) && (y = j.layers != null ? j.layers : "top"), zot(h2) && (h2 = j.width != null ? j.width : 100), zot(g) && (g = j.height != null ? j.height : 100), zot(w) && (w = j.horizontal != null && j.horizontal), zot(C) && (C = j.vertical != null && j.vertical), zot(x2) && (x2 = j.sink != null ? j.sink : null), !zot(x2) && zot(k) && (k = j.sinkForce != null ? j.sinkForce : 10), zot(A3) && (A3 = j.events != null && j.events), zot(P) && (P = j.startPaused != null && j.startPaused), zot(B) && (B = j.pool == null || j.pool), zot(S2) && (S2 = j.poolMin != null ? j.poolMin : 0), zot(E) && (E = j.particles != null ? j.particles : new To.Container()), zot(b) && (b = j.animation != null ? j.animation : null), E.type = "Particles", this.zimContainer_constructor(h2, g, null, null, false), this.type = "Emitter";
          var _ = this;
          this.regX = h2 / 2, this.regY = g / 2, _.obj = d, _.particles = E, _.interval = t2, _.num = e3, _.life = o2, _.fade = n, _.shrink = r2, _.decayTime = i2, _.decayStart = a, _.trace = l, _.traceFadeTime = s5, _.traceShiftX = p, _.traceShiftY = f3, _.angle = c2, _.emitterForce = u, _.gravity = m2, _.wind = z, _.layers = y, _.animation = b, _.random = v, _.horizontal = w, _.vertical = C, _.sink = x2, _.sinkForce = k, _.events = A3, _.startEmitterPaused = _.emitterPaused = P, _.pool = B, _.poolMin = S2, _.particlesEmitted = 0;
          var Y, D, X = [], R = 0, W = 0;
          function F2(e4) {
            if (_.events && H("fizzed", e4), (e4.trace ? e4.getChildAt(0) : e4).endSpurt && (H("spurtfizzed", e4), _.spurting = false), _.pool && e4.pooled != "end")
              return e4.pooled || (e4.pooled = true, X && X.push(e4)), void (e4.visible = false);
            _.removeChild(e4), _.trace && e4.uncache(), e4 = null;
          }
          function H(e4, t3) {
            zot(t3) || ((e4 = new createjs.Event(e4)).particle = t3.trace ? t3.getChildAt(0) : t3, _.dispatchEvent(e4));
          }
          function N(e4) {
            _.pauseEmitter(), _.spurtCount = _.spurtNum = null, zot(e4) || (H("spurted", e4), e4.endSpurt = true);
          }
          To.added(_, function(e4) {
            _.emitterPaused = null, _.on("added", function() {
              _.particles.addTo(_.parent);
            }), D = e4, zot(T2) && (T2 = !D.isWebGL && To.mobile());
            T2 && (D.snapToPixelEnabled = true);
            {
              var l2;
              D && (e4 = _.parent.getChildIndex(_), _.parent.addChildAt(E, e4), w || C || _.centerReg(null, null, false), _.zimInterval = To.interval(_.interval, function() {
                var s6, c3, u2 = To.isPick(_.life) ? To.Pick.getMinMax(_.life).max : _.life;
                function e5(e6, t3) {
                  return e6 - t3;
                }
                zot(u2) && (u2 = L == "s" ? 1 : 1e3), _.startEmitterPaused ? _.pauseEmitter() : (d = Array.isArray(_.obj) ? _.obj : [_.obj]).length <= 0 || (s6 = Array.isArray(_.interval) ? (_.interval.sort(e5), _.interval[0]) : _.interval.constructor == {}.constructor ? _.interval.min : _.interval, c3 = Array.isArray(_.num) ? (_.num.sort(e5), _.num[_.num.length - 1]) : _.num.constructor == {}.constructor ? _.num.max : _.num, To.loop(To.Pick.choose(_.num), function() {
                  var o3, n2;
                  0 < _.decayTime && (e6 = {}, _.shrink && (e6.scale = 0), _.fade && (e6.alpha = 0)), _.pool && 0 < X.length && W >= Math.max(_.poolMin, (u2 / s6 + 5) * c3) ? ((o3 = X[R++ % X.length]).visible = true, (n2 = o3.trace ? o3.getChildAt(0) : o3).emitShape && (t3 = n2.template, n2.graphics.c().s(t3.s ? To.Pick.choose(t3.s) : null).ss(t3.ss ? To.Pick.choose(t3.ss) : null).sd(t3.sd ? To.Pick.choose(t3.sd) : null, t3.offset ? To.Pick.choose(t3.offset) : null)), o3.trace && o3.updateCache(), _.layers == "top" ? n2.emitShape ? o3.addTo(E, null, false) : o3.centerReg(E) : n2.emitShape ? o3.addTo(E, _.layers == "bottom" ? 0 : To.rand(E.numChildren), false) : o3.centerReg(E, _.layers == "bottom" ? 0 : To.rand(E.numChildren)), o3.alpha = 1, o3.scaleX = 1, o3.scaleY = 1, n2.alpha = n2.originalAlpha, n2.scaleX = n2.originalScaleX, n2.scaleY = n2.originalScaleY, n2.rotation = n2.originalRotation, n2.color = n2.originalColor, n2.endSpurt = false) : (W++, _.trace && ((o3 = new To.Container(h2, g, null, null, false)).trace = true), (r3 = To.Pick.choose(To.shuffle(d)[0])).type == "shape" ? (t3 = r3, (n2 = new To.Shape(1, 1, null, null, null, false)).emitShape = true, n2.template = t3, n2.graphics.s(t3.s ? To.Pick.choose(t3.s) : null).ss(t3.ss ? To.Pick.choose(t3.ss) : null).sd(t3.sd ? To.Pick.choose(t3.sd) : null, t3.offset ? To.Pick.choose(t3.offset) : null), _.trace ? n2.addTo(o3, null, false) : _.layers == "top" ? n2.addTo(E, null, false) : n2.addTo(E, _.layers == "bottom" ? 0 : To.rand(E.numChildren), null, false)) : ((n2 = r3.clone()).centerReg || zimify(n2), _.trace ? n2.centerReg(o3).pos({ x: -1e3, y: -1e3, reg: true }) : _.layers == "top" ? n2.centerReg(E) : n2.centerReg(E, _.layers == "bottom" ? 0 : To.rand(E.numChildren))), _.trace && (_.layers == "top" ? o3.addTo(E, null, false) : o3.addTo(E, _.layers == "bottom" ? 0 : To.rand(E.numChildren), false), o3.cache(p, f3, h2, g)), _.trace || (o3 = n2), (o3.particle = n2).originalAlpha = n2.alpha, n2.originalScaleX = n2.scaleX, n2.originalScaleY = n2.scaleY, n2.originalRotation = n2.rotation, n2.originalColor = n2.color), _.currentParticle = n2, _.particlesEmitted++, o3.particleNormal = true, o3.particleDecaying = false, o3.particleFizzing = false;
                  var e6 = To.Pick.choose(_.angle), t3 = To.Pick.choose(_.emitterForce), r3 = t3 * Math.cos(e6 * Math.PI / 180), e6 = t3 * Math.sin(e6 * Math.PI / 180);
                  n2.info = { position: { x: _.x, y: _.y }, velocity: { x: r3, y: e6 } }, _.horizontal && (n2.info.position = { x: _.x - _.regX + To.rand(0, h2), y: _.y - _.regY + (_.vertical ? g / 2 : 0) }), _.vertical && (n2.info.position = { x: _.x - _.regX + (_.horizontal ? h2 / 2 : 0), y: _.y - _.regY + To.rand(0, g) }), n2.emitShape ? n2.graphics.mt(n2.info.position.x, n2.info.position.y) : (n2.x = n2.info.position.x, n2.y = n2.info.position.y), _.random && To.loop(_.random, function(e7, t4) {
                    t4 = To.Pick.choose(t4);
                    e7 == "scale" ? n2.sca(t4) : (e7 == "x" ? n2.info.position.x = _.horizontal || _.vertical ? t4 : t4 + h2 / 2 : e7 == "y" && (n2.info.position.y = _.horizontal || _.vertical ? t4 : t4 + g / 2), e7 != "x" && e7 != "y" || !n2.emitShape || n2.graphics.mt(n2.info.position.x, n2.info.position.y), n2[e7] = t4, n2.emitShape && (n2.x = 0, n2.y = 0));
                  }), T2 && !n2.emitShape && n2.cache(n2.getBounds().x - 10, n2.getBounds().y - 10, n2.getBounds().width + 20, n2.getBounds().height + 20);
                  var i3, a2, l3, e6 = !n2.emitShape && _.shrink;
                  0 < _.decayTime && (_.fade || e6 || _.trace && 0 < _.traceFadeTime) ? (i3 = zik(_.life), _.trace && 0 < _.traceFadeTime && o3.animate({ obj: { alpha: 0 }, time: _.traceFadeTime, wait: i3 - _.traceFadeTime, waitedCall: function(e7) {
                    e7.particleNormal = false, e7.particleFizzing = true;
                  }, call: F2, override: false, id: "decay" }), (_.fade || e6) && (l3 = {}, _.fade && (l3.alpha = 0), e6 && (l3.scaleX = 0, l3.scaleY = 0), n2.animate({ obj: l3, time: _.decayTime, wait: zot(_.decayStart) ? i3 - _.decayTime : _.decayStart, waitedCall: function(e7) {
                    e7.parent != _ && (e7 = e7.parent), e7.particleNormal = false, e7.particleDecaying = true;
                  }, call: function(e7) {
                    var t4;
                    _.events && H("decayed", e7), e7.endSpurt && H("spurtdecayed", e7), _.trace && 0 < _.traceFadeTime || (zot(_.decayStart) || _.decayStart + _.decayTime > _.life ? e7.parent && F2(e7.parent.trace ? e7.parent : e7) : (t4 = o3, To.timeout(i3 - (_.decayStart + _.decayTime), function() {
                      F2(t4);
                    })));
                  }, override: false, id: "decay" }))) : 0 < _.life && ((a2 = o3).timeOut = To.timeout(_.life, function() {
                    F2(a2);
                  })), _.events && H("emitted", o3), l3 = n2, zot(_.spurtCount) && zot(_.spurtNum) || (_.spurtCount++, _.spurtCount >= _.spurtNum && N(l3)), _.animation && (zot((l3 = To.Pick.choose(_.animation)).override) && (l3.override = false), n2.animate(To.copy(l3)));
                }));
              }, null, true, true), l2 = 0, Y = _.emitterTicker = To.Ticker.add(function() {
                To.loop(E, function(e5) {
                  var t3;
                  e5.trace && (e5 = (t3 = e5).getChildAt(0));
                  var o3, n2, r3 = e5.info, i3 = 0, a2 = 0;
                  zot(_.sink) || (o3 = _.particles.localToGlobal(r3.position.x, r3.position.y), n2 = _.sink.parent && _.sink.parent.localToGlobal ? _.sink.parent.localToGlobal(_.sink.x, _.sink.y) : new createjs.Point(To.Pick.choose(_.sink.x), To.Pick.choose(_.sink.y)), n2 = To.angle(o3.x, o3.y, n2.x, n2.y), i3 = _.sinkForce * Math.cos(n2 * Math.PI / 180), a2 = _.sinkForce * Math.sin(n2 * Math.PI / 180));
                  i3 = _.wind + i3, a2 = _.gravity + a2;
                  r3.velocity.x += i3 * l2, r3.velocity.y += a2 * l2, r3.position.x += r3.velocity.x * l2 * 100, r3.position.y += r3.velocity.y * l2 * 100, e5.emitShape ? e5.graphics.lt(r3.position.x, r3.position.y) : (e5.x = r3.position.x, e5.y = r3.position.y), _.trace && t3 && t3.updateCache(e5.emitShape ? null : "source-over");
                });
              }, D), l2 = 1 / To.Ticker.framerate);
            }
          }), _.particles.noMouse(), Object.defineProperty(_, "interval", { get: function() {
            return t2;
          }, set: function(e4) {
            t2 = e4, _.zimInterval && (_.zimInterval.time = t2);
          } }), this.removeFrom = function(e4) {
            _.parent && _.parent.removeChild(_), _.particles.removeFrom();
          }, this.spurting = false, this.spurt = function(e4, t3, o3) {
            var n2;
            return (n2 = zob(_.spurt, arguments, "num, time, restart")) ? n2 : (zot(t3) || (To.timeout(To.Pick.choose(t3), function() {
              N(_.currentParticle);
            }, true), _.spurting = true), zot(e4) || (_.spurtNum = To.Pick.choose(e4), _.spurtCount = 0, _.spurting = true), _.pauseEmitter(false, o3, null, true), _);
          }, this.clearPool = function() {
            To.loop(_.particles, function(e4) {
              e4.pooled = "end", e4.visible || _.removeChild(e4);
            }, true), R = W = 0, X = [];
          }, _.startEmitterPaused || (this.emitterPaused = false), this.pauseEmitter = function(e4, t3, o3, n2) {
            if (_.startEmitterPaused = null, zot(e4) && (e4 = true), zot(t3) && (t3 = false), zot(o3) && (o3 = false), e4) {
              if (_.emitterPaused)
                return _;
              o3 && (Y && To.Ticker.remove(Y), To.loop(_.particles, function(e5) {
                e5.pauseAnimate(), e5.trace && e5.getChildAt(0).pauseAnimate(), e5.timeOut && e5.timeOut.pause();
              })), _.zimInterval.pause(), _.emitterPaused = true;
            } else {
              if (!_.emitterPaused)
                return _;
              t3 && (To.loop(_.particles, function(e5) {
                e5.stopAnimate(), e5.timeOut && e5.timeOut.clear(), e5.trace && e5.getChildAt(0).pauseAnimate();
              }), _.removeAllChildren()), D && Y && !To.Ticker.has(D, Y) && (To.Ticker.add(Y, D), To.loop(_.particles, function(e5) {
                e5.pauseAnimate(false), e5.timeOut && e5.timeOut.pause(false), e5.trace && e5.getChildAt(0).pauseAnimate(false);
              })), _.zimInterval && _.zimInterval.pause(false, n2), _.emitterPaused = false;
            }
            return _;
          }, !(this.resize = function(e4, t3) {
            zot(e4) || (h2 = e4), zot(t3) || (g = t3), _.setBounds(0, 0, h2, g), w || C || _.centerReg(), _.clearPool();
          }) !== I2 && To.styleTransforms(this, j), this.clone = function(e4) {
            e4 = Array.isArray(_.obj) || _.obj.constructor == {}.constructor ? To.copy(_.obj) : _.obj.clone ? _.obj.clone(e4) : _.obj;
            return _.cloneProps(new To.Emitter(e4, h2, g, _.interval, _.num, _.life, _.fade, _.shrink, _.decayTime, _.decayStart, _.trace, _.traceFadeTime, _.traceShiftX, _.traceShiftY, _.angle, _.emitterForce, _.gravity, _.wind, _.layers, _.animation, To.copy(_.random), _.horizontal, _.vertical, _.sink, _.sinkForce, T2, _.events, P, _.pool, _.poolMin, I2, _.group, O));
          }, this.dispose = function(e4, t3, o3) {
            return _.zimInterval && _.zimInterval.clear(), Y && To.Ticker.remove(Y), To.loop(X, function(e5) {
              e5 && e5.dispose();
            }), E && E.dispose && E.dispose(), _.currentParticle && _.currentParticle.dispose && _.currentParticle.dispose(), d && Array.isArray(d) ? To.loop(d, function(e5) {
              e5.dispose && e5.dispose();
            }) : d && d.dispose && d.dispose(), !(E = _.currentParticle = _.particles = d = _.obj = X = _.poolList = null);
          };
        }, To.extend(To.Emitter, To.Container, "clone", "zimContainer", false), To.Generator = function(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w) {
          if (k = zob(To.Generator, arguments, "color, strokeColor, strokeWidth, draw, stamp, setup, maxCount, boundary, drawCount, drawPause, drawSpacebarPause, startX, startY, cache, recordLinePoints, frame, seed, output, outputType, style, group, inherit", this))
            return k;
          z_d("69.92"), this.group = v;
          var C = b === false ? {} : To.getStyle("Generator", this.group, w);
          zot(f3) && (f3 = C.frame != null ? C.frame : zdf);
          var x2 = f3.stage;
          zot(e3) && (e3 = C.color != null ? C.color : null), zot(t2) && (t2 = C.strokeColor != null ? C.strokeColor : To.white), zot(o2) && (o2 = C.strokeWidth != null ? C.strokeWidth : 1), zot(a) && (a = C.maxCount != null ? C.maxCount : 1e3), zot(l) && (l = C.boundary != null ? C.boundary : new To.Boundary(0, 0, x2.width, x2.height)), zot(s5) && (s5 = C.drawCount != null ? C.drawCount : 1), zot(c2) && (c2 = C.drawPause == null || C.drawPause), zot(u) && (u = C.drawSpacebarPause == null || C.drawSpacebarPause), zot(d) && (d = C.startX != null ? C.startX : x2.width / 2), zot(h2) && (h2 = C.startY != null ? C.startY : x2.height / 2), zot(g) && (g = C.cache != null && C.cache);
          var k = this.drawing = new To.Container(l.x, l.y, l.width, l.height).addTo(x2), T2 = this.shape = new To.Shape(l.width, l.height).addTo(k);
          this.drawCount = s5, zot(c2) && (c2 = true), g && T2.cache(l.x, l.y, l.width, l.height), this.zimContainer_constructor(l.x, l.y, l.width, l.height), this.type = "Generator";
          var A3, P = this;
          P.draw = null, z && (P.drawCount = 10, !zot(r2) && zot(n) && (n = r2), r2 = null, A3 = new To.Loader(), P.outputNum = 0, P.outputName = z === true ? "gen_" : z.match(/_$/) ? z : z + "_"), this.color = e3, this.strokeColor = t2, this.strokeWidth = o2;
          var B = d, S2 = h2;
          this.fill = function(e4) {
            return P.color = e4, P.currentColor = zik(P.color), T2.f(P.currentColor), this;
          }, this.stroke = function(e4, t3) {
            return zot(e4) || (P.strokeColor = e4, P.currentStrokeColor = zik(P.strokeColor), T2.s(P.currentStrokeColor)), zot(t3) || (P.strokeWidth = t3, P.currentStrokeWidth = zik(P.strokeWidth), T2.ss(P.currentStrokeWidth)), this;
          }, this.noStroke = function() {
            return P.strokeColor = P.currentStrokeColor = null, P.strokeWidth = P.currentStrokeWidth = null, T2.s(), T2.ss(1), this;
          }, T2.matrix = T2.getMatrix(), this.translate = function(e4, t3) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), e4 = zik(e4), t3 = zik(t3);
            var o3 = T2.matrix.transformPoint(e4, t3);
            return B = o3.x, S2 = o3.y, T2.mt(B, S2), T2.matrix.translate(e4, t3), this;
          }, this.rotate = function(e4) {
            return zot(e4) && (e4 = 0), e4 = zik(e4), T2.matrix.rotate(e4), this;
          }, this.scale = function(e4, t3) {
            return zot(e4) && (e4 = 1), zot(t3) && (t3 = e4), e4 = zik(e4), t3 = zik(t3), T2.matrix.scale(e4, t3), this;
          }, this.skew = function(e4, t3) {
            return zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), e4 = zik(e4), t3 = zik(t3), T2.matrix.skew(e4, t3), this;
          }, p && (P.linePoints = []), this.line = function(e4, t3, o3, n2) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), zot(o3) && (o3 = 0), zot(n2) && (n2 = 0), e4 = zik(e4), t3 = zik(t3), o3 = zik(o3), n2 = zik(n2), (p == "zero" || p == "nonzero" && e4 && t3) && P.linePoints.push([e4, t3]), P.translate(e4, t3);
            t3 = T2.matrix.transformPoint(o3, n2);
            return B = t3.x, S2 = t3.y, T2.lt(B, S2), p && P.linePoints.push([B, S2]), T2.matrix.translate(o3, n2), this;
          }, this.arc = function(e4, t3, o3, n2, r3, i3) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), zot(o3) && (o3 = 50), e4 = zik(e4), t3 = zik(t3), o3 = zik(o3), o3 = Math.abs(o3), zot(n2) && (n2 = 0), zot(r3) && (r3 = 180), n2 = zik(n2), r3 = zik(r3), zot(i3) && (i3 = false), i3 = zik(i3), P.translate(e4, t3);
            var a2 = T2.matrix.transformPoint(0, 0);
            T2.decomp || (T2.decomp = {}), T2.matrix.decompose(T2.decomp);
            e4 = (Math.abs(T2.decomp.scaleX) + Math.abs(T2.decomp.scaleY)) / 2, t3 = T2.decomp.rotation || 0, e4 *= o3;
            return T2.mt(a2.x + e4 * Math.cos((n2 + t3) * Math.PI / 180), a2.y + e4 * Math.sin((n2 + t3) * Math.PI / 180)), T2.a(a2.x, a2.y, e4, (n2 + t3) * Math.PI / 180, (r3 + t3) * Math.PI / 180, i3), this;
          }, this.curve = function(e4, t3, o3, n2, r3, i3) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), zot(o3) && (o3 = 50), zot(n2) && (n2 = 50), zot(r3) && (r3 = 100), zot(i3) && (i3 = 0), e4 = zik(e4), t3 = zik(t3), o3 = zik(o3), n2 = zik(n2), r3 = zik(r3), i3 = zik(i3), P.translate(e4, t3);
            t3 = T2.matrix.transformPoint(o3, n2), o3 = T2.matrix.transformPoint(r3, i3), n2 = o3.x, o3 = o3.y;
            return T2.qt(t3.x, t3.y, n2, o3), T2.matrix.translate(r3, i3), this;
          }, this.bezier = function(e4, t3, o3, n2, r3, i3, a2, l2) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), zot(o3) && (o3 = 50), zot(n2) && (n2 = 50), zot(r3) && (r3 = -50), zot(i3) && (i3 = -50), zot(a2) && (a2 = 100), zot(l2) && (l2 = 0), e4 = zik(e4), t3 = zik(t3), o3 = zik(o3), n2 = zik(n2), r3 = zik(r3), i3 = zik(i3), a2 = zik(a2), l2 = zik(l2), P.translate(e4, t3);
            o3 = T2.matrix.transformPoint(o3, n2), n2 = T2.matrix.transformPoint(r3, i3), r3 = T2.matrix.transformPoint(a2, l2), i3 = r3.x, r3 = r3.y;
            return T2.bt(o3.x, o3.y, n2.x, n2.y, i3, r3), T2.matrix.translate(a2, l2), this;
          }, this.rectangle = function(e4, t3, o3, n2, r3, i3, a2, l2) {
            if (zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), zot(o3) && (o3 = 100), zot(n2) && (n2 = o3), e4 = zik(e4), t3 = zik(t3), o3 = zik(o3), n2 = zik(n2), !(r3 || i3 || a2 || l2)) {
              P.translate(e4, t3);
              var s6 = T2.matrix.transformPoint(0, 0), c3 = T2.matrix.transformPoint(o3, 0), u2 = T2.matrix.transformPoint(o3, n2), d2 = T2.matrix.transformPoint(0, n2);
              return T2.mt(s6.x, s6.y).lt(c3.x, c3.y).lt(u2.x, u2.y).lt(d2.x, d2.y).lt(s6.x, s6.y).lt(c3.x, c3.y), T2.mt(s6.x, s6.y), this;
            }
            zot(r3) && (r3 = 0), zot(i3) && (i3 = r3), zot(a2) && (a2 = r3), zot(l2) && (l2 = r3), r3 = zik(r3), i3 = zik(i3), a2 = zik(a2), l2 = zik(l2);
            var h3 = (o3 < n2 ? o3 : n2) / 2, g2 = 0, p2 = 0, f4 = 0, m3 = 0;
            r3 < 0 && (r3 *= g2 = -1), (h3 = Math.abs(h3)) < r3 && (r3 = h3), i3 < 0 && (i3 *= p2 = -1), h3 < i3 && (i3 = h3), a2 < 0 && (a2 *= f4 = -1), h3 < a2 && (a2 = h3), l2 < 0 && (l2 *= m3 = -1), h3 < l2 && (l2 = h3), P.translate(e4, t3), T2.decomp || (T2.decomp = {}), T2.matrix.decompose(T2.decomp);
            var z2 = (Math.abs(T2.decomp.scaleX) + Math.abs(T2.decomp.scaleY)) / 2, u2 = o3 < 0 ? -1 : 1, d2 = n2 < 0 ? -1 : 1, c3 = T2.matrix.transformPoint(o3 - i3 * u2, 0), s6 = T2.matrix.transformPoint(o3 + i3 * p2 * u2, -i3 * p2 * d2), h3 = T2.matrix.transformPoint(o3, i3 * d2), e4 = T2.matrix.transformPoint(o3, n2 - a2 * d2), t3 = T2.matrix.transformPoint(o3 + a2 * f4 * u2, n2 + a2 * f4 * d2), p2 = T2.matrix.transformPoint(o3 - a2 * u2, n2), f4 = T2.matrix.transformPoint(l2 * u2, n2), o3 = T2.matrix.transformPoint(-l2 * m3 * u2, n2 + l2 * m3 * d2), m3 = T2.matrix.transformPoint(0, n2 - l2 * d2), n2 = T2.matrix.transformPoint(0, r3 * d2), d2 = T2.matrix.transformPoint(-r3 * g2 * u2, -r3 * g2 * d2), u2 = T2.matrix.transformPoint(r3 * u2, 0);
            return T2.mt(c3.x, c3.y).at(s6.x, s6.y, h3.x, h3.y, i3 * z2).lt(e4.x, e4.y).at(t3.x, t3.y, p2.x, p2.y, a2 * z2).lt(f4.x, f4.y).at(o3.x, o3.y, m3.x, m3.y, l2 * z2).lt(n2.x, n2.y).at(d2.x, d2.y, u2.x, u2.y, r3 * z2).cp(), this;
          }, this.circle = function(e4, t3, o3, n2, r3) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), zot(o3) && (o3 = 50), zot(n2) && (n2 = 100), zot(r3) && (r3 = true), e4 = zik(e4), t3 = zik(t3), o3 = zik(o3), n2 = zik(n2), o3 = Math.abs(o3), P.translate(e4, t3);
            var i3 = T2.matrix.transformPoint(0, 0);
            T2.decomp || (T2.decomp = {}), T2.matrix.decompose(T2.decomp);
            e4 = (Math.abs(T2.decomp.scaleX) + Math.abs(T2.decomp.scaleY)) / 2, t3 = T2.decomp.rotation || 0, e4 *= o3;
            return P.circleHeight = 2 * e4, typeof n2 == "number" && 0 <= n2 && n2 < 100 ? (n2 = 360 * n2 / 100 / 2, T2.mt(i3.x + e4 * Math.cos((-n2 - 90 + t3) * Math.PI / 180), i3.y + e4 * Math.sin((-n2 - 90 + t3) * Math.PI / 180)), T2.a(i3.x, i3.y, e4, (-n2 - 90 + t3) * Math.PI / 180, (n2 - 90 + t3) * Math.PI / 180, false), r3 && T2.cp(), P.circleHeight = e4 - Math.cos(n2 * Math.PI / 180) * e4) : (T2.mt(i3.x + e4, i3.y), T2.a(i3.x, i3.y, e4, 0, 2 * Math.PI)), this;
          }, this.elipse = function(e4, t3, o3, n2) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), zot(o3) && (o3 = 100), zot(n2) && (n2 = 50), e4 = zik(e4), t3 = zik(t3), o3 = zik(o3), n2 = zik(n2), P.translate(e4, t3);
            var r3 = T2.matrix.transformPoint(-o3 / 2, -n2 / 2);
            T2.decomp || (T2.decomp = {}), T2.matrix.decompose(T2.decomp);
            e4 = T2.decomp.scaleX, t3 = T2.decomp.scaleY;
            return T2.de(r3.x, r3.y, o3 * e4, n2 * t3), this;
          }, this.poly = function(e4, t3, o3, n2, r3, i3) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = 0), zot(o3) && (o3 = 100), zot(n2) && (n2 = 5), zot(r3) && (r3 = 0), zot(i3) && (i3 = 0), e4 = zik(e4), t3 = zik(t3), o3 = zik(o3), n2 = zik(n2), r3 = zik(r3), i3 = zik(i3), o3 = Math.abs(o3), P.translate(e4, t3);
            i3 = T2.matrix.transformPoint(0, 0);
            T2.decomp || (T2.decomp = {}), T2.matrix.decompose(T2.decomp);
            e4 = (Math.abs(T2.decomp.scaleX) + Math.abs(T2.decomp.scaleY)) / 2, t3 = T2.decomp.rotation || 0, e4 *= o3;
            return T2.dp(i3.x, i3.y, e4, n2, r3, t3), this;
          }, this.closePath = this.close = this.cp = function() {
            return T2.cp(), this;
          }, this._noise = new To.Noise(m2), this.noise = function() {
            return arguments.length == 1 ? (this._noise.simplex1D.apply(null, arguments) + 1) / 2 : arguments.length == 2 ? (this._noise.simplex2D.apply(null, arguments) + 1) / 2 : arguments.length == 3 ? (this._noise.simplex3D.apply(null, arguments) + 1) / 2 : arguments.length == 4 ? (this._noise.simplex4D.apply(null, arguments) + 1) / 2 : void 0;
          };
          T2.matrix.clone();
          this.stack = [], this.colorStrokeStack = [], this.push = function() {
            return P.stack.push(T2.matrix.clone()), P.colorStrokeStack.push([P.color, P.strokeColor, P.strokeWidth, P.currentColor, P.currentStrokeColor, P.currentStrokeWidth]), this;
          }, this.pop = function() {
            T2.matrix = P.stack.pop() || T2.matrix;
            var e4 = P.colorStrokeStack.pop() || [P.color, P.strokeColor, P.strokeWidth, P.currentColor, P.currentStrokeColor, P.currentStrokeWidth];
            return P.color = e4[0], P.strokeColor = e4[1], P.strokeWidth = e4[2], P.currentColor = e4[3], P.currentStrokeColor = e4[4], P.currentStrokeWidth = e4[5], T2.f(P.currentColor).s(P.currentStrokeColor).ss(P.currentStrokeWidth), T2.mt(T2.matrix.x, T2.matrix.y), this;
          }, this.blit = function() {
            return T2.updateCache("source-over"), T2.c(), this;
          }, this.step = function() {
            return P.draw && O(), this;
          }, zot(P.color) || this.fill(P.color), !zot(P.strokeColor) && P.strokeWidth ? this.stroke(P.strokeColor, P.strokeWidth) : P.noStroke(), this.translate(B, S2), typeof i2 == "function" && (this.setup = i2, To.timeout(0.01, function() {
            i2(0, P.count, P), g && T2.updateCache(), x2.update();
          }));
          var E = 0;
          function I2() {
            A3.save({ content: x2, filename: P.outputName + decimals(P.outputNum, null, null, 6), type: y }), P.outputNum++;
          }
          function M(e4) {
            P.stampNum++;
            e4 = To.loop(P.maxCount, function(e5, t3) {
              if (P.paused)
                return P.pausedCount = e5, false;
              if (P.changeCount)
                return P.changeCount = false;
              t3 = r2(E = e5 + 1, t3, P, P.stampNum);
              return P.currentColor = zik(P.color), T2.f(P.currentColor), P.currentStrokeColor = zik(P.strokeColor), T2.s(P.currentStrokeColor), P.currentStrokeWidth = zik(P.strokeWidth), T2.ss(P.currentStrokeWidth), z && (x2.update(), I2()), t3 || void 0;
            }, null, null, e4);
            g && T2.updateCache(), e4 && P.dispatchEvent("complete"), x2.update();
          }
          function O() {
            P.iterator++, P.iterator % Math.ceil(P.drawCount) == 0 && (P.count++, P.draw(P.count, P.maxCount, P), g && P.blit(), P.currentColor = zik(P.color), T2.f(P.currentColor), P.currentStrokeColor = zik(P.strokeColor), T2.s(P.currentStrokeColor), P.currentStrokeWidth = zik(P.strokeWidth), T2.ss(P.currentStrokeWidth), P.dispatchEvent("drawing"), x2.update(), z && I2()), P.maxCount && P.count >= P.maxCount && (P.dispatchEvent("complete"), To.Ticker.remove(P.ticker));
          }
          this.maxCount = a, this.resetup = function(e4) {
            return zot(e4) && (e4 = true), E = 0, e4 && P.shape.c(), zot(P.color) || this.fill(P.color), !zot(P.strokeColor) && P.strokeWidth ? this.stroke(P.strokeColor, P.strokeWidth) : P.noStroke(), this.reset(), this.setup && (i2(0, P.count, P), g && T2.updateCache(), x2.update()), this;
          }, this.stampNum = 0, typeof r2 == "function" && (this.stamp = r2, To.timeout(0.015, function() {
            M(0);
          })), this.restamp = function(e4, t3) {
            return zot(e4) && (e4 = true), zot(t3) && (t3 = true), E = 0, e4 && P.shape.c(), t3 && P.resetup(e4), M(0), this;
          }, this.reset = function() {
            return this.fill(e3), !zot(t2) && o2 ? this.stroke(t2, o2) : this.noStroke(), T2.matrix.identity(), this.translate(d, h2), this;
          }, this.clear = function() {
            return this.shape.c(), this;
          }, z && (x2.update(), I2()), P.iterator = 0, typeof n == "function" && (this.draw = n, i2 ? setTimeout(function() {
            P.ticker = To.Ticker.add(O);
          }, 100) : this.ticker = To.Ticker.add(O), P.generatorPaused = false, c2 && (P.pauseEvent = x2.on("stagemousedown", function() {
            P.count >= P.maxCount || P.pauseTimeout || (To.Ticker.has(P.ticker) ? (To.Ticker.remove(P.ticker), P.generatorPaused = true, P.dispatchEvent("generatorpaused")) : (P.ticker = To.Ticker.add(P.ticker), P.generatorPaused = false, P.dispatchEvent("generatorunpaused")));
          })), u && (P.pauseSpacebarEvent = f3.on("keydown", function(e4) {
            P.count >= P.maxCount || P.pauseTimeout || e4.keyCode == 20 && (To.Ticker.has(P.ticker) ? (To.Ticker.remove(P.ticker), P.generatorPaused = true, P.dispatchEvent("generatorpaused")) : (P.ticker = To.Ticker.add(P.ticker), P.generatorPaused = false, P.dispatchEvent("generatorunpaused")));
          }))), this.redraw = function(e4, t3) {
            return zot(e4) && (e4 = true), P.reset(), zot(t3) && (t3 = true), P.ticker && To.Ticker.remove(P.ticker), P.iterator = 0, P.count = 0, e4 && P.shape.c(), t3 ? (P.resetup(e4), setTimeout(function() {
              P.ticker && (P.ticker = To.Ticker.add(P.ticker));
            }, 100)) : P.ticker && (P.ticker = To.Ticker.add(P.ticker)), this;
          }, this.paused = false, this.pause = function(e4, t3) {
            if (zot(e4) && (e4 = true), !(P.count >= P.maxCount)) {
              if (e4 == this.paused)
                return this;
              this.paused = e4, this.pauseTimeout && this.pauseTimeout.clear(), this.paused ? P.ticker && To.Ticker.remove(P.ticker) : P.ticker ? P.ticker = To.Ticker.add(P.ticker) : M(P.pausedCount, P.maxCount), setTimeout(function() {
                x2.update();
              }, 20), t3 && (this.pauseTimeout = To.timeout(t3, function() {
                P.pause(!P.paused), P.pauseTimeout = null;
              })), P.dispatchEvent(P.paused ? "paused" : "unpaused");
            }
          }, this.outOfBounds = function(e4, t3) {
            zot(e4) && (e4 = 0), zot(t3) && (t3 = e4);
            var o3 = P.shape.stage;
            if (o3)
              return P.currentX > o3.width - e4 || P.currentX < 0 + e4 || P.currentY > o3.height - t3 || P.currentY < 0 + t3;
          }, this.stop = function() {
            P.pause(), P.pauseEvent && x2.off("stagemousedown", P.pauseEvent), P.pauseSpaceEvent && f3.off("keydown", P.pauseSpaceEvent);
          }, Object.defineProperty(this, "count", { get: function() {
            return E;
          }, set: function(e4) {
            E = e4, P.stamp && (P.changeCount = true, setTimeout(function() {
              M(E, P.maxCount);
            }));
          } }), Object.defineProperty(this, "currentX", { get: function() {
            return B;
          }, set: function(e4) {
            zon && zogy("Generator() - currentX is read only");
          } }), Object.defineProperty(this, "currentY", { get: function() {
            return S2;
          }, set: function(e4) {
            zon && zogy("Generator() - currentY is read only");
          } }), this.clone = function() {
            return P.cloneProps(new To.Generator(e3, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, b, P.group, w));
          }, !(P.dispose = function(e4, t3, o3) {
            return P.pause(), P.ticker && To.Ticker.remove(P.ticker), P.pauseEvent && x2.off("stagemousedown", P.pauseEvent), P.pauseSpacebarEvent && f3.off("keydown", P.pauseSpacebarEvent), P._noise && (P._noise = null), P.shape && P.shape.dispose(), P.drawing && P.drawing.dispose(), P.shape = P.drawing = null, o3 || P.zimContainer_dispose(), true;
          }) !== b && To.styleTransforms(this, C);
        }, To.extend(To.Generator, To.Container, ["clone", "dispose"], "zimContainer", false), To.Pen = function(p, f3, m2, t2, z, y, b, v, w, n, r2, e3, i2, a, o2, l, s5, c2, u, d, h2, g, C, x2, k, T2) {
          if (A3 = zob(To.Pen, arguments, "size, color, penType, damp, spread, borderColor, borderWidth, end, paper, nib, cache, ctrlKey, cropScale, undo, undoKeys, move, onTop, deleteable, doubleClickDelete, immediateStop, lineAlpha, lineBlendMode, frame, style, group, inherit", this))
            return A3;
          z_d("69.93"), this.zimContainer_constructor(), this.type = "Pen", this.group = k;
          var A3 = x2 === false ? {} : To.getStyle(this.type, this.group, T2);
          zot(m2) && (m2 = A3.penType != null ? A3.penType : "line");
          var P = { size: 2, color: "#333", spread: { min: 5, max: 20 }, borderColor: "#111", borderWidth: 0 }, B = { line: { size: 2 }, kitetail: { size: { min: 5, max: 20 }, color: To.series(To.pink, To.blue, To.green), borderColor: "rgba(0,0,0,.5)", borderWidth: 1 }, grass: { color: "#acd241", size: 3, spread: { min: 10, max: 30 } }, hair: { color: ["#e472c4", "#50c4b7"], size: 3, spread: { min: 20, max: 50 } }, city: { size: { min: 30, max: 70 }, spread: { min: 50, max: 200 }, color: ["#333", "#111", "#555"] }, barbwire: {}, splatter: { size: { min: 5, max: 20 }, color: "rgba(0,0,0,.5)" } };
          zot(B[m2]) && (m2 = "line"), zot(p) && (p = (A3.size != null ? A3 : zot(B[m2].size) ? P : B[m2]).size), zot(f3) && (f3 = (A3.color != null ? A3 : zot(B[m2].color) ? P : B[m2]).color), zot(t2) && (t2 = A3.damp != null ? A3.damp : 0.1), t2 === false && (t2 = 1), zot(z) && (z = (A3.spread != null ? A3 : zot(B[m2].spread) ? P : B[m2]).spread), zot(y) && (y = (A3.borderColor != null ? A3 : zot(B[m2].borderColor) ? P : B[m2]).borderColor), zot(b) && (b = (A3.borderWidth != null ? A3 : zot(B[m2].borderWidth) ? P : B[m2]).borderWidth), zot(v) && (v = A3.end != null ? A3.end : "butt"), zot(i2) && (i2 = A3.cropScale != null ? A3.cropScale : 1), zot(r2) && (r2 = A3.cache == null || A3.cache), zot(a) && (a = A3.undo != null ? A3.undo : 0), zot(o2) && (o2 = A3.undoKeys == null || A3.undoKeys), zot(l) && (l = A3.move == null || A3.move), zot(c2) && (c2 = A3.deleteable == null || A3.deleteable), zot(u) && (u = A3.doubleClickDelete == null || A3.doubleClickDelete), zot(s5) && (s5 = A3.onTop == null || A3.onTop), zot(d) && (d = A3.immediateStop != null ? A3.immediateStop : "both"), zot(h2) && (h2 = A3.lineAlpha != null ? A3.lineAlpha : 1), zot(g) && (g = A3.lineBlendMode != null ? A3.lineBlendMode : "normal"), zot(w) && (w = A3.paper != null ? A3.paper : new To.Container()), zot(n) && (n = A3.nib != null ? A3.nib.clone() : null), zot(C) && (C = A3.frame != null ? A3.frame : zdf);
          var S2 = this;
          this.dampX = new To.Damp(null, t2), this.dampY = new To.Damp(null, t2);
          var E = true;
          this.drawing = false, this.immediateStop = d, this.undoLevels = a, this.undoKeys = o2, this.move = l, this.draggable = true, this.lineAlpha = h2, this.lineBlendMode = g;
          var I2, M, O, j, L, _ = S2.shape = new To.Shape(), Y = C.stage.width, D = C.stage.height;
          S2.paperNum = 0, S2.sizeScale = 1, S2.spreadScale = 1, S2.sizeFactor = 1, S2.spreadFactor = 1, S2.stop = function() {
          }, this.added(function(e4) {
            function t3(e5) {
              S2.drawing && (S2.nib.x = e5.stageX / To.scaX, S2.nib.y = e5.stageY / To.scaY);
            }
            L = e4, S2.paper = w, Y = S2.stage.width, D = S2.stage.height, zot(n) || (S2.zimDown ? S2.nib = n.addTo(S2) : (S2.nib = n.addTo(S2.parent, S2.parent.getChildIndex(S2)), S2.nib.x = S2.x, S2.nib.y = S2.y, S2.nib.mouseEnabled = false, S2.stageDown = L.on("stagemousedown", function(e5) {
              L = e5.target.stage, S2.nibEvent = L.on("stagemousemove", t3);
            }), S2.stageUp = L.on("stagemouseup", function(e5) {
              L.off("stagemousemove", S2.nibEvent);
            }))), S2.zimDragCheck = false, S2.stop = function() {
              S2.stopCheck(true);
            }, S2.infinite = false, S2.stopCheck = function(e5) {
              if (e5)
                S2.drawing = false, S2.infinite = false;
              else {
                if (S2.infinite)
                  return;
                if (S2.zimDragCheck)
                  return;
                if (!S2.immediateStop && S2.drawing)
                  return;
              }
              S2.immediate(S2.x, S2.y), setTimeout(function() {
                var e6, t4;
                S2.drawing || (r2 ? (_.cache(-(Y * i2 - Y) / 2, -(D * i2 - D) / 2, Y * i2, D * i2), e6 = w.bitmap = new To.Bitmap(_.cacheCanvas).reg((Y * i2 - Y) / 2, (D * i2 - D) / 2).addTo(w), _.graphics.clear(), _.uncache(), _.top()) : e6 = _, 0 < S2.undoLevels && (t4 = { paper: w, line: e6 }, a.push(t4), a.length > S2.undoLevels && a.shift(), S2.dispatchEvent("recordUndo")), r2 || (_ = new To.Shape().clone().addTo(w)), S2.lastSegment = e6, (S2.lastSelected = e6).alpha = S2.lineAlpha, e6.blendMode = S2.lineBlendMode, e6.paper = w, S2.dispatchEvent("stop"), S2.dispatchEvent("change"));
              }, S2.immediateStop || e5 ? 0 : 50);
            };
            var g2 = 0;
            S2.dampX.immediate(S2.x), S2.dampY.immediate(S2.y), S2.lastX = S2.lastMidX = S2.x, S2.lastY = S2.lastMidY = S2.y, S2.ticker = To.Ticker.add(function() {
              if (S2.parent) {
                var e5 = S2.dampX.convert(E ? S2.x : S2.finishX), t4 = S2.dampY.convert(E ? S2.y : S2.finishY), o3 = S2.parent.localToLocal(e5, t4, _), n2 = To.Pick.choose(p) * S2.sizeScale * S2.sizeFactor, r3 = To.Pick.choose(z) * S2.spreadScale * S2.spreadFactor;
                if (Math.abs(S2.lastX - e5) + Math.abs(S2.lastY - t4) < 1)
                  return S2.drawing && (S2.drawing = false, S2.zimDown ? (S2.x = S2.lastX = S2.lastMidX = E ? S2.x : S2.finishX, S2.y = S2.lastY = S2.lastMidY = E ? S2.y : S2.finishY, S2.dampX.immediate(S2.x), S2.dampY.immediate(S2.y)) : (S2.x = S2.finishX = S2.lastX = S2.lastMidX = e5, S2.y = S2.finishY = S2.lastY = S2.lastMidY = t4), S2.stopCheck()), S2.lastX = S2.lastMidX = e5, void (S2.lastY = S2.lastMidY = t4);
                S2.drawing || (X = [], w.getChildIndex(_) != w.numChildren - 1 && _.top()), S2.drawing = true, S2.dispatchEvent("drawing");
                var i3, a2, l2, s6 = S2.parent.localToLocal(S2.lastX, S2.lastY, _), c3 = S2.parent.localToLocal(S2.lastMidX, S2.lastMidY, _);
                if (m2 == "splatter")
                  for (var u2 = 0; u2 <= 3; u2++) {
                    var d2 = To.rand(360) * Math.PI / 180, h3 = r3, d2 = { x: e5 + h3 * Math.cos(d2), y: t4 + h3 * Math.sin(d2) }, d2 = S2.parent.localToLocal(d2.x, d2.y, _);
                    _.graphics.mt(d2.x, d2.y).f(To.Pick.choose(f3)).dc(d2.x, d2.y, n2 / 2);
                  }
                else
                  m2 == "grass" || m2 == "hair" || m2 == "city" ? (m2 != "grass" && m2 != "hair" || (i3 = S2.lastX + (e5 - S2.lastX) / 2, a2 = S2.lastY + (t4 - S2.lastY) / 2, l2 = S2.parent.localToLocal(i3, a2, _), _.graphics.s(To.Pick.choose(f3)).ss(n2, v).mt(l2.x, l2.y).lt(l2.x + To.rand(-r3 / 4, r3 / 4), m2 == "hair" ? l2.y + r3 : l2.y - r3)), (m2 == "grass" || m2 == "hair" || m2 == "city" && g2 % 3 == 0) && _.graphics.s(To.Pick.choose(f3)).ss(n2, v).mt(o3.x, o3.y).lt(o3.x + (m2 == "city" ? 0 : To.rand(-r3 / 4, r3 / 4)), m2 == "hair" ? l2.y + r3 : o3.y - r3), g2++) : (m2 == "kitetail" && _.graphics.s(To.Pick.choose(f3)).ss(n2, v), a2 = m2 == "barbwire" ? (_.graphics.s(To.Pick.choose(f3)).ss(n2, v), i3 = S2.lastX + (e5 - S2.lastX) / 2 + To.rand(-r3, r3), S2.lastY + (t4 - S2.lastY) / 2 + To.rand(-r3, r3)) : (i3 = S2.lastX + (e5 - S2.lastX) / 2, S2.lastY + (t4 - S2.lastY) / 2), l2 = S2.parent.localToLocal(i3, a2, _), m2 != "line" && _.graphics.qt(s6.x, s6.y, l2.x, l2.y));
                0 < b && m2 != "line" && (i3 = S2.lastX + (e5 - S2.lastX) / 2, a2 = S2.lastY + (t4 - S2.lastY) / 2, l2 = S2.parent.localToLocal(i3, a2, _), _.graphics.s(To.Pick.choose(y)).ss(To.Pick.choose(b)).mt(c3.x, c3.y).qt(s6.x, s6.y, l2.x, l2.y), m2 == "splatter" && _.graphics.es()), m2 == "splatter" ? _.graphics.f(To.Pick.choose(f3)) : m2 == "kitetail" || _.graphics.s(To.Pick.choose(f3)).ss(n2, v), m2 != "grass" && m2 != "hair" && m2 != "city" && m2 != "splatter" && _.graphics.mt(c3.x, c3.y).qt(s6.x, s6.y, l2.x, l2.y), S2.lastX = e5, S2.lastY = t4, l2 && (S2.lastMidX = l2.x, S2.lastMidY = l2.y);
              }
            }), S2.upEvent = L.on("stagemouseup", function() {
              0;
            });
          }), S2.mouseChildren = false;
          var a = [], X = [];
          this.saveState = function(e4, t3, o3) {
            var n2 = e4.type == "Container" ? "paper" : "line", r3 = { paper: S2.paper };
            r3[n2] = e4, r3[n2 + "Transform"] = { x: e4.x, y: e4.y, r: e4.rotation, a: e4.alpha, rX: e4.regX, rY: e4.regY, sX: e4.scaleX, sY: e4.scaleY, skX: e4.skewX, skY: e4.skewY, v: e4.visible }, zot(t3) || zot(o3) || t3 == o3 || (r3.startLayer = t3, r3.endLayer = o3), a.push(r3), S2.dispatchEvent("recordUndo"), a.length > S2.undoLevels && a.shift();
          };
          var R, W, F2 = { x: 0, y: 0, r: 0, a: 1, rX: 0, rY: 0, sX: 1, sY: 1, skX: 0, skY: 0, v: true };
          function H(e4, t3) {
            for (var o3, n2 = a.length - 1; 0 <= n2; n2--)
              if (a[n2][e4] == t3 && a[n2][e4 + "Transform"]) {
                o3 = a[n2][e4 + "Transform"];
                break;
              }
            o3 = o3 || To.copy(F2), t3.x = o3.x, t3.y = o3.y, t3.alpha = o3.a, t3.rotation = o3.r, t3.regX = o3.rX, t3.regY = o3.rY, t3.scaleX = o3.sX, t3.scaleY = o3.sY, t3.skewX = o3.skX, t3.skewY = o3.skY, t3.visible = o3.v, e4 == "line" && r2 && (t3.regX = (Y * i2 - Y) / 2, t3.regY = (D * i2 - D) / 2);
          }
          this.undo = function() {
            var e4 = a.pop();
            if (e4) {
              if (X.push(e4), e4.clear) {
                for (var t3 = 0; t3 < e4.clear.length; t3++)
                  e4.paper.addChild(e4.clear[t3]);
                e4.paper.addChild(_);
              } else
                e4.line && e4.lineTransform ? (zot(e4.startLayer) || (_.top(), e4.paper.setChildIndex(e4.line, O)), H("line", e4.line)) : e4.line ? e4.line.removeFrom() : e4.paperTransform && H("paper", e4.paper);
              S2.lastPaper = S2.paper, e4.paper != S2.paper && (S2.paper = e4.paper, S2.dispatchEvent("paperChange")), S2.dispatchEvent("change"), !OPTIMIZE && S2.stage && S2.stage.update();
            }
          }, this.redo = function() {
            var e4, t3, o3 = X.pop();
            o3 && (a.push(o3), o3.clear ? (o3.paper.removeAllChildren(), o3.paper.addChild(_)) : o3.line && o3.lineTransform ? (zot(o3.endLayer) || (_.top(), o3.paper.setChildIndex(o3.line, j)), e4 = o3.lineTransform, t3 = o3.line) : o3.line ? o3.line.addTo(o3.paper) : o3.paperTransform && (e4 = o3.paperTransform, t3 = o3.paper), t3 && (t3.x = e4.x, t3.y = e4.y, t3.alpha = e4.a, t3.rotation = e4.r, t3.regX = e4.rX, t3.regY = e4.rY, t3.scaleX = e4.sX, t3.scaleY = e4.sY, t3.skewX = e4.skX, t3.skewY = e4.skY, t3.visible = e4.v), S2.lastPaper = S2.paper, o3.paper != S2.paper && (S2.paper = o3.paper, S2.dispatchEvent("paperChange")), S2.dispatchEvent("change"), !OPTIMIZE && S2.stage && S2.stage.update());
          }, S2.ctrlKey = false, S2.shiftKey = false, S2.ctrlKeyCheck = false, S2.zimkeydownEvent = function(e4) {
            S2.ctrlKey = e4.ctrlKey, S2.shiftKey = e4.shiftKey, e4.keyCode == 17 && l && !S2.ctrlKeyCheck && (S2.ctrlKeyCheck = true, w.noDrag(), w.drag({ onTop: s5, all: true })), S2.undoLevels <= 0 || S2.undoKeys && (e4.ctrlKey && (e4.shiftKey && e4.keyCode == 90 || e4.keyCode == 89) ? S2.redo() : e4.ctrlKey && e4.keyCode == 90 && S2.undo(), C && C.ctrlKey && S2.write && (S2.lastWrite = S2.write, S2.write = false));
          }, window.addEventListener("keydown", S2.zimkeydownEvent), S2.zimkeyupEvent = function(e4) {
            e4.keyCode == 17 && l && S2.ctrlKeyCheck && (S2.ctrlKeyCheck = false, w.noDrag(), w.drag({ onTop: s5 })), e4.ctrlKey || (S2.ctrlKey = false), e4.shiftKey || (S2.shiftKey = false), C && !C.ctrlKey && S2.write == 0 && (S2.write = S2.lastWrite);
          }, window.addEventListener("keyup", S2.zimkeyupEvent), Object.defineProperty(this, "paper", { get: function() {
            return w;
          }, set: function(e4) {
            e4.type == "Container" && (w = e4, _.addTo(w, 0, false), w.shape = _, S2.dampX.immediate(S2.x), S2.dampY.immediate(S2.y), S2.lastX = S2.lastMidX = S2.finishX = S2.x, S2.lastY = S2.lastMidY = S2.finishY = S2.y, m2 == "barbwire" && _.graphics.s(To.Pick.choose(f3)).ss(To.Pick.choose(p) * S2.sizeScale * S2.sizeFactor, v), _.graphics.mt(S2.x, S2.y), w.parent || w.addTo(S2.parent, S2.parent.getChildIndex(S2)), zot(w.paperNum) && (w.paperNum = ++S2.paperNum, c2 && w.on("mousedown", function(e5) {
              S2.lastSelected = e5.target, S2.nibEvent && S2.stage.off("stagemousemove", S2.nibEvent);
              var t3 = e5.target.paper;
              t3 && (t3 != S2.paper && (S2.paper = t3, S2.dispatchEvent("paperChange")), S2.shiftKey && (S2.ctrlKey ? S2.clear() : (e5.target.visible = false, 0 < S2.undoLevels && S2.saveState(e5.target), S2.dispatchEvent("change"))));
            }), u && w.on("dblclick", function(e5) {
              e5.target.visible = false, 0 < S2.undoLevels && S2.saveState(e5.target);
            }), l && (w.on("mousedown", function(e5) {
              L = e5.target.stage, S2.shiftKey && c2 || (I2 = e5.stageX / To.scaX, M = e5.stageY / To.scaY, _.top(), O = w.getChildIndex(e5.target));
            }), w.drag({ onTop: s5 }), w.on("pressup", function(e5) {
              c2 && S2.shiftKey || e5.target.visible != 0 && (S2.undoLevels <= 0 || (Math.abs(e5.stageX / To.scaX - I2) < 1 && Math.abs(e5.stageY / To.scaY - M) < 1 ? s5 && (_.top(), j = w.getChildIndex(e5.target), O != j && S2.saveState(e5.target, O, j)) : (S2.ctrlKey ? (S2.saveState(w), S2.dispatchEvent("paperChange")) : (_.top(), j = w.getChildIndex(e5.target), S2.saveState(e5.target, O, j)), S2.dispatchEvent("change"), _.top())));
            }))));
          } }), Object.defineProperty(this, "write", { get: function() {
            return E;
          }, set: function(e4) {
            E && e4 === false && (S2.finishX = S2.x, S2.finishY = S2.y), !E && e4 && (_.graphics.es(), _.graphics.ef(), S2.dampX.immediate(S2.x), S2.dampY.immediate(S2.y), S2.lastX = S2.lastMidX = S2.x, S2.lastY = S2.lastMidY = S2.y), E = e4;
          } }), Object.defineProperty(this, "size", { get: function() {
            return p;
          }, set: function(e4) {
            _.graphics.es(), _.graphics.ef(), p = e4, m2 != "splatter" && _.graphics.ss(To.Pick.choose(p) * S2.sizeScale * S2.sizeFactor, v);
          } }), Object.defineProperty(this, "color", { get: function() {
            return f3;
          }, set: function(e4) {
            f3 = e4, _.graphics.es(), _.graphics.ef(), m2 != "splatter" && _.graphics.s(To.Pick.choose(f3));
          } }), Object.defineProperty(this, "penType", { get: function() {
            return m2;
          }, set: function(e4) {
            m2 = e4, _.graphics.ef().es(), m2 != "splatter" ? _.graphics.s(To.Pick.choose(f3)) : _.graphics.s(To.Pick.choose(f3)).ss(To.Pick.choose(p) * S2.sizeScale * S2.sizeFactor, v);
          } }), Object.defineProperty(this, "damp", { get: function() {
            return t2;
          }, set: function(e4) {
            t2 = e4, S2.dampX.damp = t2, S2.dampY.damp = t2;
          } }), Object.defineProperty(this, "spread", { get: function() {
            return z;
          }, set: function(e4) {
            z = e4;
          } }), this.setColorRange = function(e4, t3) {
            return W = zot(t3) ? (R = S2.color, e4) : (R = zot(e4) ? S2.color : e4, t3), S2;
          };
          var N = 0;
          Object.defineProperty(S2, "colorRange", { get: function() {
            return N;
          }, set: function(e4) {
            N = e4, zot(R) || zot(W) || (S2.color = To.colorRange(R, W, e4));
          } }), Object.defineProperty(this, "borderColor", { get: function() {
            return y;
          }, set: function(e4) {
            y = e4;
          } }), Object.defineProperty(this, "borderWidth", { get: function() {
            return b;
          }, set: function(e4) {
            b = e4;
          } }), S2.setPen = function(e4) {
            S2.dampX.immediate(S2.x), S2.dampY.immediate(S2.y), S2.lastX = S2.lastMidX = S2.finishX = S2.x, S2.lastY = S2.lastMidY = S2.finishY = S2.y, zot(e4) && (e4 = m2), zot(B[e4]) && (e4 = "line"), S2.penType = m2 = e4;
            var t3, o3 = To.merge(P, B[e4]);
            for (t3 in o3)
              S2[t3] != o3[t3] && (S2[t3] = o3[t3]);
            return S2;
          }, S2.immediate = function(e4, t3) {
            return zot(e4) || (S2.x = e4, S2.dampX.immediate(S2.x), S2.lastX = S2.lastMidX = S2.finishX = S2.x), zot(t3) || (S2.y = t3, S2.dampY.immediate(S2.y), S2.lastY = S2.lastMidY = S2.finishY = S2.y), S2;
          }, S2.clear = function() {
            for (var e4 = [], t3 = 0; t3 < w.numChildren - 1; t3++)
              e4.push(w.getChildAt(t3));
            return a.push({ paper: w, clear: e4 }), a.length > S2.undoLevels && a.shift(), S2.dispatchEvent("recordUndo"), w.removeAllChildren(), _.graphics.clear(), w.addChild(_), S2.dispatchEvent("change"), S2.stage && S2.stage.update(), S2;
          }, this.deleteSegment = function(e4) {
            e4.visible = false, 0 < S2.undoLevels && S2.saveState(e4);
          }, !(S2.dispose = function(e4, t3, o3) {
            return zot(e4) && (e4 = true), window.removeEventListener("keydown", S2.zimkeydownEvent), window.removeEventListener("keyup", S2.zimkeyupEvent), L && S2.nibEvent && L.off("stagemousemove", S2.nibEvent), L && S2.stageDown && L.off("stagemousedown", S2.stageDown), L && S2.stageUp && L.off("stagemouseup", S2.stageUp), L && S2.upEvent && L.off("stagemouseup", S2.upEvent), To.Ticker.remove(S2.ticker), S2.removeAllEventListeners(), n && n.removeFrom(), e4 && (S2.shape && S2.shape.dispose(), S2.paper && S2.paper.dispose(), r2 && (S2.bitmap && S2.bitmap.dispose(), S2.bitmap = null), S2.zimContainer_dispose(o3), w = _ = S2.shape = null), true;
          }) !== x2 && To.styleTransforms(this, A3);
        }, To.extend(To.Pen, To.Container, "dispose", "zimContainer", false), To.SoundWave = function(e3, i2, a, t2, o2, n, l, r2, s5, c2) {
          var u;
          if (u = zob(To.SoundWave, arguments, "num, input, include, smoothing, min, max, operation, baseline, magnify, reduce", this))
            return u;
          z_d("69.95"), this.type = "SoundWave", zot(e3) && (e3 = 120), zot(i2) && (i2 = "mic"), zot(a) && (a = 0.1171875), zot(t2) && (t2 = 0.85), zot(o2) && (o2 = i2 == "mic" ? -80 : (i2.oscillator, -100)), zot(n) && (n = i2 == "mic" ? -40 : (i2.oscillator, -10)), zot(l) && (l = function(e4, t3) {
            return e4 * (+t3 / Math.pow(To.SoundWave.bufferLength, 0.95) + 0.5);
          }), zot(r2) && (r2 = i2 == "mic" ? 0 : (i2.oscillator, 30)), zot(s5) && (s5 = i2 == "mic" ? 1 : i2.oscillator ? 5 : 10), zot(c2) && (c2 = 0), To.SoundWave.bufferLength = 1024;
          var d, h2 = e3, g = this;
          g.baseline = r2, g.magnify = s5, g.reduce = c2, g.input = i2, d = i2.type == "Tone" || i2.type == "SynthSound" ? i2.audioContext : new (window.AudioContext || window.webkitAudioContext)();
          var p, f3, m2 = g.analyser = d.createAnalyser();
          function z(e4) {
            var r3;
            f3 && f3.disconnect(m2), (f3 = e4).connect(m2), i2 != "mic" && m2.connect(d.destination), m2.fftSize = 2 * To.SoundWave.bufferLength, (p = Math.floor(a * To.SoundWave.bufferLength / h2)) < 1 ? zog("ZIM SoundWave: include param is too small or num param is too big") : (e4 = m2.frequencyBinCount, r3 = new Uint8Array(e4), g.calculate = function() {
              m2.getByteFrequencyData(r3);
              var e5 = r3.map(l);
              if (p == 1)
                return e5;
              for (var t3 = [], o3 = 0, n2 = 0; n2 <= a * To.SoundWave.bufferLength; n2++)
                o3 += e5[n2], n2 != 0 && n2 % p == 0 && (t3.push(Math.max(0, (o3 / p - g.baseline) * g.magnify - g.reduce)), o3 = 0);
              return i2 != "mic" && (t3[0] *= 0.75, t3[1] *= 0.85, t3[2] *= 0.9, t3[t3.length - 2] *= 0.8, t3[t3.length - 1] *= 0.75), t3[t3.length - 1] *= 1.3, t3[t3.length - 2] *= 1.2, t3[t3.length - 3] *= 1.1, t3;
            }, setTimeout(function() {
              g.dispatchEvent("ready");
            }, 50));
          }
          m2.minDecibels = o2, m2.maxDecibels = n, m2.smoothingTimeConstant = t2, Object.defineProperty(this, "smoothing", { get: function() {
            return m2.smoothingTimeConstant;
          }, set: function(e4) {
            m2.smoothingTimeConstant = e4;
          } }), Object.defineProperty(this, "num", { get: function() {
            return h2;
          }, set: function(e4) {
            h2 = e4, (p = Math.floor(a * To.SoundWave.bufferLength / h2)) < 1 && zog("ZIM SoundWave: num is too big");
          } }), this.setInput = function(e4) {
            (g.input = e4) == "mic" ? (navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia, navigator.getUserMedia ? navigator.getUserMedia({ audio: true }, function(e5) {
              z(g.source = d.createMediaStreamSource(e5));
            }, function(e5) {
              zog("ZIM SoundWave: Error occured: " + e5);
            }) : zog("ZIM SoundWave: Sorry, mic not supported")) : e4.type == "Tone" ? z(e4.compressor) : e4.type == "SynthSound" ? z(e4.gain) : e4.type && e4.type == "sound" ? zog("ZIM SoundWave: pass in the result of a zim.asset('somesound').play() for the input") : z((e4 = e4.playbackResource || e4, d.createMediaElementSource(e4)));
          }, this.setInput(i2), this.dispose = function(e4) {
            return e4 && d && d.close(), m2 && m2.disconnect(), true;
          };
        }, To.extend(To.SoundWave, createjs.EventDispatcher, null, "cjsEventDispatcher", false), To.Synth = function(e3, X) {
          z_d("69.955"), this.type = "Synth", zot(e3) && (e3 = 0.3), zot(X) && (X = 220), this.volume = e3, this.frequency = X;
          var K, J = this;
          this.play = function(e4, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y, D, X2, R, W, F2, H, N, V, G, q) {
            var U = Array.prototype.slice.call(arguments);
            if (K || !window.AudioContext && !window.webkitAudioContext || ((K = new (window.AudioContext || window.webkitAudioContext)()).z = K.createBufferSource, K.createBufferSource = function(e5) {
              return e5 == null && (e5 = K.z()), e5.start = e5.start || function(e6) {
                K.noteOn(e6);
              }, e5;
            }), K) {
              for (e4 = e4 != null ? zik(e4) : 0.3, t2 = t2 != null ? zik(t2) : 0.05, o2 = o2 != null ? zik(o2) : 220, n = n != null ? zik(n) : 0, r2 = r2 != null ? zik(r2) : 0, i2 = i2 != null ? zik(i2) : 0.1, a = a != null ? zik(a) : 0, l = l != null ? zik(l) : 1, s5 = s5 != null ? zik(s5) : 0, c2 = c2 != null ? zik(c2) : 0, u = u != null ? zik(u) : 0, d = d != null ? zik(d) : 0, h2 = h2 != null ? zik(h2) : 0, g = g != null ? zik(g) : 0, p = p != null ? zik(p) : 0, f3 = f3 != null ? zik(f3) : 0, m2 = m2 != null ? zik(m2) : 0, b = b != null ? zik(b) : 0, z = z != null ? zik(z) : 1, y = y != null ? zik(y) : 0, A3 = A3 != null ? zik(A3) : 44100, P == null && (P = 99 + n * A3), B == null && (B = r2 * A3), S2 == null && (S2 = i2 * A3), E == null && (E = y * A3), I2 == null && (I2 = m2 * A3), M == null && (M = 2 * Math.PI), O == null && (O = function(e5) {
                return 0 < e5 ? 1 : -1;
              }), j == null && (j = P + E + B + S2 + I2), L == null && (L = s5 *= 500 * M / Math.pow(A3, 2)), _ == null && (_ = o2 *= (1 + 2 * t2 * Math.random() - t2) * M / A3), Y == null && (Y = O(p) * M / 4), D == null && (D = 0), X2 == null && (X2 = 0), R == null && (R = 0), W == null && (W = 0), F2 == null && (F2 = 0), H == null && (H = 0), N == null && (N = 1), V == null && (V = []), G == null && (G = K.createBufferSource()), q == null && (q = K.createBuffer(1, j, A3)), G.connect(K.destination); R < Math.floor(j); V[R++] = H)
                ++F2 > 100 * f3 && (F2 = 0, H = D * o2 * Math.sin(X2 * p * M / A3 - Y), H = a ? 1 < a ? 2 < a ? 3 < a ? Math.sin(Math.pow(H % M, 3)) : Math.max(Math.min(Math.tan(H), 1), -1) : 1 - (2 * H / M % 2 + 2) % 2 : 1 - 4 * Math.abs(Math.round(H / M) - H / M) : Math.sin(H), H = (h2 ? 1 - b + b * Math.sin(M * R / h2) : 1) * O(H) * Math.pow(Math.abs(H), l) * e4 * J.volume * (R < P ? R / P : R < P + E ? 1 - (R - P) / E * (1 - z) : R < P + E + B ? z : R < j - I2 ? (j - R - I2) / S2 * z : 0), H = I2 ? H / 2 + (R < I2 ? 0 : (R < j - I2 ? 1 : (R - j) / I2) * V[R - I2 | 0] / 2) : H), D += 1 - g + 1e9 * (Math.sin(R) + 1) % 2 * g, X2 += 1 - g + 1e9 * (Math.pow(Math.sin(R), 2) + 1) % 2 * g, o2 += s5 += 500 * c2 * M / Math.pow(A3, 3), N && ++N > d * A3 && (o2 += u * M / A3, _ += u * M / A3, N = 0), h2 && ++W > h2 * A3 && (o2 = _, s5 = L, W = 1, N = N || 1);
              q.getChannelData(0).set(V), G.buffer = q;
              var Q, Z2 = new createjs.EventDispatcher();
              return Z2.type = "SynthSound", Z2.audioContext = K, Z2.gain = K.createGain(), G.connect(Z2.gain), Z2.gain.connect(K.destination), G.start(), Z2.duration = V.length / A3, Z2.playing = true, Z2.stop = function() {
                clearTimeout(Z2.completeID), clearInterval(Z2.repeatID), Z2.gain.gain.setTargetAtTime(0, K.currentTime, 0.1), Z2.playing = false, setTimeout(function() {
                  K.close();
                }, 100);
              }, Z2.repeat = Z2.loop = function(e5, t3) {
                return !(Q = 0) === e5 && (e5 = null), zot(t3) && (t3 = 0), clearTimeout(Z2.completeID), Z2.repeatID = To.interval(function() {
                  return Z2.duration + zik(t3);
                }, function() {
                  Q++, e5 && e5 <= Q ? (Z2.dispatchEvent("complete"), Z2.repeatID.clear(), Z2.playing = false) : (Z2.dispatchEvent("loop"), J.play.apply(J, U));
                }), Z2;
              }, Z2.play = function() {
                return J.play.apply(J, U), Z2.playing = true, Z2;
              }, Z2.completeID = setTimeout(function() {
                Z2.dispatchEvent("complete");
              }, 1e3 * (V.length / A3 + 0.1)), Z2;
            }
          }, this.Tone = function(o2, t2, n, e4, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z, y) {
            if (w = zob(J.Tone, arguments, "volume, note, shape, duration, attack, release, wahAmount, wahRate, wahShape, wahThroat, wahNote, vibratoAmount, vibratoRate, vibratoShape, tremeloAmount, tremeloRate, tremeloShape, startTime, pauseOnBlur", this))
              return w;
            this.type = "Tone";
            var b, v = this;
            zot(o2) && (o2 = J.volume), zot(t2) && (t2 = J.frequency), zot(n) && (n = To.SINE), zot(r2) && (r2 = 0.02), zot(i2) && (i2 = 0.05), zot(z) && (z = 0), window.AudioContext || window.webkitAudioContext ? b = this.audioContext = new (window.AudioContext || window.webkitAudioContext)() : zon && zogy("Synth tone() needs AudioContext"), o2 = zik(o2), t2 = zik(t2), n = zik(n), e4 = zik(e4), r2 = zik(r2), i2 = zik(i2), a = zik(a), l = zik(l), s5 = zik(s5), c2 = zik(c2), u = zik(u), d = zik(d), h2 = zik(h2), g = zik(g), p = zik(p), f3 = zik(f3), m2 = zik(m2), z = zik(z);
            var w = Ao(e4);
            (J.duration = e4) && (e4 *= w == "s" ? 1 : 1e-3), z && (Ao(z), z *= w == "s" ? 1 : 1e-3), J.attack = r2, J.release = i2, J.rampDuration = 0.02, J.hush = 0.1;
            var C = this.note = this.oscillator = b.createOscillator();
            C.frequency.value = To.Synth.note(t2), To.Synth.setShape(C, n);
            var x2 = this.filter = b.createBiquadFilter();
            x2.type = "bandpass", x2.frequency.value = C.frequency.value, x2.Q.value = 0;
            var k = this.gain = C.gain = b.createGain();
            k.type = "gain", k.gain.setValueAtTime(0, b.currentTime);
            var T2, A3, w = this.compressor = b.createDynamicsCompressor();
            w.threshold.setValueAtTime(-50, b.currentTime), w.knee.setValueAtTime(40, b.currentTime), w.ratio.setValueAtTime(12, b.currentTime), w.attack.setValueAtTime(0, b.currentTime), w.release.setValueAtTime(0.25, b.currentTime), C.connect(x2), x2.connect(k), k.connect(w), w.connect(b.destination), zot(T2 = z) && (T2 = b.currentTime), zot(A3) && (A3 = J.attack), C.start(T2), T2 = zdf && new Date().getTime() - zdf.startTime < 200 ? 0.1 : J.attack, k.gain.setValueAtTime(0, b.currentTime + 0.1), k.gain.linearRampToValueAtTime(o2 * J.hush, b.currentTime + 0.1 + T2), this.stop = function(e5) {
              zot(e5) && (e5 = J.release), k && j(k.gain, 0, true, e5), M && j(M.gain, 0, true, e5), E && j(E.gain, 0, true, e5), setTimeout(function() {
                v.dispatchEvent("complete");
              }, 1e3 * (0.6 + e5 + J.rampDuration)), setTimeout(function() {
                b && !b.iamClosed && (b.iamClosed = true, b.close());
              }, 1e3 * (e5 + 1)), setTimeout(function() {
                P && v.removeWah();
              }, 1e3 * (e5 + 1));
            }, e4 && this.stop(z + e4 - 0.1);
            var P, B, S2, E, I2, M, O = this.notes = [C];
            function j(e5, t3, o3, n2) {
              zot(t3) && (t3 = 0), zot(n2) && (n2 = J.rampDuration), o3 ? (e5.cancelScheduledValues(b.currentTime), e5.linearRampToValueAtTime(e5.value = e5.value, b.currentTime + 0.02), e5.linearRampToValueAtTime(t3, b.currentTime + 0.05 + n2)) : (e5.cancelScheduledValues(b.currentTime), e5.setTargetAtTime(t3, b.currentTime, n2));
            }
            function L() {
              zot(a) && (a = 1e3), zot(l) && (l = 1), zot(s5) && (s5 = "sine"), zot(c2) && (c2 = 5), u = zot(u) ? v.oscillator.frequency.value : To.Synth.note(u), zot(B) && (B = 200), v.filter.Q.value = c2, (P = v.wah = J.oscillator(l, a / 2, s5, u + a / 2 + B)).ticker = To.Ticker.add(function() {
                v.filter.frequency.value = v.wah.amplitude;
              });
            }
            function _() {
              zot(h2) && (h2 = 5), zot(g) && (g = "sine"), zot(d) && (d = 10), S2 = v.vibrato = b.createOscillator(), (E = v.vibratoGain = b.createGain()).gain.value = 0, S2.frequency.value = h2, To.Synth.setShape(S2, g), S2.connect(E), E.connect(C.frequency), S2.start(0), E.gain.setValueAtTime(0, b.currentTime + 0.1), E.gain.linearRampToValueAtTime(d, b.currentTime + 0.1 + J.attack);
            }
            function Y() {
              zot(f3) && (f3 = 5), zot(m2) && (m2 = "sine"), I2 = v.tremelo = b.createOscillator(), (M = v.tremeloGain = b.createGain()).gain.value = 0, I2.frequency.value = f3, To.Synth.setShape(I2, m2), I2.connect(M), M.connect(k.gain), I2.start(0);
              var e5 = zdf && new Date().getTime() - zdf.startTime < 200 ? 0.1 : J.attack;
              M.gain.setValueAtTime(0, b.currentTime + 0.1), M.gain.linearRampToValueAtTime(o2 * J.hush, b.currentTime + 0.1 + e5);
            }
            this.addNote = function(e5, t3, o3, n2, r3, i3) {
              zot(n2) && (n2 = true), zot(r3) && (r3 = false), zot(e5) && (e5 = 0.1), zot(i3) && (i3 = 0);
              var a2 = { type: "Note" };
              a2._volume = e5, a2._note = To.Synth.note(t3), O.push(a2);
              t3 = a2.oscillator = b.createOscillator();
              t3.frequency.value = a2._note, t3.type = To.Synth.setShape(t3, o3);
              o3 = a2.gain = b.createGain();
              return j(o3.gain, a2._volume, true), o3.connect(n2 ? x2 : k), t3.connect(o3), E && r3 && E.connect(t3.frequency), t3.start(b.currentTime + i3), Object.defineProperty(a2, "volume", { get: function() {
                return a2._volume;
              }, set: function(e6) {
                zot(e6) || (a2._volume = zik(e6), j(a2.gain.gain, a2._volume, true));
              } }), Object.defineProperty(a2, "note", { get: function() {
                return a2._note;
              }, set: function(e6) {
                zot(e6) || (a2._note = zik(e6), j(a2.oscillator.frequency, To.Synth.note(a2._note)));
              } }), a2;
            }, this.removeNote = function(e5) {
              var t3 = O.indexOf(e5);
              return 0 <= t3 && O.splice(t3, 1), e5.oscillator.disconnect(), e5 = null, this;
            }, this.ramp = function(e5, t3) {
              j(k.gain, e5 * J.hush, true, t3);
            }, this.animate = function() {
              return arguments[0].props ? arguments[0].target = this : Array.prototype.unshift.call(arguments, this), To.animate.apply(null, arguments), this;
            }, this.wiggle = function() {
              return arguments[0].props ? arguments[0].target = this : Array.prototype.unshift.call(arguments, this), To.wiggle.apply(null, arguments), this;
            }, To.addWires(this), !a && !l && zot(s5) && zot(c2) || L(), v.removeWah = function() {
              To.Ticker.remove(P.ticker), P.dispose(), P = v.wah = null, v.filter.Q.value = 0;
            }, !d && !h2 && zot(g) || _(), v.removeVibrato = function() {
              j(E.gain, 0, true), setTimeout(function() {
                E.disconnect(), S2.disconnect(), S2.stop(), S2 = null;
              }, 1e3 * (J.rampDuration + 1));
            }, !p && !f3 && zot(m2) || Y(), v.removeTremelo = function() {
              j(M.gain, 0, true), setTimeout(function() {
                M.disconnect(), I2.disconnect(), I2.stop(), I2 = null;
              }, 1e3 * (J.rampDuration + 1));
            }, Object.defineProperty(this, "volume", { get: function() {
              return o2;
            }, set: function(e5) {
              var t3;
              zot(e5) || (I2 ? (t3 = k.gain.value ? M.gain.value / k.gain.value : o2 ? p / o2 : 0, o2 = zik(e5), o2 = To.constrain(o2, 1e-3), j(M.gain, o2 * t3 * J.hush, true)) : o2 = zik(e5), j(k.gain, o2 * J.hush, false, J.rampDuration));
            } }), this.paused = false;
            var D = o2;
            this.pause = function(e5) {
              zot(e5) && (e5 = true), e5 ? (D = v.volume, v.volume = 0) : v.volume = D;
            }, y && (zot(To.blurCheck) && To.setBlurDetect(), To.pauseOnBlur.push(this)), Object.defineProperty(this, "frequency", { get: function() {
              return X;
            }, set: function(e5) {
              zot(e5) || (X = zik(e5), j(C.frequency, e5));
            } }), Object.defineProperty(this, "note", { get: function() {
              return t2;
            }, set: function(e5) {
              zot(e5) || (t2 = zik(e5), C.frequency.value = To.Synth.note(t2));
            } }), Object.defineProperty(this, "shape", { get: function() {
              return n;
            }, set: function(e5) {
              n = zik(e5), To.Synth.setShape(C, n);
            } }), Object.defineProperty(this, "currentTime", { get: function() {
              return b.currentTime;
            }, set: function(e5) {
              zon && zogy("Synth tone() - currentTime is read only");
            } }), this.wahAmountMin = 0, this.wahAmountMax = 5e3, Object.defineProperty(this, "wahAmount", { get: function() {
              return a;
            }, set: function(e5) {
              zot(e5) || (a = zik(e5), a = To.constrain(a, J.wahAmountMin, J.wahAmountMax), zot(P) ? L() : P.gain = a / 2);
            } }), this.wahRateMin = 0, this.wahRateMax = 30, Object.defineProperty(this, "wahRate", { get: function() {
              return l;
            }, set: function(e5) {
              zot(e5) || (l = zik(e5), l = To.constrain(l, J.wahRateMin, J.wahRateMax), zot(P) ? L() : P.frequency = l);
            } }), this.wahThroatMin = 0, this.wahThroatMax = 100;
            k.gain.value;
            Object.defineProperty(this, "wahThroat", { get: function() {
              return c2;
            }, set: function(e5) {
              c2 = zik(e5), c2 = To.constrain(c2, J.wahThroatMin, J.wahThroatMax), zot(P) ? L() : x2.Q.value = c2;
            } }), Object.defineProperty(this, "wahNote", { get: function() {
              return u;
            }, set: function(e5) {
              zot(e5) || (u = zik(e5), zot(P) ? L() : P.offset = u + a / 2 + B);
            } }), Object.defineProperty(this, "wahAdjust", { get: function() {
              return B;
            }, set: function(e5) {
              zot(e5) || (B = zik(e5), zot(P) ? L() : P.offset = u + a / 2 + B);
            } }), Object.defineProperty(this, "wahShape", { get: function() {
              return s5;
            }, set: function(e5) {
              s5 = zik(e5), zot(P) ? L() : P.shape = s5;
            } }), Object.defineProperty(this, "tremeloAmount", { get: function() {
              return p;
            }, set: function(e5) {
              zot(e5) || (p = zik(e5), zot(I2) ? Y() : M.gain.setValueAtTime(p, b.currentTime));
            } }), Object.defineProperty(this, "tremeloRate", { get: function() {
              return f3;
            }, set: function(e5) {
              zot(e5) || (f3 = zik(e5), zot(P) ? Y() : I2.frequency.value = f3);
            } }), Object.defineProperty(this, "tremeloShape", { get: function() {
              return m2;
            }, set: function(e5) {
              m2 = zik(e5), zot(I2) ? Y() : To.Synth.setShape(I2, m2);
            } }), Object.defineProperty(this, "vibratoAmount", { get: function() {
              return d;
            }, set: function(e5) {
              zot(e5) || (d = zik(e5), zot(S2) ? _() : E.gain.setValueAtTime(d, b.currentTime));
            } }), Object.defineProperty(this, "vibratoRate", { get: function() {
              return h2;
            }, set: function(e5) {
              zot(e5) || (h2 = zik(e5), zot(S2) ? _() : S2.frequency.value = h2);
            } }), Object.defineProperty(this, "vibratoShape", { get: function() {
              return g;
            }, set: function(e5) {
              g = zik(e5), zot(S2) ? _() : To.Synth.setShape(S2, g);
            } });
          }, To.extend(this.Tone, createjs.EventDispatcher), this.tone = function(e4, t2, o2, n, r2, i2, a, l, s5, c2, u, d, h2, g, p, f3, m2, z) {
            return Array.prototype.unshift.call(arguments, null), new (Function.prototype.bind.apply(J.Tone, arguments))();
          }, this.Oscillator = function(e4, t2, o2, n) {
            var r2;
            if (r2 = zob(J.Oscillator, arguments, "frequency, gain, shape, offset", this))
              return r2;
            this.type = "Oscillator", zot(e4) && (e4 = 1), zot(t2) && (t2 = 10), zot(o2) && (o2 = "sine"), zot(n) && (n = 0), this.frequency = zik(e4), this.gain = zik(t2), this.shape = zik(o2), this.shape == "saw" && (this.shape = "sawtooth"), this.offset = zik(n), this.paused = false;
            var i2 = this, a = 0, l = To.Ticker.framerate;
            this.ticker = To.Ticker.add(function() {
              var e5;
              i2.paused || (e5 = 0, i2.shape == "sine" ? e5 = Math.sin(i2.frequency * (2 * Math.PI * (a / l))) : i2.shape == "square" ? e5 = (e5 = Math.sin(i2.frequency * (2 * Math.PI * (a / l)))) <= 0 ? 0 : 1 : i2.shape == "triangle" ? e5 = 2 / Math.PI * Math.asin(Math.sin(i2.frequency * Math.PI * 2 * a / l)) : i2.shape == "sawtooth" || i2.shape == "saw" ? e5 = -2 / Math.PI * Math.atan(1 / Math.tan(i2.frequency * Math.PI * a / l)) : i2.shape == "zap" && (e5 = 2 / Math.PI * Math.atan(1 / Math.tan(i2.frequency * Math.PI * a / l))), i2.amplitude = e5 * i2.gain + i2.offset, a++);
            }), this.pause = function(e5) {
              i2.paused = e5;
            }, this.dispose = function() {
              To.Ticker.remove(this.ticker);
            };
          }, this.oscillator = function(e4, t2, o2, n) {
            return Array.prototype.unshift.call(arguments, null), new (Function.prototype.bind.apply(J.Oscillator, arguments))();
          };
        }, To.Synth.notes = ["C", , "D", , "E", "F", , "G", , "A", , "B"], To.Synth.major = ["C", "D", "E", "F", "G", "A", "B", "C4"], To.Synth.minor = ["C", "D", "Eb", "F", "G", "Ab", "B", "C4"], To.Synth.shapes = ["sine", "triangle", "sawtooth", "tan", "noise", "square"], To.Synth.setShape = function(e3, t2) {
          if (!zot(e3)) {
            if (zot(t2) && (t2 = "sine"), t2 == "saw" && (t2 = "sawtooth"), typeof t2 == "number")
              t2 = (t2 = To.Synth.shapes[t2]) || "sine";
            else if (t2.real && t2.imag)
              var o2 = e3.context.createPeriodicWave(new Float32Array(t2.real), new Float32Array(t2.imag));
            else if (t2.constructor == PeriodicWave)
              o2 = t2;
            else if (typeof t2 == "string")
              if (To.Synth.shapes.indexOf(t2) < 0 && (t2 = "sine"), t2 == "noise") {
                for (var n = new Float32Array(4096), r2 = new Float32Array(4096), i2 = 1; i2 < 4096; i2 += 2)
                  r2[i2] = To.shuffle([0, 0.5, 1])[0];
                o2 = e3.context.createPeriodicWave(n, r2);
              } else
                t2 == "tan" && (t2 = "sawtooth");
            else
              t2 = "sine";
            o2 ? (e3.setPeriodicWave(o2), t2 = "custom") : e3.type = t2;
          }
        }, To.Synth.getNote = function(e3, t2) {
          return zot(t2) && (t2 = 0), e3 * Math.pow(2, t2 / 12);
        }, To.Synth.note = function(e3) {
          if (typeof e3 != "string")
            return typeof e3 != "number" && (e3 = 220), e3;
          var t2 = e3.substr(0, 1).toUpperCase(), o2 = (o2 = To.loop(e3, function(e4) {
            if (!isNaN(e4))
              return Number(e4);
          })) === true || isNaN(o2) ? 3 : o2, n = To.Synth.notes.indexOf(t2);
          n < 0 && (n = 9);
          t2 = e3.match(/b/g), e3 = e3.match(/#/g), t2 = t2 ? t2.length : 0, t2 = 12 * (o2 - 3) + n + (e3 = e3 ? e3.length : 0) - t2;
          return To.Synth.getNote(To.Synth.getNote(220, -9), t2);
        }, To.Synth.wave = function(e3, t2) {
          if (window.AudioContext || window.webkitAudioContext) {
            var o2 = new (window.AudioContext || window.webkitAudioContext)();
            if (e3.real)
              t2 = e3.imag, e3 = e3.real;
            else if (zot(t2) && zon)
              return void zogy("Synth.wave() - pass in asset('wave.json') or real and imag properties");
            return e3.constructor !== Float32Array && (e3 = new Float32Array(e3)), t2.constructor !== Float32Array && (t2 = new Float32Array(t2)), o2.createPeriodicWave(e3, t2);
          }
        }, To.Synth.drawWave = function(e3, t2, o2, n, r2, i2, a, l, s5) {
          if (h2 = zob(To.Synth.drawWave, arguments, "shape, color, thickness, backgroundColor, borderColor, borderWidth, corner, padding, paddingVertical"))
            return h2;
          e3 = zik(e3), zot(o2) && (o2 = 2), zot(t2) && (t2 = To.darker), zot(l) && (l = 8), zot(s5) && (s5 = l);
          var c2 = l, u = s5, d = new To.Container(45, 45);
          d.mouseChildren = false, zot(n) || (d.backing = new To.Rectangle(45, 45, n, r2, i2, a).addTo(d)), d.shape = new To.Shape(45, 45).addTo(d).s(t2).ss(o2);
          var h2 = 45 - 2 * c2;
          return e3 == "square" ? d.shape.mt(c2, 22.5).lt(c2, u + 3).lt(22.5, u + 3).lt(22.5, 45 - u - 3).lt(45 - c2, 45 - u - 3).lt(45 - c2, 22.5) : e3 == "triangle" ? d.shape.mt(c2, 22.5).lt(c2 + h2 / 4, u + 3).lt(c2 + 3 * h2 / 4, 45 - u - 3).lt(45 - c2, 22.5) : e3 == "sawtooth" || e3 == "saw" ? d.shape.mt(c2, 22.5).lt(22.5, u + 2).lt(22.5, 45 - u - 2).lt(45 - c2, 22.5) : e3 == "zap" ? d.shape.mt(c2, 22.5).lt(22.5, 45 - u - 2).lt(22.5, u + 2).lt(45 - c2, 22.5) : d.shape.mt(c2, 22.5).bt(22.5, -15, 22.5, 60, 45 - c2, 22.5), d.type = e3, d;
        }, To.VR = function(o2, n, r2, i2, a, e3, l, t2, s5, c2, u, d) {
          var h2, g, p, f3, m2, z, y, b, v, w, C, x2, k, T2, A3, P, B, S2, E, I2, M, O, j, L, _, Y;
          if (A3 = zob(To.VR, arguments, "content, angle, distance, parallax, parallaxAngle, damp, parallaxDamp, startAngle, negativeParallax, boundaryMarkers, swiper, holder", this))
            return A3;
          function D() {
            z.addTo(f3, null, false).setMask(f3.getChildAt(0)).pos({ y: (d.height - z.height) / 2, reg: true }), y.addTo(m2, null, false).setMask(m2.getChildAt(0)).pos({ y: (d.height - z.height) / 2, reg: true });
          }
          function X(e4, o3, n2, r3) {
            ((e4.vrMatch = o3).vrMatch = e4).cacheCanvas && o3.cache(), e4.dep && !zot(e4.depth) && (v.push(e4), w.push(o3), zot(n2) || n2.push(e4), zot(r3) || r3.push(o3), o3.dep(e4.depth)), To.loop(e4, function(e5, t3) {
              X(e5, o3.getChildAt(t3), n2, r3);
            });
          }
          function R(e4, t3) {
            To.loop(e4, function(e5) {
              e5.vrChannel = t3, e5.vrStartX = e5.x, n != 0 && r2 != 0 && (e5.vrAngle = n, e5.vrDistance = r2), i2 != 0 && r2 != 0 && (e5.vrParallax = i2 / 100, (e5.vrParallaxDistance = 0) != n && (e5.vrParallaxDamp = new To.Damp(0, l))), e5.dep(e5.depth);
            });
          }
          function W(e4) {
            h2.currentAngle = e4;
            var t3, e4 = -h2.currentAngle * r2 / n;
            h2.contentLeft.x = e4, h2.contentRight.x = e4, Math.round(h2.currentAngle) <= -n / 2 && !x2 ? ((t3 = new createjs.Event("boundaryout")).boundary = "left", x2 = true, h2.dispatchEvent(t3)) : Math.round(h2.currentAngle) >= n / 2 && !k ? ((t3 = new createjs.Event("boundaryout")).boundary = "right", k = true, h2.dispatchEvent(t3)) : Math.round(h2.currentAngle) > -n / 2 && Math.round(h2.currentAngle) < n / 2 && (t3 = new createjs.Event("boundaryin"), x2 ? (t3.boundary = "left", h2.dispatchEvent(t3), x2 = false) : k && (t3.boundary = "right", h2.dispatchEvent(t3), k = false));
          }
          function F2(e4) {
            var t3 = e4.parent.localToLocal(e4.vrStartX, 0, d), t3 = e4.vrParallaxDamp.convert(e4.vrChannel == "left" ? h2.contentLeft.x + t3.x - g / 4 : h2.contentRight.x + t3.x - g / 2 - g / 4);
            e4.depth <= 0 && !s5 && (t3 = 0), e4.vrParallaxDistance = Math.max(-r2 / n * a / 2, Math.min(r2 / n * a / 2, t3)), e4.dep(e4.depth);
          }
          function H(e4, t3) {
            e4.vrParallaxDistance = e4.depth <= 0 && !s5 ? 0 : t3, e4.dep(e4.depth);
          }
          function N(t3) {
            n != 0 && r2 != 0 ? (To.loop(v, F2), To.loop(w, F2)) : (To.loop(v, function(e4) {
              H(e4, t3);
            }), To.loop(w, function(e4) {
              H(e4, t3);
            }));
          }
          function V() {
            var e4 = Y.convert(j.currentValue);
            z.regX = z.startRegX + e4, y.regX = y.startRegX - e4;
          }
          z_d("69.98"), this.type = "VR", zdf ? (E = zdf, !zot(d) && d.getBounds && d.getBounds().width || (d = E.stage), zot(n) && (n = 0), zot(r2) && (r2 = 100), zot(e3) && (e3 = 0.5), zot(i2) && (i2 = 0), zot(a) && (a = 60), zot(l) && (l = 0.1), zot(t2) && (t2 = 0), zot(s5) && (s5 = false), zot(c2) && (c2 = true), zot(u) && (u = true), this.angle = n, this.currentAngle = t2, To.mobile() && (u = false), h2 = this, g = d.width, p = d.height, h2.zimContainer_constructor(), f3 = h2.left = new To.Container(g / 2, p, null, null, false), I2 = new To.Rectangle(g / 2, p, "rgba(0,0,0,.01)", null, null, null, null, null, false), f3.addChild(I2), m2 = h2.right = f3.clone(), h2.addChild(f3, m2), m2.x = g / 2, z = h2.contentLeft = h2.content = o2, y = h2.contentRight = o2.clone(), t2 != 0 ? b = setTimeout(D, 100) : D(), v = [], w = [], X(z, y), R(v, "left"), R(w, "right"), n != 0 && r2 != 0 && ((C = new To.Damp(180 + t2, e3)).immediate(180 + t2), k = x2 = false, E.on("deviceorientation", function(e4) {
            W(C.convert((180 < e4.rotation.z ? -180 : 180) + e4.rotation.z + t2) - 180);
          }), To.Ticker.always()), i2 != 0 && r2 != 0 && ((T2 = new To.ProportionDamp(180 - a / 2, 180 + a / 2, -a / 2, a / 2, l)).immediate(180), E.on("deviceorientation", function(e4) {
            var t3 = 0;
            n == 0 && i2 != 0 && r2 != 0 && (t3 = T2.convert((180 < e4.rotation.z ? -180 : 180) + e4.rotation.z)), N(t3);
          }), To.Ticker.always()), !u || r2 == 0 || n == 0 && i2 == 0 || h2.added(function() {
            var e4 = { swipeAngle: 0 };
            h2.swiper = new To.Swiper({ swipeOn: h2, target: e4, property: "swipeAngle", sensitivity: 0.2, damp: 0.05, factor: -1, min: -330, max: 330 });
            To.Ticker.add(function() {
              n != 0 && r2 != 0 && W(e4.swipeAngle), i2 != 0 && r2 != 0 && N(T2.convert(e4.swipeAngle + 180));
            });
          }), A3 = localStorage && localStorage.zimEyeAdjust ? Number(localStorage.zimEyeAdjust) : 0, P = A3, B = false, z.startRegX = z.regX, y.startRegX = y.regX, I2 = (S2 = this.adjuster = new To.Container(800, 300, null, null, false)).backing = new To.Rectangle(S2.width, S2.height, To.lighter, null, null, null, null, null, false).center(S2).alp(1).sha("rgba(0,0,0,.2)", 0, 0, 30), S2.strip = new To.Rectangle(S2.width, S2.height / 3, To.white, null, null, null, null, null, false).center(S2).alp(1), S2.label = new To.Label({ text: "slide to adjust center of left and right", size: 28, color: To.dark, align: "center", valign: "center" }).center(S2).pos({ y: 50, reg: true }), E = S2.close = new To.Rectangle(50, 50, To.light, null, null, null, null, null, false).addTo(S2).mov(S2.width - 70, 26), (I2 = new To.Shape(-40, -40, 80, 80, null, false)).graphics.f(To.dark).p("AmJEVIEUkTIkXkWIB4h5IEWEYIETkTIB4B3IkTESIEQERIh4B4IkRkRIkSEVg"), I2.center(E).sca(0.3), E.cursor = "pointer", E.on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function() {
            h2.hideAdjuster(), j.currentValue = (j.max - j.min) / 2 + P, h2.dispatchEvent("closed");
          }), (M = new To.Circle(30, To.dark, null, null, null, null, null, null, false).center(S2).pos({ x: S2.width / 4, reg: true })).shape.alpha = 0.2, new To.Circle(12, To.dark, null, null, null, null, null, false).center(M), (O = new To.Circle(30, To.dark, null, null, null, null, null, false).center(S2).pos({ x: S2.width / 4 * 3, reg: true })).shape.alpha = 0.2, new To.Circle(12, To.dark, null, null, null, null, null, null, false).center(O), (j = S2.slider = new To.Slider({ min: 0, max: 30, step: 1, useTicks: true, style: false }).centerReg(S2).pos({ y: S2.height - 40, reg: true })).currentValue = (j.max - j.min) / 2 + A3, L = new To.Proportion(j.min, j.max, M.x - S2.width / 4, M.x + S2.width / 4, -1), _ = new To.Proportion(j.min, j.max, O.x - S2.width / 4, O.x + S2.width / 4), j.on("change", function() {
            M.x = L.convert(j.currentValue), O.x = _.convert(j.currentValue);
          }), new To.Label("closer", 24, null, To.silver).centerReg(S2).pos({ x: j.x - 220, y: j.y, reg: true }), new To.Label("farther", 24, null, To.silver).centerReg(S2).pos({ x: j.x + 220, y: j.y, reg: true }), (h2.ok = new To.Button({ label: "OK", width: 90, height: 60, corner: 0, backgroundColor: To.blue, rollBackgroundColor: To.green, shadowColor: -1, style: false }).centerReg(S2).sca(0.8).pos({ x: S2.width - 58, y: j.y, reg: true })).on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function() {
            localStorage && (localStorage.zimEyeAdjust = j.currentValue - (j.max - j.min) / 2), V(), h2.hideAdjuster(), h2.dispatchEvent("saved"), h2.dispatchEvent("closed");
          }), (h2.zero = new To.Button({ label: ">|<", width: 90, height: 60, corner: 0, backgroundColor: To.yellow, rollBackgroundColor: To.green, shadowColor: -1, style: false }).centerReg(S2).sca(0.8).pos({ x: 58, y: j.y, reg: true })).on((zns ? To.ACTIONEVENT == "mousedown" : ACTIONEVENT == "mousedown") ? "mousedown" : "click", function() {
            j.currentValue = (j.max - j.min) / 2, M.x = L.convert(j.currentValue), O.x = _.convert(j.currentValue);
          }), Y = new To.Proportion(0, 30, -d.width / 4, d.width / 4), V(), this.showAdjuster = function() {
            if (B)
              return h2;
            B = true, M.x = L.convert(j.currentValue), O.x = _.convert(j.currentValue), P = j.currentValue - (j.max - j.min) / 2, S2.scaleTo(d, 100, 100).center(this), d.stage.update();
          }, this.hideAdjuster = function() {
            if (!B)
              return h2;
            B = false, S2.removeFrom(this), d.stage.update();
          }, this.position = function(e4, t3, o3) {
            function n2(e5) {
              e5.vrStartX = t3, e5.vrParallaxDamp && e5.vrParallaxDamp.immediate(t3), e5.mov(t3, o3);
            }
            return n2(e4), n2(e4.vrMatch), e4;
          }, this.register = function(e4) {
            if (!e4.parent || !e4.parent.vrMatch)
              return zon && zog("ZIM VR() - please only register objects already inside content container"), e4;
            var t3 = e4.clone().addTo(e4.parent.vrMatch), o3 = [], n2 = [];
            return X(e4, t3, o3, n2), R(o3, "left"), R(n2, "right"), e4;
          }, n != 0 && r2 != 0 && c2 && (h2.boundaryRight = new To.Container({ style: false }), new To.Circle(24, To.light, null, null, null, null, null, null, false).addTo(h2.boundaryRight).dep(-2), new To.Triangle(16, 16, 16, To.yellow, To.grey, null, null, null, -3, null, null, false).rot(-90).center(h2.boundaryRight).dep(-6), h2.boundaryRight.center(o2).mov(r2 / 2 + 24), h2.boundaryLeft = new To.Container({ style: false }), new To.Circle(24, To.light, null, null, null, null, null, null, false).addTo(h2.boundaryLeft).dep(-2), new To.Triangle(16, 16, 16, To.yellow, To.grey, null, null, null, -3, null, null, false).rot(90).center(h2.boundaryLeft).dep(-6), h2.boundaryLeft.center(o2).mov(-r2 / 2 - 24), h2.register(h2.boundaryRight), h2.register(h2.boundaryLeft)), this.remove = function(e4) {
            return To.loop(arguments, function(e5, t3) {
              o2.contains(t3) && (!function t4(e6) {
                var o3 = v.indexOf(e6);
                0 <= v.indexOf(e6) && (v.splice(o3, 1), w.splice(o3, 1)), To.loop(e6, function(e7) {
                  t4(e7);
                });
              }(t3), t3.parent.removeChild(t3), t3.vrMatch.parent.removeChild(t3.vrMatch));
            }), h2;
          }, this.resize = function() {
            g = d.width, p = d.height, f3.getChildAt(0).widthOnly = m2.getChildAt(0).widthOnly = g / 2, f3.getChildAt(0).heightOnly = m2.getChildAt(0).heightOnly = p, m2.x = g / 2, f3.setBounds(0, 0, g / 2, p), m2.setBounds(0, 0, g / 2, p), t2 != 0 ? (clearTimeout(b), b = setTimeout(D, 100)) : D(), S2.scaleTo(d, 100, 100).center(this, null, false);
          }) : zon && zogy("VR() - please use ZIM Frame");
        }, To.extend(To.VR, To.Container, "clone", "zimContainer", false), To.scaX = 1, To.scaY = 1, To.Frame = function(h2, g, o2, r2, n, i2, a, l, e3, t2, p, f3, m2, z, s5, c2, u, y, d, b, v, w, C, x2, k, T2, A3, P, B) {
          if (K = zob(To.Frame, arguments, "scaling, width, height, color, outerColor, assets, path, progress, rollover, touch, scrollTop, align, valign, canvasID, rollPerSecond, delay, canvasCheck, gpu, gpuObj, nextFrame, nextStage, allowDefault, loadFailObj, sensors, retina, mouseMoveOutside, captureMouse, shim, maxConnections", this))
            return K;
          z_d("83"), zon && zogg("ZIM FRAME"), this.cjsEventDispatcher_constructor(), this.type = "Frame", this.startTime = new Date().getTime();
          var S2, E, Q, I2, M, O, j, L, Z2, _, Y, D, X, R, W, F2, H, N, V, G, q, U, K, J, $, ee, te, oe, ne, re = this;
          function ie(e4) {
            re.leftMouseDown = e4.buttons === void 0 ? e4.which === 1 : e4.buttons === 1, I2 && !re.leftMouseDown && re.dispatchEvent("mouseupplus"), I2 = re.leftMouseDown;
          }
          function ae() {
            re.scale = P.stage.scaleX;
            var e4 = O.getBoundingClientRect();
            re.x = e4.x + To.scrollX(), re.y = e4.y + To.scrollY(), To.scaX = createjs.stageTransformable ? 1 : P.stage.scaleX, To.scaY = createjs.stageTransformable ? 1 : P.stage.scaleY;
          }
          function le() {
            if (P) {
              var e4 = Z2.getBounds();
              return _ = e4.width, Y = e4.height, void re.dispatchEvent("resize");
            }
            J = Date.now() + c2 * (E == "s" ? 1e3 : 1), U ? q || (q = true, G = To.Ticker.update, To.tickerFrame || (To.Ticker.update = false, To.tickerFrame = re), ge(), fe(), clearInterval(re.frameTime), re.frameTime = setInterval(function() {
              return Date.now() > J ? (clearInterval(re.frameTime), q = false, void (re == To.tickerFrame && (To.Ticker.update = G))) : (ge(), void fe());
            }, 50)) : (ge(), fe(), clearInterval(re.frameTime), re.frameTime = setInterval(function() {
              Date.now() > J ? clearInterval(re.frameTime) : (ge(), fe());
            }, c2 * (E == "s" ? 1e3 : 1) < 50 ? c2 * (E == "s" ? 1e3 : 1) + 5 : 50));
          }
          function se() {
            if (!V) {
              if (V = true, M.indexOf(h2) == -1) {
                if (zot(zid(W = h2)))
                  return void zogy("Frame - scaling: HTML tag with id=" + h2 + " must exist");
                F2 = re.tag = zid(W), re.scaling = h2 = zot(g) || zot(o2) ? "tag" : "inline", z.indexOf("myCanvas") == 0 && (z = W + "Canvas"), F2.tagName.toLowerCase() == "canvas" && ($ = true, z = W);
              } else
                re.scaling = h2;
              var e4;
              re.canvasID = z, zot(g) && (g = 500), zot(o2) && (o2 = 500), _ = g, Y = o2, zot(n) || (re.outerColor = n), ue(), he(), S2 ? (p && setTimeout(function() {
                window.scrollTo(0, 0);
              }, 50), setTimeout(t3, 100), c2 * (E == "s" ? 1e3 : 1) != 100 && setTimeout(t3, c2 * (E == "s" ? 1e3 : 1))) : (H = true, ce()), zot(i2) ? (N = true, ce()) : zot(e4 = i2.constructor != {}.constructor || i2.audioSprite || i2.id || i2.data || i2.src ? re.loadAssets({ assets: i2, path: a, progress: l, queueOnly: true }) : re.loadAssets(To.merge(i2, { progress: l, queueOnly: true }))) || !e4.on ? (zon && zogy("Frame() - load failed"), N = true, ce()) : e4.on("complete", function() {
                N = true, ce();
              });
            }
            function t3() {
              ge(), H = true, ce(), fe(), Z2 && Z2.update();
            }
          }
          function ce() {
            H && N && !R && (1 <= Z2.width && 1 <= Z2.height ? (!zot(l) && l.show && l.hide(), re.dispatchEvent("ready"), R = true, fe()) : setTimeout(function() {
              ge(), ce();
            }, 50));
          }
          function ue() {
            var e4;
            $ ? e4 = re.canvas = re.tag : (e4 = re.canvas = document.createElement("canvas")).setAttribute("id", z), e4.setAttribute("tabindex", 0);
            var t3 = To.windowWidth(), o3 = To.windowHeight(), n2 = window.devicePixelRatio || 1;
            h2 == "full" || h2 == "tag" ? k ? (re.scale = n2, e4.setAttribute("width", t3 * re.scale), e4.setAttribute("height", o3 * re.scale), h2 == "full" && (e4.style.width = t3 + "px", e4.style.height = o3 + "px")) : (e4.setAttribute("width", t3), e4.setAttribute("height", o3)) : (e4.setAttribute("width", _), e4.setAttribute("height", Y));
            o3 = zid(z + "Alternative");
            o3 && e4.appendChild(o3), $ || (h2 == "tag" || h2 == "inline" ? F2 : document.body).appendChild(e4), zot(r2) || (e4.style.backgroundColor = r2), h2 == "full" || h2 == "fit" || h2 == "fill" ? (e4.style.position = "absolute", w || (document.body.style.overflow = "hidden")) : getComputedStyle(e4.parentElement).position == "static" && (e4.parentElement.style.position = "relative");
          }
          function de() {
            A3 && (re.mouseX = 0, re.mouseY = 0, re.mousedownEvent = Z2.on("stagemousedown", function(e4) {
              re.mouseX = e4.stageX / To.scaX, re.mouseY = e4.stageY / To.scaY;
            }), re.mousemoveEvent = Z2.on("stagemousemove", function(e4) {
              re.mouseX = e4.stageX / To.scaX, re.mouseY = e4.stageY / To.scaY;
            })), window.removeEventListener("mousedown", ie, true), window.removeEventListener("mousemove", ie, true), window.removeEventListener("mouseup", ie), window.addEventListener("mousedown", ie, true), window.addEventListener("mousemove", ie, true), window.addEventListener("mouseup", ie);
          }
          function he() {
            ge(), M.indexOf(h2) == -1 || w || (re.zil = zil()), re.mousedownEvent && Z2 && Z2.off("stagemousedown", re.mousedownEvent), re.mousemoveEvent && Z2 && Z2.off("stagemousemove", re.mousemoveEvent), (Z2 = y ? new To.StageGL(z, d) : new To.Stage(z)).frame = re, Z2.mouseMoveOutside = T2, !zot(r2) && y && Z2.setClearColor(To.convertColor(r2)), Z2.setBounds(0, 0, _, Y), Z2.width = _, Z2.height = Y, k && ge(), e3 && Z2.enableMouseOver(s5), t2 && createjs.Touch.enable(Z2, false, w), w && (Z2.preventSelection = false), b && (Z2.nextStage = b.stage), v && (Z2.nextStage = v), de();
          }
          function ge() {
            if (re) {
              var e4 = zid(z), t3 = To.windowWidth(), o3 = To.windowHeight();
              if ((D = re.orientation = o3 < t3 ? "horizontal" : "vertical") != X && (X = D, re.dispatchEvent("orientation")), S2 && p && setTimeout(function() {
                window.scrollTo(0, 0);
              }, 100), e4) {
                if (h2 == "fit")
                  re.scale = _ / Y <= t3 / o3 ? o3 / Y : t3 / _;
                else if (h2 == "fill")
                  re.scale = _ / Y <= t3 / o3 ? t3 / _ : o3 / Y;
                else {
                  if (h2 == "full")
                    return e4.style.left = e4.style.top = "0px", e4.width = _ = t3, e4.height = Y = o3, Z2 && (Z2.setBounds(0, 0, _, Y), k ? (d2 = window.devicePixelRatio || 1, e4.width = t3 * d2, e4.height = o3 * d2, e4.style.width = t3 + "px", e4.style.height = o3 + "px", re.scale = d2, Z2.scaleX = Z2.scaleY = re.scale) : Z2.scaleX = Z2.scaleY = 1, Z2.tickOnUpdate = false, Z2.update(), Z2.tickOnUpdate = true, Z2.width = _, Z2.height = Y, y && Z2.updateViewport(_ / Z2.scaleX, Y / Z2.scaleY), To.scaX = createjs.stageTransformable ? 1 : Z2.scaleX, To.scaY = createjs.stageTransformable ? 1 : Z2.scaleY), w || (To.scrollX(0), To.scrollY(0)), void pe();
                  if (h2 == "tag") {
                    _ = F2.style.width == "" ? F2.getAttribute("width") || F2.offsetWidth : F2.style.width, Y = F2.style.height == "" ? F2.getAttribute("height") || F2.offsetHeight : F2.style.height, k ? (e4.width = _ * re.scale, e4.height = Y * re.scale, e4.style.width = _ + "px", e4.style.height = Y + "px", Z2 && (Z2.scaleX = Z2.scaleY = re.scale)) : (Z2 && (Z2.scaleX = Z2.scaleY = 1), e4.width = _, e4.height = Y), Z2 && (Z2.tickOnUpdate = false, Z2.update(), Z2.tickOnUpdate = true, Z2.setBounds(0, 0, _, Y), Z2.width = _, Z2.height = Y, y && Z2.updateViewport(_ / Z2.scaleX, Y / Z2.scaleY), To.scaX = createjs.stageTransformable ? 1 : Z2.scaleX, To.scaY = createjs.stageTransformable ? 1 : Z2.scaleY), F2.style.overflow = "hidden", e4.style.left = e4.style.top = "0px";
                    var n2 = e4.getBoundingClientRect();
                    return re.x = n2.x + To.scrollX(), re.y = n2.y + To.scrollY(), void pe();
                  }
                  if (h2 == "inline") {
                    if (k) {
                      if (document.styleSheets[0])
                        try {
                          for (var r3 = document.styleSheets[0].rules || document.styleSheets[0].cssRules, i3 = 0; i3 < r3.length; i3++) {
                            var a2, l2, s6 = r3[i3];
                            s6.selectorText != "#" + z || (s6 = s6.style.getPropertyValue("width")) && (a2 = zum(e4.style.width), l2 = zum(e4.style.height), e4.style.width = s6);
                          }
                        } catch (e5) {
                        }
                      var c3 = window.getComputedStyle(e4), u2 = zum(c3.getPropertyValue("width"));
                      a2 && (e4.style.height = l2 * u2 / a2 + "px", c3 = window.getComputedStyle(e4));
                      var c3 = zum(c3.getPropertyValue("height")), d2 = window.devicePixelRatio || 1;
                      re.scale = u2 / g * d2, e4.width = _ * re.scale, e4.height = Y * re.scale, e4.style.width = u2 + "px", e4.style.height = c3 + "px", Z2 && (Z2.scaleX = Z2.scaleY = re.scale);
                    } else
                      Z2 && (Z2.scaleX = Z2.scaleY = 1);
                    Z2 && (Z2.tickOnUpdate = false, Z2.update(), Z2.tickOnUpdate = true, Z2.setBounds(0, 0, _, Y), Z2.width = _, Z2.height = Y, y && Z2.updateViewport(_ / Z2.scaleX, Y / Z2.scaleY), To.scaX = createjs.stageTransformable ? 1 : Z2.scaleX, To.scaY = createjs.stageTransformable ? 1 : Z2.scaleY), e4.style.left = e4.style.top = "0px";
                    var n2 = e4.getBoundingClientRect();
                    return re.x = n2.x + To.scrollX(), re.y = n2.y + To.scrollY(), void pe();
                  }
                }
                c3 = Y * re.scale, n2 = _ * re.scale;
                k ? (d2 = window.devicePixelRatio || 1, re.scale *= d2, e4.width = _ * re.scale, e4.height = Y * re.scale, e4.style.width = _ * re.scale / d2 + "px", e4.style.height = Y * re.scale / d2 + "px", Z2 && (Z2.scaleX = Z2.scaleY = re.scale)) : (Z2 && (Z2.scaleX = Z2.scaleY = 1), e4.style.width = n2 + "px", e4.style.height = c3 + "px"), Z2 && (Z2.tickOnUpdate = false, Z2.update(), Z2.tickOnUpdate = true), re.x = f3 == "left" ? 0 : f3 == "right" ? t3 - n2 : (t3 - n2) / 2, re.y = m2 == "top" ? 0 : m2 == "bottom" ? o3 - c3 : (o3 - c3) / 2, e4.style.left = re.x + "px", e4.style.top = re.y + "px", w || (To.scrollX(0), To.scrollY(0)), pe(), Z2 && (To.scaX = createjs.stageTransformable ? 1 : Z2.scaleX, To.scaY = createjs.stageTransformable ? 1 : Z2.scaleY);
              }
            }
          }
          function pe() {
            var e4;
            h2 == "fill" ? (e4 = (zum(re.canvas.style.width) - To.windowWidth()) / 2, f3 == "left" ? (re.visibleLeft = 0, re.visibleRight = To.windowWidth() / (To.windowWidth() + 2 * e4) * _) : f3 == "right" ? (re.visibleLeft = 2 * e4 / (To.windowWidth() + 2 * e4) * _, re.visibleRight = _) : (re.visibleLeft = e4 / (To.windowWidth() + 2 * e4) * _, re.visibleRight = (To.windowWidth() + e4) / (To.windowWidth() + 2 * e4) * _), e4 = (zum(re.canvas.style.height) - To.windowHeight()) / 2, m2 == "top" ? (re.visibleTop = 0, re.visibleBottom = To.windowHeight() / (To.windowHeight() + 2 * e4) * Y) : m2 == "bottom" ? (re.visibleTop = 2 * e4 / (To.windowHeight() + 2 * e4) * Y, re.visibleBottom = Y) : (re.visibleTop = e4 / (To.windowHeight() + 2 * e4) * Y, re.visibleBottom = (To.windowHeight() + e4) / (To.windowHeight() + 2 * e4) * Y)) : (re.visibleLeft = re.visibleTop = 0, re.visibleRight = _, re.visibleBottom = Y);
          }
          function fe() {
            var e4;
            R && re && (re.dispatchEvent("resize"), e4 = new Date().getTime(), setTimeout(function() {
              80 < new Date().getTime() - e4 && (ge(), setTimeout(function() {
                re.dispatchEvent("resize"), To.OPTIMIZE || !zns && OPTIMIZE || !Z2 || h2 != "full" && h2 != "tag" || Z2.update();
              }, 100));
            }, 100), To.OPTIMIZE || !zns && OPTIMIZE || !Z2 || h2 != "full" && h2 != "tag" || Z2.update());
          }
          function me(e4) {
            e4.remove = re.eventRemove, re.altKey = e4.altKey, re.ctrlKey = e4.ctrlKey, re.metaKey = e4.metaKey, re.shiftKey = e4.shiftKey, re.dispatchEvent(e4);
          }
          function ze(e4) {
            re.altKey = e4.altKey, re.ctrlKey = e4.ctrlKey, re.metaKey = e4.metaKey, re.shiftKey = e4.shiftKey, e4.remove = re.eventRemove, re.dispatchEvent(e4);
          }
          function ye(e4) {
            re.dispatchEvent(e4);
          }
          function be(e4) {
            e4.remove = re.eventRemove, re.dispatchEvent(e4);
          }
          function ve(e4) {
            e4.remove = re.eventRemove;
            var t3 = 360 - e4.alpha;
            135 < Math.abs(t3 - oe) && Math.abs(t3 - oe) < 225 && (ne = ne == 0 ? 180 : 0), oe = t3, e4.rotation = { x: e4.beta, y: e4.gamma, z: (t3 + ne) % 360 }, re.dispatchEvent(e4);
          }
          zdf !== void 0 && zdf != null && zdf.type || (zimDefaultFrame = zdf = this), zot(u) && (u = true), !window.HTMLCanvasElement && u ? setTimeout(function() {
            re.dispatchEvent("failed");
          }, 100) : (S2 = To.mobile(), zot(h2) && (h2 = "full"), h2 == "outside" && (h2 = "fill"), zot(e3) && (e3 = !S2), zot(t2) && (t2 = true), zot(p) && (p = false), zot(f3) && (f3 = "center"), zot(m2) && (m2 = "center"), zot(z) && (z = zdf != this ? "myCanvas" + To.makeID(5) : "myCanvas"), E = Ao(c2), zot(s5) && (s5 = 20), zot(c2) && (c2 = S2 ? E == "s" ? 1 : 1e3 : E == "s" ? 0.03 : 30), zot(y) && (y = false), zot(w) && (w = false), zot(C) && (C = "circles"), this.loadFailObj = C, zot(x2) && (x2 = false), zot(k) && (k = true), this.retina = k, zot(T2) && (T2 = false), zot(A3) && (A3 = true), zot(P) && (P = false), zot(B) && (B = 10), Q = B, y && (k = false), this.retina = k, I2 = false, this.leftMouseDown = false, M = ["fit", "fill", "full"], P ? (this.shim = true, O = (P.stage.frame = this).canvas = P.canvas, this.scale = P.stage.scaleX, setTimeout(function() {
            ae(), L = function() {
              ae(), j && clearTimeout(j), j = setTimeout(ae, 50);
            }, window.addEventListener("resize", L);
          }, 20), _ = (Z2 = P.stage).getBounds() ? Z2.getBounds().width : O.width / Z2.scaleX, Y = Z2.getBounds() ? Z2.getBounds().height : O.height / Z2.scaleY, Z2.getBounds() || Z2.setBounds(0, 0, _, Y), r2 = O.style.backgroundColor, de(), ae()) : (this.scale = 1, this.x = 0, this.y = 0), V = N = H = R = false, P || (document.readyState === "interactive" || document.readyState === "complete" ? setTimeout(function() {
            se();
          }, 200) : document.addEventListener("DOMContentLoaded", se)), q = false, U = h2 == "full" && typeof InstallTrigger != "undefined", this.swapRotation = false, S2 && !window.parent && (K = isNaN(window.innerWidth) ? window.clientWidth : window.innerWidth, te = isNaN(window.innerHeight) ? window.clientHeight : window.innerHeight, this.swapRotation = (window.orientation == 0 || window.orientation == 180) && te < K || Math.abs(window.orientation) == 90 && K < te), window.addEventListener("resize", le), re.loadAssetsCount = 0, zot(To.assets) && (To.assets = {}, To.assetIDs = {}), $ = false, this.update = function() {
            ge(), re.dispatchEvent("update");
          }, this.loadAssets = function(e4, l2, t3, o3, n2, r3, i3, a2, s6, c3, u2) {
            if (zot(e4))
              return g2();
            if (zot(e4.src)) {
              var d2;
              if (d2 = zob(re.loadAssets, arguments, "assets, path, progress, xhr, time, loadTimeout, outputAudioSprite, crossOrigin, fileType, queueOnly, maxConnections"))
                return d2;
            }
            var h3 = Ao(n2 || null);
            if (!zot(t3) && t3.type == "ProgressBar" && zot(o3) && (o3 = true), Array.isArray(e4) || (e4 = [e4]), e4.length == 0)
              return g2();
            function g2() {
              var e5 = new To.Queue();
              return e5.isLoading = false, e5.loadAssetsCount = 0, setTimeout(function() {
                e5.dispatchEvent("complete"), re.dispatchEvent("complete");
              }, 10), e5;
            }
            zot(n2) && (n2 = 0), zot(r3) && (r3 = h3 == "s" ? 8 : 8e3), zot(i3) && (i3 = false), zot(a2) && (a2 = "anonymous"), zot(c3) && (c3 = false), zot(u2) && (u2 = Q);
            var p2, f4, m3, z2, y2, b2, v2, w2, C2 = false, x3 = [], k2 = /\.([^.]+)$/i, T3 = [], A4 = [], P2 = [], B2 = 0, S3 = true;
            for (W2 = 0; W2 < e4.length; W2++) {
              if ((f4 = e4[W2]).assets) {
                var E2 = [];
                e4.splice(W2, 1), Array.isArray(f4.assets) || (f4.assets = [f4.assets]);
                for (var I3 = 0; I3 < f4.assets.length; I3++)
                  To.assetIDs[f4.assets[I3]] ? E2.push({ id: f4.path + f4.assets[I3], src: f4.path + f4.assets[I3], path: null, loadTimeout: f4.loadTimeout, maxNum: f4.maxNum, noCORSonImage: f4.noCORSonImage }) : E2.push({ id: f4.assets[I3], src: f4.assets[I3], path: f4.path, loadTimeout: f4.loadTimeout, maxNum: f4.maxNum, noCORSonImage: f4.noCORSonImage });
                for (var M2 = E2.length - 1; 0 <= M2; M2--)
                  e4.splice(W2, 0, E2[M2]);
                f4 = E2[0];
              }
              if (f4.constructor == {}.constructor)
                if (f4.audioSprite) {
                  _2(f4 = (m3 = To.copy(f4)).src);
                  var O2, j2 = [];
                  for (I3 = 0; I3 < m3.audioSprite.length; I3++)
                    O2 = m3.audioSprite[I3], j2.push({ id: O2[0], startTime: Math.round(1e3 * O2[1]), duration: Math.round(1e3 * (O2[2] - O2[1])) });
                  delete m3.audioSprite, m3.data = { audioSprite: j2 }, x3.push(m3);
                } else
                  f4.data && f4.data.audioSprite ? (_2(f4 = (m3 = To.copy(f4)).src), x3.push(m3)) : f4.id ? (f4.path && (f4.path.match(/http/i) ? f4.src = f4.path + f4.src : f4.path.match(/^\//) ? (y2 = (b2 = (y2 = window.location.href).match(/(.*?)([^\/])\/[^\/]/))[1] + b2[2], f4.src = y2 + f4.src) : (z2 = window.location.pathname, b2 = ((y2 = window.location.href).split(z2)[0] + z2).match(/(.*)\//), f4.src = b2[1] + "/" + f4.path + f4.src), delete f4.path), f4.noCORSonImage ? (v2 = new Image(), P2.push(v2), v2.src = f4.src, v2.id = f4.id, v2.onload = function(e5) {
                    var t4 = e5.currentTarget, e5 = To.assets[t4.id] = new To.Bitmap(t4).expand(0), t4 = new createjs.Event("assetload");
                    t4.asset = e5, Y2.dispatchEvent(t4), c3 || ((t4 = new createjs.Event("assetload")).asset = e5, re.dispatchEvent(t4)), Y2.loadAssetsCount--, Y2.loadAssetsCount == 0 && U2();
                  }) : (To.assetIDs[f4.id] = f4.src, L2 = f4.maxNum, w2 = f4.type, v2 = zot(f4.loadTimeout) ? r3 : f4.loadTimeout, _2(f4 = f4.src), L2 = { src: f4, loadTimeout: v2 * (h3 == "s" ? 1e3 : 1), data: L2, type: w2 }, zot(s6) || (L2.type = s6), x3.push(L2))) : (f4.src.match(/fonts\.googleapis\.com/) ? A4 : T3).push(f4);
              else {
                _2(f4);
                var L2 = { src: f4, loadTimeout: r3 * (h3 == "s" ? 1e3 : 1) };
                zot(s6) || (L2.type = s6), x3.push(L2);
              }
              C2 && S3 && ((w2 = document.createElement("audio")).setAttribute("src", (zot(l2) || f4.match(/^http:\/\/|https:\/\//i) ? "" : l2) + f4), document.body.appendChild(w2), S3 = false);
            }
            function _2(e5) {
              B2++, e5.split && (e5 = e5.split("?"), (p2 = e5[0].match(k2)) && 0 <= createjs.Sound.SUPPORTED_EXTENSIONS.indexOf(p2[1]) && (C2 = true));
            }
            re.loadAssetsCount++, re.isLoading = true;
            var Y2 = new To.Queue();
            if (Y2.isLoading = true, Y2.loadAssetsCount = 0, !zot(t3) && t3.show && (t3.zimActiveLoader = Y2, t3.show()), 0 < T3.length) {
              for (var D2, X2, R2 = [], W2 = 0; W2 < T3.length; W2++)
                D2 = { src: "url(" + (!(X2 = T3[W2]).src.match(/^http/i) && l2 || "") + X2.src + ")" + (X2.type ? " format('" + X2.type + "')" : ""), family: X2.font }, X2.weight && (D2.weight = X2.weight), X2.style && (D2.style = X2.style), R2.push(D2);
              (F3 = new createjs.FontLoader({ src: R2 }, true)).on("complete", H2), F3.on("error", H2), F3.load(), Y2.loadAssetsCount++;
            }
            if (0 < A4.length)
              for (var F3, W2 = 0; W2 < A4.length; W2++)
                D2 = { src: (X2 = A4[W2]).src, type: "fontcss" }, Y2.loadAssetsCount++, (F3 = new createjs.FontLoader(D2, true)).on("complete", H2), F3.on("error", H2), F3.load();
            function H2() {
              Y2.loadAssetsCount--, Y2.loadAssetsCount == 0 && U2();
            }
            if (0 < P2.length)
              for (W2 = 0; W2 < P2.length; W2++)
                Y2.loadAssetsCount++;
            function N2(e5, t4) {
              Y2.loadAssetsCount--;
              var o4 = t4.item, e5 = To.assets[o4.id] = e5;
              e5.svg = t4.svg;
              t4 = new createjs.Event("assetload");
              t4.item = o4, t4.asset = e5, Y2.dispatchEvent(t4), c3 || ((t4 = new createjs.Event("assetload")).item = o4, t4.asset = e5, re.dispatchEvent(t4)), Y2.loadAssetsCount == 0 && U2();
            }
            var V2 = Date.now(), G2 = new createjs.Event("complete");
            if (0 < B2) {
              Y2.loadAssetsCount++;
              var q2 = Y2.preload = re.preload = new createjs.LoadQueue(o3, l2, a2);
              u2 != 1 && q2.setMaxConnections(u2), C2 && q2.installPlugin(createjs.Sound), q2.on("progress", function(e5) {
                Y2.dispatchEvent(e5), c3 || re.dispatchEvent(e5);
              }), q2.on("error", function(e5) {
                Y2.dispatchEvent(e5), c3 || re.dispatchEvent(e5);
              }), q2.on("fileload", function(e5) {
                var t4, o4 = e5.item, n3 = e5.item.type, r4 = o4.id.match(k2);
                if (n3 && n3 == "sound") {
                  var i4 = [];
                  if (o4.data && o4.data.audioSprite)
                    for (var a3 = 0; a3 < o4.data.audioSprite.length; a3++)
                      i4.push(o4.data.audioSprite[a3].id);
                  else
                    i4.push(o4.id);
                  for (a3 = 0; a3 < i4.length; a3++)
                    !function() {
                      var s7 = i4[a3];
                      t4 = To.assets[s7] = { type: "sound", path: l2, id: s7, play: function(e6, t5, o5, n4, r5, i5, a4) {
                        if (l3 = zob(To.assets[s7].play, arguments, "volume, loop, loopCount, pan, offset, delay, interrupt"))
                          return l3;
                        var l3 = { volume: e6, loop: t5, loopCount: o5, pan: n4, offset: r5, delay: i5, interrupt: a4 };
                        Ao(l3.offset, null, 30) == "s" && (l3.offset && (l3.offset *= 1e3), l3.delay && (l3.delay *= 1e3)), l3.loop === true && (l3.loop = -1), l3.loopCount && (l3.loop = l3.loopCount, delete l3.loopCount);
                        l3 = createjs.Sound.play(s7, l3);
                        return l3.getStage = function() {
                          return Z2;
                        }, l3;
                      } };
                    }();
                } else if (n3 == "image")
                  e5.result.width && (t4 = To.assets[o4.id] = new To.Bitmap(e5.result, e5.result.width, e5.result.height, null, null, o4.id), o4.avoidCORS && t4.expand(0));
                else {
                  if (n3 == "svg")
                    return Y2.loadAssetsCount++, void To.svgToBitmap(e5.result, N2, null, null, { svg: e5.result, item: o4, type: n3, ext: r4 });
                  t4 = To.assets[o4.id] = e5.result;
                }
                e5 = new createjs.Event("assetload");
                e5.item = o4, e5.asset = t4, Y2.dispatchEvent(e5), c3 || ((e5 = new createjs.Event("assetload")).item = o4, e5.asset = t4, re.dispatchEvent(e5));
              }), re.preloadEvent = q2.on("complete", function(e5) {
                G2 = e5, Y2.loadAssetsCount--, Y2.loadAssetsCount == 0 && U2();
              });
              try {
                q2.loadManifest(x3);
              } catch (e5) {
              }
            }
            function U2() {
              var e5 = Date.now();
              n2 = Math.max(0, n2 - (e5 - V2)), setTimeout(function() {
                re.loadAssetsCount--, re.loadAssetsCount <= 0 && (re.isLoading = false), Y2.isLoading = false, Y2.dispatchEvent(G2), c3 || re.dispatchEvent(G2);
              }, n2 * (h3 == "s" ? 1e3 : 1));
            }
            return Y2;
          }, this.ac = function(e4, t3, o3) {
            o3 ? (o3.commands || (o3.commands = []), o3.commands.push([e4, t3, o3])) : (t3[0].commands || (t3[0].commands = []), t3[0].commands.push([e4, t3]));
          }, window.asset = To.asset = this.asset = function(o3, e4, t3, n2) {
            if (!zot(o3)) {
              o3 = zik(o3);
              var r3 = To.assetIDs[o3];
              if (r3 && (o3 = r3), To.assets[o3])
                return To.assets[o3];
              if (n2)
                return (n2 = re.loadFailObj == "circles" ? re.makeCircles(14) : re.loadFailObj) && (n2.type = "EmptyAsset", n2.id = o3, n2.play = function() {
                  if (zon)
                    return zogy("Frame - asset(" + o3 + ") not found"), {};
                }), n2;
              var i3 = new To.Container(e4, t3);
              i3.type = e4 && t3 ? "ACWD" : "AC";
              e4 = re.loadAssets(o3), t3 = o3.split(".");
              return 0 <= createjs.Sound.SUPPORTED_EXTENSIONS.indexOf(t3[t3.length - 1]) && (i3.type = "Sound", i3.play = function() {
                return i3.playParams = arguments, i3.proxy = new createjs.EventDispatcher(), Object.defineProperty(i3.proxy, "volume", { get: function() {
                  if (i3.sound)
                    return i3.sound.volume;
                }, set: function(e5) {
                  i3.volume = e5, i3.sound && (i3.sound.volume = e5);
                } }), Object.defineProperty(i3.proxy, "pan", { get: function() {
                  if (i3.sound)
                    return i3.sound.pan;
                }, set: function(e5) {
                  i3.pan = e5, i3.sound && (i3.sound.pan = e5);
                } }), i3.proxy;
              }), e4.on("complete", function() {
                o3.id ? o3 = o3.id : o3.src && (o3 = o3.src);
                var e5 = re.asset(o3, null, null, true);
                if (To.assets[o3] = i3, e5.play)
                  i3.play = e5.play, i3.playParams && (i3.sound = i3.play.apply(null, i3.playParams), i3.volume != null && (i3.sound.volume = i3.volume), i3.pan != null && (i3.sound.pan = i3.pan), i3.sound.on("complete", function() {
                    i3.proxy.dispatchEvent("complete");
                  }));
                else if (e5.type == "Bitmap") {
                  if (e5.addTo(i3), i3.mouseChildren = false, i3.type = "Image", i3.bitmap = e5, i3.image = e5.image, i3.id = e5.id, i3.commands)
                    for (var t4 = 0; t4 < i3.commands.length; t4++)
                      (i3.commands[t4][2] ? i3 : To)[i3.commands[t4][0]].apply(i3, i3.commands[t4][1]);
                  i3.commands = null, i3.stage && i3.stage.update();
                } else
                  e5.type == "EmptyAsset" && (e5.addTo(i3), i3.mouseChildren = false, i3.type = "EmptyAsset", i3.stage && i3.stage.update());
                i3.dispatchEvent("assetLoad"), i3.dispatchEvent("complete");
              }), i3;
            }
          }, To.asset.getIDs = function() {
            var e4 = [];
            for (name in To.assetIDs)
              e4.push(name);
            return e4;
          }, To.image = function(e4, t3, o3, n2) {
            return e4.match(/^htt/i) && (e4 = "https://cors.zimjs.com/" + e4), To.asset(e4, t3, o3, n2);
          }, To.zimObjectIDs = {}, To.object = this.object = function(e4) {
            return To.zimObjectIDs[e4];
          }, To.object.getNames = function() {
            var e4 = [];
            for (name in To.zimObjectIDs)
              e4.push(name);
            return e4;
          }, window.zns || (window.asset = this.asset, window.image = To.image, window.object = this.object), this.setDefault = function() {
            return zimDefaultFrame = zdf = re;
          }, Object.defineProperty(re, "isDefault", { get: function() {
            return zdf == re;
          }, set: function(e4) {
            zogy("Frame(): isDefault is read only - see setDefault()");
          } }), Object.defineProperty(re, "stage", { get: function() {
            return Z2;
          }, set: function(e4) {
            zogy("Frame(): stage is read only - see remakeCanvas(), perhaps");
          } }), Object.defineProperty(re, "width", { get: function() {
            return _;
          }, set: function(e4) {
            zogy("Frame(): width is read only - see remakeCanvas(), perhaps");
          } }), Object.defineProperty(re, "height", { get: function() {
            return Y;
          }, set: function(e4) {
            zogy("Frame(): height is read only - see remakeCanvas(), perhaps");
          } }), Object.defineProperty(this, "color", { get: function() {
            return r2;
          }, set: function(e4) {
            zot(r2 = e4) ? zid(z).style.backgroundColor = "default" : !zot(zid(z).style.backgroundColor = r2) && y && Z2.setClearColor(To.convertColor(r2));
          } }), Object.defineProperty(this, "outerColor", { get: function() {
            return ee;
          }, set: function(e4) {
            ee = e4, zet("body").css({ backgroundColor: ee });
          } }), Object.defineProperty(re, "allowDefault", { get: function() {
            return w;
          }, set: function(e4) {
            e4 ? (Z2.preventSelection = false, document.body.style.overflow = "visible", re.zil && (window.removeEventListener("keydown", re.zil[0]), window.removeEventListener("wheel", re.zil[1]), window.removeEventListener("DOMMouseScroll", re.zil[2]), re.zil = null)) : (Z2.preventSelection = true, Z2.enableDOMEvents(true), h2 != "full" && h2 != "fit" && h2 != "fill" || (document.body.style.overflow = "hidden"), zot(re.zil) && (re.zil = zil())), w = e4, Z2.__touch && (Z2.__touch.preventDefault = !w);
          } }), te = new createjs.Event("keydown"), this.eventRemove = te.remove, window.addEventListener("keydown", me), window.addEventListener("keyup", ze), window.addEventListener("wheel", ye), x2 && window.DeviceMotionEvent && window.addEventListener("devicemotion", be), x2 && window.DeviceOrientationEvent && (ne = oe = 0, window.addEventListener("deviceorientation", ve)), this.isFullscreen = !!document.fullscreenElement, this.htmlobc = zet("html").css("backgroundColor"), this.fullscreen = function(e4) {
            if (zot(e4) && (e4 = true), e4) {
              if (document.fullscreenElement)
                return;
              var t3 = re.canvas.parent || document.body;
              t3.requestFullscreen ? t3.requestFullscreen() : t3.webkitRequestFullscreen ? t3.webkitRequestFullscreen() : t3.msRequestFullscreen && t3.msRequestFullscreen();
            } else {
              if (!document.fullscreenElement)
                return;
              document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
            }
            this.isFullscreen = e4;
          }, document.addEventListener("fullscreenchange", function() {
            re.isFullscreen = !!document.fullscreenElement, document.fullscreenElement ? (zet("html").css("backgroundColor", re.color), re.dispatchEvent("fullscreenenter")) : (zet("html").css("backgroundColor", re.htmlobc || "transparent"), re.dispatchEvent("fullscreenexit"));
          }), this.remakeCanvas = function(e4, t3) {
            if (h2 != "full") {
              zot(e4) && (e4 = _), zot(t3) && (t3 = Y), zid(z) && zid(z).parentNode.removeChild(zid(z)), _ = e4, Y = t3;
              for (var o3 = [], n2 = 0; n2 < re.stage.numChildren; n2++)
                o3.push(re.stage.getChildAt(n2));
              ue(), he();
              for (n2 = 0; n2 < o3.length; n2++)
                re.stage.addChild(o3[n2]);
            }
          }, this.follow = function(n2, e4, t3, r3, i3, a2, l2, s6, c3, u2, d2, h3, g2, p2) {
            var o3;
            return (o3 = zob(re.follow, arguments, "obj, boundary, damp, dampY, leftOffset, rightOffset, upOffset, downOffset, offsetDamp, offsetDampY, horizontal, vertical, borderLock, lag")) ? o3 : (re.followObj = null, re.followTicker && To.Ticker.remove(re.followTicker), zot(n2) ? void 0 : (n2.dirX = n2.dirY = 0, (re.followObj = n2).followDampX = null, n2.followDampY = null, zot(e4) && (e4 = new To.Boundary(0, 0, re.stage.width, re.stage.height)), re.followBoundary = e4, zot(t3) && (t3 = 0.05), zot(r3) && (r3 = t3), zot(i3) && (i3 = 0), zot(a2) && (a2 = 0), zot(l2) && (l2 = 0), zot(s6) && (s6 = 0), zot(c3) && (c3 = 0.02), zot(u2) && (u2 = c3), zot(d2) && (d2 = true), zot(h3) && (h3 = true), zot(g2) && (g2 = false), zot(p2) && (p2 = false), n2.parent ? f4() : n2.on("added", f4), n2));
            function f4() {
              var o4 = n2.parent;
              re.frameBorderLock = g2, d2 && (re.followDampX = new To.Damp(o4.x, t3), re.offsetDampX = new To.Damp(e4.x + i3 + (e4.width - i3 - a2) / 2, c3)), h3 && (re.followDampY = new To.Damp(o4.y, r3), re.offsetDampY = new To.Damp(e4.y + l2 + (e4.height - l2 - s6) / 2, u2)), re.followTicker = To.Ticker.add(function() {
                var e5, t4 = re.followBoundary;
                d2 && (e5 = t4.x + i3 + (t4.width - i3 - a2) / 2, re.followOffsetX = [p2 ? t4.x + t4.width - i3 : e5, e5, p2 ? t4.x + i3 : e5], re.followObj && (o4.x = re.followDampX.convert(re.offsetDampX.convert(re.followOffsetX[n2.motionController ? n2.motionController.dirX + 1 : 1]) - n2.x))), h3 && (e5 = t4.y + l2 + (t4.height - l2 - s6) / 2, re.followOffsetY = [p2 ? t4.y + t4.height - s6 : e5, e5, p2 ? t4.y + l2 : e5], re.followObj && (o4.y = re.followDampY.convert(re.offsetDampY.convert(re.followOffsetY[n2.motionController ? n2.motionController.dirY + 1 : 1]) - n2.y))), re.frameBorderLock && (o4.x > re.followBoundary.x && (o4.x = re.followBoundary.x), o4.y > re.followBoundary.y && (o4.y = re.followBoundary.y), o4.x < re.followBoundary.x + re.followBoundary.width - o4.width && (o4.x = re.followBoundary.x + re.followBoundary.width - o4.width), o4.y < re.followBoundary.y + re.followBoundary.height - o4.height && (o4.y = re.followBoundary.y + re.followBoundary.height - o4.height));
              });
            }
          }, this.dispose = function(e4, t3, o3) {
            return re.zil && re.zil.length && (window.removeEventListener("keydown", re.zil[0]), window.removeEventListener("wheel", re.zil[1]), window.removeEventListener("DOMMouseScroll", re.zil[2])), L && window.removeEventListener("resize", L), window.removeEventListener("resize", le), window.removeEventListener("keydown", me), window.removeEventListener("keyup", ze), window.removeEventListener("wheel", ye), window.removeEventListener("devicemotion", be), window.removeEventListener("deviceorientation", ve), window.removeEventListener("mousedown", ie, true), window.removeEventListener("mousemove", ie, true), window.removeEventListener("mouseup", ie), w || (document.body.style.overflow = "auto"), function e5(t4) {
              if (t4.dispose)
                t4.dispose();
              else {
                if (t4.removeAllEventListeners(), t4.numChildren)
                  for (var o4 = t4.numChildren - 1; 0 <= o4; o4--)
                    e5(t4.getChildAt(o4));
                t4.parent && t4.parent.removeChild(t4);
              }
            }(Z2), zid(z) && zid(z).parentNode.removeChild(zid(z)), re == To.tickerFrame && (To.tickerFrame = null), re === zdf && (zdf = null), !(re = Z2 = null);
          }, this.orange = "#f58e25", this.green = "#acd241", this.pink = "#e472c4", this.blue = "#50c4b7", this.brown = "#d1a170", this.yellow = "#ebcb35", this.purple = "#993399", this.red = "#fb4758", this.black = "#000000", this.darker = "#111111", this.dark = "#333333", this.grey = "#555555", this.gray = "#555555", this.tin = "#777777", this.silver = "#999999", this.fog = "#aaaaaa", this.mist = "#bbbbbb", this.light = "#cccccc", this.moon = "#dddddd", this.lighter = "#eeeeee", this.white = "#ffffff", this.clear = "rgba(0,0,0,0)", this.faint = "rgba(0,0,0,.01)", this.makeCircles = function(e4, t3) {
            zot(e4) && (e4 = 100);
            var o3 = [re.orange, re.green, re.pink, re.blue, re.brown, re.dark];
            if (t3) {
              (r3 = new To.Container({ style: false })).radius = e4;
              for (var n2 = 0; n2 < o3.length; n2++)
                r3.addChild(new To.Circle(r3.radius / o3.length * (o3.length - n2), o3[n2], null, null, null, null, null, null, false));
            } else {
              var r3, i3 = (r3 = new To.Shape({ style: false })).graphics;
              r3.radius = e4;
              for (n2 = 0; n2 < o3.length; n2++)
                i3.f(o3[n2]).dc(0, 0, r3.radius / o3.length * (o3.length - n2));
              r3.setBounds(-r3.radius, -r3.radius, 2 * r3.radius, 2 * r3.radius);
            }
            return r3;
          }, this.madeWith = function(e4, t3, o3, n2, r3, i3, a2) {
            zot(e4) && (e4 = To.dark), zot(t3) && (t3 = "Made with ZIM");
            var l2 = new To.Container(), s6 = l2.icon = re.makeIcon(o3, n2, r3, i3, a2).sca(0.5).alp(0.92).hov(1).addTo(l2).tap(function() {
              s6.alp(0.92), s6.stage.update(), zgo("https://zimjs.com", "_blank");
            });
            l2.label = new To.Label(t3, 16, null, e4).sca(0.7).pos(0, -19, To.CENTER, To.BOTTOM, l2);
            return l2;
          }, this.makeIcon = function(e4, t3, o3, n2, r3) {
            var i3 = new To.Container(-20, -13, 102, 120).reg(-20, -13);
            zot(e4) && (e4 = re.light), zot(t3) && (t3 = re.dark), o3 === true && (o3 = [re.silver, re.silver, re.silver, re.silver, re.silver]), new To.Rectangle(i3.width, i3.height, t3, n2, r3).loc(-20, -13, i3);
            e4 = [[o3 ? o3[0] : "#E474C3", "AieA0IAAgCIAmhlIEXAAIg5Bng", 41.7, 19.5], [o3 ? o3[1] : "#50C5B7", "AiSAzIAnhlID+AAIg5Blg", 35.3, 33.2], [o3 ? o3[2] : "#F48E25", "AiFA0IAmhnIDlAAIg5Bng", 28.9, 46.7], [o3 ? o3[3] : "#EBCD36", "Ah4AzIAmhlIDLAAIg5Blg", 22.4, 60.5], [o3 ? o3[4] : "#ABD140", "AhrA0IAAgFIAlhiICxAAIg5Bng", 16.1, 74.3], [e4, "AlGHRIAnhnIH+AAIgbBngAlGlpIAnhnIJmAAIg5Bng", 32.7, 46.5]];
            return To.loop(e4, function(e5) {
              var t4 = new To.Shape().addTo(i3);
              t4.graphics.f(e5[0]).p(e5[1]), t4.setTransform(e5[2], e5[3]);
            }), i3.mouseChildren = false, i3;
          }, this.makeCat = function(e4) {
            zot(e4) && (e4 = 246);
            var o3 = new To.Container(157.5, 246);
            To.loop([[16.95, 241.15, 0, "black", [1.5, 2, 1], "AgKAhIAVhB"], [58.65, 244.378, 0, "#A7A7A7", [3, 2, 1], "AmYAAIMxAB"], [105.64, 107.14, "#EF7988", 0, 0, "AAEArQgNAAgjghQgiggAFgIQAFgJBEgCQBEgDAGAGQAHAIgfAkQgfAlgPAAIAAAAg"], [104.84, 111.34, 0, "black", [1, 1, 1], "AABA2IAPAYQAJAPAJAGQAKAHAMAAQAbAAAXgWQAQgPAVghQAVghAAgcQAAgnglgYQgbgSgxgCIgrACAAJADIgIAzAhphVQgXAVgMAWQgKAQgIAiQgIAkAFAMQALAfAqAOQAmANAcgIQANgEANgQQALgNAGgT"], [105.05, 111.4, "#757B74", 0, 0, "AheBrQgvgRgQgeQgPgdAQgkQAZg8AEgFQAXgfA8gGQBVgKA+ATQBRAZgYBEQgVA/gnAZQgUAOgZAKQgJAJgVgbQgUgegCAAQgDAAgWAgQgWAUgZAAQgMAAgNgEg"], [86.18, 93, "black", 0, 0, "Aj7g0QiYg0i9AyQA0g3BcgRQBagQBfAaQBkAbBEBBQBNBHASBpQhgiYibg0gAFxiDQAzgdA6AMQA9AMA2A4QgHgBAAACQAAAAgBABQAAAAAAAAQgBAAgBAAQAAAAgBgBQh8gshOAzQhIAvhBCYQALjABzhCg"], [78.5, 63.23, "#705F6C", "black", [1, 1, 1], "AHAg5IgNmIIBfGpQgOgQgSgMQgjgXgPASgAKeDZQg2g4g9gMQg6gMgzAdQhzBCgLDBQBBiZBIgvQBNgzB9AsQAEACAAgCQAAgCAHABgAqdBuIAAnsIDmHEQgegMgsgBQhXgChFA3gAoEDzQA0g3BdgRQBagQBeAaQBkAbBFBBQBMBIASBpQhfiYibg1QiYg0i+Ayg"], [86.28, 98.01, "black", "black", [1, 1, 1], "AJSh/QgEADgHgDQgFgBgBAFQgNBXhNA9QhTBEhagZQgGgCgPAFQgUAHgEAAQCNAeBchOQBGg7AWhigApRhnQAFABAIAAQAGABAAAAQBFBsCVA7QCpBDCrgzQACAAAHAJQAEAFAFAJQjAAzitg/Qing9g/iHg"], [96.95, 97.3, "#0C0436", 0, 0, "AlZBJQgVgVAAgeQAAgcAVgVQAVgVAeAAQAdAAAVAVQAVAVAAAcQAAAegVAVQgVAVgdAAQgeAAgVgVgAD1AcQgVgVAAgdQAAgdAVgVQAVgVAeAAQAdAAAVAVQAVAVAAAdQAAAdgVAVQgVAVgdAAQgeAAgVgVg"], [96.88, 97.2, "#EA9424", 0, 0, "AlpBYQgbgbAAgnQAAglAbgbQAbgbAnAAQAmAAAbAbQAbAbAAAlQAAAngbAbQgbAbgmAAQgnAAgbgbgADnArQgbgbAAgmQAAgmAbgbQAbgbAmAAQAnAAAbAbQAbAbAAAmQAAAmgbAbQgbAbgnAAQgmAAgbgbg"], [96.88, 97.2, "#AFCE3A", 0, 0, "AlzBiQgggfAAgtQAAgrAggfQAfggAtAAQAsAAAgAgQAfAfAAArQAAAtgfAfQggAggsAAQgtAAgfgggADcA1QgfgfAAgsQAAgsAfgfQAgggAsAAQAtAAAfAgQAgAfAAAsQAAAsggAfQgfAggtAAQgsAAggggg"], [78.5, 64.1, 0, "black", [1, 1, 1], "AHAhCIgNmIIBfGpQgOgQgSgMQgjgXgPASgAKeDQQg2g4g9gMQg6gMgzAdQhzBCgLDBQCqAvBlhgQBJhFAGhagAoADiQAlgiBTgOQBYgOBaARQDrAsA0DTQjAAziog/Qihg+hAiIgAqdBlIAAnsIDmHEQgegMgsgBQhXgChFA3g"], [86.375, 93.9, "#EACE35", 0, 0, "AltB+Qiig9g/iIQAkghBTgOQBZgPBaARQDrAtA0DRQhWAXhSAAQhkAAhcgjgADxB2QALjABzhBQAzgeA6AMQA9ANA2A4QgGBYhJBGQhEBAhiAAQgxAAg4gQg"], [73.45, 154.83, "black", "black", [2, 1, 1], "AkjjDIByAMQB/ANBEAFQB/AICXgSIgKFzQj4hflLiNQgDgBAFiag"], [79.42, 123.62, "#A7A7A7", "black", [2, 1, 1], "AEBpxIgBgBQAYiNAeiQQA8kgAfgMQAggNBLEqQAlCVAfCXIAXARQAbAXAZAcQBQBZAZBnQAZBngUB+QgKA/gPArQgeASgrAWQhYAuhFAXQg8AUh0AWIhoASIAAQzItygCQAvhKA1hoQBqjRAjiXQAri/AOjLIAFimQgegHhTgeQhEgZhgg/IhTg7QgekPgQkUQggonBEgWQBFgWCbEtQAkBGA3B9QAbA9AYA3QASAqAQAmIgjhQIABAAIJmgYIBUACIBQAK"]], function(e5) {
              var t4 = new To.Shape().f(e5[2]).s(e5[3]).ss(e5[4] ? e5[4][0] : null, e5[4] ? e5[4][1] : null, e5[4] ? e5[4][2] : null).p(e5[5]);
              t4.setTransform(e5[0], e5[1]), t4.addTo(o3);
            }, true);
            var t3 = new To.Container();
            return o3.sca(e4 / 246).addTo(t3).mov(0, -0.4), S2 && t3.cache(), t3.mouseChildren = false, t3;
          });
        }, To.extend(To.Frame, createjs.EventDispatcher, null, "cjsEventDispatcher", false), To.Queue = function() {
          this.cjsEventDispatcher_constructor(), this.isLoading = true;
        }, To.extend(To.Queue, createjs.EventDispatcher, null, "cjsEventDispatcher"), To.colorsHex = ["#f58e25", "#acd241", "#e472c4", "#50c4b7", "#d1a170", "#ebcb35", "#993399", "#fb4758", "#000000", "#111111", "#333333", "#555555", "#555555", "#777777", "#999999", "#aaaaaa", "#bbbbbb", "#cccccc", "#dddddd", "#eeeeee", "#ffffff", "rgba(0,0,0,.01)", "rgba(0,0,0,0)"], To.colors = ["orange", "green", "pink", "blue", "brown", "yellow", "purple", "red", "black", "darker", "dark", "grey", "gray", "tin", "silver", "fog", "mist", "light", "moon", "lighter", "white", "faint", "clear"];
        for (I = 0; I < To.colors.length; I++)
          To[To.colors[I]] = To.colorsHex[I];
        String.prototype.darken = function(e3) {
          return To.darken(this, e3);
        }, String.prototype.lighten = function(e3) {
          return To.lighten(this, e3);
        }, String.prototype.toColor = function(e3, t2) {
          return To.toColor(this, e3, t2);
        }, String.prototype.toAlpha = function(e3) {
          return To.toAlpha(this, e3);
        }, To.FIT = "fit", To.FILL = "fill", To.FULL = "full", To.LEFT = "left", To.RIGHT = "right", To.CENTER = "center", To.MIDDLE = "middle", To.TOP = "top", To.BOTTOM = "bottom", To.HORIZONTAL = "horizontal", To.VERTICAL = "vertical", To.BOTH = "both", To.UP = "up", To.DOWN = "down", To.AUTO = "auto", To.GET = "get", To.POST = "post", To.LOCALSTORAGE = "localStorage", To.SOCKET = "socket", To.TO = "to", To.FROM = "from", To.SINE = "sine", To.SQUARE = "square", To.TRIANGLE = "triangle", To.SAW = "saw", To.SAWTOOTH = "saw";
        To.ZAP = "zap";
        return To.distillery = [], To.distill = function() {
          !window.zns && To && (To.DISTILL || window.DISTILL) && To.distillery.push("83.3", "83.35"), 0 < To.distillery.length ? (To.distillery = To.distillery.filter(function(e3, t2, o2) {
            return o2.indexOf(e3) === t2;
          }), zog("zim.distill() - go to https://zimjs.com/distill and enter the following:"), zog(To.distillery.join(" "))) : zogy("must set zim.DISTILL = true;");
        }, To.parseAudioSprite = function(e3, t2) {
          if (z_d("83.25"), !(zot(e3) || zot(e3.resources) || zot(e3.spritemap))) {
            var o2, n = e3.resources[0], r2 = e3.spritemap, i2 = [], n = { src: n, data: {} };
            for (I in r2)
              o2 = r2[I], i2.push({ id: I, startTime: Math.round(1e3 * o2.start), duration: Math.round(1e3 * (o2.end - o2.start)) });
            return n.data.audioSprite = i2, t2 && zog(JSON.stringify(n)), n;
          }
        }, To.previewAudioSprite = function(e3, t2, o2) {
          if (z_d("83.26"), !zot(e3)) {
            if (zot(t2) && (t2 = 3), zot(o2)) {
              if (zot(zdf))
                return;
              (o2 = zdf).stage;
            }
            var n = o2.width, e3 = (o2.height, e3), r2 = [], i2 = [];
            if (e3.constructor == {}.constructor) {
              e3.resources && (e3 = To.parseAudioSprite(e3)), e3.audioSprite ? To.loop(e3.audioSprite, function(e4) {
                r2.push(e4[0].substr(0, t2)), i2.push(e4[0]);
              }) : e3.data && e3.data.audioSprite && To.loop(e3.data.audioSprite, function(e4) {
                r2.push(e4.id.substr(0, t2)), i2.push(e4.id);
              });
              var a = new To.Tabs({ tabs: r2, width: n, currentEnabled: true }).addTo();
              return a.on("change", function() {
                o2.asset(i2[a.selectedIndex]).play();
              }), a;
            }
          }
        }, To.svgToBitmap = function(e3, t2, o2, n, r2) {
          var i2, a, l, s5, c2, u;
          z_d("83.27"), zot(e3.draggable) || (a = new DOMParser(), e3 = (e3 = e3.innerHTML ? a.parseFromString(e3.innerHTML, "text/xml") : e3).getElementsByTagName("svg") ? e3.getElementsByTagName("svg")[0] : null), XMLSerializer || !zon ? ((i2 = typeof e3 == "string" ? e3 : new XMLSerializer().serializeToString(e3)) && (1 < (l = i2.split(">")[0]).length && l.split(/width/i).length == 1 && (e3 = a = 100, 1 < (l = l.split(/viewBox/i)).length && (!(l = l[1].split('"')[1]) || 1 < (l = l.split(" ")).length && (a = l[l.length - 2], e3 = l[l.length - 1])), i2 = i2.replace(/svg /i, 'svg  width="' + a + '" height="' + e3 + '" ')), i2.match(/xmlns/i) || (i2 = i2.replace(/svg /i, "svg  xmlns='http://www.w3.org/2000/svg' "))), s5 = self.URL || self.webkitURL || self, (c2 = new Image()).onload = function() {
            var e4 = new To.Bitmap(c2, o2, n);
            t2(e4, r2), s5.revokeObjectURL(u);
          }, u = s5.createObjectURL(new document.Blob([i2], { type: "image/svg+xml" })), c2.src = u) : zog("ZIM svgToBitmap() - sorry, not supported in Browser");
        }, To;
      }(zim2 || {})).fastFrame = function(e2, t2) {
        if (z_d("83.355"), createjs = e2, zot(zdf))
          return t2.frame = new zim2.Frame({ shim: { stage: t2, canvas: t2.canvas } }), zimDefaultFrame = zdf = t2.frame, zim2.scaX = createjs.stageTransformable ? 1 : t2.scaleX, zim2.scaY = createjs.stageTransformable ? 1 : t2.scaleY, t2.frame;
      }, zim2.addWires = function(e2) {
        return z_d("83.365"), e2.wire = function() {
          return Array.prototype.unshift.call(arguments, e2), zim2.wire.apply(null, arguments), e2;
        }, e2.noWire = function() {
          return Array.prototype.unshift.call(arguments, e2), zim2.noWire.apply(null, arguments), e2;
        }, e2.wired = function() {
          return Array.prototype.unshift.call(arguments, e2), zim2.wired.apply(null, arguments), e2;
        }, e2.noWired = function() {
          return Array.prototype.unshift.call(arguments, e2), zim2.noWired.apply(null, arguments), e2;
        }, e2;
      };
      var ZIMONON = !(zim2.setBlurDetect = function() {
        z_d("83.36"), zim2.blurCheck = true, zim2.pauseAnimateOnBlur = true, zim2.pauseOnBlur = [], zim2.blurDetect = function() {
          var t2, o2, e2 = { hidden: "visibilitychange", webkitHidden: "webkitvisibilitychange", mozHidden: "mozvisibilitychange", msHidden: "msvisibilitychange" };
          for (t2 in e2)
            if (t2 in document) {
              o2 = e2[t2];
              break;
            }
          return function(e3) {
            return e3 && document.addEventListener(o2, e3), !document[t2];
          };
        }(), zim2.blurDetect(function() {
          if (zim2.blurDetect())
            setTimeout(function() {
              if (zim2.pauseOnBlur)
                for (var e3 = 0; e3 < zim2.pauseOnBlur.length; e3++)
                  (t3 = zim2.pauseOnBlur[e3]).pauseOnBlurPaused || t3.pause(false);
              if (zim2.pauseAnimateOnBlur && zim2.animatedObjects)
                for (e3 = 0; e3 < zim2.animatedObjects.objects.length; e3++) {
                  var t3 = zim2.animatedObjects.objects[e3], o2 = zim2.copy(t3.tweenStates);
                  if (t3.tweenStates)
                    if (zot(o2.all) || o2.all)
                      for (id in t3.pauseAnimate(false), o2)
                        id != "all" && (o2[id] || t3.pauseAnimate(true, id));
                    else
                      for (id in t3.pauseAnimate(true), o2)
                        id != "all" && o2[id] && t3.pauseAnimate(false, id);
                  else
                    t3.pauseAnimate(false);
                  t3.type == "Sprite" && (t3.paused = true);
                }
            }, 300);
          else {
            if (zim2.pauseOnBlur)
              for (var e2 = 0; e2 < zim2.pauseOnBlur.length; e2++) {
                var t2 = zim2.pauseOnBlur[e2];
                t2.pauseOnBlurPaused = t2.paused, t2.pause(true);
              }
            zim2.pauseAnimateOnBlur && zim2.animatedObjects && zim2.pauseAnimate(true, "pauseOnBlur");
          }
        });
      }), zim2 = function(m2) {
        return m2.ZIMON = { stringify: function(i2, a) {
          if (z_d("83.39"), !zot(i2)) {
            if (ZIMONON)
              return function o2(n, e2, t2) {
                if (zot(n))
                  return;
                {
                  var r2;
                  Array.isArray(n) ? m2.loop(n, function(e3, t3) {
                    o2(e3, n, t3);
                  }) : n.constructor == {}.constructor ? m2.loop(n, function(e3, t3) {
                    o2(t3, n, e3);
                  }) : n.type ? (r2 = { zimon: n.type }, n.arguments && (r2.args = Array.prototype.slice.call(n.arguments), o2(r2.args)), n.type == "series" && (r2.args = Array.prototype.slice.call(n.array), o2(r2.args)), a && a[n.type] && a[n.type].props && (r2.props = [], m2.loop(a[n.type].props, function(e3) {
                    r2.props.push(n[e3]);
                  })), e2 ? e2[t2] = r2 : i2 = r2) : typeof n != "string" && typeof n != "number" && typeof n != "boolean" && n !== null && zon && zogy("ZIMON - potentially bad JSON value" + n);
                }
              }(i2 = m2.copy(i2)), JSON.stringify({ obj: i2, key: a, zimon: 1, info: "https://zimjs.com/zimon/" });
            zon && zogy("ZIMON - set ZIMONON=true before using ZIMON.stringify()");
          }
        }, parse: function(e2, c) {
          if (z_d("83.39"), !zot(e2)) {
            var e2 = JSON.parse(e2), u = e2.obj, c = e2.key;
            return function o2(n, e3, t2) {
              if (zot(n))
                return;
              {
                let r3 = function(t3) {
                  try {
                    return Function("return(" + t3 + ")")();
                  } catch (e4) {
                    return zon && zogy("ZIMON - bad function scope or name: " + t3), null;
                  }
                };
                var r2 = r3;
                var i2, a, l, s4;
                Array.isArray(n) ? m2.loop(n, function(e4, t3) {
                  o2(e4, n, t3);
                }) : zot(n.zimon) && n.constructor == {}.constructor ? m2.loop(n, function(e4, t3) {
                  o2(t3, n, e4);
                }) : n.zimon && (i2 = n.zimon, l = "", c && (c[i2] && c[i2].scope ? l = c[i2].scope + "." : c.scope && (l = c.scope + ".")), a = r3(l + i2), zot(l = n.args) && (l = []), o2(l), s4 = n.type == "series" ? m2.series(l) : a ? new (a.bind.apply(a, [null].concat(Array.prototype.slice.call(l))))() : null, e3 ? e3[t2] = s4 : u = s4, c && c[i2] && c[i2].props && s4 && m2.loop(c[i2].props, function(e4, t3) {
                  zot(n.props[t3]) || (s4[e4] = n.props[t3]);
                }));
              }
            }(u), u;
          }
        } }, m2.Wonder = function(o2, n, r2, i2, e2) {
          var t2, a, l, s4, c, u, d, h2, g;
          if (t2 = zob(m2.Wonder, arguments, "wid, client, app, notes, server", this))
            return t2;
          function p() {
            0 < l.length && (m2.async(e2 + "?wonder=" + JSON.stringify(l)), l = [], c++);
          }
          function f3(e3, t3) {
            if (!zot(e3))
              return !a[t3 + "sOff"][e3];
            zog("zim.Wonder " + t3 + " - please provide a keyword");
          }
          z_d("82"), zot(o2) ? zog("zim.Wonder() - please provide Wonder ID (see https://zimjs.com/wonder/)") : (zot(e2) && (e2 = "https://wonder.zimjs.org/wonder"), a = this, zot(m2.wonderSession) && (m2.wonderSession = "W" + m2.rand(1e5, 999999)), l = [], s4 = setInterval(p, 1e3), c = 0, d = setInterval(function() {
            28 < c && (l.push({ id: o2, c: n, a: r2, n: i2, k: u, t: "e", v: "frequency max - terminated", s: m2.wonderSession }), zog("zim.Wonder() - frequency max - terminated"), a.dispose()), c = 0;
          }, 3e4), this.countsOff = {}, this.timesOff = {}, this.ordersOff = {}, this.count = function(e3) {
            f3(e3, "count") && (u = e3, l.push({ id: o2, c: n, a: r2, n: i2, k: e3, t: "c", v: 1, s: m2.wonderSession }));
          }, h2 = {}, this.timeStart = function(e3) {
            f3(e3, "time") && (a.timeEnd(e3), h2[u = e3] = new Date().getTime());
          }, g = {}, this.timePause = function(e3) {
            f3(e3, "time") && (g[e3] || (g[e3] = new Date().getTime()));
          }, this.timeUnpause = function(e3) {
            var t3;
            f3(e3, "time") && g[e3] && (t3 = new Date().getTime() - g[e3], h2[e3] && (h2[e3] += t3), delete g[e3]);
          }, this.timeEnd = function(e3) {
            var t3;
            f3(e3, "time") && h2[e3] && (t3 = g[e3] || new Date().getTime(), t3 = Math.round((t3 - h2[e3]) / 1e3), delete g[e3], delete h2[e3], l.push({ id: o2, c: n, a: r2, n: i2, k: e3, t: "t", v: t3, s: m2.wonderSession }));
          }, this.order = function(e3, t3) {
            f3(e3, "order") && (u = e3, zot(t3) ? zog("zim.Wonder order() - please provide an item") : l.push({ id: o2, c: n, a: r2, n: i2, k: e3, t: "o", v: t3, s: m2.wonderSession }));
          }, this.countOff = function(e3) {
            a.countsOff[e3] = 1;
          }, this.countOn = function(e3) {
            delete a.countOff[e3];
          }, this.timeOff = function(e3) {
            a.timesOff[e3] = 1;
          }, this.timeOn = function(e3) {
            delete a.timesOff[e3];
          }, this.orderOff = function(e3) {
            a.ordersOff[e3] = 1;
          }, this.orderOn = function(e3) {
            delete a.ordersOff[e3];
          }, this.dispose = function(e3, t3, o3) {
            return p(), clearInterval(s4), clearInterval(d), true;
          });
        }, m2.VERSION = "cat/04/zim", m2.getLatestVersions = function(t2) {
          z_d("82.2");
          m2.async("https://zimjs.com/live/getLatestVersions.php", function(e2) {
            t2(JSON.parse(e2));
          }, "returnLatestVersions");
        }, m2.PWA = function(t2, e2, o2, n, r2, i2, a) {
          var l, s4;
          if (l = zob(m2.PWA, arguments, "call, label, backgroundColor, color, backdropColor, pane, noScale", this))
            return l;
          z_d("82.4"), this.cjsEventDispatcher_constructor(), this.type = "PWA";
          var c = this;
          function u() {
            this.pane = s4 = i2.show(), s4.on("close", function() {
              t2 && t2.constructor === Function && t2(), c.scaleEvent && e3.off("resize", c.scaleEvent), c.dispatchEvent("ready");
            });
            var e3 = e3 || zimDefaultFrame;
            e3 && !a && (s4.scaleTo(e3.stage, 105).center(), e3.scaling != "full" && e3.scaling != "tag" || (c.scaleEvent = e3.on("resize", function() {
              s4.scaleTo(e3.stage, 105).center();
            })), e3.stage.update());
          }
          zot(e2) && (e2 = new m2.Label({ text: "Please add to home screen as an app", align: LEFT, lineHeight: 44, color: n })), zot(o2) && (o2 = m2.yellow), zot(i2) && ((i2 = new m2.Pane({ width: 1200, height: 230, label: e2, backgroundColor: o2, backdropColor: r2 })).label.align = LEFT, i2.label.center(), i2.label.mov(40), new m2.Shape().s(dark).ss(3, 1, 0, 3).p("AAAj0IAAFJAA8hoIBuAAIAAFdIlTAAIAAldIBuAA").sca(1.6).center(i2).mov(-i2.label.width / 2 - 20, -10), new m2.Shape().s(dark).ss(3, 1, 0, 3).p("AhGAlIBGhGIBHBG").sca(1.6).center(i2).mov(-i2.label.width / 2 - 20, -48)), m2.mobile() && !(window.matchMedia("(display-mode: standalone)").matches || window.navigator.standalone || document.referrer.includes("android-app://")) ? u() : (t2 && t2.constructor === Function && t2(), setTimeout(function() {
            c.dispatchEvent("ready");
          }, 20)), this.show = function() {
            return u(), this;
          };
        }, m2.extend(m2.PWA, createjs.EventDispatcher, null, "cjsEventDispatcher", false), m2;
      }(zim2 || {});
      window.zns || zimplify();
      zim2.getGlobals = function() {
        return [zog, zid, zss, zgo, zum, zot, zop, zil, zet, zob, zik, zta, zor, zogr, zogb, zogg, zogo, zogp, zogy, zogd, zogl];
      };
      return zim2;
    };
  }
});

// .svelte-kit/output/server/entries/endpoints/zimjs/initzim.js
var initzim_exports = {};
__markAsModule(initzim_exports);
var makeZIM, zim;
var init_initzim = __esm({
  ".svelte-kit/output/server/entries/endpoints/zimjs/initzim.js"() {
    require_create();
    makeZIM = require_zim();
    zim = makeZIM();
    zim.getGlobals();
  }
});

// .svelte-kit/output/server/entries/endpoints/api/pokemon/index.js
var pokemon_exports = {};
__export(pokemon_exports, {
  get: () => get
});
async function get({ params }) {
  const url = "https://pokeapi.co/api/v2/pokemon?limit=898/";
  const res = await fetch(url);
  const data2 = await res.json();
  const pokemon = data2.results.map((data22, index) => {
    return {
      name: data22.name,
      id: index + 1,
      image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`
    };
  });
  return {
    status: 200,
    body: pokemon
  };
}
var init_pokemon = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/pokemon/index.js"() {
  }
});

// .svelte-kit/output/server/entries/endpoints/api/pokemon/_id_.js
var id_exports = {};
__export(id_exports, {
  get: () => get2
});
async function get2({ params }) {
  const id2 = params.id;
  const url = `https://pokeapi.co/api/v2/pokemon/${id2}`;
  const res = await fetch(url);
  const pokeman = await res.json();
  console.log(pokeman);
  return {
    status: 200,
    body: pokeman
  };
}
var init_id = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/pokemon/_id_.js"() {
  }
});

// node_modules/@node-redis/client/dist/lib/commands/APPEND.js
var require_APPEND = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/APPEND.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, value) {
      return ["APPEND", key, value];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BITCOUNT.js
var require_BITCOUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BITCOUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, range) {
      const args = ["BITCOUNT", key];
      if (range) {
        args.push(range.start.toString(), range.end.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BITFIELD.js
var require_BITFIELD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BITFIELD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, operations) {
      const args = ["BITFIELD", key];
      for (const options of operations) {
        switch (options.operation) {
          case "GET":
            args.push("GET", options.type, options.offset.toString());
            break;
          case "SET":
            args.push("SET", options.type, options.offset.toString(), options.value.toString());
            break;
          case "INCRBY":
            args.push("INCRBY", options.type, options.offset.toString(), options.increment.toString());
            break;
          case "OVERFLOW":
            args.push("OVERFLOW", options.behavior);
            break;
        }
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/generic-transformers.js
var require_generic_transformers = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/generic-transformers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformCommandReply = exports.CommandCategories = exports.CommandFlags = exports.pushOptionalVerdictArgument = exports.pushVerdictArgument = exports.pushVerdictArguments = exports.pushEvalArguments = exports.transformPXAT = exports.transformEXAT = exports.transformGeoMembersWithReply = exports.GeoReplyWith = exports.pushGeoSearchArguments = exports.pushGeoCountArgument = exports.transformSortedSetWithScoresReply = exports.transformSortedSetMemberNullReply = exports.transformStreamsMessagesReply = exports.transformStreamMessagesReply = exports.transformTuplesReply = exports.transformStringNumberInfinityArgument = exports.transformNumberInfinityArgument = exports.transformNumberInfinityNullArrayReply = exports.transformNumberInfinityNullReply = exports.transformNumberInfinityReply = exports.pushScanArguments = exports.transformBooleanArrayReply = exports.transformBooleanReply = void 0;
    function transformBooleanReply(reply) {
      return reply === 1;
    }
    exports.transformBooleanReply = transformBooleanReply;
    function transformBooleanArrayReply(reply) {
      return reply.map(transformBooleanReply);
    }
    exports.transformBooleanArrayReply = transformBooleanArrayReply;
    function pushScanArguments(args, cursor, options) {
      args.push(cursor.toString());
      if (options === null || options === void 0 ? void 0 : options.MATCH) {
        args.push("MATCH", options.MATCH);
      }
      if (options === null || options === void 0 ? void 0 : options.COUNT) {
        args.push("COUNT", options.COUNT.toString());
      }
      return args;
    }
    exports.pushScanArguments = pushScanArguments;
    function transformNumberInfinityReply(reply) {
      switch (reply.toString()) {
        case "+inf":
          return Infinity;
        case "-inf":
          return -Infinity;
        default:
          return Number(reply);
      }
    }
    exports.transformNumberInfinityReply = transformNumberInfinityReply;
    function transformNumberInfinityNullReply(reply) {
      if (reply === null)
        return null;
      return transformNumberInfinityReply(reply);
    }
    exports.transformNumberInfinityNullReply = transformNumberInfinityNullReply;
    function transformNumberInfinityNullArrayReply(reply) {
      return reply.map(transformNumberInfinityNullReply);
    }
    exports.transformNumberInfinityNullArrayReply = transformNumberInfinityNullArrayReply;
    function transformNumberInfinityArgument(num) {
      switch (num) {
        case Infinity:
          return "+inf";
        case -Infinity:
          return "-inf";
        default:
          return num.toString();
      }
    }
    exports.transformNumberInfinityArgument = transformNumberInfinityArgument;
    function transformStringNumberInfinityArgument(num) {
      if (typeof num !== "number")
        return num;
      return transformNumberInfinityArgument(num);
    }
    exports.transformStringNumberInfinityArgument = transformStringNumberInfinityArgument;
    function transformTuplesReply(reply) {
      const message = Object.create(null);
      for (let i2 = 0; i2 < reply.length; i2 += 2) {
        message[reply[i2].toString()] = reply[i2 + 1];
      }
      return message;
    }
    exports.transformTuplesReply = transformTuplesReply;
    function transformStreamMessagesReply(reply) {
      const messages = [];
      for (const [id2, message] of reply) {
        messages.push({
          id: id2,
          message: transformTuplesReply(message)
        });
      }
      return messages;
    }
    exports.transformStreamMessagesReply = transformStreamMessagesReply;
    function transformStreamsMessagesReply(reply) {
      if (reply === null)
        return null;
      return reply.map(([name2, rawMessages]) => ({
        name: name2,
        messages: transformStreamMessagesReply(rawMessages)
      }));
    }
    exports.transformStreamsMessagesReply = transformStreamsMessagesReply;
    function transformSortedSetMemberNullReply(reply) {
      if (!reply.length)
        return null;
      return {
        value: reply[0],
        score: transformNumberInfinityReply(reply[1])
      };
    }
    exports.transformSortedSetMemberNullReply = transformSortedSetMemberNullReply;
    function transformSortedSetWithScoresReply(reply) {
      const members = [];
      for (let i2 = 0; i2 < reply.length; i2 += 2) {
        members.push({
          value: reply[i2],
          score: transformNumberInfinityReply(reply[i2 + 1])
        });
      }
      return members;
    }
    exports.transformSortedSetWithScoresReply = transformSortedSetWithScoresReply;
    function pushGeoCountArgument(args, count2) {
      if (typeof count2 === "number") {
        args.push("COUNT", count2.toString());
      } else if (count2) {
        args.push("COUNT", count2.value.toString());
        if (count2.ANY) {
          args.push("ANY");
        }
      }
      return args;
    }
    exports.pushGeoCountArgument = pushGeoCountArgument;
    function pushGeoSearchArguments(args, key, from, by, options) {
      args.push(key);
      if (typeof from === "string") {
        args.push("FROMMEMBER", from);
      } else {
        args.push("FROMLONLAT", from.longitude.toString(), from.latitude.toString());
      }
      if ("radius" in by) {
        args.push("BYRADIUS", by.radius.toString());
      } else {
        args.push("BYBOX", by.width.toString(), by.height.toString());
      }
      args.push(by.unit);
      if (options === null || options === void 0 ? void 0 : options.SORT) {
        args.push(options.SORT);
      }
      pushGeoCountArgument(args, options === null || options === void 0 ? void 0 : options.COUNT);
      return args;
    }
    exports.pushGeoSearchArguments = pushGeoSearchArguments;
    var GeoReplyWith;
    (function(GeoReplyWith2) {
      GeoReplyWith2["DISTANCE"] = "WITHDIST";
      GeoReplyWith2["HASH"] = "WITHHASH";
      GeoReplyWith2["COORDINATES"] = "WITHCOORD";
    })(GeoReplyWith = exports.GeoReplyWith || (exports.GeoReplyWith = {}));
    function transformGeoMembersWithReply(reply, replyWith) {
      const replyWithSet = new Set(replyWith);
      let index = 0;
      const distanceIndex = replyWithSet.has(GeoReplyWith.DISTANCE) && ++index, hashIndex = replyWithSet.has(GeoReplyWith.HASH) && ++index, coordinatesIndex = replyWithSet.has(GeoReplyWith.COORDINATES) && ++index;
      return reply.map((member) => {
        const transformedMember = {
          member: member[0]
        };
        if (distanceIndex) {
          transformedMember.distance = member[distanceIndex];
        }
        if (hashIndex) {
          transformedMember.hash = member[hashIndex];
        }
        if (coordinatesIndex) {
          const [longitude, latitude] = member[coordinatesIndex];
          transformedMember.coordinates = {
            longitude,
            latitude
          };
        }
        return transformedMember;
      });
    }
    exports.transformGeoMembersWithReply = transformGeoMembersWithReply;
    function transformEXAT(EXAT) {
      return (typeof EXAT === "number" ? EXAT : Math.floor(EXAT.getTime() / 1e3)).toString();
    }
    exports.transformEXAT = transformEXAT;
    function transformPXAT(PXAT) {
      return (typeof PXAT === "number" ? PXAT : PXAT.getTime()).toString();
    }
    exports.transformPXAT = transformPXAT;
    function pushEvalArguments(args, options) {
      if (options === null || options === void 0 ? void 0 : options.keys) {
        args.push(options.keys.length.toString(), ...options.keys);
      } else {
        args.push("0");
      }
      if (options === null || options === void 0 ? void 0 : options.arguments) {
        args.push(...options.arguments);
      }
      return args;
    }
    exports.pushEvalArguments = pushEvalArguments;
    function pushVerdictArguments(args, value) {
      if (Array.isArray(value)) {
        args.push(...value);
      } else {
        args.push(value);
      }
      return args;
    }
    exports.pushVerdictArguments = pushVerdictArguments;
    function pushVerdictArgument(args, value) {
      if (Array.isArray(value)) {
        args.push(value.length.toString(), ...value);
      } else {
        args.push("1", value);
      }
      return args;
    }
    exports.pushVerdictArgument = pushVerdictArgument;
    function pushOptionalVerdictArgument(args, name2, value) {
      if (value === void 0)
        return args;
      args.push(name2);
      return pushVerdictArgument(args, value);
    }
    exports.pushOptionalVerdictArgument = pushOptionalVerdictArgument;
    var CommandFlags;
    (function(CommandFlags2) {
      CommandFlags2["WRITE"] = "write";
      CommandFlags2["READONLY"] = "readonly";
      CommandFlags2["DENYOOM"] = "denyoom";
      CommandFlags2["ADMIN"] = "admin";
      CommandFlags2["PUBSUB"] = "pubsub";
      CommandFlags2["NOSCRIPT"] = "noscript";
      CommandFlags2["RANDOM"] = "random";
      CommandFlags2["SORT_FOR_SCRIPT"] = "sort_for_script";
      CommandFlags2["LOADING"] = "loading";
      CommandFlags2["STALE"] = "stale";
      CommandFlags2["SKIP_MONITOR"] = "skip_monitor";
      CommandFlags2["ASKING"] = "asking";
      CommandFlags2["FAST"] = "fast";
      CommandFlags2["MOVABLEKEYS"] = "movablekeys";
    })(CommandFlags = exports.CommandFlags || (exports.CommandFlags = {}));
    var CommandCategories;
    (function(CommandCategories2) {
      CommandCategories2["KEYSPACE"] = "@keyspace";
      CommandCategories2["READ"] = "@read";
      CommandCategories2["WRITE"] = "@write";
      CommandCategories2["SET"] = "@set";
      CommandCategories2["SORTEDSET"] = "@sortedset";
      CommandCategories2["LIST"] = "@list";
      CommandCategories2["HASH"] = "@hash";
      CommandCategories2["STRING"] = "@string";
      CommandCategories2["BITMAP"] = "@bitmap";
      CommandCategories2["HYPERLOGLOG"] = "@hyperloglog";
      CommandCategories2["GEO"] = "@geo";
      CommandCategories2["STREAM"] = "@stream";
      CommandCategories2["PUBSUB"] = "@pubsub";
      CommandCategories2["ADMIN"] = "@admin";
      CommandCategories2["FAST"] = "@fast";
      CommandCategories2["SLOW"] = "@slow";
      CommandCategories2["BLOCKING"] = "@blocking";
      CommandCategories2["DANGEROUS"] = "@dangerous";
      CommandCategories2["CONNECTION"] = "@connection";
      CommandCategories2["TRANSACTION"] = "@transaction";
      CommandCategories2["SCRIPTING"] = "@scripting";
    })(CommandCategories = exports.CommandCategories || (exports.CommandCategories = {}));
    function transformCommandReply([name2, arity, flags, firstKeyIndex, lastKeyIndex, step, categories]) {
      return {
        name: name2,
        arity,
        flags: new Set(flags),
        firstKeyIndex,
        lastKeyIndex,
        step,
        categories: new Set(categories)
      };
    }
    exports.transformCommandReply = transformCommandReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BITOP.js
var require_BITOP = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BITOP.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 2;
    function transformArguments(operation, destKey, key) {
      return (0, generic_transformers_1.pushVerdictArguments)(["BITOP", operation, destKey], key);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BITPOS.js
var require_BITPOS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BITPOS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, bit, start, end) {
      const args = ["BITPOS", key, bit.toString()];
      if (typeof start === "number") {
        args.push(start.toString());
      }
      if (typeof end === "number") {
        args.push(end.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BLMOVE.js
var require_BLMOVE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BLMOVE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(source, destination, sourceDirection, destinationDirection, timeout2) {
      return [
        "BLMOVE",
        source,
        destination,
        sourceDirection,
        destinationDirection,
        timeout2.toString()
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BLPOP.js
var require_BLPOP = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BLPOP.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(keys, timeout2) {
      const args = (0, generic_transformers_1.pushVerdictArguments)(["BLPOP"], keys);
      args.push(timeout2.toString());
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      if (reply === null)
        return null;
      return {
        key: reply[0],
        element: reply[1]
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BRPOP.js
var require_BRPOP = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BRPOP.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, timeout2) {
      const args = (0, generic_transformers_1.pushVerdictArguments)(["BRPOP"], key);
      args.push(timeout2.toString());
      return args;
    }
    exports.transformArguments = transformArguments;
    var BLPOP_1 = require_BLPOP();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return BLPOP_1.transformReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BRPOPLPUSH.js
var require_BRPOPLPUSH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BRPOPLPUSH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(source, destination, timeout2) {
      return ["BRPOPLPUSH", source, destination, timeout2.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BZPOPMAX.js
var require_BZPOPMAX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BZPOPMAX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, timeout2) {
      const args = (0, generic_transformers_1.pushVerdictArguments)(["BZPOPMAX"], key);
      args.push(timeout2.toString());
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      if (!reply)
        return null;
      return {
        key: reply[0],
        value: reply[1],
        score: (0, generic_transformers_1.transformNumberInfinityReply)(reply[2])
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BZPOPMIN.js
var require_BZPOPMIN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BZPOPMIN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, timeout2) {
      const args = (0, generic_transformers_1.pushVerdictArguments)(["BZPOPMIN"], key);
      args.push(timeout2.toString());
      return args;
    }
    exports.transformArguments = transformArguments;
    var BZPOPMAX_1 = require_BZPOPMAX();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return BZPOPMAX_1.transformReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/COPY.js
var require_COPY = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/COPY.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(source, destination, options) {
      const args = ["COPY", source, destination];
      if (options === null || options === void 0 ? void 0 : options.destinationDb) {
        args.push("DB", options.destinationDb.toString());
      }
      if (options === null || options === void 0 ? void 0 : options.replace) {
        args.push("REPLACE");
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/DECR.js
var require_DECR = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/DECR.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["DECR", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/DECRBY.js
var require_DECRBY = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/DECRBY.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, decrement) {
      return ["DECRBY", key, decrement.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/DEL.js
var require_DEL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/DEL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    var generic_transformers_1 = require_generic_transformers();
    function transformArguments(keys) {
      return (0, generic_transformers_1.pushVerdictArguments)(["DEL"], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/DUMP.js
var require_DUMP = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/DUMP.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(key) {
      return ["DUMP", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/EVAL.js
var require_EVAL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/EVAL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    var generic_transformers_1 = require_generic_transformers();
    function transformArguments(script, options) {
      return (0, generic_transformers_1.pushEvalArguments)(["EVAL", script], options);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/EVALSHA.js
var require_EVALSHA = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/EVALSHA.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    var generic_transformers_1 = require_generic_transformers();
    function transformArguments(sha1, options) {
      return (0, generic_transformers_1.pushEvalArguments)(["EVALSHA", sha1], options);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/EXISTS.js
var require_EXISTS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/EXISTS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(keys) {
      return (0, generic_transformers_1.pushVerdictArguments)(["EXISTS"], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/EXPIRE.js
var require_EXPIRE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/EXPIRE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, seconds) {
      return ["EXPIRE", key, seconds.toString()];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/EXPIREAT.js
var require_EXPIREAT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/EXPIREAT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, timestamp) {
      return [
        "EXPIREAT",
        key,
        (0, generic_transformers_1.transformEXAT)(timestamp)
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_2 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_2.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GEOADD.js
var require_GEOADD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GEOADD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, toAdd, options) {
      var _a4, _b;
      const args = ["GEOADD", key];
      if ((_a4 = options) === null || _a4 === void 0 ? void 0 : _a4.NX) {
        args.push("NX");
      } else if ((_b = options) === null || _b === void 0 ? void 0 : _b.XX) {
        args.push("XX");
      }
      if (options === null || options === void 0 ? void 0 : options.CH) {
        args.push("CH");
      }
      for (const { longitude, latitude, member } of Array.isArray(toAdd) ? toAdd : [toAdd]) {
        args.push(longitude.toString(), latitude.toString(), member);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GEODIST.js
var require_GEODIST = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GEODIST.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, member1, member2, unit) {
      const args = ["GEODIST", key, member1, member2];
      if (unit) {
        args.push(unit);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return reply === null ? null : Number(reply);
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GEOHASH.js
var require_GEOHASH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GEOHASH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, member) {
      return (0, generic_transformers_1.pushVerdictArguments)(["GEOHASH", key], member);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GEOPOS.js
var require_GEOPOS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GEOPOS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, member) {
      return (0, generic_transformers_1.pushVerdictArguments)(["GEOPOS", key], member);
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return reply.map((coordinates) => coordinates === null ? null : {
        longitude: coordinates[0],
        latitude: coordinates[1]
      });
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GEOSEARCH.js
var require_GEOSEARCH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GEOSEARCH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, from, by, options) {
      return (0, generic_transformers_1.pushGeoSearchArguments)(["GEOSEARCH"], key, from, by, options);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GEOSEARCH_WITH.js
var require_GEOSEARCH_WITH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GEOSEARCH_WITH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var GEOSEARCH_1 = require_GEOSEARCH();
    var GEOSEARCH_2 = require_GEOSEARCH();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return GEOSEARCH_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return GEOSEARCH_2.IS_READ_ONLY;
    } });
    function transformArguments(key, from, by, replyWith, options) {
      const args = (0, GEOSEARCH_1.transformArguments)(key, from, by, options);
      args.push(...replyWith);
      args.preserve = replyWith;
      return args;
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformGeoMembersWithReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GEOSEARCHSTORE.js
var require_GEOSEARCHSTORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GEOSEARCHSTORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(destination, source, from, by, options) {
      const args = (0, generic_transformers_1.pushGeoSearchArguments)(["GEOSEARCHSTORE", destination], source, from, by, options);
      if (options === null || options === void 0 ? void 0 : options.STOREDIST) {
        args.push("STOREDIST");
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      if (typeof reply !== "number") {
        throw new TypeError(`https://github.com/redis/redis/issues/9261`);
      }
      return reply;
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GET.js
var require_GET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["GET", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GETBIT.js
var require_GETBIT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GETBIT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, offset) {
      return ["GETBIT", key, offset.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GETDEL.js
var require_GETDEL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GETDEL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["GETDEL", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GETEX.js
var require_GETEX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GETEX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, mode) {
      const args = ["GETEX", key];
      if ("EX" in mode) {
        args.push("EX", mode.EX.toString());
      } else if ("PX" in mode) {
        args.push("PX", mode.PX.toString());
      } else if ("EXAT" in mode) {
        args.push("EXAT", (0, generic_transformers_1.transformEXAT)(mode.EXAT));
      } else if ("PXAT" in mode) {
        args.push("PXAT", (0, generic_transformers_1.transformPXAT)(mode.PXAT));
      } else {
        args.push("PERSIST");
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GETRANGE.js
var require_GETRANGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GETRANGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, start, end) {
      return ["GETRANGE", key, start.toString(), end.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/GETSET.js
var require_GETSET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/GETSET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, value) {
      return ["GETSET", key, value];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HDEL.js
var require_HDEL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HDEL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, field) {
      return (0, generic_transformers_1.pushVerdictArguments)(["HDEL", key], field);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HEXISTS.js
var require_HEXISTS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HEXISTS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, field) {
      return ["HEXISTS", key, field];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HGET.js
var require_HGET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HGET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, field) {
      return ["HGET", key, field];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HGETALL.js
var require_HGETALL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HGETALL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["HGETALL", key];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformTuplesReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HINCRBY.js
var require_HINCRBY = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HINCRBY.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, field, increment) {
      return ["HINCRBY", key, field, increment.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HINCRBYFLOAT.js
var require_HINCRBYFLOAT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HINCRBYFLOAT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, field, increment) {
      return ["HINCRBYFLOAT", key, field, increment.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HKEYS.js
var require_HKEYS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HKEYS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["HKEYS", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HLEN.js
var require_HLEN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HLEN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["HLEN", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HMGET.js
var require_HMGET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HMGET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, fields) {
      return (0, generic_transformers_1.pushVerdictArguments)(["HMGET", key], fields);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HRANDFIELD.js
var require_HRANDFIELD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HRANDFIELD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["HRANDFIELD", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HRANDFIELD_COUNT.js
var require_HRANDFIELD_COUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HRANDFIELD_COUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var HRANDFIELD_1 = require_HRANDFIELD();
    var HRANDFIELD_2 = require_HRANDFIELD();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return HRANDFIELD_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return HRANDFIELD_2.IS_READ_ONLY;
    } });
    function transformArguments(key, count2) {
      return [
        ...(0, HRANDFIELD_1.transformArguments)(key),
        count2.toString()
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HRANDFIELD_COUNT_WITHVALUES.js
var require_HRANDFIELD_COUNT_WITHVALUES = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HRANDFIELD_COUNT_WITHVALUES.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var HRANDFIELD_COUNT_1 = require_HRANDFIELD_COUNT();
    var HRANDFIELD_COUNT_2 = require_HRANDFIELD_COUNT();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return HRANDFIELD_COUNT_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return HRANDFIELD_COUNT_2.IS_READ_ONLY;
    } });
    function transformArguments(key, count2) {
      return [
        ...(0, HRANDFIELD_COUNT_1.transformArguments)(key, count2),
        "WITHVALUES"
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformTuplesReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HSCAN.js
var require_HSCAN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HSCAN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, cursor, options) {
      return (0, generic_transformers_1.pushScanArguments)([
        "HSCAN",
        key
      ], cursor, options);
    }
    exports.transformArguments = transformArguments;
    function transformReply([cursor, rawTuples]) {
      const parsedTuples = [];
      for (let i2 = 0; i2 < rawTuples.length; i2 += 2) {
        parsedTuples.push({
          field: rawTuples[i2],
          value: rawTuples[i2 + 1]
        });
      }
      return {
        cursor: Number(cursor),
        tuples: parsedTuples
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HSET.js
var require_HSET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HSET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(...[key, value, fieldValue]) {
      const args = ["HSET", key];
      if (typeof value === "string" || typeof value === "number" || Buffer.isBuffer(value)) {
        pushValue(args, value);
        pushValue(args, fieldValue);
      } else if (value instanceof Map) {
        pushMap(args, value);
      } else if (Array.isArray(value)) {
        pushTuples(args, value);
      } else {
        pushObject(args, value);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function pushMap(args, map) {
      for (const [key, value] of map.entries()) {
        pushValue(args, key);
        pushValue(args, value);
      }
    }
    function pushTuples(args, tuples) {
      for (const tuple of tuples) {
        if (Array.isArray(tuple)) {
          pushTuples(args, tuple);
          continue;
        }
        pushValue(args, tuple);
      }
    }
    function pushObject(args, object) {
      for (const key of Object.keys(object)) {
        args.push(key.toString(), object[key].toString());
      }
    }
    function pushValue(args, value) {
      args.push(typeof value === "number" ? value.toString() : value);
    }
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HSETNX.js
var require_HSETNX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HSETNX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, field, value) {
      return ["HSETNX", key, field, value];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HSTRLEN.js
var require_HSTRLEN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HSTRLEN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, field) {
      return ["HSTRLEN", key, field];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HVALS.js
var require_HVALS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HVALS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["HVALS", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/INCR.js
var require_INCR = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/INCR.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["INCR", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/INCRBY.js
var require_INCRBY = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/INCRBY.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, increment) {
      return ["INCRBY", key, increment.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/INCRBYFLOAT.js
var require_INCRBYFLOAT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/INCRBYFLOAT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, increment) {
      return ["INCRBYFLOAT", key, increment.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LINDEX.js
var require_LINDEX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LINDEX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, index) {
      return ["LINDEX", key, index.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LINSERT.js
var require_LINSERT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LINSERT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, position, pivot, element) {
      return [
        "LINSERT",
        key,
        position,
        pivot,
        element
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LLEN.js
var require_LLEN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LLEN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["LLEN", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LMOVE.js
var require_LMOVE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LMOVE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(source, destination, sourceSide, destinationSide) {
      return [
        "LMOVE",
        source,
        destination,
        sourceSide,
        destinationSide
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LPOP_COUNT.js
var require_LPOP_COUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LPOP_COUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, count2) {
      return ["LPOP", key, count2.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LPOP.js
var require_LPOP = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LPOP.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["LPOP", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LPOS.js
var require_LPOS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LPOS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, element, options) {
      const args = ["LPOS", key, element];
      if (typeof (options === null || options === void 0 ? void 0 : options.RANK) === "number") {
        args.push("RANK", options.RANK.toString());
      }
      if (typeof (options === null || options === void 0 ? void 0 : options.MAXLEN) === "number") {
        args.push("MAXLEN", options.MAXLEN.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LPOS_COUNT.js
var require_LPOS_COUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LPOS_COUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var LPOS_1 = require_LPOS();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return LPOS_1.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return LPOS_1.IS_READ_ONLY;
    } });
    function transformArguments(key, element, count2, options) {
      const args = ["LPOS", key, element];
      if (typeof (options === null || options === void 0 ? void 0 : options.RANK) === "number") {
        args.push("RANK", options.RANK.toString());
      }
      args.push("COUNT", count2.toString());
      if (typeof (options === null || options === void 0 ? void 0 : options.MAXLEN) === "number") {
        args.push("MAXLEN", options.MAXLEN.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LPUSH.js
var require_LPUSH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LPUSH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, elements) {
      return (0, generic_transformers_1.pushVerdictArguments)(["LPUSH", key], elements);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LPUSHX.js
var require_LPUSHX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LPUSHX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, element) {
      return (0, generic_transformers_1.pushVerdictArguments)(["LPUSHX", key], element);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LRANGE.js
var require_LRANGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LRANGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, start, stop) {
      return [
        "LRANGE",
        key,
        start.toString(),
        stop.toString()
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LREM.js
var require_LREM = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LREM.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, count2, element) {
      return [
        "LREM",
        key,
        count2.toString(),
        element
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LSET.js
var require_LSET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LSET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, index, element) {
      return [
        "LSET",
        key,
        index.toString(),
        element
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LTRIM.js
var require_LTRIM = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LTRIM.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, start, stop) {
      return [
        "LTRIM",
        key,
        start.toString(),
        stop.toString()
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MGET.js
var require_MGET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MGET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(keys) {
      return ["MGET", ...keys];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MIGRATE.js
var require_MIGRATE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MIGRATE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(host, port, key, destinationDb, timeout2, options) {
      const args = ["MIGRATE", host, port.toString()], isKeyArray = Array.isArray(key);
      if (isKeyArray) {
        args.push('""');
      } else {
        args.push(key);
      }
      args.push(destinationDb.toString(), timeout2.toString());
      if (options === null || options === void 0 ? void 0 : options.COPY) {
        args.push("COPY");
      }
      if (options === null || options === void 0 ? void 0 : options.REPLACE) {
        args.push("REPLACE");
      }
      if (options === null || options === void 0 ? void 0 : options.AUTH) {
        if (options.AUTH.username) {
          args.push("AUTH2", options.AUTH.username, options.AUTH.password);
        } else {
          args.push("AUTH", options.AUTH.password);
        }
      }
      if (isKeyArray) {
        args.push("KEYS", ...key);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MSET.js
var require_MSET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MSET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(toSet) {
      const args = ["MSET"];
      if (Array.isArray(toSet)) {
        args.push(...toSet.flat());
      } else {
        for (const key of Object.keys(toSet)) {
          args.push(key, toSet[key]);
        }
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MSETNX.js
var require_MSETNX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MSETNX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(toSet) {
      const args = ["MSETNX"];
      if (Array.isArray(toSet)) {
        args.push(...toSet.flat());
      } else {
        for (const key of Object.keys(toSet)) {
          args.push(key, toSet[key]);
        }
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PERSIST.js
var require_PERSIST = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PERSIST.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["PERSIST", key];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PEXPIRE.js
var require_PEXPIRE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PEXPIRE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, milliseconds) {
      return ["PEXPIRE", key, milliseconds.toString()];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PEXPIREAT.js
var require_PEXPIREAT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PEXPIREAT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, millisecondsTimestamp) {
      return [
        "PEXPIREAT",
        key,
        (0, generic_transformers_1.transformPXAT)(millisecondsTimestamp)
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_2 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_2.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PFADD.js
var require_PFADD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PFADD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, element) {
      return (0, generic_transformers_1.pushVerdictArguments)(["PFADD", key], element);
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_2 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_2.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PFCOUNT.js
var require_PFCOUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PFCOUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return (0, generic_transformers_1.pushVerdictArguments)(["PFCOUNT"], key);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PFMERGE.js
var require_PFMERGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PFMERGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(destination, source) {
      return (0, generic_transformers_1.pushVerdictArguments)(["PFMERGE", destination], source);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PSETEX.js
var require_PSETEX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PSETEX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, milliseconds, value) {
      return [
        "PSETEX",
        key,
        milliseconds.toString(),
        value
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PTTL.js
var require_PTTL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PTTL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["PTTL", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PUBLISH.js
var require_PUBLISH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PUBLISH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(channel, message) {
      return ["PUBLISH", channel, message];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/RENAME.js
var require_RENAME = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/RENAME.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, newKey) {
      return ["RENAME", key, newKey];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/RENAMENX.js
var require_RENAMENX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/RENAMENX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, newKey) {
      return ["RENAMENX", key, newKey];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/RPOP_COUNT.js
var require_RPOP_COUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/RPOP_COUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, count2) {
      return ["RPOP", key, count2.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/RPOP.js
var require_RPOP = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/RPOP.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["RPOP", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/RPOPLPUSH.js
var require_RPOPLPUSH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/RPOPLPUSH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(source, destination) {
      return ["RPOPLPUSH", source, destination];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/RPUSH.js
var require_RPUSH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/RPUSH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, element) {
      return (0, generic_transformers_1.pushVerdictArguments)(["RPUSH", key], element);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/RPUSHX.js
var require_RPUSHX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/RPUSHX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, element) {
      return (0, generic_transformers_1.pushVerdictArguments)(["RPUSHX", key], element);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SADD.js
var require_SADD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SADD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, members) {
      return (0, generic_transformers_1.pushVerdictArguments)(["SADD", key], members);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SCARD.js
var require_SCARD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SCARD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["SCARD", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SDIFF.js
var require_SDIFF = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SDIFF.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(keys) {
      return (0, generic_transformers_1.pushVerdictArguments)(["SDIFF"], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SDIFFSTORE.js
var require_SDIFFSTORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SDIFFSTORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(destination, keys) {
      return (0, generic_transformers_1.pushVerdictArguments)(["SDIFFSTORE", destination], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SET.js
var require_SET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, value, options) {
      const args = [
        "SET",
        key,
        typeof value === "number" ? value.toString() : value
      ];
      if (options === null || options === void 0 ? void 0 : options.EX) {
        args.push("EX", options.EX.toString());
      } else if (options === null || options === void 0 ? void 0 : options.PX) {
        args.push("PX", options.PX.toString());
      } else if (options === null || options === void 0 ? void 0 : options.EXAT) {
        args.push("EXAT", options.EXAT.toString());
      } else if (options === null || options === void 0 ? void 0 : options.PXAT) {
        args.push("PXAT", options.PXAT.toString());
      } else if (options === null || options === void 0 ? void 0 : options.KEEPTTL) {
        args.push("KEEPTTL");
      }
      if (options === null || options === void 0 ? void 0 : options.NX) {
        args.push("NX");
      } else if (options === null || options === void 0 ? void 0 : options.XX) {
        args.push("XX");
      }
      if (options === null || options === void 0 ? void 0 : options.GET) {
        args.push("GET");
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SETBIT.js
var require_SETBIT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SETBIT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, offset, value) {
      return ["SETBIT", key, offset.toString(), value.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SETEX.js
var require_SETEX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SETEX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, seconds, value) {
      return [
        "SETEX",
        key,
        seconds.toString(),
        value
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SETNX.js
var require_SETNX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SETNX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, value) {
      return ["SETNX", key, value];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SETRANGE.js
var require_SETRANGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SETRANGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, offset, value) {
      return ["SETRANGE", key, offset.toString(), value];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SINTER.js
var require_SINTER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SINTER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(keys) {
      return (0, generic_transformers_1.pushVerdictArguments)(["SINTER"], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SINTERSTORE.js
var require_SINTERSTORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SINTERSTORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(destination, keys) {
      return (0, generic_transformers_1.pushVerdictArguments)(["SINTERSTORE", destination], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SISMEMBER.js
var require_SISMEMBER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SISMEMBER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, member) {
      return ["SISMEMBER", key, member];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SMEMBERS.js
var require_SMEMBERS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SMEMBERS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["SMEMBERS", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SMISMEMBER.js
var require_SMISMEMBER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SMISMEMBER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, members) {
      return ["SMISMEMBER", key, ...members];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanArrayReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SMOVE.js
var require_SMOVE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SMOVE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(source, destination, member) {
      return ["SMOVE", source, destination, member];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SORT.js
var require_SORT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SORT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, options) {
      const args = ["SORT", key];
      if (options === null || options === void 0 ? void 0 : options.BY) {
        args.push("BY", options.BY);
      }
      if (options === null || options === void 0 ? void 0 : options.LIMIT) {
        args.push("LIMIT", options.LIMIT.offset.toString(), options.LIMIT.count.toString());
      }
      if (options === null || options === void 0 ? void 0 : options.GET) {
        for (const pattern of typeof options.GET === "string" ? [options.GET] : options.GET) {
          args.push("GET", pattern);
        }
      }
      if (options === null || options === void 0 ? void 0 : options.DIRECTION) {
        args.push(options.DIRECTION);
      }
      if (options === null || options === void 0 ? void 0 : options.ALPHA) {
        args.push("ALPHA");
      }
      if (options === null || options === void 0 ? void 0 : options.STORE) {
        args.push("STORE", options.STORE);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return reply;
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SPOP.js
var require_SPOP = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SPOP.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, count2) {
      const args = ["SPOP", key];
      if (typeof count2 === "number") {
        args.push(count2.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SRANDMEMBER.js
var require_SRANDMEMBER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SRANDMEMBER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return ["SRANDMEMBER", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SRANDMEMBER_COUNT.js
var require_SRANDMEMBER_COUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SRANDMEMBER_COUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var SRANDMEMBER_1 = require_SRANDMEMBER();
    var SRANDMEMBER_2 = require_SRANDMEMBER();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return SRANDMEMBER_2.FIRST_KEY_INDEX;
    } });
    function transformArguments(key, count2) {
      return [
        ...(0, SRANDMEMBER_1.transformArguments)(key),
        count2.toString()
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SREM.js
var require_SREM = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SREM.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, members) {
      return (0, generic_transformers_1.pushVerdictArguments)(["SREM", key], members);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SSCAN.js
var require_SSCAN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SSCAN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, cursor, options) {
      return (0, generic_transformers_1.pushScanArguments)([
        "SSCAN",
        key
      ], cursor, options);
    }
    exports.transformArguments = transformArguments;
    function transformReply([cursor, members]) {
      return {
        cursor: Number(cursor),
        members
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/STRLEN.js
var require_STRLEN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/STRLEN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["STRLEN", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SUNION.js
var require_SUNION = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SUNION.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(keys) {
      return (0, generic_transformers_1.pushVerdictArguments)(["SUNION"], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SUNIONSTORE.js
var require_SUNIONSTORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SUNIONSTORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(destination, keys) {
      return (0, generic_transformers_1.pushVerdictArguments)(["SUNIONSTORE", destination], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/TOUCH.js
var require_TOUCH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/TOUCH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return (0, generic_transformers_1.pushVerdictArguments)(["TOUCH"], key);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/TTL.js
var require_TTL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/TTL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["TTL", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/TYPE.js
var require_TYPE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/TYPE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["TYPE", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/UNLINK.js
var require_UNLINK = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/UNLINK.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return (0, generic_transformers_1.pushVerdictArguments)(["UNLINK"], key);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/WATCH.js
var require_WATCH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/WATCH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    var generic_transformers_1 = require_generic_transformers();
    function transformArguments(key) {
      return (0, generic_transformers_1.pushVerdictArguments)(["WATCH"], key);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XACK.js
var require_XACK = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XACK.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, group, id2) {
      return (0, generic_transformers_1.pushVerdictArguments)(["XACK", key, group], id2);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XADD.js
var require_XADD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XADD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, id2, message, options) {
      const args = ["XADD", key];
      if (options === null || options === void 0 ? void 0 : options.NOMKSTREAM) {
        args.push("NOMKSTREAM");
      }
      if (options === null || options === void 0 ? void 0 : options.TRIM) {
        if (options.TRIM.strategy) {
          args.push(options.TRIM.strategy);
        }
        if (options.TRIM.strategyModifier) {
          args.push(options.TRIM.strategyModifier);
        }
        args.push(options.TRIM.threshold.toString());
        if (options.TRIM.limit) {
          args.push("LIMIT", options.TRIM.limit.toString());
        }
      }
      args.push(id2);
      for (const [key2, value] of Object.entries(message)) {
        args.push(key2, value);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XAUTOCLAIM.js
var require_XAUTOCLAIM = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XAUTOCLAIM.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, group, consumer, minIdleTime, start, options) {
      const args = ["XAUTOCLAIM", key, group, consumer, minIdleTime.toString(), start];
      if (options === null || options === void 0 ? void 0 : options.COUNT) {
        args.push("COUNT", options.COUNT.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return {
        nextId: reply[0],
        messages: (0, generic_transformers_1.transformStreamMessagesReply)(reply[1])
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XAUTOCLAIM_JUSTID.js
var require_XAUTOCLAIM_JUSTID = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XAUTOCLAIM_JUSTID.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var XAUTOCLAIM_1 = require_XAUTOCLAIM();
    var XAUTOCLAIM_2 = require_XAUTOCLAIM();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return XAUTOCLAIM_2.FIRST_KEY_INDEX;
    } });
    function transformArguments(...args) {
      return [
        ...(0, XAUTOCLAIM_1.transformArguments)(...args),
        "JUSTID"
      ];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return {
        nextId: reply[0],
        messages: reply[1]
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XCLAIM.js
var require_XCLAIM = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XCLAIM.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, group, consumer, minIdleTime, id2, options) {
      const args = ["XCLAIM", key, group, consumer, minIdleTime.toString()];
      (0, generic_transformers_1.pushVerdictArguments)(args, id2);
      if (options === null || options === void 0 ? void 0 : options.IDLE) {
        args.push("IDLE", options.IDLE.toString());
      }
      if (options === null || options === void 0 ? void 0 : options.TIME) {
        args.push("TIME", (typeof options.TIME === "number" ? options.TIME : options.TIME.getTime()).toString());
      }
      if (options === null || options === void 0 ? void 0 : options.RETRYCOUNT) {
        args.push("RETRYCOUNT", options.RETRYCOUNT.toString());
      }
      if (options === null || options === void 0 ? void 0 : options.FORCE) {
        args.push("FORCE");
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_2 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_2.transformStreamMessagesReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XCLAIM_JUSTID.js
var require_XCLAIM_JUSTID = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XCLAIM_JUSTID.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var XCLAIM_1 = require_XCLAIM();
    var XCLAIM_2 = require_XCLAIM();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return XCLAIM_2.FIRST_KEY_INDEX;
    } });
    function transformArguments(...args) {
      return [
        ...(0, XCLAIM_1.transformArguments)(...args),
        "JUSTID"
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XDEL.js
var require_XDEL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XDEL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, id2) {
      return (0, generic_transformers_1.pushVerdictArguments)(["XDEL", key], id2);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XGROUP_CREATE.js
var require_XGROUP_CREATE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XGROUP_CREATE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 2;
    function transformArguments(key, group, id2, options) {
      const args = ["XGROUP", "CREATE", key, group, id2];
      if (options === null || options === void 0 ? void 0 : options.MKSTREAM) {
        args.push("MKSTREAM");
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XGROUP_CREATECONSUMER.js
var require_XGROUP_CREATECONSUMER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XGROUP_CREATECONSUMER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 2;
    function transformArguments(key, group, consumer) {
      return ["XGROUP", "CREATECONSUMER", key, group, consumer];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XGROUP_DELCONSUMER.js
var require_XGROUP_DELCONSUMER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XGROUP_DELCONSUMER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 2;
    function transformArguments(key, group, consumer) {
      return ["XGROUP", "DELCONSUMER", key, group, consumer];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XGROUP_DESTROY.js
var require_XGROUP_DESTROY = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XGROUP_DESTROY.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 2;
    function transformArguments(key, group) {
      return ["XGROUP", "DESTROY", key, group];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XGROUP_SETID.js
var require_XGROUP_SETID = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XGROUP_SETID.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 2;
    function transformArguments(key, group, id2) {
      return ["XGROUP", "SETID", key, group, id2];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XINFO_CONSUMERS.js
var require_XINFO_CONSUMERS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XINFO_CONSUMERS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 2;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, group) {
      return ["XINFO", "CONSUMERS", key, group];
    }
    exports.transformArguments = transformArguments;
    function transformReply(rawReply) {
      return rawReply.map((consumer) => ({
        name: consumer[1],
        pending: consumer[3],
        idle: consumer[5]
      }));
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XINFO_GROUPS.js
var require_XINFO_GROUPS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XINFO_GROUPS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 2;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["XINFO", "GROUPS", key];
    }
    exports.transformArguments = transformArguments;
    function transformReply(rawReply) {
      return rawReply.map((group) => ({
        name: group[1],
        consumers: group[3],
        pending: group[5],
        lastDeliveredId: group[7]
      }));
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XINFO_STREAM.js
var require_XINFO_STREAM = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XINFO_STREAM.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 2;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["XINFO", "STREAM", key];
    }
    exports.transformArguments = transformArguments;
    function transformReply(rawReply) {
      const parsedReply = {};
      for (let i2 = 0; i2 < rawReply.length; i2 += 2) {
        switch (rawReply[i2]) {
          case "length":
            parsedReply.length = rawReply[i2 + 1];
            break;
          case "radix-tree-keys":
            parsedReply.radixTreeKeys = rawReply[i2 + 1];
            break;
          case "radix-tree-nodes":
            parsedReply.radixTreeNodes = rawReply[i2 + 1];
            break;
          case "groups":
            parsedReply.groups = rawReply[i2 + 1];
            break;
          case "last-generated-id":
            parsedReply.lastGeneratedId = rawReply[i2 + 1];
            break;
          case "first-entry":
            parsedReply.firstEntry = rawReply[i2 + 1] ? {
              id: rawReply[i2 + 1][0],
              message: (0, generic_transformers_1.transformTuplesReply)(rawReply[i2 + 1][1])
            } : null;
            break;
          case "last-entry":
            parsedReply.lastEntry = rawReply[i2 + 1] ? {
              id: rawReply[i2 + 1][0],
              message: (0, generic_transformers_1.transformTuplesReply)(rawReply[i2 + 1][1])
            } : null;
            break;
        }
      }
      return parsedReply;
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XLEN.js
var require_XLEN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XLEN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["XLEN", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XPENDING_RANGE.js
var require_XPENDING_RANGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XPENDING_RANGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, group, start, end, count2, options) {
      const args = ["XPENDING", key, group];
      if (options === null || options === void 0 ? void 0 : options.IDLE) {
        args.push("IDLE", options.IDLE.toString());
      }
      args.push(start, end, count2.toString());
      if (options === null || options === void 0 ? void 0 : options.consumer) {
        args.push(options.consumer);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return reply.map(([id2, owner, millisecondsSinceLastDelivery, deliveriesCounter]) => ({
        id: id2,
        owner,
        millisecondsSinceLastDelivery,
        deliveriesCounter
      }));
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XPENDING.js
var require_XPENDING = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XPENDING.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, group) {
      return ["XPENDING", key, group];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return {
        pending: reply[0],
        firstId: reply[1],
        lastId: reply[2],
        consumers: reply[3] === null ? null : reply[3].map(([name2, deliveriesCounter]) => ({
          name: name2,
          deliveriesCounter: Number(deliveriesCounter)
        }))
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XRANGE.js
var require_XRANGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XRANGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, start, end, options) {
      const args = ["XRANGE", key, start, end];
      if (options === null || options === void 0 ? void 0 : options.COUNT) {
        args.push("COUNT", options.COUNT.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformStreamMessagesReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XREAD.js
var require_XREAD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XREAD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var FIRST_KEY_INDEX = (streams) => {
      return Array.isArray(streams) ? streams[0].key : streams.key;
    };
    exports.FIRST_KEY_INDEX = FIRST_KEY_INDEX;
    exports.IS_READ_ONLY = true;
    function transformArguments(streams, options) {
      const args = ["XREAD"];
      if (options === null || options === void 0 ? void 0 : options.COUNT) {
        args.push("COUNT", options.COUNT.toString());
      }
      if (typeof (options === null || options === void 0 ? void 0 : options.BLOCK) === "number") {
        args.push("BLOCK", options.BLOCK.toString());
      }
      args.push("STREAMS");
      const streamsArray = Array.isArray(streams) ? streams : [streams], argsLength = args.length;
      for (let i2 = 0; i2 < streamsArray.length; i2++) {
        const stream = streamsArray[i2];
        args[argsLength + i2] = stream.key;
        args[argsLength + streamsArray.length + i2] = stream.id;
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformStreamsMessagesReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XREADGROUP.js
var require_XREADGROUP = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XREADGROUP.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var FIRST_KEY_INDEX = (_group, _consumer, streams) => {
      return Array.isArray(streams) ? streams[0].key : streams.key;
    };
    exports.FIRST_KEY_INDEX = FIRST_KEY_INDEX;
    exports.IS_READ_ONLY = true;
    function transformArguments(group, consumer, streams, options) {
      const args = ["XREADGROUP", "GROUP", group, consumer];
      if (options === null || options === void 0 ? void 0 : options.COUNT) {
        args.push("COUNT", options.COUNT.toString());
      }
      if (typeof (options === null || options === void 0 ? void 0 : options.BLOCK) === "number") {
        args.push("BLOCK", options.BLOCK.toString());
      }
      if (options === null || options === void 0 ? void 0 : options.NOACK) {
        args.push("NOACK");
      }
      args.push("STREAMS");
      const streamsArray = Array.isArray(streams) ? streams : [streams], argsLength = args.length;
      for (let i2 = 0; i2 < streamsArray.length; i2++) {
        const stream = streamsArray[i2];
        args[argsLength + i2] = stream.key;
        args[argsLength + streamsArray.length + i2] = stream.id;
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformStreamsMessagesReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XREVRANGE.js
var require_XREVRANGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XREVRANGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, start, end, options) {
      const args = ["XREVRANGE", key, start, end];
      if (options === null || options === void 0 ? void 0 : options.COUNT) {
        args.push("COUNT", options.COUNT.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformStreamMessagesReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/XTRIM.js
var require_XTRIM = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/XTRIM.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, strategy, threshold, options) {
      const args = ["XTRIM", key, strategy];
      if (options === null || options === void 0 ? void 0 : options.strategyModifier) {
        args.push(options.strategyModifier);
      }
      args.push(threshold.toString());
      if (options === null || options === void 0 ? void 0 : options.LIMIT) {
        args.push("LIMIT", options.LIMIT.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZADD.js
var require_ZADD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZADD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, members, options) {
      var _a4, _b, _c, _d2, _e, _f;
      const args = ["ZADD", key];
      if ((_a4 = options) === null || _a4 === void 0 ? void 0 : _a4.NX) {
        args.push("NX");
      } else {
        if ((_b = options) === null || _b === void 0 ? void 0 : _b.XX) {
          args.push("XX");
        }
        if ((_c = options) === null || _c === void 0 ? void 0 : _c.GT) {
          args.push("GT");
        } else if ((_d2 = options) === null || _d2 === void 0 ? void 0 : _d2.LT) {
          args.push("LT");
        }
      }
      if ((_e = options) === null || _e === void 0 ? void 0 : _e.CH) {
        args.push("CH");
      }
      if ((_f = options) === null || _f === void 0 ? void 0 : _f.INCR) {
        args.push("INCR");
      }
      for (const { score, value } of Array.isArray(members) ? members : [members]) {
        args.push((0, generic_transformers_1.transformNumberInfinityArgument)(score), value);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_2 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_2.transformNumberInfinityReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZCARD.js
var require_ZCARD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZCARD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["ZCARD", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZCOUNT.js
var require_ZCOUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZCOUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, min, max) {
      return [
        "ZCOUNT",
        key,
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(min),
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(max)
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZDIFF.js
var require_ZDIFF = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZDIFF.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 2;
    exports.IS_READ_ONLY = true;
    function transformArguments(keys) {
      return (0, generic_transformers_1.pushVerdictArgument)(["ZDIFF"], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZDIFF_WITHSCORES.js
var require_ZDIFF_WITHSCORES = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZDIFF_WITHSCORES.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var ZDIFF_1 = require_ZDIFF();
    var ZDIFF_2 = require_ZDIFF();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return ZDIFF_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return ZDIFF_2.IS_READ_ONLY;
    } });
    function transformArguments(...args) {
      return [
        ...(0, ZDIFF_1.transformArguments)(...args),
        "WITHSCORES"
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetWithScoresReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZDIFFSTORE.js
var require_ZDIFFSTORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZDIFFSTORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(destination, keys) {
      return (0, generic_transformers_1.pushVerdictArgument)(["ZDIFFSTORE", destination], keys);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZINCRBY.js
var require_ZINCRBY = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZINCRBY.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, increment, member) {
      return [
        "ZINCRBY",
        key,
        (0, generic_transformers_1.transformNumberInfinityArgument)(increment),
        member
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_2 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_2.transformNumberInfinityReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZINTER.js
var require_ZINTER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZINTER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 2;
    exports.IS_READ_ONLY = true;
    function transformArguments(keys, options) {
      const args = (0, generic_transformers_1.pushVerdictArgument)(["ZINTER"], keys);
      if (options === null || options === void 0 ? void 0 : options.WEIGHTS) {
        args.push("WEIGHTS", ...options.WEIGHTS.map((weight) => weight.toString()));
      }
      if (options === null || options === void 0 ? void 0 : options.AGGREGATE) {
        args.push("AGGREGATE", options.AGGREGATE);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZINTER_WITHSCORES.js
var require_ZINTER_WITHSCORES = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZINTER_WITHSCORES.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var ZINTER_1 = require_ZINTER();
    var ZINTER_2 = require_ZINTER();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return ZINTER_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return ZINTER_2.IS_READ_ONLY;
    } });
    function transformArguments(...args) {
      return [
        ...(0, ZINTER_1.transformArguments)(...args),
        "WITHSCORES"
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetWithScoresReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZINTERSTORE.js
var require_ZINTERSTORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZINTERSTORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(destination, keys, options) {
      const args = (0, generic_transformers_1.pushVerdictArgument)(["ZINTERSTORE", destination], keys);
      if (options === null || options === void 0 ? void 0 : options.WEIGHTS) {
        args.push("WEIGHTS", ...options.WEIGHTS.map((weight) => weight.toString()));
      }
      if (options === null || options === void 0 ? void 0 : options.AGGREGATE) {
        args.push("AGGREGATE", options.AGGREGATE);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZLEXCOUNT.js
var require_ZLEXCOUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZLEXCOUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, min, max) {
      return [
        "ZLEXCOUNT",
        key,
        min,
        max
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZMSCORE.js
var require_ZMSCORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZMSCORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, member) {
      return (0, generic_transformers_1.pushVerdictArguments)(["ZMSCORE", key], member);
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_2 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_2.transformNumberInfinityNullArrayReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZPOPMAX.js
var require_ZPOPMAX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZPOPMAX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return [
        "ZPOPMAX",
        key
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetMemberNullReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZPOPMAX_COUNT.js
var require_ZPOPMAX_COUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZPOPMAX_COUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var ZPOPMAX_1 = require_ZPOPMAX();
    var ZPOPMAX_2 = require_ZPOPMAX();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return ZPOPMAX_2.FIRST_KEY_INDEX;
    } });
    function transformArguments(key, count2) {
      return [
        ...(0, ZPOPMAX_1.transformArguments)(key),
        count2.toString()
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetWithScoresReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZPOPMIN.js
var require_ZPOPMIN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZPOPMIN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key) {
      return [
        "ZPOPMIN",
        key
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetMemberNullReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZPOPMIN_COUNT.js
var require_ZPOPMIN_COUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZPOPMIN_COUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var ZPOPMIN_1 = require_ZPOPMIN();
    var ZPOPMIN_2 = require_ZPOPMIN();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return ZPOPMIN_2.FIRST_KEY_INDEX;
    } });
    function transformArguments(key, count2) {
      return [
        ...(0, ZPOPMIN_1.transformArguments)(key),
        count2.toString()
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetWithScoresReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANDMEMBER.js
var require_ZRANDMEMBER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANDMEMBER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key) {
      return ["ZRANDMEMBER", key];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANDMEMBER_COUNT.js
var require_ZRANDMEMBER_COUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANDMEMBER_COUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var ZRANDMEMBER_1 = require_ZRANDMEMBER();
    var ZRANDMEMBER_2 = require_ZRANDMEMBER();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return ZRANDMEMBER_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return ZRANDMEMBER_2.IS_READ_ONLY;
    } });
    function transformArguments(key, count2) {
      return [
        ...(0, ZRANDMEMBER_1.transformArguments)(key),
        count2.toString()
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANDMEMBER_COUNT_WITHSCORES.js
var require_ZRANDMEMBER_COUNT_WITHSCORES = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANDMEMBER_COUNT_WITHSCORES.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var ZRANDMEMBER_COUNT_1 = require_ZRANDMEMBER_COUNT();
    var ZRANDMEMBER_COUNT_2 = require_ZRANDMEMBER_COUNT();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return ZRANDMEMBER_COUNT_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return ZRANDMEMBER_COUNT_2.IS_READ_ONLY;
    } });
    function transformArguments(...args) {
      return [
        ...(0, ZRANDMEMBER_COUNT_1.transformArguments)(...args),
        "WITHSCORES"
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetWithScoresReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANGE.js
var require_ZRANGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, min, max, options) {
      const args = [
        "ZRANGE",
        key,
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(min),
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(max)
      ];
      switch (options === null || options === void 0 ? void 0 : options.BY) {
        case "SCORE":
          args.push("BYSCORE");
          break;
        case "LEX":
          args.push("BYLEX");
          break;
      }
      if (options === null || options === void 0 ? void 0 : options.REV) {
        args.push("REV");
      }
      if (options === null || options === void 0 ? void 0 : options.LIMIT) {
        args.push("LIMIT", options.LIMIT.offset.toString(), options.LIMIT.count.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANGE_WITHSCORES.js
var require_ZRANGE_WITHSCORES = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANGE_WITHSCORES.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var ZRANGE_1 = require_ZRANGE();
    var ZRANGE_2 = require_ZRANGE();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return ZRANGE_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return ZRANGE_2.IS_READ_ONLY;
    } });
    function transformArguments(...args) {
      return [
        ...(0, ZRANGE_1.transformArguments)(...args),
        "WITHSCORES"
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetWithScoresReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANGEBYLEX.js
var require_ZRANGEBYLEX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANGEBYLEX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, min, max, options) {
      const args = [
        "ZRANGEBYLEX",
        key,
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(min),
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(max)
      ];
      if (options === null || options === void 0 ? void 0 : options.LIMIT) {
        args.push("LIMIT", options.LIMIT.offset.toString(), options.LIMIT.count.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANGEBYSCORE.js
var require_ZRANGEBYSCORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANGEBYSCORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, min, max, options) {
      const args = [
        "ZRANGEBYSCORE",
        key,
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(min),
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(max)
      ];
      if (options === null || options === void 0 ? void 0 : options.LIMIT) {
        args.push("LIMIT", options.LIMIT.offset.toString(), options.LIMIT.count.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANGEBYSCORE_WITHSCORES.js
var require_ZRANGEBYSCORE_WITHSCORES = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANGEBYSCORE_WITHSCORES.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var ZRANGEBYSCORE_1 = require_ZRANGEBYSCORE();
    var ZRANGEBYSCORE_2 = require_ZRANGEBYSCORE();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return ZRANGEBYSCORE_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return ZRANGEBYSCORE_2.IS_READ_ONLY;
    } });
    function transformArguments(key, min, max, options) {
      return [
        ...(0, ZRANGEBYSCORE_1.transformArguments)(key, min, max, options),
        "WITHSCORES"
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetWithScoresReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANGESTORE.js
var require_ZRANGESTORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANGESTORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(dst, src, min, max, options) {
      const args = [
        "ZRANGESTORE",
        dst,
        src,
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(min),
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(max)
      ];
      switch (options === null || options === void 0 ? void 0 : options.BY) {
        case "SCORE":
          args.push("BYSCORE");
          break;
        case "LEX":
          args.push("BYLEX");
          break;
      }
      if (options === null || options === void 0 ? void 0 : options.REV) {
        args.push("REV");
      }
      if (options === null || options === void 0 ? void 0 : options.LIMIT) {
        args.push("LIMIT", options.LIMIT.offset.toString(), options.LIMIT.count.toString());
      }
      if (options === null || options === void 0 ? void 0 : options.WITHSCORES) {
        args.push("WITHSCORES");
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      if (typeof reply !== "number") {
        throw new TypeError(`Upgrade to Redis 6.2.5 and up (https://github.com/redis/redis/pull/9089)`);
      }
      return reply;
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZRANK.js
var require_ZRANK = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZRANK.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, member) {
      return ["ZRANK", key, member];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZREM.js
var require_ZREM = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZREM.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, member) {
      return (0, generic_transformers_1.pushVerdictArguments)(["ZREM", key], member);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZREMRANGEBYLEX.js
var require_ZREMRANGEBYLEX = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZREMRANGEBYLEX.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, min, max) {
      return [
        "ZREMRANGEBYLEX",
        key,
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(min),
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(max)
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZREMRANGEBYRANK.js
var require_ZREMRANGEBYRANK = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZREMRANGEBYRANK.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, start, stop) {
      return ["ZREMRANGEBYRANK", key, start.toString(), stop.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZREMRANGEBYSCORE.js
var require_ZREMRANGEBYSCORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZREMRANGEBYSCORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(key, min, max) {
      return [
        "ZREMRANGEBYSCORE",
        key,
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(min),
        (0, generic_transformers_1.transformStringNumberInfinityArgument)(max)
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZREVRANK.js
var require_ZREVRANK = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZREVRANK.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, member) {
      return ["ZREVRANK", key, member];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZSCAN.js
var require_ZSCAN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZSCAN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, cursor, options) {
      return (0, generic_transformers_1.pushScanArguments)([
        "ZSCAN",
        key
      ], cursor, options);
    }
    exports.transformArguments = transformArguments;
    function transformReply([cursor, rawMembers]) {
      const parsedMembers = [];
      for (let i2 = 0; i2 < rawMembers.length; i2 += 2) {
        parsedMembers.push({
          value: rawMembers[i2],
          score: (0, generic_transformers_1.transformNumberInfinityReply)(rawMembers[i2 + 1])
        });
      }
      return {
        cursor: Number(cursor),
        members: parsedMembers
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZSCORE.js
var require_ZSCORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZSCORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, member) {
      return ["ZSCORE", key, member];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformNumberInfinityNullReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZUNION.js
var require_ZUNION = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZUNION.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 2;
    exports.IS_READ_ONLY = true;
    function transformArguments(keys, options) {
      const args = (0, generic_transformers_1.pushVerdictArgument)(["ZUNION"], keys);
      if (options === null || options === void 0 ? void 0 : options.WEIGHTS) {
        args.push("WEIGHTS", ...options.WEIGHTS.map((weight) => weight.toString()));
      }
      if (options === null || options === void 0 ? void 0 : options.AGGREGATE) {
        args.push("AGGREGATE", options.AGGREGATE);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZUNION_WITHSCORES.js
var require_ZUNION_WITHSCORES = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZUNION_WITHSCORES.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    var ZUNION_1 = require_ZUNION();
    var ZUNION_2 = require_ZUNION();
    Object.defineProperty(exports, "FIRST_KEY_INDEX", { enumerable: true, get: function() {
      return ZUNION_2.FIRST_KEY_INDEX;
    } });
    Object.defineProperty(exports, "IS_READ_ONLY", { enumerable: true, get: function() {
      return ZUNION_2.IS_READ_ONLY;
    } });
    function transformArguments(...args) {
      return [
        ...(0, ZUNION_1.transformArguments)(...args),
        "WITHSCORES"
      ];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformSortedSetWithScoresReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ZUNIONSTORE.js
var require_ZUNIONSTORE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ZUNIONSTORE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(destination, keys, options) {
      const args = (0, generic_transformers_1.pushVerdictArgument)(["ZUNIONSTORE", destination], keys);
      if (options === null || options === void 0 ? void 0 : options.WEIGHTS) {
        args.push("WEIGHTS", ...options.WEIGHTS.map((weight) => weight.toString()));
      }
      if (options === null || options === void 0 ? void 0 : options.AGGREGATE) {
        args.push("AGGREGATE", options.AGGREGATE);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/cluster/commands.js
var require_commands = __commonJS({
  "node_modules/@node-redis/client/dist/lib/cluster/commands.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var APPEND = require_APPEND();
    var BITCOUNT = require_BITCOUNT();
    var BITFIELD = require_BITFIELD();
    var BITOP = require_BITOP();
    var BITPOS = require_BITPOS();
    var BLMOVE = require_BLMOVE();
    var BLPOP = require_BLPOP();
    var BRPOP = require_BRPOP();
    var BRPOPLPUSH = require_BRPOPLPUSH();
    var BZPOPMAX = require_BZPOPMAX();
    var BZPOPMIN = require_BZPOPMIN();
    var COPY = require_COPY();
    var DECR = require_DECR();
    var DECRBY = require_DECRBY();
    var DEL = require_DEL();
    var DUMP = require_DUMP();
    var EVAL = require_EVAL();
    var EVALSHA = require_EVALSHA();
    var EXISTS = require_EXISTS();
    var EXPIRE = require_EXPIRE();
    var EXPIREAT = require_EXPIREAT();
    var GEOADD = require_GEOADD();
    var GEODIST = require_GEODIST();
    var GEOHASH = require_GEOHASH();
    var GEOPOS = require_GEOPOS();
    var GEOSEARCH_WITH = require_GEOSEARCH_WITH();
    var GEOSEARCH = require_GEOSEARCH();
    var GEOSEARCHSTORE = require_GEOSEARCHSTORE();
    var GET = require_GET();
    var GETBIT = require_GETBIT();
    var GETDEL = require_GETDEL();
    var GETEX = require_GETEX();
    var GETRANGE = require_GETRANGE();
    var GETSET = require_GETSET();
    var HDEL = require_HDEL();
    var HEXISTS = require_HEXISTS();
    var HGET = require_HGET();
    var HGETALL = require_HGETALL();
    var HINCRBY = require_HINCRBY();
    var HINCRBYFLOAT = require_HINCRBYFLOAT();
    var HKEYS = require_HKEYS();
    var HLEN = require_HLEN();
    var HMGET = require_HMGET();
    var HRANDFIELD_COUNT_WITHVALUES = require_HRANDFIELD_COUNT_WITHVALUES();
    var HRANDFIELD_COUNT = require_HRANDFIELD_COUNT();
    var HRANDFIELD = require_HRANDFIELD();
    var HSCAN = require_HSCAN();
    var HSET = require_HSET();
    var HSETNX = require_HSETNX();
    var HSTRLEN = require_HSTRLEN();
    var HVALS = require_HVALS();
    var INCR = require_INCR();
    var INCRBY = require_INCRBY();
    var INCRBYFLOAT = require_INCRBYFLOAT();
    var LINDEX = require_LINDEX();
    var LINSERT = require_LINSERT();
    var LLEN = require_LLEN();
    var LMOVE = require_LMOVE();
    var LPOP_COUNT = require_LPOP_COUNT();
    var LPOP = require_LPOP();
    var LPOS_COUNT = require_LPOS_COUNT();
    var LPOS = require_LPOS();
    var LPUSH = require_LPUSH();
    var LPUSHX = require_LPUSHX();
    var LRANGE = require_LRANGE();
    var LREM = require_LREM();
    var LSET = require_LSET();
    var LTRIM = require_LTRIM();
    var MGET = require_MGET();
    var MIGRATE = require_MIGRATE();
    var MSET = require_MSET();
    var MSETNX = require_MSETNX();
    var PERSIST = require_PERSIST();
    var PEXPIRE = require_PEXPIRE();
    var PEXPIREAT = require_PEXPIREAT();
    var PFADD = require_PFADD();
    var PFCOUNT = require_PFCOUNT();
    var PFMERGE = require_PFMERGE();
    var PSETEX = require_PSETEX();
    var PTTL = require_PTTL();
    var PUBLISH = require_PUBLISH();
    var RENAME = require_RENAME();
    var RENAMENX = require_RENAMENX();
    var RPOP_COUNT = require_RPOP_COUNT();
    var RPOP = require_RPOP();
    var RPOPLPUSH = require_RPOPLPUSH();
    var RPUSH = require_RPUSH();
    var RPUSHX = require_RPUSHX();
    var SADD = require_SADD();
    var SCARD = require_SCARD();
    var SDIFF = require_SDIFF();
    var SDIFFSTORE = require_SDIFFSTORE();
    var SET = require_SET();
    var SETBIT = require_SETBIT();
    var SETEX = require_SETEX();
    var SETNX = require_SETNX();
    var SETRANGE = require_SETRANGE();
    var SINTER = require_SINTER();
    var SINTERSTORE = require_SINTERSTORE();
    var SISMEMBER = require_SISMEMBER();
    var SMEMBERS = require_SMEMBERS();
    var SMISMEMBER = require_SMISMEMBER();
    var SMOVE = require_SMOVE();
    var SORT = require_SORT();
    var SPOP = require_SPOP();
    var SRANDMEMBER_COUNT = require_SRANDMEMBER_COUNT();
    var SRANDMEMBER = require_SRANDMEMBER();
    var SREM = require_SREM();
    var SSCAN = require_SSCAN();
    var STRLEN = require_STRLEN();
    var SUNION = require_SUNION();
    var SUNIONSTORE = require_SUNIONSTORE();
    var TOUCH = require_TOUCH();
    var TTL = require_TTL();
    var TYPE = require_TYPE();
    var UNLINK = require_UNLINK();
    var WATCH = require_WATCH();
    var XACK = require_XACK();
    var XADD = require_XADD();
    var XAUTOCLAIM_JUSTID = require_XAUTOCLAIM_JUSTID();
    var XAUTOCLAIM = require_XAUTOCLAIM();
    var XCLAIM_JUSTID = require_XCLAIM_JUSTID();
    var XCLAIM = require_XCLAIM();
    var XDEL = require_XDEL();
    var XGROUP_CREATE = require_XGROUP_CREATE();
    var XGROUP_CREATECONSUMER = require_XGROUP_CREATECONSUMER();
    var XGROUP_DELCONSUMER = require_XGROUP_DELCONSUMER();
    var XGROUP_DESTROY = require_XGROUP_DESTROY();
    var XGROUP_SETID = require_XGROUP_SETID();
    var XINFO_CONSUMERS = require_XINFO_CONSUMERS();
    var XINFO_GROUPS = require_XINFO_GROUPS();
    var XINFO_STREAM = require_XINFO_STREAM();
    var XLEN = require_XLEN();
    var XPENDING_RANGE = require_XPENDING_RANGE();
    var XPENDING = require_XPENDING();
    var XRANGE = require_XRANGE();
    var XREAD = require_XREAD();
    var XREADGROUP = require_XREADGROUP();
    var XREVRANGE = require_XREVRANGE();
    var XTRIM = require_XTRIM();
    var ZADD = require_ZADD();
    var ZCARD = require_ZCARD();
    var ZCOUNT = require_ZCOUNT();
    var ZDIFF_WITHSCORES = require_ZDIFF_WITHSCORES();
    var ZDIFF = require_ZDIFF();
    var ZDIFFSTORE = require_ZDIFFSTORE();
    var ZINCRBY = require_ZINCRBY();
    var ZINTER_WITHSCORES = require_ZINTER_WITHSCORES();
    var ZINTER = require_ZINTER();
    var ZINTERSTORE = require_ZINTERSTORE();
    var ZLEXCOUNT = require_ZLEXCOUNT();
    var ZMSCORE = require_ZMSCORE();
    var ZPOPMAX_COUNT = require_ZPOPMAX_COUNT();
    var ZPOPMAX = require_ZPOPMAX();
    var ZPOPMIN_COUNT = require_ZPOPMIN_COUNT();
    var ZPOPMIN = require_ZPOPMIN();
    var ZRANDMEMBER_COUNT_WITHSCORES = require_ZRANDMEMBER_COUNT_WITHSCORES();
    var ZRANDMEMBER_COUNT = require_ZRANDMEMBER_COUNT();
    var ZRANDMEMBER = require_ZRANDMEMBER();
    var ZRANGE_WITHSCORES = require_ZRANGE_WITHSCORES();
    var ZRANGE = require_ZRANGE();
    var ZRANGEBYLEX = require_ZRANGEBYLEX();
    var ZRANGEBYSCORE_WITHSCORES = require_ZRANGEBYSCORE_WITHSCORES();
    var ZRANGEBYSCORE = require_ZRANGEBYSCORE();
    var ZRANGESTORE = require_ZRANGESTORE();
    var ZRANK = require_ZRANK();
    var ZREM = require_ZREM();
    var ZREMRANGEBYLEX = require_ZREMRANGEBYLEX();
    var ZREMRANGEBYRANK = require_ZREMRANGEBYRANK();
    var ZREMRANGEBYSCORE = require_ZREMRANGEBYSCORE();
    var ZREVRANK = require_ZREVRANK();
    var ZSCAN = require_ZSCAN();
    var ZSCORE = require_ZSCORE();
    var ZUNION_WITHSCORES = require_ZUNION_WITHSCORES();
    var ZUNION = require_ZUNION();
    var ZUNIONSTORE = require_ZUNIONSTORE();
    exports.default = {
      APPEND,
      append: APPEND,
      BITCOUNT,
      bitCount: BITCOUNT,
      BITFIELD,
      bitField: BITFIELD,
      BITOP,
      bitOp: BITOP,
      BITPOS,
      bitPos: BITPOS,
      BLMOVE,
      blMove: BLMOVE,
      BLPOP,
      blPop: BLPOP,
      BRPOP,
      brPop: BRPOP,
      BRPOPLPUSH,
      brPopLPush: BRPOPLPUSH,
      BZPOPMAX,
      bzPopMax: BZPOPMAX,
      BZPOPMIN,
      bzPopMin: BZPOPMIN,
      COPY,
      copy: COPY,
      DECR,
      decr: DECR,
      DECRBY,
      decrBy: DECRBY,
      DEL,
      del: DEL,
      DUMP,
      dump: DUMP,
      EVAL,
      eval: EVAL,
      EVALSHA,
      evalSha: EVALSHA,
      EXISTS,
      exists: EXISTS,
      EXPIRE,
      expire: EXPIRE,
      EXPIREAT,
      expireAt: EXPIREAT,
      GEOADD,
      geoAdd: GEOADD,
      GEODIST,
      geoDist: GEODIST,
      GEOHASH,
      geoHash: GEOHASH,
      GEOPOS,
      geoPos: GEOPOS,
      GEOSEARCH_WITH,
      geoSearchWith: GEOSEARCH_WITH,
      GEOSEARCH,
      geoSearch: GEOSEARCH,
      GEOSEARCHSTORE,
      geoSearchStore: GEOSEARCHSTORE,
      GET,
      get: GET,
      GETBIT,
      getBit: GETBIT,
      GETDEL,
      getDel: GETDEL,
      GETEX,
      getEx: GETEX,
      GETRANGE,
      getRange: GETRANGE,
      GETSET,
      getSet: GETSET,
      HDEL,
      hDel: HDEL,
      HEXISTS,
      hExists: HEXISTS,
      HGET,
      hGet: HGET,
      HGETALL,
      hGetAll: HGETALL,
      HINCRBY,
      hIncrBy: HINCRBY,
      HINCRBYFLOAT,
      hIncrByFloat: HINCRBYFLOAT,
      HKEYS,
      hKeys: HKEYS,
      HLEN,
      hLen: HLEN,
      HMGET,
      hmGet: HMGET,
      HRANDFIELD_COUNT_WITHVALUES,
      hRandFieldCountWithValues: HRANDFIELD_COUNT_WITHVALUES,
      HRANDFIELD_COUNT,
      hRandFieldCount: HRANDFIELD_COUNT,
      HRANDFIELD,
      hRandField: HRANDFIELD,
      HSCAN,
      hScan: HSCAN,
      HSET,
      hSet: HSET,
      HSETNX,
      hSetNX: HSETNX,
      HSTRLEN,
      hStrLen: HSTRLEN,
      HVALS,
      hVals: HVALS,
      INCR,
      incr: INCR,
      INCRBY,
      incrBy: INCRBY,
      INCRBYFLOAT,
      incrByFloat: INCRBYFLOAT,
      LINDEX,
      lIndex: LINDEX,
      LINSERT,
      lInsert: LINSERT,
      LLEN,
      lLen: LLEN,
      LMOVE,
      lMove: LMOVE,
      LPOP_COUNT,
      lPopCount: LPOP_COUNT,
      LPOP,
      lPop: LPOP,
      LPOS_COUNT,
      lPosCount: LPOS_COUNT,
      LPOS,
      lPos: LPOS,
      LPUSH,
      lPush: LPUSH,
      LPUSHX,
      lPushX: LPUSHX,
      LRANGE,
      lRange: LRANGE,
      LREM,
      lRem: LREM,
      LSET,
      lSet: LSET,
      LTRIM,
      lTrim: LTRIM,
      MGET,
      mGet: MGET,
      MIGRATE,
      migrate: MIGRATE,
      MSET,
      mSet: MSET,
      MSETNX,
      mSetNX: MSETNX,
      PERSIST,
      persist: PERSIST,
      PEXPIRE,
      pExpire: PEXPIRE,
      PEXPIREAT,
      pExpireAt: PEXPIREAT,
      PFADD,
      pfAdd: PFADD,
      PFCOUNT,
      pfCount: PFCOUNT,
      PFMERGE,
      pfMerge: PFMERGE,
      PSETEX,
      pSetEx: PSETEX,
      PTTL,
      pTTL: PTTL,
      PUBLISH,
      publish: PUBLISH,
      RENAME,
      rename: RENAME,
      RENAMENX,
      renameNX: RENAMENX,
      RPOP_COUNT,
      rPopCount: RPOP_COUNT,
      RPOP,
      rPop: RPOP,
      RPOPLPUSH,
      rPopLPush: RPOPLPUSH,
      RPUSH,
      rPush: RPUSH,
      RPUSHX,
      rPushX: RPUSHX,
      SADD,
      sAdd: SADD,
      SCARD,
      sCard: SCARD,
      SDIFF,
      sDiff: SDIFF,
      SDIFFSTORE,
      sDiffStore: SDIFFSTORE,
      SINTER,
      sInter: SINTER,
      SINTERSTORE,
      sInterStore: SINTERSTORE,
      SET,
      set: SET,
      SETBIT,
      setBit: SETBIT,
      SETEX,
      setEx: SETEX,
      SETNX,
      setNX: SETNX,
      SETRANGE,
      setRange: SETRANGE,
      SISMEMBER,
      sIsMember: SISMEMBER,
      SMEMBERS,
      sMembers: SMEMBERS,
      SMISMEMBER,
      smIsMember: SMISMEMBER,
      SMOVE,
      sMove: SMOVE,
      SORT,
      sort: SORT,
      SPOP,
      sPop: SPOP,
      SRANDMEMBER_COUNT,
      sRandMemberCount: SRANDMEMBER_COUNT,
      SRANDMEMBER,
      sRandMember: SRANDMEMBER,
      SREM,
      sRem: SREM,
      SSCAN,
      sScan: SSCAN,
      STRLEN,
      strLen: STRLEN,
      SUNION,
      sUnion: SUNION,
      SUNIONSTORE,
      sUnionStore: SUNIONSTORE,
      TOUCH,
      touch: TOUCH,
      TTL,
      ttl: TTL,
      TYPE,
      type: TYPE,
      UNLINK,
      unlink: UNLINK,
      WATCH,
      watch: WATCH,
      XACK,
      xAck: XACK,
      XADD,
      xAdd: XADD,
      XAUTOCLAIM_JUSTID,
      xAutoClaimJustId: XAUTOCLAIM_JUSTID,
      XAUTOCLAIM,
      xAutoClaim: XAUTOCLAIM,
      XCLAIM,
      xClaim: XCLAIM,
      XCLAIM_JUSTID,
      xClaimJustId: XCLAIM_JUSTID,
      XDEL,
      xDel: XDEL,
      XGROUP_CREATE,
      xGroupCreate: XGROUP_CREATE,
      XGROUP_CREATECONSUMER,
      xGroupCreateConsumer: XGROUP_CREATECONSUMER,
      XGROUP_DELCONSUMER,
      xGroupDelConsumer: XGROUP_DELCONSUMER,
      XGROUP_DESTROY,
      xGroupDestroy: XGROUP_DESTROY,
      XGROUP_SETID,
      xGroupSetId: XGROUP_SETID,
      XINFO_CONSUMERS,
      xInfoConsumers: XINFO_CONSUMERS,
      XINFO_GROUPS,
      xInfoGroups: XINFO_GROUPS,
      XINFO_STREAM,
      xInfoStream: XINFO_STREAM,
      XLEN,
      xLen: XLEN,
      XPENDING_RANGE,
      xPendingRange: XPENDING_RANGE,
      XPENDING,
      xPending: XPENDING,
      XRANGE,
      xRange: XRANGE,
      XREAD,
      xRead: XREAD,
      XREADGROUP,
      xReadGroup: XREADGROUP,
      XREVRANGE,
      xRevRange: XREVRANGE,
      XTRIM,
      xTrim: XTRIM,
      ZADD,
      zAdd: ZADD,
      ZCARD,
      zCard: ZCARD,
      ZCOUNT,
      zCount: ZCOUNT,
      ZDIFF_WITHSCORES,
      zDiffWithScores: ZDIFF_WITHSCORES,
      ZDIFF,
      zDiff: ZDIFF,
      ZDIFFSTORE,
      zDiffStore: ZDIFFSTORE,
      ZINCRBY,
      zIncrBy: ZINCRBY,
      ZINTER_WITHSCORES,
      zInterWithScores: ZINTER_WITHSCORES,
      ZINTER,
      zInter: ZINTER,
      ZINTERSTORE,
      zInterStore: ZINTERSTORE,
      ZLEXCOUNT,
      zLexCount: ZLEXCOUNT,
      ZMSCORE,
      zmScore: ZMSCORE,
      ZPOPMAX_COUNT,
      zPopMaxCount: ZPOPMAX_COUNT,
      ZPOPMAX,
      zPopMax: ZPOPMAX,
      ZPOPMIN_COUNT,
      zPopMinCount: ZPOPMIN_COUNT,
      ZPOPMIN,
      zPopMin: ZPOPMIN,
      ZRANDMEMBER_COUNT_WITHSCORES,
      zRandMemberCountWithScores: ZRANDMEMBER_COUNT_WITHSCORES,
      ZRANDMEMBER_COUNT,
      zRandMemberCount: ZRANDMEMBER_COUNT,
      ZRANDMEMBER,
      zRandMember: ZRANDMEMBER,
      ZRANGE_WITHSCORES,
      zRangeWithScores: ZRANGE_WITHSCORES,
      ZRANGE,
      zRange: ZRANGE,
      ZRANGEBYLEX,
      zRangeByLex: ZRANGEBYLEX,
      ZRANGEBYSCORE_WITHSCORES,
      zRangeByScoreWithScores: ZRANGEBYSCORE_WITHSCORES,
      ZRANGEBYSCORE,
      zRangeByScore: ZRANGEBYSCORE,
      ZRANGESTORE,
      zRangeStore: ZRANGESTORE,
      ZRANK,
      zRank: ZRANK,
      ZREM,
      zRem: ZREM,
      ZREMRANGEBYLEX,
      zRemRangeByLex: ZREMRANGEBYLEX,
      ZREMRANGEBYRANK,
      zRemRangeByRank: ZREMRANGEBYRANK,
      ZREMRANGEBYSCORE,
      zRemRangeByScore: ZREMRANGEBYSCORE,
      ZREVRANK,
      zRevRank: ZREVRANK,
      ZSCAN,
      zScan: ZSCAN,
      ZSCORE,
      zScore: ZSCORE,
      ZUNION_WITHSCORES,
      zUnionWithScores: ZUNION_WITHSCORES,
      ZUNION,
      zUnion: ZUNION,
      ZUNIONSTORE,
      zUnionStore: ZUNIONSTORE
    };
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_CAT.js
var require_ACL_CAT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_CAT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(categoryName) {
      const args = ["ACL", "CAT"];
      if (categoryName) {
        args.push(categoryName);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_DELUSER.js
var require_ACL_DELUSER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_DELUSER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    var generic_transformers_1 = require_generic_transformers();
    function transformArguments(username) {
      return (0, generic_transformers_1.pushVerdictArguments)(["ACL", "DELUSER"], username);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_GENPASS.js
var require_ACL_GENPASS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_GENPASS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(bits) {
      const args = ["ACL", "GENPASS"];
      if (bits) {
        args.push(bits.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_GETUSER.js
var require_ACL_GETUSER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_GETUSER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    function transformArguments(username) {
      return ["ACL", "GETUSER", username];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return {
        flags: reply[1],
        passwords: reply[3],
        commands: reply[5],
        keys: reply[7],
        channels: reply[9]
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_LIST.js
var require_ACL_LIST = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_LIST.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["ACL", "LIST"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_LOAD.js
var require_ACL_LOAD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_LOAD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["ACL", "LOAD"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_LOG_RESET.js
var require_ACL_LOG_RESET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_LOG_RESET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["ACL", "LOG", "RESET"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_LOG.js
var require_ACL_LOG = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_LOG.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    function transformArguments(count2) {
      const args = ["ACL", "LOG"];
      if (count2) {
        args.push(count2.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return reply.map((log) => ({
        count: log[1],
        reason: log[3],
        context: log[5],
        object: log[7],
        username: log[9],
        ageSeconds: Number(log[11]),
        clientInfo: log[13]
      }));
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_SAVE.js
var require_ACL_SAVE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_SAVE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["ACL", "SAVE"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_SETUSER.js
var require_ACL_SETUSER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_SETUSER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    var generic_transformers_1 = require_generic_transformers();
    function transformArguments(username, rule) {
      return (0, generic_transformers_1.pushVerdictArguments)(["ACL", "SETUSER", username], rule);
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_USERS.js
var require_ACL_USERS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_USERS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["ACL", "USERS"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ACL_WHOAMI.js
var require_ACL_WHOAMI = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ACL_WHOAMI.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["ACL", "WHOAMI"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ASKING.js
var require_ASKING = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ASKING.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["ASKING"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/AUTH.js
var require_AUTH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/AUTH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments({ username, password }) {
      if (!username) {
        return ["AUTH", password];
      }
      return ["AUTH", username, password];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BGREWRITEAOF.js
var require_BGREWRITEAOF = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BGREWRITEAOF.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["BGREWRITEAOF"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/BGSAVE.js
var require_BGSAVE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/BGSAVE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(options) {
      const args = ["BGSAVE"];
      if (options === null || options === void 0 ? void 0 : options.SCHEDULE) {
        args.push("SCHEDULE");
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLIENT_CACHING.js
var require_CLIENT_CACHING = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLIENT_CACHING.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(value) {
      return [
        "CLIENT",
        "CACHING",
        value ? "YES" : "NO"
      ];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLIENT_GETNAME.js
var require_CLIENT_GETNAME = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLIENT_GETNAME.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["CLIENT", "GETNAME"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLIENT_GETREDIR.js
var require_CLIENT_GETREDIR = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLIENT_GETREDIR.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["CLIENT", "GETREDIR"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLIENT_ID.js
var require_CLIENT_ID = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLIENT_ID.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments() {
      return ["CLIENT", "ID"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLIENT_KILL.js
var require_CLIENT_KILL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLIENT_KILL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.ClientKillFilters = void 0;
    var ClientKillFilters;
    (function(ClientKillFilters2) {
      ClientKillFilters2["ADDRESS"] = "ADDR";
      ClientKillFilters2["LOCAL_ADDRESS"] = "LADDR";
      ClientKillFilters2["ID"] = "ID";
      ClientKillFilters2["TYPE"] = "TYPE";
      ClientKillFilters2["USER"] = "USER";
      ClientKillFilters2["SKIP_ME"] = "SKIPME";
    })(ClientKillFilters = exports.ClientKillFilters || (exports.ClientKillFilters = {}));
    function transformArguments(filters) {
      const args = ["CLIENT", "KILL"];
      if (Array.isArray(filters)) {
        for (const filter of filters) {
          pushFilter(args, filter);
        }
      } else {
        pushFilter(args, filters);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function pushFilter(args, filter) {
      if (filter === ClientKillFilters.SKIP_ME) {
        args.push("SKIPME");
        return;
      }
      args.push(filter.filter);
      switch (filter.filter) {
        case ClientKillFilters.ADDRESS:
          args.push(filter.address);
          break;
        case ClientKillFilters.LOCAL_ADDRESS:
          args.push(filter.localAddress);
          break;
        case ClientKillFilters.ID:
          args.push(typeof filter.id === "number" ? filter.id.toString() : filter.id);
          break;
        case ClientKillFilters.TYPE:
          args.push(filter.type);
          break;
        case ClientKillFilters.USER:
          args.push(filter.username);
          break;
        case ClientKillFilters.SKIP_ME:
          args.push(filter.skipMe ? "yes" : "no");
          break;
      }
    }
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLIENT_SETNAME.js
var require_CLIENT_SETNAME = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLIENT_SETNAME.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(name2) {
      return ["CLIENT", "SETNAME", name2];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLIENT_INFO.js
var require_CLIENT_INFO = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLIENT_INFO.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    function transformArguments() {
      return ["CLIENT", "INFO"];
    }
    exports.transformArguments = transformArguments;
    var REGEX = /=([^\s]*)/g;
    function transformReply(reply) {
      const [[, id2], [, addr], [, laddr], [, fd], [, name2], [, age], [, idle], [, flags], [, db], [, sub], [, psub], [, multi], [, qbuf], [, qbufFree], [, argvMem], [, obl], [, oll], [, omem], [, totMem], [, events], [, cmd], [, user], [, redir]] = [...reply.matchAll(REGEX)];
      return {
        id: Number(id2),
        addr,
        laddr,
        fd: Number(fd),
        name: name2,
        age: Number(age),
        idle: Number(idle),
        flags,
        db: Number(db),
        sub: Number(sub),
        psub: Number(psub),
        multi: Number(multi),
        qbuf: Number(qbuf),
        qbufFree: Number(qbufFree),
        argvMem: Number(argvMem),
        obl: Number(obl),
        oll: Number(oll),
        omem: Number(omem),
        totMem: Number(totMem),
        events,
        cmd,
        user,
        redir: Number(redir)
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLUSTER_ADDSLOTS.js
var require_CLUSTER_ADDSLOTS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLUSTER_ADDSLOTS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(slots) {
      const args = ["CLUSTER", "ADDSLOTS"];
      if (typeof slots === "number") {
        args.push(slots.toString());
      } else {
        args.push(...slots.map(String));
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLUSTER_FLUSHSLOTS.js
var require_CLUSTER_FLUSHSLOTS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLUSTER_FLUSHSLOTS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["CLUSTER", "FLUSHSLOTS"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLUSTER_INFO.js
var require_CLUSTER_INFO = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLUSTER_INFO.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.extractLineValue = exports.transformReply = exports.transformArguments = void 0;
    function transformArguments() {
      return ["CLUSTER", "INFO"];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      const lines = reply.split("\r\n");
      return {
        state: extractLineValue(lines[0]),
        slots: {
          assigned: Number(extractLineValue(lines[1])),
          ok: Number(extractLineValue(lines[2])),
          pfail: Number(extractLineValue(lines[3])),
          fail: Number(extractLineValue(lines[4]))
        },
        knownNodes: Number(extractLineValue(lines[5])),
        size: Number(extractLineValue(lines[6])),
        currentEpoch: Number(extractLineValue(lines[7])),
        myEpoch: Number(extractLineValue(lines[8])),
        stats: {
          messagesSent: Number(extractLineValue(lines[9])),
          messagesReceived: Number(extractLineValue(lines[10]))
        }
      };
    }
    exports.transformReply = transformReply;
    function extractLineValue(line) {
      return line.substring(line.indexOf(":") + 1);
    }
    exports.extractLineValue = extractLineValue;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLUSTER_NODES.js
var require_CLUSTER_NODES = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLUSTER_NODES.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.RedisClusterNodeLinkStates = exports.transformArguments = void 0;
    function transformArguments() {
      return ["CLUSTER", "NODES"];
    }
    exports.transformArguments = transformArguments;
    var RedisClusterNodeLinkStates;
    (function(RedisClusterNodeLinkStates2) {
      RedisClusterNodeLinkStates2["CONNECTED"] = "connected";
      RedisClusterNodeLinkStates2["DISCONNECTED"] = "disconnected";
    })(RedisClusterNodeLinkStates = exports.RedisClusterNodeLinkStates || (exports.RedisClusterNodeLinkStates = {}));
    function transformReply(reply) {
      const lines = reply.split("\n");
      lines.pop();
      const mastersMap = new Map(), replicasMap = new Map();
      for (const line of lines) {
        const [id2, url, flags, masterId, pingSent, pongRecv, configEpoch, linkState, ...slots] = line.split(" "), node = __spreadProps(__spreadValues({
          id: id2,
          url
        }, transformNodeUrl(url)), {
          flags: flags.split(","),
          pingSent: Number(pingSent),
          pongRecv: Number(pongRecv),
          configEpoch: Number(configEpoch),
          linkState
        });
        if (masterId === "-") {
          let replicas = replicasMap.get(id2);
          if (!replicas) {
            replicas = [];
            replicasMap.set(id2, replicas);
          }
          mastersMap.set(id2, __spreadProps(__spreadValues({}, node), {
            slots: slots.map((slot) => {
              const [fromString, toString] = slot.split("-", 2), from = Number(fromString);
              return {
                from,
                to: toString ? Number(toString) : from
              };
            }),
            replicas
          }));
        } else {
          const replicas = replicasMap.get(masterId);
          if (!replicas) {
            replicasMap.set(masterId, [node]);
          } else {
            replicas.push(node);
          }
        }
      }
      return [...mastersMap.values()];
    }
    exports.transformReply = transformReply;
    function transformNodeUrl(url) {
      const indexOfColon = url.indexOf(":"), indexOfAt = url.indexOf("@", indexOfColon), host = url.substring(0, indexOfColon);
      if (indexOfAt === -1) {
        return {
          host,
          port: Number(url.substring(indexOfColon + 1)),
          cport: null
        };
      }
      return {
        host: url.substring(0, indexOfColon),
        port: Number(url.substring(indexOfColon + 1, indexOfAt)),
        cport: Number(url.substring(indexOfAt + 1))
      };
    }
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLUSTER_MEET.js
var require_CLUSTER_MEET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLUSTER_MEET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(ip, port) {
      return ["CLUSTER", "MEET", ip, port.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLUSTER_RESET.js
var require_CLUSTER_RESET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLUSTER_RESET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(mode) {
      const args = ["CLUSTER", "RESET"];
      if (mode) {
        args.push(mode);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLUSTER_SETSLOT.js
var require_CLUSTER_SETSLOT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLUSTER_SETSLOT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.ClusterSlotStates = void 0;
    var ClusterSlotStates;
    (function(ClusterSlotStates2) {
      ClusterSlotStates2["IMPORTING"] = "IMPORTING";
      ClusterSlotStates2["MIGRATING"] = "MIGRATING";
      ClusterSlotStates2["STABLE"] = "STABLE";
      ClusterSlotStates2["NODE"] = "NODE";
    })(ClusterSlotStates = exports.ClusterSlotStates || (exports.ClusterSlotStates = {}));
    function transformArguments(slot, state, nodeId) {
      const args = ["CLUSTER", "SETSLOT", slot.toString(), state];
      if (nodeId) {
        args.push(nodeId);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CLUSTER_SLOTS.js
var require_CLUSTER_SLOTS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CLUSTER_SLOTS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    function transformArguments() {
      return ["CLUSTER", "SLOTS"];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return reply.map(([from, to, master, ...replicas]) => {
        return {
          from,
          to,
          master: transformNode(master),
          replicas: replicas.map(transformNode)
        };
      });
    }
    exports.transformReply = transformReply;
    function transformNode([ip, port, id2]) {
      return {
        ip,
        port,
        id: id2
      };
    }
  }
});

// node_modules/@node-redis/client/dist/lib/commands/COMMAND_COUNT.js
var require_COMMAND_COUNT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/COMMAND_COUNT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments() {
      return ["COMMAND", "COUNT"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/COMMAND_GETKEYS.js
var require_COMMAND_GETKEYS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/COMMAND_GETKEYS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments(args) {
      return ["COMMAND", "GETKEYS", ...args];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/COMMAND_INFO.js
var require_COMMAND_INFO = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/COMMAND_INFO.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.IS_READ_ONLY = true;
    function transformArguments(commands) {
      return ["COMMAND", "INFO", ...commands];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return reply.map((command) => command ? (0, generic_transformers_1.transformCommandReply)(command) : null);
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/COMMAND.js
var require_COMMAND = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/COMMAND.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.IS_READ_ONLY = true;
    function transformArguments() {
      return ["COMMAND"];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return reply.map(generic_transformers_1.transformCommandReply);
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CONFIG_GET.js
var require_CONFIG_GET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CONFIG_GET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    function transformArguments(parameter) {
      return ["CONFIG", "GET", parameter];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformTuplesReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CONFIG_RESETSTAT.js
var require_CONFIG_RESETSTAT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CONFIG_RESETSTAT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["CONFIG", "RESETSTAT"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CONFIG_REWRITE.js
var require_CONFIG_REWRITE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CONFIG_REWRITE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["CONFIG", "REWRITE"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/CONFIG_SET.js
var require_CONFIG_SET = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/CONFIG_SET.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(parameter, value) {
      return ["CONFIG", "SET", parameter, value];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/DBSIZE.js
var require_DBSIZE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/DBSIZE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments() {
      return ["DBSIZE"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/DISCARD.js
var require_DISCARD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/DISCARD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["DISCARD"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ECHO.js
var require_ECHO = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ECHO.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments(message) {
      return ["ECHO", message];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/FAILOVER.js
var require_FAILOVER = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/FAILOVER.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(options) {
      const args = ["FAILOVER"];
      if (options === null || options === void 0 ? void 0 : options.TO) {
        args.push("TO", options.TO.host, options.TO.port.toString());
        if (options.TO.FORCE) {
          args.push("FORCE");
        }
      }
      if (options === null || options === void 0 ? void 0 : options.ABORT) {
        args.push("ABORT");
      }
      if (options === null || options === void 0 ? void 0 : options.TIMEOUT) {
        args.push("TIMEOUT", options.TIMEOUT.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/FLUSHALL.js
var require_FLUSHALL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/FLUSHALL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.RedisFlushModes = void 0;
    var RedisFlushModes;
    (function(RedisFlushModes2) {
      RedisFlushModes2["ASYNC"] = "ASYNC";
      RedisFlushModes2["SYNC"] = "SYNC";
    })(RedisFlushModes = exports.RedisFlushModes || (exports.RedisFlushModes = {}));
    function transformArguments(mode) {
      const args = ["FLUSHALL"];
      if (mode) {
        args.push(mode);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/FLUSHDB.js
var require_FLUSHDB = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/FLUSHDB.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(mode) {
      const args = ["FLUSHDB"];
      if (mode) {
        args.push(mode);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/HELLO.js
var require_HELLO = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/HELLO.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    function transformArguments(options) {
      const args = ["HELLO"];
      if (options) {
        args.push(options.protover.toString());
        if (options.auth) {
          args.push("AUTH", options.auth.username, options.auth.password);
        }
        if (options.clientName) {
          args.push("SETNAME", options.clientName);
        }
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return {
        server: reply[1],
        version: reply[3],
        proto: reply[5],
        id: reply[7],
        mode: reply[9],
        role: reply[11],
        modules: reply[13]
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/INFO.js
var require_INFO = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/INFO.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments(section) {
      const args = ["INFO"];
      if (section) {
        args.push(section);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/KEYS.js
var require_KEYS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/KEYS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(pattern) {
      return ["KEYS", pattern];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LASTSAVE.js
var require_LASTSAVE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LASTSAVE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments() {
      return ["LASTSAVE"];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      return new Date(reply);
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/LOLWUT.js
var require_LOLWUT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/LOLWUT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments(version, ...optionalArguments) {
      const args = ["LOLWUT"];
      if (version) {
        args.push("VERSION", version.toString(), ...optionalArguments.map(String));
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MEMORY_DOCTOR.js
var require_MEMORY_DOCTOR = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MEMORY_DOCTOR.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["MEMORY", "DOCTOR"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MEMORY_MALLOC-STATS.js
var require_MEMORY_MALLOC_STATS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MEMORY_MALLOC-STATS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["MEMORY", "MALLOC-STATS"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MEMORY_PURGE.js
var require_MEMORY_PURGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MEMORY_PURGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["MEMORY", "PURGE"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MEMORY_STATS.js
var require_MEMORY_STATS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MEMORY_STATS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    function transformArguments() {
      return ["MEMORY", "STATS"];
    }
    exports.transformArguments = transformArguments;
    var FIELDS_MAPPING = {
      "peak.allocated": "peakAllocated",
      "total.allocated": "totalAllocated",
      "startup.allocated": "startupAllocated",
      "replication.backlog": "replicationBacklog",
      "clients.slaves": "clientsReplicas",
      "clients.normal": "clientsNormal",
      "aof.buffer": "aofBuffer",
      "lua.caches": "luaCaches",
      "overhead.total": "overheadTotal",
      "keys.count": "keysCount",
      "keys.bytes-per-key": "keysBytesPerKey",
      "dataset.bytes": "datasetBytes",
      "dataset.percentage": "datasetPercentage",
      "peak.percentage": "peakPercentage",
      "allocator.allocated": "allocatorAllocated",
      "allocator.active": "allocatorActive",
      "allocator.resident": "allocatorResident",
      "allocator-fragmentation.ratio": "allocatorFragmentationRatio",
      "allocator-fragmentation.bytes": "allocatorFragmentationBytes",
      "allocator-rss.ratio": "allocatorRssRatio",
      "allocator-rss.bytes": "allocatorRssBytes",
      "rss-overhead.ratio": "rssOverheadRatio",
      "rss-overhead.bytes": "rssOverheadBytes",
      "fragmentation": "fragmentation",
      "fragmentation.bytes": "fragmentationBytes"
    };
    var DB_FIELDS_MAPPING = {
      "overhead.hashtable.main": "overheadHashtableMain",
      "overhead.hashtable.expires": "overheadHashtableExpires"
    };
    function transformReply(rawReply) {
      const reply = {
        db: {}
      };
      for (let i2 = 0; i2 < rawReply.length; i2 += 2) {
        const key = rawReply[i2];
        if (key.startsWith("db.")) {
          const dbTuples = rawReply[i2 + 1], db = {};
          for (let j = 0; j < dbTuples.length; j += 2) {
            db[DB_FIELDS_MAPPING[dbTuples[j]]] = dbTuples[j + 1];
          }
          reply.db[key.substring(3)] = db;
          continue;
        }
        reply[FIELDS_MAPPING[key]] = Number(rawReply[i2 + 1]);
      }
      return reply;
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MEMORY_USAGE.js
var require_MEMORY_USAGE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MEMORY_USAGE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    exports.IS_READ_ONLY = true;
    function transformArguments(key, options) {
      const args = ["MEMORY", "USAGE", key];
      if (options === null || options === void 0 ? void 0 : options.SAMPLES) {
        args.push("SAMPLES", options.SAMPLES.toString());
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MODULE_LIST.js
var require_MODULE_LIST = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MODULE_LIST.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["MODULE", "LIST"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MODULE_LOAD.js
var require_MODULE_LOAD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MODULE_LOAD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(path, moduleArgs) {
      const args = ["MODULE", "LOAD", path];
      if (moduleArgs) {
        args.push(...moduleArgs);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MODULE_UNLOAD.js
var require_MODULE_UNLOAD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MODULE_UNLOAD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(name2) {
      return ["MODULE", "UNLOAD", name2];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/MOVE.js
var require_MOVE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/MOVE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    function transformArguments(key, db) {
      return ["MOVE", key, db.toString()];
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_1 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_1.transformBooleanReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PING.js
var require_PING = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PING.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["PING"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PUBSUB_CHANNELS.js
var require_PUBSUB_CHANNELS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PUBSUB_CHANNELS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments(pattern) {
      const args = ["PUBSUB", "CHANNELS"];
      if (pattern) {
        args.push(pattern);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PUBSUB_NUMPAT.js
var require_PUBSUB_NUMPAT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PUBSUB_NUMPAT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments() {
      return ["PUBSUB", "NUMPAT"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/PUBSUB_NUMSUB.js
var require_PUBSUB_NUMSUB = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/PUBSUB_NUMSUB.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.IS_READ_ONLY = true;
    function transformArguments(channels) {
      const args = ["PUBSUB", "NUMSUB"];
      if (channels) {
        (0, generic_transformers_1.pushVerdictArguments)(args, channels);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply(rawReply) {
      const transformedReply = Object.create(null);
      for (let i2 = 0; i2 < rawReply.length; i2 += 2) {
        transformedReply[rawReply[i2]] = rawReply[i2 + 1];
      }
      return transformedReply;
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/RANDOMKEY.js
var require_RANDOMKEY = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/RANDOMKEY.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments() {
      return ["RANDOMKEY"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/READONLY.js
var require_READONLY = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/READONLY.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["READONLY"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/READWRITE.js
var require_READWRITE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/READWRITE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["READWRITE"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/REPLICAOF.js
var require_REPLICAOF = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/REPLICAOF.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(host, port) {
      return ["REPLICAOF", host, port.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/RESTORE-ASKING.js
var require_RESTORE_ASKING = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/RESTORE-ASKING.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["RESTORE-ASKING"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/ROLE.js
var require_ROLE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/ROLE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = void 0;
    exports.IS_READ_ONLY = true;
    function transformArguments() {
      return ["ROLE"];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      switch (reply[0]) {
        case "master":
          return {
            role: "master",
            replicationOffest: reply[1],
            replicas: reply[2].map(([ip, port, replicationOffest]) => ({
              ip,
              port: Number(port),
              replicationOffest: Number(replicationOffest)
            }))
          };
        case "slave":
          return {
            role: "slave",
            master: {
              ip: reply[1],
              port: reply[2]
            },
            state: reply[3],
            dataReceived: reply[4]
          };
        case "sentinel":
          return {
            role: "sentinel",
            masterNames: reply[1]
          };
      }
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SAVE.js
var require_SAVE = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SAVE.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["SAVE"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SCAN.js
var require_SCAN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SCAN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = void 0;
    var generic_transformers_1 = require_generic_transformers();
    exports.IS_READ_ONLY = true;
    function transformArguments(cursor, options) {
      const args = (0, generic_transformers_1.pushScanArguments)(["SCAN"], cursor, options);
      if (options === null || options === void 0 ? void 0 : options.TYPE) {
        args.push("TYPE", options.TYPE);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
    function transformReply([cursor, keys]) {
      return {
        cursor: Number(cursor),
        keys
      };
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SCRIPT_DEBUG.js
var require_SCRIPT_DEBUG = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SCRIPT_DEBUG.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(mode) {
      return ["SCRIPT", "DEBUG", mode];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SCRIPT_EXISTS.js
var require_SCRIPT_EXISTS = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SCRIPT_EXISTS.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    var generic_transformers_1 = require_generic_transformers();
    function transformArguments(sha1) {
      return (0, generic_transformers_1.pushVerdictArguments)(["SCRIPT", "EXISTS"], sha1);
    }
    exports.transformArguments = transformArguments;
    var generic_transformers_2 = require_generic_transformers();
    Object.defineProperty(exports, "transformReply", { enumerable: true, get: function() {
      return generic_transformers_2.transformBooleanArrayReply;
    } });
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SCRIPT_FLUSH.js
var require_SCRIPT_FLUSH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SCRIPT_FLUSH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(mode) {
      const args = ["SCRIPT", "FLUSH"];
      if (mode) {
        args.push(mode);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SCRIPT_KILL.js
var require_SCRIPT_KILL = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SCRIPT_KILL.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["SCRIPT", "KILL"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SCRIPT_LOAD.js
var require_SCRIPT_LOAD = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SCRIPT_LOAD.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(script) {
      return ["SCRIPT", "LOAD", script];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SHUTDOWN.js
var require_SHUTDOWN = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SHUTDOWN.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(mode) {
      const args = ["SHUTDOWN"];
      if (mode) {
        args.push(mode);
      }
      return args;
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/SWAPDB.js
var require_SWAPDB = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/SWAPDB.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments(index1, index2) {
      return ["SWAPDB", index1.toString(), index2.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/TIME.js
var require_TIME = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/TIME.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformReply = exports.transformArguments = void 0;
    function transformArguments() {
      return ["TIME"];
    }
    exports.transformArguments = transformArguments;
    function transformReply(reply) {
      const seconds = Number(reply[0]), microseconds = Number(reply[1]), d = new Date(seconds + Math.round(microseconds / 1e3));
      d.microseconds = microseconds;
      return d;
    }
    exports.transformReply = transformReply;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/UNWATCH.js
var require_UNWATCH = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/UNWATCH.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = void 0;
    function transformArguments() {
      return ["UNWATCH"];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/commands/WAIT.js
var require_WAIT = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commands/WAIT.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformArguments = exports.FIRST_KEY_INDEX = void 0;
    exports.FIRST_KEY_INDEX = 1;
    function transformArguments(numberOfReplicas, timeout2) {
      return ["WAIT", numberOfReplicas.toString(), timeout2.toString()];
    }
    exports.transformArguments = transformArguments;
  }
});

// node_modules/@node-redis/client/dist/lib/client/commands.js
var require_commands2 = __commonJS({
  "node_modules/@node-redis/client/dist/lib/client/commands.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var commands_1 = require_commands();
    var ACL_CAT = require_ACL_CAT();
    var ACL_DELUSER = require_ACL_DELUSER();
    var ACL_GENPASS = require_ACL_GENPASS();
    var ACL_GETUSER = require_ACL_GETUSER();
    var ACL_LIST = require_ACL_LIST();
    var ACL_LOAD = require_ACL_LOAD();
    var ACL_LOG_RESET = require_ACL_LOG_RESET();
    var ACL_LOG = require_ACL_LOG();
    var ACL_SAVE = require_ACL_SAVE();
    var ACL_SETUSER = require_ACL_SETUSER();
    var ACL_USERS = require_ACL_USERS();
    var ACL_WHOAMI = require_ACL_WHOAMI();
    var ASKING = require_ASKING();
    var AUTH = require_AUTH();
    var BGREWRITEAOF = require_BGREWRITEAOF();
    var BGSAVE = require_BGSAVE();
    var CLIENT_CACHING = require_CLIENT_CACHING();
    var CLIENT_GETNAME = require_CLIENT_GETNAME();
    var CLIENT_GETREDIR = require_CLIENT_GETREDIR();
    var CLIENT_ID = require_CLIENT_ID();
    var CLIENT_KILL = require_CLIENT_KILL();
    var CLIENT_SETNAME = require_CLIENT_SETNAME();
    var CLIENT_INFO = require_CLIENT_INFO();
    var CLUSTER_ADDSLOTS = require_CLUSTER_ADDSLOTS();
    var CLUSTER_FLUSHSLOTS = require_CLUSTER_FLUSHSLOTS();
    var CLUSTER_INFO = require_CLUSTER_INFO();
    var CLUSTER_NODES = require_CLUSTER_NODES();
    var CLUSTER_MEET = require_CLUSTER_MEET();
    var CLUSTER_RESET = require_CLUSTER_RESET();
    var CLUSTER_SETSLOT = require_CLUSTER_SETSLOT();
    var CLUSTER_SLOTS = require_CLUSTER_SLOTS();
    var COMMAND_COUNT = require_COMMAND_COUNT();
    var COMMAND_GETKEYS = require_COMMAND_GETKEYS();
    var COMMAND_INFO = require_COMMAND_INFO();
    var COMMAND = require_COMMAND();
    var CONFIG_GET = require_CONFIG_GET();
    var CONFIG_RESETASTAT = require_CONFIG_RESETSTAT();
    var CONFIG_REWRITE = require_CONFIG_REWRITE();
    var CONFIG_SET = require_CONFIG_SET();
    var DBSIZE = require_DBSIZE();
    var DISCARD = require_DISCARD();
    var ECHO = require_ECHO();
    var FAILOVER = require_FAILOVER();
    var FLUSHALL = require_FLUSHALL();
    var FLUSHDB = require_FLUSHDB();
    var HELLO = require_HELLO();
    var INFO = require_INFO();
    var KEYS = require_KEYS();
    var LASTSAVE = require_LASTSAVE();
    var LOLWUT = require_LOLWUT();
    var MEMOERY_DOCTOR = require_MEMORY_DOCTOR();
    var MEMORY_MALLOC_STATS = require_MEMORY_MALLOC_STATS();
    var MEMORY_PURGE = require_MEMORY_PURGE();
    var MEMORY_STATS = require_MEMORY_STATS();
    var MEMORY_USAGE = require_MEMORY_USAGE();
    var MODULE_LIST = require_MODULE_LIST();
    var MODULE_LOAD = require_MODULE_LOAD();
    var MODULE_UNLOAD = require_MODULE_UNLOAD();
    var MOVE = require_MOVE();
    var PING = require_PING();
    var PUBSUB_CHANNELS = require_PUBSUB_CHANNELS();
    var PUBSUB_NUMPAT = require_PUBSUB_NUMPAT();
    var PUBSUB_NUMSUB = require_PUBSUB_NUMSUB();
    var RANDOMKEY = require_RANDOMKEY();
    var READONLY = require_READONLY();
    var READWRITE = require_READWRITE();
    var REPLICAOF = require_REPLICAOF();
    var RESTORE_ASKING = require_RESTORE_ASKING();
    var ROLE = require_ROLE();
    var SAVE = require_SAVE();
    var SCAN = require_SCAN();
    var SCRIPT_DEBUG = require_SCRIPT_DEBUG();
    var SCRIPT_EXISTS = require_SCRIPT_EXISTS();
    var SCRIPT_FLUSH = require_SCRIPT_FLUSH();
    var SCRIPT_KILL = require_SCRIPT_KILL();
    var SCRIPT_LOAD = require_SCRIPT_LOAD();
    var SHUTDOWN = require_SHUTDOWN();
    var SWAPDB = require_SWAPDB();
    var TIME = require_TIME();
    var UNWATCH = require_UNWATCH();
    var WAIT = require_WAIT();
    exports.default = __spreadProps(__spreadValues({}, commands_1.default), {
      ACL_CAT,
      aclCat: ACL_CAT,
      ACL_DELUSER,
      aclDelUser: ACL_DELUSER,
      ACL_GENPASS,
      aclGenPass: ACL_GENPASS,
      ACL_GETUSER,
      aclGetUser: ACL_GETUSER,
      ACL_LIST,
      aclList: ACL_LIST,
      ACL_LOAD,
      aclLoad: ACL_LOAD,
      ACL_LOG_RESET,
      aclLogReset: ACL_LOG_RESET,
      ACL_LOG,
      aclLog: ACL_LOG,
      ACL_SAVE,
      aclSave: ACL_SAVE,
      ACL_SETUSER,
      aclSetUser: ACL_SETUSER,
      ACL_USERS,
      aclUsers: ACL_USERS,
      ACL_WHOAMI,
      aclWhoAmI: ACL_WHOAMI,
      ASKING,
      asking: ASKING,
      AUTH,
      auth: AUTH,
      BGREWRITEAOF,
      bgRewriteAof: BGREWRITEAOF,
      BGSAVE,
      bgSave: BGSAVE,
      CLIENT_CACHING,
      clientCaching: CLIENT_CACHING,
      CLIENT_GETNAME,
      clientGetName: CLIENT_GETNAME,
      CLIENT_GETREDIR,
      clientGetRedir: CLIENT_GETREDIR,
      CLIENT_ID,
      clientId: CLIENT_ID,
      CLIENT_KILL,
      clientKill: CLIENT_KILL,
      CLIENT_SETNAME,
      clientSetName: CLIENT_SETNAME,
      CLIENT_INFO,
      clientInfo: CLIENT_INFO,
      CLUSTER_ADDSLOTS,
      clusterAddSlots: CLUSTER_ADDSLOTS,
      CLUSTER_FLUSHSLOTS,
      clusterFlushSlots: CLUSTER_FLUSHSLOTS,
      CLUSTER_INFO,
      clusterInfo: CLUSTER_INFO,
      CLUSTER_NODES,
      clusterNodes: CLUSTER_NODES,
      CLUSTER_MEET,
      clusterMeet: CLUSTER_MEET,
      CLUSTER_RESET,
      clusterReset: CLUSTER_RESET,
      CLUSTER_SETSLOT,
      clusterSetSlot: CLUSTER_SETSLOT,
      CLUSTER_SLOTS,
      clusterSlots: CLUSTER_SLOTS,
      COMMAND_COUNT,
      commandCount: COMMAND_COUNT,
      COMMAND_GETKEYS,
      commandGetKeys: COMMAND_GETKEYS,
      COMMAND_INFO,
      commandInfo: COMMAND_INFO,
      COMMAND,
      command: COMMAND,
      CONFIG_GET,
      configGet: CONFIG_GET,
      CONFIG_RESETASTAT,
      configResetStat: CONFIG_RESETASTAT,
      CONFIG_REWRITE,
      configRewrite: CONFIG_REWRITE,
      CONFIG_SET,
      configSet: CONFIG_SET,
      DBSIZE,
      dbSize: DBSIZE,
      DISCARD,
      discard: DISCARD,
      ECHO,
      echo: ECHO,
      FAILOVER,
      failover: FAILOVER,
      FLUSHALL,
      flushAll: FLUSHALL,
      FLUSHDB,
      flushDb: FLUSHDB,
      HELLO,
      hello: HELLO,
      INFO,
      info: INFO,
      KEYS,
      keys: KEYS,
      LASTSAVE,
      lastSave: LASTSAVE,
      LOLWUT,
      lolwut: LOLWUT,
      MEMOERY_DOCTOR,
      memoryDoctor: MEMOERY_DOCTOR,
      "MEMORY_MALLOC-STATS": MEMORY_MALLOC_STATS,
      memoryMallocStats: MEMORY_MALLOC_STATS,
      MEMORY_PURGE,
      memoryPurge: MEMORY_PURGE,
      MEMORY_STATS,
      memoryStats: MEMORY_STATS,
      MEMORY_USAGE,
      memoryUsage: MEMORY_USAGE,
      MODULE_LIST,
      moduleList: MODULE_LIST,
      MODULE_LOAD,
      moduleLoad: MODULE_LOAD,
      MODULE_UNLOAD,
      moduleUnload: MODULE_UNLOAD,
      MOVE,
      move: MOVE,
      PING,
      ping: PING,
      PUBSUB_CHANNELS,
      pubSubChannels: PUBSUB_CHANNELS,
      PUBSUB_NUMPAT,
      pubSubNumPat: PUBSUB_NUMPAT,
      PUBSUB_NUMSUB,
      pubSubNumSub: PUBSUB_NUMSUB,
      RANDOMKEY,
      randomKey: RANDOMKEY,
      READONLY,
      readonly: READONLY,
      READWRITE,
      readwrite: READWRITE,
      REPLICAOF,
      replicaOf: REPLICAOF,
      "RESTORE-ASKING": RESTORE_ASKING,
      restoreAsking: RESTORE_ASKING,
      ROLE,
      role: ROLE,
      SAVE,
      save: SAVE,
      SCAN,
      scan: SCAN,
      SCRIPT_DEBUG,
      scriptDebug: SCRIPT_DEBUG,
      SCRIPT_EXISTS,
      scriptExists: SCRIPT_EXISTS,
      SCRIPT_FLUSH,
      scriptFlush: SCRIPT_FLUSH,
      SCRIPT_KILL,
      scriptKill: SCRIPT_KILL,
      SCRIPT_LOAD,
      scriptLoad: SCRIPT_LOAD,
      SHUTDOWN,
      shutdown: SHUTDOWN,
      SWAPDB,
      swapDb: SWAPDB,
      TIME,
      time: TIME,
      UNWATCH,
      unwatch: UNWATCH,
      WAIT,
      wait: WAIT
    });
  }
});

// node_modules/@node-redis/client/dist/lib/command-options.js
var require_command_options = __commonJS({
  "node_modules/@node-redis/client/dist/lib/command-options.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isCommandOptions = exports.commandOptions = void 0;
    var symbol = Symbol("Command Options");
    function commandOptions(options) {
      options[symbol] = true;
      return options;
    }
    exports.commandOptions = commandOptions;
    function isCommandOptions(options) {
      return (options === null || options === void 0 ? void 0 : options[symbol]) === true;
    }
    exports.isCommandOptions = isCommandOptions;
  }
});

// node_modules/@node-redis/client/dist/lib/commander.js
var require_commander = __commonJS({
  "node_modules/@node-redis/client/dist/lib/commander.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformCommandReply = exports.encodeCommand = exports.transformCommandArguments = exports.extendWithModulesAndScripts = exports.extendWithCommands = void 0;
    var command_options_1 = require_command_options();
    function extendWithCommands({ BaseClass, commands, executor }) {
      for (const [name2, command] of Object.entries(commands)) {
        BaseClass.prototype[name2] = function(...args) {
          return executor.call(this, command, args);
        };
      }
    }
    exports.extendWithCommands = extendWithCommands;
    function extendWithModulesAndScripts(config2) {
      let Commander;
      if (config2.modules) {
        Commander = class extends config2.BaseClass {
          constructor(...args) {
            super(...args);
            for (const module3 of Object.keys(config2.modules)) {
              this[module3] = new this[module3](this);
            }
          }
        };
        for (const [moduleName, module3] of Object.entries(config2.modules)) {
          Commander.prototype[moduleName] = class {
            constructor(self2) {
              Object.defineProperty(this, "self", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
              });
              this.self = self2;
            }
          };
          for (const [commandName, command] of Object.entries(module3)) {
            Commander.prototype[moduleName].prototype[commandName] = function(...args) {
              return config2.modulesCommandsExecutor.call(this.self, command, args);
            };
          }
        }
      }
      if (config2.scripts) {
        Commander !== null && Commander !== void 0 ? Commander : Commander = class extends config2.BaseClass {
        };
        for (const [name2, script] of Object.entries(config2.scripts)) {
          Commander.prototype[name2] = function(...args) {
            return config2.scriptsExecutor.call(this, script, args);
          };
        }
      }
      return Commander !== null && Commander !== void 0 ? Commander : config2.BaseClass;
    }
    exports.extendWithModulesAndScripts = extendWithModulesAndScripts;
    function transformCommandArguments(command, args) {
      let options;
      if ((0, command_options_1.isCommandOptions)(args[0])) {
        options = args[0];
        args = args.slice(1);
      }
      return {
        args: command.transformArguments(...args),
        options
      };
    }
    exports.transformCommandArguments = transformCommandArguments;
    var DELIMITER = "\r\n";
    function* encodeCommand(args) {
      var _a4, _b;
      let strings = `*${args.length}${DELIMITER}`, stringsLength = 0;
      for (const arg of args) {
        if (Buffer.isBuffer(arg)) {
          yield `${strings}$${arg.length}${DELIMITER}`;
          strings = "";
          stringsLength = 0;
          yield arg;
        } else {
          const string = (_b = (_a4 = arg === null || arg === void 0 ? void 0 : arg.toString) === null || _a4 === void 0 ? void 0 : _a4.call(arg)) !== null && _b !== void 0 ? _b : "", byteLength = Buffer.byteLength(string);
          strings += `$${byteLength}${DELIMITER}`;
          const totalLength = stringsLength + byteLength;
          if (totalLength > 1024) {
            yield strings;
            strings = string;
            stringsLength = byteLength;
          } else {
            strings += string;
            stringsLength = totalLength;
          }
        }
        strings += DELIMITER;
      }
      yield strings;
    }
    exports.encodeCommand = encodeCommand;
    function transformCommandReply(command, rawReply, preserved) {
      if (!command.transformReply) {
        return rawReply;
      }
      return command.transformReply(rawReply, preserved);
    }
    exports.transformCommandReply = transformCommandReply;
  }
});

// node_modules/@node-redis/client/dist/lib/errors.js
var require_errors = __commonJS({
  "node_modules/@node-redis/client/dist/lib/errors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ReconnectStrategyError = exports.RootNodesUnavailableError = exports.AuthError = exports.SocketClosedUnexpectedlyError = exports.DisconnectsClientError = exports.ClientClosedError = exports.ConnectionTimeoutError = exports.WatchError = exports.AbortError = void 0;
    var AbortError2 = class extends Error {
      constructor() {
        super("The command was aborted");
      }
    };
    exports.AbortError = AbortError2;
    var WatchError = class extends Error {
      constructor() {
        super("One (or more) of the watched keys has been changed");
      }
    };
    exports.WatchError = WatchError;
    var ConnectionTimeoutError = class extends Error {
      constructor() {
        super("Connection timeout");
      }
    };
    exports.ConnectionTimeoutError = ConnectionTimeoutError;
    var ClientClosedError = class extends Error {
      constructor() {
        super("The client is closed");
      }
    };
    exports.ClientClosedError = ClientClosedError;
    var DisconnectsClientError = class extends Error {
      constructor() {
        super("Disconnects client");
      }
    };
    exports.DisconnectsClientError = DisconnectsClientError;
    var SocketClosedUnexpectedlyError = class extends Error {
      constructor() {
        super("Socket closed unexpectedly");
      }
    };
    exports.SocketClosedUnexpectedlyError = SocketClosedUnexpectedlyError;
    var AuthError = class extends Error {
      constructor(message) {
        super(message);
      }
    };
    exports.AuthError = AuthError;
    var RootNodesUnavailableError = class extends Error {
      constructor() {
        super("All the root nodes are unavailable");
      }
    };
    exports.RootNodesUnavailableError = RootNodesUnavailableError;
    var ReconnectStrategyError = class extends Error {
      constructor(originalError, socketError) {
        super(originalError.message);
        Object.defineProperty(this, "originalError", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: void 0
        });
        Object.defineProperty(this, "socketError", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: void 0
        });
        this.originalError = originalError;
        this.socketError = socketError;
      }
    };
    exports.ReconnectStrategyError = ReconnectStrategyError;
  }
});

// node_modules/@node-redis/client/dist/lib/utils.js
var require_utils = __commonJS({
  "node_modules/@node-redis/client/dist/lib/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.promiseTimeout = void 0;
    function promiseTimeout(ms) {
      return new Promise((resolve2) => setTimeout(resolve2, ms));
    }
    exports.promiseTimeout = promiseTimeout;
  }
});

// node_modules/@node-redis/client/dist/lib/client/socket.js
var require_socket = __commonJS({
  "node_modules/@node-redis/client/dist/lib/client/socket.js"(exports) {
    "use strict";
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f3) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f3.call(receiver, value) : f3 ? f3.value = value : state.set(receiver, value), value;
    };
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f3) {
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f3 : kind === "a" ? f3.call(receiver) : f3 ? f3.value : state.get(receiver);
    };
    var _RedisSocket_instances;
    var _a4;
    var _RedisSocket_initiateOptions;
    var _RedisSocket_defaultReconnectStrategy;
    var _RedisSocket_isTlsSocket;
    var _RedisSocket_initiator;
    var _RedisSocket_options;
    var _RedisSocket_socket;
    var _RedisSocket_isOpen;
    var _RedisSocket_isReady;
    var _RedisSocket_writableNeedDrain;
    var _RedisSocket_connect;
    var _RedisSocket_retryConnection;
    var _RedisSocket_createSocket;
    var _RedisSocket_createNetSocket;
    var _RedisSocket_createTlsSocket;
    var _RedisSocket_onSocketError;
    var _RedisSocket_isCorked;
    Object.defineProperty(exports, "__esModule", { value: true });
    var events_1 = require("events");
    var net = require("net");
    var tls = require("tls");
    var commander_1 = require_commander();
    var errors_1 = require_errors();
    var utils_1 = require_utils();
    var RedisSocket = class extends events_1.EventEmitter {
      constructor(initiator, options) {
        super();
        _RedisSocket_instances.add(this);
        _RedisSocket_initiator.set(this, void 0);
        _RedisSocket_options.set(this, void 0);
        _RedisSocket_socket.set(this, void 0);
        _RedisSocket_isOpen.set(this, false);
        _RedisSocket_isReady.set(this, false);
        _RedisSocket_writableNeedDrain.set(this, false);
        _RedisSocket_isCorked.set(this, false);
        __classPrivateFieldSet(this, _RedisSocket_initiator, initiator, "f");
        __classPrivateFieldSet(this, _RedisSocket_options, __classPrivateFieldGet(RedisSocket, _a4, "m", _RedisSocket_initiateOptions).call(RedisSocket, options), "f");
      }
      get isOpen() {
        return __classPrivateFieldGet(this, _RedisSocket_isOpen, "f");
      }
      get isReady() {
        return __classPrivateFieldGet(this, _RedisSocket_isReady, "f");
      }
      get writableNeedDrain() {
        return __classPrivateFieldGet(this, _RedisSocket_writableNeedDrain, "f");
      }
      async connect() {
        if (__classPrivateFieldGet(this, _RedisSocket_isOpen, "f")) {
          throw new Error("Socket already opened");
        }
        return __classPrivateFieldGet(this, _RedisSocket_instances, "m", _RedisSocket_connect).call(this);
      }
      writeCommand(args) {
        if (!__classPrivateFieldGet(this, _RedisSocket_socket, "f")) {
          throw new errors_1.ClientClosedError();
        }
        for (const toWrite of (0, commander_1.encodeCommand)(args)) {
          __classPrivateFieldSet(this, _RedisSocket_writableNeedDrain, !__classPrivateFieldGet(this, _RedisSocket_socket, "f").write(toWrite), "f");
        }
      }
      disconnect() {
        if (!__classPrivateFieldGet(this, _RedisSocket_socket, "f")) {
          throw new errors_1.ClientClosedError();
        } else {
          __classPrivateFieldSet(this, _RedisSocket_isOpen, __classPrivateFieldSet(this, _RedisSocket_isReady, false, "f"), "f");
        }
        __classPrivateFieldGet(this, _RedisSocket_socket, "f").destroy();
        __classPrivateFieldSet(this, _RedisSocket_socket, void 0, "f");
        this.emit("end");
      }
      async quit(fn) {
        if (!__classPrivateFieldGet(this, _RedisSocket_isOpen, "f")) {
          throw new errors_1.ClientClosedError();
        }
        __classPrivateFieldSet(this, _RedisSocket_isOpen, false, "f");
        await fn();
        this.disconnect();
      }
      cork() {
        if (!__classPrivateFieldGet(this, _RedisSocket_socket, "f") || __classPrivateFieldGet(this, _RedisSocket_isCorked, "f")) {
          return;
        }
        __classPrivateFieldGet(this, _RedisSocket_socket, "f").cork();
        __classPrivateFieldSet(this, _RedisSocket_isCorked, true, "f");
        queueMicrotask(() => {
          var _b;
          (_b = __classPrivateFieldGet(this, _RedisSocket_socket, "f")) === null || _b === void 0 ? void 0 : _b.uncork();
          __classPrivateFieldSet(this, _RedisSocket_isCorked, false, "f");
        });
      }
    };
    exports.default = RedisSocket;
    _a4 = RedisSocket, _RedisSocket_initiator = new WeakMap(), _RedisSocket_options = new WeakMap(), _RedisSocket_socket = new WeakMap(), _RedisSocket_isOpen = new WeakMap(), _RedisSocket_isReady = new WeakMap(), _RedisSocket_writableNeedDrain = new WeakMap(), _RedisSocket_isCorked = new WeakMap(), _RedisSocket_instances = new WeakSet(), _RedisSocket_initiateOptions = function _RedisSocket_initiateOptions2(options) {
      var _b, _c, _d2, _e, _f;
      var _g, _h;
      options !== null && options !== void 0 ? options : options = {};
      if (!options.path) {
        (_b = (_g = options).port) !== null && _b !== void 0 ? _b : _g.port = 6379;
        (_c = (_h = options).host) !== null && _c !== void 0 ? _c : _h.host = "localhost";
      }
      (_d2 = options.connectTimeout) !== null && _d2 !== void 0 ? _d2 : options.connectTimeout = 5e3;
      (_e = options.keepAlive) !== null && _e !== void 0 ? _e : options.keepAlive = 5e3;
      (_f = options.noDelay) !== null && _f !== void 0 ? _f : options.noDelay = true;
      return options;
    }, _RedisSocket_defaultReconnectStrategy = function _RedisSocket_defaultReconnectStrategy2(retries) {
      return Math.min(retries * 50, 500);
    }, _RedisSocket_isTlsSocket = function _RedisSocket_isTlsSocket2(options) {
      return options.tls === true;
    }, _RedisSocket_connect = async function _RedisSocket_connect2(hadError) {
      try {
        __classPrivateFieldSet(this, _RedisSocket_isOpen, true, "f");
        __classPrivateFieldSet(this, _RedisSocket_socket, await __classPrivateFieldGet(this, _RedisSocket_instances, "m", _RedisSocket_retryConnection).call(this, 0, hadError), "f");
        __classPrivateFieldSet(this, _RedisSocket_writableNeedDrain, false, "f");
      } catch (err) {
        __classPrivateFieldSet(this, _RedisSocket_isOpen, false, "f");
        this.emit("error", err);
        this.emit("end");
        throw err;
      }
      if (!__classPrivateFieldGet(this, _RedisSocket_isOpen, "f")) {
        this.disconnect();
        return;
      }
      this.emit("connect");
      if (__classPrivateFieldGet(this, _RedisSocket_initiator, "f")) {
        try {
          await __classPrivateFieldGet(this, _RedisSocket_initiator, "f").call(this);
        } catch (err) {
          __classPrivateFieldGet(this, _RedisSocket_socket, "f").destroy();
          __classPrivateFieldSet(this, _RedisSocket_socket, void 0, "f");
          if (err instanceof errors_1.AuthError) {
            __classPrivateFieldSet(this, _RedisSocket_isOpen, false, "f");
          }
          throw err;
        }
        if (!__classPrivateFieldGet(this, _RedisSocket_isOpen, "f"))
          return;
      }
      __classPrivateFieldSet(this, _RedisSocket_isReady, true, "f");
      this.emit("ready");
    }, _RedisSocket_retryConnection = async function _RedisSocket_retryConnection2(retries, hadError) {
      var _b, _c;
      if (retries > 0 || hadError) {
        this.emit("reconnecting");
      }
      try {
        return await __classPrivateFieldGet(this, _RedisSocket_instances, "m", _RedisSocket_createSocket).call(this);
      } catch (err) {
        if (!__classPrivateFieldGet(this, _RedisSocket_isOpen, "f")) {
          throw err;
        }
        const retryIn = ((_c = (_b = __classPrivateFieldGet(this, _RedisSocket_options, "f")) === null || _b === void 0 ? void 0 : _b.reconnectStrategy) !== null && _c !== void 0 ? _c : __classPrivateFieldGet(RedisSocket, _a4, "m", _RedisSocket_defaultReconnectStrategy))(retries);
        if (retryIn instanceof Error) {
          throw new errors_1.ReconnectStrategyError(retryIn, err);
        }
        this.emit("error", err);
        await (0, utils_1.promiseTimeout)(retryIn);
        return __classPrivateFieldGet(this, _RedisSocket_instances, "m", _RedisSocket_retryConnection2).call(this, retries + 1);
      }
    }, _RedisSocket_createSocket = function _RedisSocket_createSocket2() {
      return new Promise((resolve2, reject) => {
        const { connectEvent, socket } = __classPrivateFieldGet(RedisSocket, _a4, "m", _RedisSocket_isTlsSocket).call(RedisSocket, __classPrivateFieldGet(this, _RedisSocket_options, "f")) ? __classPrivateFieldGet(this, _RedisSocket_instances, "m", _RedisSocket_createTlsSocket).call(this) : __classPrivateFieldGet(this, _RedisSocket_instances, "m", _RedisSocket_createNetSocket).call(this);
        if (__classPrivateFieldGet(this, _RedisSocket_options, "f").connectTimeout) {
          socket.setTimeout(__classPrivateFieldGet(this, _RedisSocket_options, "f").connectTimeout, () => socket.destroy(new errors_1.ConnectionTimeoutError()));
        }
        socket.setNoDelay(__classPrivateFieldGet(this, _RedisSocket_options, "f").noDelay).setKeepAlive(__classPrivateFieldGet(this, _RedisSocket_options, "f").keepAlive !== false, __classPrivateFieldGet(this, _RedisSocket_options, "f").keepAlive || 0).once("error", reject).once(connectEvent, () => {
          socket.setTimeout(0).off("error", reject).once("error", (err) => __classPrivateFieldGet(this, _RedisSocket_instances, "m", _RedisSocket_onSocketError).call(this, err)).once("close", (hadError) => {
            if (!hadError && __classPrivateFieldGet(this, _RedisSocket_isOpen, "f") && __classPrivateFieldGet(this, _RedisSocket_socket, "f") === socket) {
              __classPrivateFieldGet(this, _RedisSocket_instances, "m", _RedisSocket_onSocketError).call(this, new errors_1.SocketClosedUnexpectedlyError());
            }
          }).on("drain", () => {
            __classPrivateFieldSet(this, _RedisSocket_writableNeedDrain, false, "f");
            this.emit("drain");
          }).on("data", (data2) => this.emit("data", data2));
          resolve2(socket);
        });
      });
    }, _RedisSocket_createNetSocket = function _RedisSocket_createNetSocket2() {
      return {
        connectEvent: "connect",
        socket: net.connect(__classPrivateFieldGet(this, _RedisSocket_options, "f"))
      };
    }, _RedisSocket_createTlsSocket = function _RedisSocket_createTlsSocket2() {
      return {
        connectEvent: "secureConnect",
        socket: tls.connect(__classPrivateFieldGet(this, _RedisSocket_options, "f"))
      };
    }, _RedisSocket_onSocketError = function _RedisSocket_onSocketError2(err) {
      __classPrivateFieldSet(this, _RedisSocket_isReady, false, "f");
      this.emit("error", err);
      __classPrivateFieldGet(this, _RedisSocket_instances, "m", _RedisSocket_connect).call(this, true).catch(() => {
      });
    };
  }
});

// node_modules/yallist/iterator.js
var require_iterator = __commonJS({
  "node_modules/yallist/iterator.js"(exports, module2) {
    "use strict";
    module2.exports = function(Yallist) {
      Yallist.prototype[Symbol.iterator] = function* () {
        for (let walker = this.head; walker; walker = walker.next) {
          yield walker.value;
        }
      };
    };
  }
});

// node_modules/yallist/yallist.js
var require_yallist = __commonJS({
  "node_modules/yallist/yallist.js"(exports, module2) {
    "use strict";
    module2.exports = Yallist;
    Yallist.Node = Node;
    Yallist.create = Yallist;
    function Yallist(list) {
      var self2 = this;
      if (!(self2 instanceof Yallist)) {
        self2 = new Yallist();
      }
      self2.tail = null;
      self2.head = null;
      self2.length = 0;
      if (list && typeof list.forEach === "function") {
        list.forEach(function(item) {
          self2.push(item);
        });
      } else if (arguments.length > 0) {
        for (var i2 = 0, l = arguments.length; i2 < l; i2++) {
          self2.push(arguments[i2]);
        }
      }
      return self2;
    }
    Yallist.prototype.removeNode = function(node) {
      if (node.list !== this) {
        throw new Error("removing node which does not belong to this list");
      }
      var next = node.next;
      var prev = node.prev;
      if (next) {
        next.prev = prev;
      }
      if (prev) {
        prev.next = next;
      }
      if (node === this.head) {
        this.head = next;
      }
      if (node === this.tail) {
        this.tail = prev;
      }
      node.list.length--;
      node.next = null;
      node.prev = null;
      node.list = null;
      return next;
    };
    Yallist.prototype.unshiftNode = function(node) {
      if (node === this.head) {
        return;
      }
      if (node.list) {
        node.list.removeNode(node);
      }
      var head = this.head;
      node.list = this;
      node.next = head;
      if (head) {
        head.prev = node;
      }
      this.head = node;
      if (!this.tail) {
        this.tail = node;
      }
      this.length++;
    };
    Yallist.prototype.pushNode = function(node) {
      if (node === this.tail) {
        return;
      }
      if (node.list) {
        node.list.removeNode(node);
      }
      var tail = this.tail;
      node.list = this;
      node.prev = tail;
      if (tail) {
        tail.next = node;
      }
      this.tail = node;
      if (!this.head) {
        this.head = node;
      }
      this.length++;
    };
    Yallist.prototype.push = function() {
      for (var i2 = 0, l = arguments.length; i2 < l; i2++) {
        push(this, arguments[i2]);
      }
      return this.length;
    };
    Yallist.prototype.unshift = function() {
      for (var i2 = 0, l = arguments.length; i2 < l; i2++) {
        unshift(this, arguments[i2]);
      }
      return this.length;
    };
    Yallist.prototype.pop = function() {
      if (!this.tail) {
        return void 0;
      }
      var res = this.tail.value;
      this.tail = this.tail.prev;
      if (this.tail) {
        this.tail.next = null;
      } else {
        this.head = null;
      }
      this.length--;
      return res;
    };
    Yallist.prototype.shift = function() {
      if (!this.head) {
        return void 0;
      }
      var res = this.head.value;
      this.head = this.head.next;
      if (this.head) {
        this.head.prev = null;
      } else {
        this.tail = null;
      }
      this.length--;
      return res;
    };
    Yallist.prototype.forEach = function(fn, thisp) {
      thisp = thisp || this;
      for (var walker = this.head, i2 = 0; walker !== null; i2++) {
        fn.call(thisp, walker.value, i2, this);
        walker = walker.next;
      }
    };
    Yallist.prototype.forEachReverse = function(fn, thisp) {
      thisp = thisp || this;
      for (var walker = this.tail, i2 = this.length - 1; walker !== null; i2--) {
        fn.call(thisp, walker.value, i2, this);
        walker = walker.prev;
      }
    };
    Yallist.prototype.get = function(n) {
      for (var i2 = 0, walker = this.head; walker !== null && i2 < n; i2++) {
        walker = walker.next;
      }
      if (i2 === n && walker !== null) {
        return walker.value;
      }
    };
    Yallist.prototype.getReverse = function(n) {
      for (var i2 = 0, walker = this.tail; walker !== null && i2 < n; i2++) {
        walker = walker.prev;
      }
      if (i2 === n && walker !== null) {
        return walker.value;
      }
    };
    Yallist.prototype.map = function(fn, thisp) {
      thisp = thisp || this;
      var res = new Yallist();
      for (var walker = this.head; walker !== null; ) {
        res.push(fn.call(thisp, walker.value, this));
        walker = walker.next;
      }
      return res;
    };
    Yallist.prototype.mapReverse = function(fn, thisp) {
      thisp = thisp || this;
      var res = new Yallist();
      for (var walker = this.tail; walker !== null; ) {
        res.push(fn.call(thisp, walker.value, this));
        walker = walker.prev;
      }
      return res;
    };
    Yallist.prototype.reduce = function(fn, initial) {
      var acc;
      var walker = this.head;
      if (arguments.length > 1) {
        acc = initial;
      } else if (this.head) {
        walker = this.head.next;
        acc = this.head.value;
      } else {
        throw new TypeError("Reduce of empty list with no initial value");
      }
      for (var i2 = 0; walker !== null; i2++) {
        acc = fn(acc, walker.value, i2);
        walker = walker.next;
      }
      return acc;
    };
    Yallist.prototype.reduceReverse = function(fn, initial) {
      var acc;
      var walker = this.tail;
      if (arguments.length > 1) {
        acc = initial;
      } else if (this.tail) {
        walker = this.tail.prev;
        acc = this.tail.value;
      } else {
        throw new TypeError("Reduce of empty list with no initial value");
      }
      for (var i2 = this.length - 1; walker !== null; i2--) {
        acc = fn(acc, walker.value, i2);
        walker = walker.prev;
      }
      return acc;
    };
    Yallist.prototype.toArray = function() {
      var arr2 = new Array(this.length);
      for (var i2 = 0, walker = this.head; walker !== null; i2++) {
        arr2[i2] = walker.value;
        walker = walker.next;
      }
      return arr2;
    };
    Yallist.prototype.toArrayReverse = function() {
      var arr2 = new Array(this.length);
      for (var i2 = 0, walker = this.tail; walker !== null; i2++) {
        arr2[i2] = walker.value;
        walker = walker.prev;
      }
      return arr2;
    };
    Yallist.prototype.slice = function(from, to) {
      to = to || this.length;
      if (to < 0) {
        to += this.length;
      }
      from = from || 0;
      if (from < 0) {
        from += this.length;
      }
      var ret = new Yallist();
      if (to < from || to < 0) {
        return ret;
      }
      if (from < 0) {
        from = 0;
      }
      if (to > this.length) {
        to = this.length;
      }
      for (var i2 = 0, walker = this.head; walker !== null && i2 < from; i2++) {
        walker = walker.next;
      }
      for (; walker !== null && i2 < to; i2++, walker = walker.next) {
        ret.push(walker.value);
      }
      return ret;
    };
    Yallist.prototype.sliceReverse = function(from, to) {
      to = to || this.length;
      if (to < 0) {
        to += this.length;
      }
      from = from || 0;
      if (from < 0) {
        from += this.length;
      }
      var ret = new Yallist();
      if (to < from || to < 0) {
        return ret;
      }
      if (from < 0) {
        from = 0;
      }
      if (to > this.length) {
        to = this.length;
      }
      for (var i2 = this.length, walker = this.tail; walker !== null && i2 > to; i2--) {
        walker = walker.prev;
      }
      for (; walker !== null && i2 > from; i2--, walker = walker.prev) {
        ret.push(walker.value);
      }
      return ret;
    };
    Yallist.prototype.splice = function(start, deleteCount, ...nodes) {
      if (start > this.length) {
        start = this.length - 1;
      }
      if (start < 0) {
        start = this.length + start;
      }
      for (var i2 = 0, walker = this.head; walker !== null && i2 < start; i2++) {
        walker = walker.next;
      }
      var ret = [];
      for (var i2 = 0; walker && i2 < deleteCount; i2++) {
        ret.push(walker.value);
        walker = this.removeNode(walker);
      }
      if (walker === null) {
        walker = this.tail;
      }
      if (walker !== this.head && walker !== this.tail) {
        walker = walker.prev;
      }
      for (var i2 = 0; i2 < nodes.length; i2++) {
        walker = insert(this, walker, nodes[i2]);
      }
      return ret;
    };
    Yallist.prototype.reverse = function() {
      var head = this.head;
      var tail = this.tail;
      for (var walker = head; walker !== null; walker = walker.prev) {
        var p = walker.prev;
        walker.prev = walker.next;
        walker.next = p;
      }
      this.head = tail;
      this.tail = head;
      return this;
    };
    function insert(self2, node, value) {
      var inserted = node === self2.head ? new Node(value, null, node, self2) : new Node(value, node, node.next, self2);
      if (inserted.next === null) {
        self2.tail = inserted;
      }
      if (inserted.prev === null) {
        self2.head = inserted;
      }
      self2.length++;
      return inserted;
    }
    function push(self2, item) {
      self2.tail = new Node(item, self2.tail, null, self2);
      if (!self2.head) {
        self2.head = self2.tail;
      }
      self2.length++;
    }
    function unshift(self2, item) {
      self2.head = new Node(item, null, self2.head, self2);
      if (!self2.tail) {
        self2.tail = self2.head;
      }
      self2.length++;
    }
    function Node(value, prev, next, list) {
      if (!(this instanceof Node)) {
        return new Node(value, prev, next, list);
      }
      this.list = list;
      this.value = value;
      if (prev) {
        prev.next = this;
        this.prev = prev;
      } else {
        this.prev = null;
      }
      if (next) {
        next.prev = this;
        this.next = next;
      } else {
        this.next = null;
      }
    }
    try {
      require_iterator()(Yallist);
    } catch (er) {
    }
  }
});

// node_modules/redis-errors/lib/old.js
var require_old = __commonJS({
  "node_modules/redis-errors/lib/old.js"(exports, module2) {
    "use strict";
    var assert = require("assert");
    var util = require("util");
    function RedisError(message) {
      Object.defineProperty(this, "message", {
        value: message || "",
        configurable: true,
        writable: true
      });
      Error.captureStackTrace(this, this.constructor);
    }
    util.inherits(RedisError, Error);
    Object.defineProperty(RedisError.prototype, "name", {
      value: "RedisError",
      configurable: true,
      writable: true
    });
    function ParserError(message, buffer, offset) {
      assert(buffer);
      assert.strictEqual(typeof offset, "number");
      Object.defineProperty(this, "message", {
        value: message || "",
        configurable: true,
        writable: true
      });
      const tmp = Error.stackTraceLimit;
      Error.stackTraceLimit = 2;
      Error.captureStackTrace(this, this.constructor);
      Error.stackTraceLimit = tmp;
      this.offset = offset;
      this.buffer = buffer;
    }
    util.inherits(ParserError, RedisError);
    Object.defineProperty(ParserError.prototype, "name", {
      value: "ParserError",
      configurable: true,
      writable: true
    });
    function ReplyError(message) {
      Object.defineProperty(this, "message", {
        value: message || "",
        configurable: true,
        writable: true
      });
      const tmp = Error.stackTraceLimit;
      Error.stackTraceLimit = 2;
      Error.captureStackTrace(this, this.constructor);
      Error.stackTraceLimit = tmp;
    }
    util.inherits(ReplyError, RedisError);
    Object.defineProperty(ReplyError.prototype, "name", {
      value: "ReplyError",
      configurable: true,
      writable: true
    });
    function AbortError2(message) {
      Object.defineProperty(this, "message", {
        value: message || "",
        configurable: true,
        writable: true
      });
      Error.captureStackTrace(this, this.constructor);
    }
    util.inherits(AbortError2, RedisError);
    Object.defineProperty(AbortError2.prototype, "name", {
      value: "AbortError",
      configurable: true,
      writable: true
    });
    function InterruptError(message) {
      Object.defineProperty(this, "message", {
        value: message || "",
        configurable: true,
        writable: true
      });
      Error.captureStackTrace(this, this.constructor);
    }
    util.inherits(InterruptError, AbortError2);
    Object.defineProperty(InterruptError.prototype, "name", {
      value: "InterruptError",
      configurable: true,
      writable: true
    });
    module2.exports = {
      RedisError,
      ParserError,
      ReplyError,
      AbortError: AbortError2,
      InterruptError
    };
  }
});

// node_modules/redis-errors/lib/modern.js
var require_modern = __commonJS({
  "node_modules/redis-errors/lib/modern.js"(exports, module2) {
    "use strict";
    var assert = require("assert");
    var RedisError = class extends Error {
      get name() {
        return this.constructor.name;
      }
    };
    var ParserError = class extends RedisError {
      constructor(message, buffer, offset) {
        assert(buffer);
        assert.strictEqual(typeof offset, "number");
        const tmp = Error.stackTraceLimit;
        Error.stackTraceLimit = 2;
        super(message);
        Error.stackTraceLimit = tmp;
        this.offset = offset;
        this.buffer = buffer;
      }
      get name() {
        return this.constructor.name;
      }
    };
    var ReplyError = class extends RedisError {
      constructor(message) {
        const tmp = Error.stackTraceLimit;
        Error.stackTraceLimit = 2;
        super(message);
        Error.stackTraceLimit = tmp;
      }
      get name() {
        return this.constructor.name;
      }
    };
    var AbortError2 = class extends RedisError {
      get name() {
        return this.constructor.name;
      }
    };
    var InterruptError = class extends AbortError2 {
      get name() {
        return this.constructor.name;
      }
    };
    module2.exports = {
      RedisError,
      ParserError,
      ReplyError,
      AbortError: AbortError2,
      InterruptError
    };
  }
});

// node_modules/redis-errors/index.js
var require_redis_errors = __commonJS({
  "node_modules/redis-errors/index.js"(exports, module2) {
    "use strict";
    var Errors = process.version.charCodeAt(1) < 55 && process.version.charCodeAt(2) === 46 ? require_old() : require_modern();
    module2.exports = Errors;
  }
});

// node_modules/redis-parser/lib/parser.js
var require_parser = __commonJS({
  "node_modules/redis-parser/lib/parser.js"(exports, module2) {
    "use strict";
    var Buffer2 = require("buffer").Buffer;
    var StringDecoder = require("string_decoder").StringDecoder;
    var decoder = new StringDecoder();
    var errors = require_redis_errors();
    var ReplyError = errors.ReplyError;
    var ParserError = errors.ParserError;
    var bufferPool = Buffer2.allocUnsafe(32 * 1024);
    var bufferOffset = 0;
    var interval2 = null;
    var counter2 = 0;
    var notDecreased = 0;
    function parseSimpleNumbers(parser) {
      const length = parser.buffer.length - 1;
      var offset = parser.offset;
      var number = 0;
      var sign = 1;
      if (parser.buffer[offset] === 45) {
        sign = -1;
        offset++;
      }
      while (offset < length) {
        const c1 = parser.buffer[offset++];
        if (c1 === 13) {
          parser.offset = offset + 1;
          return sign * number;
        }
        number = number * 10 + (c1 - 48);
      }
    }
    function parseStringNumbers(parser) {
      const length = parser.buffer.length - 1;
      var offset = parser.offset;
      var number = 0;
      var res = "";
      if (parser.buffer[offset] === 45) {
        res += "-";
        offset++;
      }
      while (offset < length) {
        var c1 = parser.buffer[offset++];
        if (c1 === 13) {
          parser.offset = offset + 1;
          if (number !== 0) {
            res += number;
          }
          return res;
        } else if (number > 429496728) {
          res += number * 10 + (c1 - 48);
          number = 0;
        } else if (c1 === 48 && number === 0) {
          res += 0;
        } else {
          number = number * 10 + (c1 - 48);
        }
      }
    }
    function parseSimpleString(parser) {
      const start = parser.offset;
      const buffer = parser.buffer;
      const length = buffer.length - 1;
      var offset = start;
      while (offset < length) {
        if (buffer[offset++] === 13) {
          parser.offset = offset + 1;
          if (parser.optionReturnBuffers === true) {
            return parser.buffer.slice(start, offset - 1);
          }
          return parser.buffer.toString("utf8", start, offset - 1);
        }
      }
    }
    function parseLength(parser) {
      const length = parser.buffer.length - 1;
      var offset = parser.offset;
      var number = 0;
      while (offset < length) {
        const c1 = parser.buffer[offset++];
        if (c1 === 13) {
          parser.offset = offset + 1;
          return number;
        }
        number = number * 10 + (c1 - 48);
      }
    }
    function parseInteger(parser) {
      if (parser.optionStringNumbers === true) {
        return parseStringNumbers(parser);
      }
      return parseSimpleNumbers(parser);
    }
    function parseBulkString(parser) {
      const length = parseLength(parser);
      if (length === void 0) {
        return;
      }
      if (length < 0) {
        return null;
      }
      const offset = parser.offset + length;
      if (offset + 2 > parser.buffer.length) {
        parser.bigStrSize = offset + 2;
        parser.totalChunkSize = parser.buffer.length;
        parser.bufferCache.push(parser.buffer);
        return;
      }
      const start = parser.offset;
      parser.offset = offset + 2;
      if (parser.optionReturnBuffers === true) {
        return parser.buffer.slice(start, offset);
      }
      return parser.buffer.toString("utf8", start, offset);
    }
    function parseError(parser) {
      var string = parseSimpleString(parser);
      if (string !== void 0) {
        if (parser.optionReturnBuffers === true) {
          string = string.toString();
        }
        return new ReplyError(string);
      }
    }
    function handleError(parser, type) {
      const err = new ParserError("Protocol error, got " + JSON.stringify(String.fromCharCode(type)) + " as reply type byte", JSON.stringify(parser.buffer), parser.offset);
      parser.buffer = null;
      parser.returnFatalError(err);
    }
    function parseArray(parser) {
      const length = parseLength(parser);
      if (length === void 0) {
        return;
      }
      if (length < 0) {
        return null;
      }
      const responses = new Array(length);
      return parseArrayElements(parser, responses, 0);
    }
    function pushArrayCache(parser, array, pos) {
      parser.arrayCache.push(array);
      parser.arrayPos.push(pos);
    }
    function parseArrayChunks(parser) {
      const tmp = parser.arrayCache.pop();
      var pos = parser.arrayPos.pop();
      if (parser.arrayCache.length) {
        const res = parseArrayChunks(parser);
        if (res === void 0) {
          pushArrayCache(parser, tmp, pos);
          return;
        }
        tmp[pos++] = res;
      }
      return parseArrayElements(parser, tmp, pos);
    }
    function parseArrayElements(parser, responses, i2) {
      const bufferLength = parser.buffer.length;
      while (i2 < responses.length) {
        const offset = parser.offset;
        if (parser.offset >= bufferLength) {
          pushArrayCache(parser, responses, i2);
          return;
        }
        const response = parseType(parser, parser.buffer[parser.offset++]);
        if (response === void 0) {
          if (!(parser.arrayCache.length || parser.bufferCache.length)) {
            parser.offset = offset;
          }
          pushArrayCache(parser, responses, i2);
          return;
        }
        responses[i2] = response;
        i2++;
      }
      return responses;
    }
    function parseType(parser, type) {
      switch (type) {
        case 36:
          return parseBulkString(parser);
        case 43:
          return parseSimpleString(parser);
        case 42:
          return parseArray(parser);
        case 58:
          return parseInteger(parser);
        case 45:
          return parseError(parser);
        default:
          return handleError(parser, type);
      }
    }
    function decreaseBufferPool() {
      if (bufferPool.length > 50 * 1024) {
        if (counter2 === 1 || notDecreased > counter2 * 2) {
          const minSliceLen = Math.floor(bufferPool.length / 10);
          const sliceLength = minSliceLen < bufferOffset ? bufferOffset : minSliceLen;
          bufferOffset = 0;
          bufferPool = bufferPool.slice(sliceLength, bufferPool.length);
        } else {
          notDecreased++;
          counter2--;
        }
      } else {
        clearInterval(interval2);
        counter2 = 0;
        notDecreased = 0;
        interval2 = null;
      }
    }
    function resizeBuffer(length) {
      if (bufferPool.length < length + bufferOffset) {
        const multiplier = length > 1024 * 1024 * 75 ? 2 : 3;
        if (bufferOffset > 1024 * 1024 * 111) {
          bufferOffset = 1024 * 1024 * 50;
        }
        bufferPool = Buffer2.allocUnsafe(length * multiplier + bufferOffset);
        bufferOffset = 0;
        counter2++;
        if (interval2 === null) {
          interval2 = setInterval(decreaseBufferPool, 50);
        }
      }
    }
    function concatBulkString(parser) {
      const list = parser.bufferCache;
      const oldOffset = parser.offset;
      var chunks = list.length;
      var offset = parser.bigStrSize - parser.totalChunkSize;
      parser.offset = offset;
      if (offset <= 2) {
        if (chunks === 2) {
          return list[0].toString("utf8", oldOffset, list[0].length + offset - 2);
        }
        chunks--;
        offset = list[list.length - 2].length + offset;
      }
      var res = decoder.write(list[0].slice(oldOffset));
      for (var i2 = 1; i2 < chunks - 1; i2++) {
        res += decoder.write(list[i2]);
      }
      res += decoder.end(list[i2].slice(0, offset - 2));
      return res;
    }
    function concatBulkBuffer(parser) {
      const list = parser.bufferCache;
      const oldOffset = parser.offset;
      const length = parser.bigStrSize - oldOffset - 2;
      var chunks = list.length;
      var offset = parser.bigStrSize - parser.totalChunkSize;
      parser.offset = offset;
      if (offset <= 2) {
        if (chunks === 2) {
          return list[0].slice(oldOffset, list[0].length + offset - 2);
        }
        chunks--;
        offset = list[list.length - 2].length + offset;
      }
      resizeBuffer(length);
      const start = bufferOffset;
      list[0].copy(bufferPool, start, oldOffset, list[0].length);
      bufferOffset += list[0].length - oldOffset;
      for (var i2 = 1; i2 < chunks - 1; i2++) {
        list[i2].copy(bufferPool, bufferOffset);
        bufferOffset += list[i2].length;
      }
      list[i2].copy(bufferPool, bufferOffset, 0, offset - 2);
      bufferOffset += offset - 2;
      return bufferPool.slice(start, bufferOffset);
    }
    var JavascriptRedisParser = class {
      constructor(options) {
        if (!options) {
          throw new TypeError("Options are mandatory.");
        }
        if (typeof options.returnError !== "function" || typeof options.returnReply !== "function") {
          throw new TypeError("The returnReply and returnError options have to be functions.");
        }
        this.setReturnBuffers(!!options.returnBuffers);
        this.setStringNumbers(!!options.stringNumbers);
        this.returnError = options.returnError;
        this.returnFatalError = options.returnFatalError || options.returnError;
        this.returnReply = options.returnReply;
        this.reset();
      }
      reset() {
        this.offset = 0;
        this.buffer = null;
        this.bigStrSize = 0;
        this.totalChunkSize = 0;
        this.bufferCache = [];
        this.arrayCache = [];
        this.arrayPos = [];
      }
      setReturnBuffers(returnBuffers) {
        if (typeof returnBuffers !== "boolean") {
          throw new TypeError("The returnBuffers argument has to be a boolean");
        }
        this.optionReturnBuffers = returnBuffers;
      }
      setStringNumbers(stringNumbers) {
        if (typeof stringNumbers !== "boolean") {
          throw new TypeError("The stringNumbers argument has to be a boolean");
        }
        this.optionStringNumbers = stringNumbers;
      }
      execute(buffer) {
        if (this.buffer === null) {
          this.buffer = buffer;
          this.offset = 0;
        } else if (this.bigStrSize === 0) {
          const oldLength = this.buffer.length;
          const remainingLength = oldLength - this.offset;
          const newBuffer = Buffer2.allocUnsafe(remainingLength + buffer.length);
          this.buffer.copy(newBuffer, 0, this.offset, oldLength);
          buffer.copy(newBuffer, remainingLength, 0, buffer.length);
          this.buffer = newBuffer;
          this.offset = 0;
          if (this.arrayCache.length) {
            const arr2 = parseArrayChunks(this);
            if (arr2 === void 0) {
              return;
            }
            this.returnReply(arr2);
          }
        } else if (this.totalChunkSize + buffer.length >= this.bigStrSize) {
          this.bufferCache.push(buffer);
          var tmp = this.optionReturnBuffers ? concatBulkBuffer(this) : concatBulkString(this);
          this.bigStrSize = 0;
          this.bufferCache = [];
          this.buffer = buffer;
          if (this.arrayCache.length) {
            this.arrayCache[0][this.arrayPos[0]++] = tmp;
            tmp = parseArrayChunks(this);
            if (tmp === void 0) {
              return;
            }
          }
          this.returnReply(tmp);
        } else {
          this.bufferCache.push(buffer);
          this.totalChunkSize += buffer.length;
          return;
        }
        while (this.offset < this.buffer.length) {
          const offset = this.offset;
          const type = this.buffer[this.offset++];
          const response = parseType(this, type);
          if (response === void 0) {
            if (!(this.arrayCache.length || this.bufferCache.length)) {
              this.offset = offset;
            }
            return;
          }
          if (type === 45) {
            this.returnError(response);
          } else {
            this.returnReply(response);
          }
        }
        this.buffer = null;
      }
    };
    module2.exports = JavascriptRedisParser;
  }
});

// node_modules/redis-parser/index.js
var require_redis_parser = __commonJS({
  "node_modules/redis-parser/index.js"(exports, module2) {
    "use strict";
    module2.exports = require_parser();
  }
});

// node_modules/@node-redis/client/dist/lib/client/commands-queue.js
var require_commands_queue = __commonJS({
  "node_modules/@node-redis/client/dist/lib/client/commands-queue.js"(exports) {
    "use strict";
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f3) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f3.call(receiver, value) : f3 ? f3.value = value : state.set(receiver, value), value;
    };
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f3) {
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f3 : kind === "a" ? f3.call(receiver) : f3 ? f3.value : state.get(receiver);
    };
    var _RedisCommandsQueue_instances;
    var _a4;
    var _RedisCommandsQueue_flushQueue;
    var _RedisCommandsQueue_emitPubSubMessage;
    var _RedisCommandsQueue_maxLength;
    var _RedisCommandsQueue_waitingToBeSent;
    var _RedisCommandsQueue_waitingForReply;
    var _RedisCommandsQueue_pubSubState;
    var _RedisCommandsQueue_PUB_SUB_MESSAGES;
    var _RedisCommandsQueue_parser;
    var _RedisCommandsQueue_chainInExecution;
    var _RedisCommandsQueue_initiatePubSubState;
    var _RedisCommandsQueue_pushPubSubCommand;
    var _RedisCommandsQueue_setReturnBuffers;
    var _RedisCommandsQueue_shiftWaitingForReply;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PubSubUnsubscribeCommands = exports.PubSubSubscribeCommands = void 0;
    var LinkedList = require_yallist();
    var errors_1 = require_errors();
    var RedisParser = require_redis_parser();
    var PubSubSubscribeCommands;
    (function(PubSubSubscribeCommands2) {
      PubSubSubscribeCommands2["SUBSCRIBE"] = "SUBSCRIBE";
      PubSubSubscribeCommands2["PSUBSCRIBE"] = "PSUBSCRIBE";
    })(PubSubSubscribeCommands = exports.PubSubSubscribeCommands || (exports.PubSubSubscribeCommands = {}));
    var PubSubUnsubscribeCommands;
    (function(PubSubUnsubscribeCommands2) {
      PubSubUnsubscribeCommands2["UNSUBSCRIBE"] = "UNSUBSCRIBE";
      PubSubUnsubscribeCommands2["PUNSUBSCRIBE"] = "PUNSUBSCRIBE";
    })(PubSubUnsubscribeCommands = exports.PubSubUnsubscribeCommands || (exports.PubSubUnsubscribeCommands = {}));
    var RedisCommandsQueue = class {
      constructor(maxLength) {
        _RedisCommandsQueue_instances.add(this);
        _RedisCommandsQueue_maxLength.set(this, void 0);
        _RedisCommandsQueue_waitingToBeSent.set(this, new LinkedList());
        _RedisCommandsQueue_waitingForReply.set(this, new LinkedList());
        _RedisCommandsQueue_pubSubState.set(this, void 0);
        _RedisCommandsQueue_parser.set(this, new RedisParser({
          returnReply: (reply) => {
            if (__classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f") && Array.isArray(reply)) {
              if (__classPrivateFieldGet(RedisCommandsQueue, _a4, "f", _RedisCommandsQueue_PUB_SUB_MESSAGES).message.equals(reply[0])) {
                return __classPrivateFieldGet(RedisCommandsQueue, _a4, "m", _RedisCommandsQueue_emitPubSubMessage).call(RedisCommandsQueue, __classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f").listeners.channels, reply[2], reply[1]);
              } else if (__classPrivateFieldGet(RedisCommandsQueue, _a4, "f", _RedisCommandsQueue_PUB_SUB_MESSAGES).pMessage.equals(reply[0])) {
                return __classPrivateFieldGet(RedisCommandsQueue, _a4, "m", _RedisCommandsQueue_emitPubSubMessage).call(RedisCommandsQueue, __classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f").listeners.patterns, reply[3], reply[2], reply[1]);
              } else if (__classPrivateFieldGet(RedisCommandsQueue, _a4, "f", _RedisCommandsQueue_PUB_SUB_MESSAGES).subscribe.equals(reply[0]) || __classPrivateFieldGet(RedisCommandsQueue, _a4, "f", _RedisCommandsQueue_PUB_SUB_MESSAGES).pSubscribe.equals(reply[0]) || __classPrivateFieldGet(RedisCommandsQueue, _a4, "f", _RedisCommandsQueue_PUB_SUB_MESSAGES).unsubscribe.equals(reply[0]) || __classPrivateFieldGet(RedisCommandsQueue, _a4, "f", _RedisCommandsQueue_PUB_SUB_MESSAGES).pUnsubscribe.equals(reply[0])) {
                if (--__classPrivateFieldGet(this, _RedisCommandsQueue_waitingForReply, "f").head.value.channelsCounter === 0) {
                  __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_shiftWaitingForReply).call(this).resolve();
                }
                return;
              }
            }
            __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_shiftWaitingForReply).call(this).resolve(reply);
          },
          returnError: (err) => __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_shiftWaitingForReply).call(this).reject(err)
        }));
        _RedisCommandsQueue_chainInExecution.set(this, void 0);
        __classPrivateFieldSet(this, _RedisCommandsQueue_maxLength, maxLength, "f");
      }
      addCommand(args, options) {
        var _b;
        if (__classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f") && !(options === null || options === void 0 ? void 0 : options.ignorePubSubMode)) {
          return Promise.reject(new Error("Cannot send commands in PubSub mode"));
        } else if (__classPrivateFieldGet(this, _RedisCommandsQueue_maxLength, "f") && __classPrivateFieldGet(this, _RedisCommandsQueue_waitingToBeSent, "f").length + __classPrivateFieldGet(this, _RedisCommandsQueue_waitingForReply, "f").length >= __classPrivateFieldGet(this, _RedisCommandsQueue_maxLength, "f")) {
          return Promise.reject(new Error("The queue is full"));
        } else if ((_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.aborted) {
          return Promise.reject(new errors_1.AbortError());
        }
        return new Promise((resolve2, reject) => {
          const node = new LinkedList.Node({
            args,
            chainId: options === null || options === void 0 ? void 0 : options.chainId,
            returnBuffers: options === null || options === void 0 ? void 0 : options.returnBuffers,
            resolve: resolve2,
            reject
          });
          if (options === null || options === void 0 ? void 0 : options.signal) {
            const listener = () => {
              __classPrivateFieldGet(this, _RedisCommandsQueue_waitingToBeSent, "f").removeNode(node);
              node.value.reject(new errors_1.AbortError());
            };
            node.value.abort = {
              signal: options.signal,
              listener
            };
            options.signal.addEventListener("abort", listener, {
              once: true
            });
          }
          if (options === null || options === void 0 ? void 0 : options.asap) {
            __classPrivateFieldGet(this, _RedisCommandsQueue_waitingToBeSent, "f").unshiftNode(node);
          } else {
            __classPrivateFieldGet(this, _RedisCommandsQueue_waitingToBeSent, "f").pushNode(node);
          }
        });
      }
      subscribe(command, channels, listener, returnBuffers) {
        const pubSubState = __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_initiatePubSubState).call(this), channelsToSubscribe = [], listenersMap = command === PubSubSubscribeCommands.SUBSCRIBE ? pubSubState.listeners.channels : pubSubState.listeners.patterns;
        for (const channel of Array.isArray(channels) ? channels : [channels]) {
          const channelString = typeof channel === "string" ? channel : channel.toString();
          let listeners = listenersMap.get(channelString);
          if (!listeners) {
            listeners = {
              buffers: new Set(),
              strings: new Set()
            };
            listenersMap.set(channelString, listeners);
            channelsToSubscribe.push(channel);
          }
          (returnBuffers ? listeners.buffers : listeners.strings).add(listener);
        }
        if (!channelsToSubscribe.length) {
          return Promise.resolve();
        }
        return __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_pushPubSubCommand).call(this, command, channelsToSubscribe);
      }
      unsubscribe(command, channels, listener, returnBuffers) {
        if (!__classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f")) {
          return Promise.resolve();
        }
        const listeners = command === PubSubUnsubscribeCommands.UNSUBSCRIBE ? __classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f").listeners.channels : __classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f").listeners.patterns;
        if (!channels) {
          const size = listeners.size;
          listeners.clear();
          return __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_pushPubSubCommand).call(this, command, size);
        }
        const channelsToUnsubscribe = [];
        for (const channel of Array.isArray(channels) ? channels : [channels]) {
          const sets = listeners.get(channel);
          if (!sets)
            continue;
          let shouldUnsubscribe;
          if (listener) {
            (returnBuffers ? sets.buffers : sets.strings).delete(listener);
            shouldUnsubscribe = !sets.buffers.size && !sets.strings.size;
          } else {
            shouldUnsubscribe = true;
          }
          if (shouldUnsubscribe) {
            channelsToUnsubscribe.push(channel);
            listeners.delete(channel);
          }
        }
        if (!channelsToUnsubscribe.length) {
          return Promise.resolve();
        }
        return __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_pushPubSubCommand).call(this, command, channelsToUnsubscribe);
      }
      resubscribe() {
        if (!__classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f")) {
          return;
        }
        __classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f").subscribed = 0;
        const promises = [], { channels, patterns } = __classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f").listeners;
        if (channels.size) {
          promises.push(__classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_pushPubSubCommand).call(this, PubSubSubscribeCommands.SUBSCRIBE, [...channels.keys()]));
        }
        if (patterns.size) {
          promises.push(__classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_pushPubSubCommand).call(this, PubSubSubscribeCommands.PSUBSCRIBE, [...patterns.keys()]));
        }
        if (promises.length) {
          return Promise.all(promises);
        }
      }
      getCommandToSend() {
        const toSend = __classPrivateFieldGet(this, _RedisCommandsQueue_waitingToBeSent, "f").shift();
        if (toSend) {
          __classPrivateFieldGet(this, _RedisCommandsQueue_waitingForReply, "f").push({
            resolve: toSend.resolve,
            reject: toSend.reject,
            channelsCounter: toSend.channelsCounter,
            returnBuffers: toSend.returnBuffers
          });
        }
        __classPrivateFieldSet(this, _RedisCommandsQueue_chainInExecution, toSend === null || toSend === void 0 ? void 0 : toSend.chainId, "f");
        return toSend === null || toSend === void 0 ? void 0 : toSend.args;
      }
      parseResponse(data2) {
        __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_setReturnBuffers).call(this);
        __classPrivateFieldGet(this, _RedisCommandsQueue_parser, "f").execute(data2);
      }
      flushWaitingForReply(err) {
        var _b;
        __classPrivateFieldGet(RedisCommandsQueue, _a4, "m", _RedisCommandsQueue_flushQueue).call(RedisCommandsQueue, __classPrivateFieldGet(this, _RedisCommandsQueue_waitingForReply, "f"), err);
        if (!__classPrivateFieldGet(this, _RedisCommandsQueue_chainInExecution, "f"))
          return;
        while (((_b = __classPrivateFieldGet(this, _RedisCommandsQueue_waitingToBeSent, "f").head) === null || _b === void 0 ? void 0 : _b.value.chainId) === __classPrivateFieldGet(this, _RedisCommandsQueue_chainInExecution, "f")) {
          __classPrivateFieldGet(this, _RedisCommandsQueue_waitingToBeSent, "f").shift();
        }
        __classPrivateFieldSet(this, _RedisCommandsQueue_chainInExecution, void 0, "f");
      }
      flushAll(err) {
        __classPrivateFieldGet(RedisCommandsQueue, _a4, "m", _RedisCommandsQueue_flushQueue).call(RedisCommandsQueue, __classPrivateFieldGet(this, _RedisCommandsQueue_waitingForReply, "f"), err);
        __classPrivateFieldGet(RedisCommandsQueue, _a4, "m", _RedisCommandsQueue_flushQueue).call(RedisCommandsQueue, __classPrivateFieldGet(this, _RedisCommandsQueue_waitingToBeSent, "f"), err);
      }
    };
    exports.default = RedisCommandsQueue;
    _a4 = RedisCommandsQueue, _RedisCommandsQueue_maxLength = new WeakMap(), _RedisCommandsQueue_waitingToBeSent = new WeakMap(), _RedisCommandsQueue_waitingForReply = new WeakMap(), _RedisCommandsQueue_pubSubState = new WeakMap(), _RedisCommandsQueue_parser = new WeakMap(), _RedisCommandsQueue_chainInExecution = new WeakMap(), _RedisCommandsQueue_instances = new WeakSet(), _RedisCommandsQueue_flushQueue = function _RedisCommandsQueue_flushQueue2(queue, err) {
      while (queue.length) {
        queue.shift().reject(err);
      }
    }, _RedisCommandsQueue_emitPubSubMessage = function _RedisCommandsQueue_emitPubSubMessage2(listenersMap, message, channel, pattern) {
      const keyString = (pattern !== null && pattern !== void 0 ? pattern : channel).toString(), listeners = listenersMap.get(keyString);
      if (!listeners)
        return;
      for (const listener of listeners.buffers) {
        listener(message, channel);
      }
      if (!listeners.strings.size)
        return;
      const channelString = pattern ? channel.toString() : keyString, messageString = channelString === "__redis__:invalidate" ? message === null ? null : message.map((x2) => x2.toString()) : message.toString();
      for (const listener of listeners.strings) {
        listener(messageString, channelString);
      }
    }, _RedisCommandsQueue_initiatePubSubState = function _RedisCommandsQueue_initiatePubSubState2() {
      var _b;
      return __classPrivateFieldSet(this, _RedisCommandsQueue_pubSubState, (_b = __classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f")) !== null && _b !== void 0 ? _b : {
        subscribed: 0,
        subscribing: 0,
        unsubscribing: 0,
        listeners: {
          channels: new Map(),
          patterns: new Map()
        }
      }, "f");
    }, _RedisCommandsQueue_pushPubSubCommand = function _RedisCommandsQueue_pushPubSubCommand2(command, channels) {
      return new Promise((resolve2, reject) => {
        const pubSubState = __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_initiatePubSubState).call(this), isSubscribe = command === PubSubSubscribeCommands.SUBSCRIBE || command === PubSubSubscribeCommands.PSUBSCRIBE, inProgressKey = isSubscribe ? "subscribing" : "unsubscribing", commandArgs = [command];
        let channelsCounter;
        if (typeof channels === "number") {
          channelsCounter = channels;
        } else {
          commandArgs.push(...channels);
          channelsCounter = channels.length;
        }
        pubSubState[inProgressKey] += channelsCounter;
        __classPrivateFieldGet(this, _RedisCommandsQueue_waitingToBeSent, "f").push({
          args: commandArgs,
          channelsCounter,
          returnBuffers: true,
          resolve: () => {
            pubSubState[inProgressKey] -= channelsCounter;
            if (isSubscribe) {
              pubSubState.subscribed += channelsCounter;
            } else {
              pubSubState.subscribed -= channelsCounter;
              if (!pubSubState.subscribed && !pubSubState.subscribing && !pubSubState.subscribed) {
                __classPrivateFieldSet(this, _RedisCommandsQueue_pubSubState, void 0, "f");
              }
            }
            resolve2();
          },
          reject: (err) => {
            pubSubState[inProgressKey] -= channelsCounter * (isSubscribe ? 1 : -1);
            reject(err);
          }
        });
      });
    }, _RedisCommandsQueue_setReturnBuffers = function _RedisCommandsQueue_setReturnBuffers2() {
      var _b, _c;
      __classPrivateFieldGet(this, _RedisCommandsQueue_parser, "f").setReturnBuffers(!!((_b = __classPrivateFieldGet(this, _RedisCommandsQueue_waitingForReply, "f").head) === null || _b === void 0 ? void 0 : _b.value.returnBuffers) || !!((_c = __classPrivateFieldGet(this, _RedisCommandsQueue_pubSubState, "f")) === null || _c === void 0 ? void 0 : _c.subscribed));
    }, _RedisCommandsQueue_shiftWaitingForReply = function _RedisCommandsQueue_shiftWaitingForReply2() {
      if (!__classPrivateFieldGet(this, _RedisCommandsQueue_waitingForReply, "f").length) {
        throw new Error("Got an unexpected reply from Redis");
      }
      const waitingForReply = __classPrivateFieldGet(this, _RedisCommandsQueue_waitingForReply, "f").shift();
      __classPrivateFieldGet(this, _RedisCommandsQueue_instances, "m", _RedisCommandsQueue_setReturnBuffers).call(this);
      return waitingForReply;
    };
    _RedisCommandsQueue_PUB_SUB_MESSAGES = { value: {
      message: Buffer.from("message"),
      pMessage: Buffer.from("pmessage"),
      subscribe: Buffer.from("subscribe"),
      pSubscribe: Buffer.from("psubscribe"),
      unsubscribe: Buffer.from("unsunscribe"),
      pUnsubscribe: Buffer.from("punsubscribe")
    } };
  }
});

// node_modules/@node-redis/client/dist/lib/multi-command.js
var require_multi_command = __commonJS({
  "node_modules/@node-redis/client/dist/lib/multi-command.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var errors_1 = require_errors();
    var RedisMultiCommand = class {
      constructor() {
        Object.defineProperty(this, "queue", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: []
        });
        Object.defineProperty(this, "scriptsInUse", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: new Set()
        });
      }
      static generateChainId() {
        return Symbol("RedisMultiCommand Chain Id");
      }
      addCommand(args, transformReply) {
        this.queue.push({
          args,
          transformReply
        });
      }
      addScript(script, args) {
        const transformedArguments = [];
        if (this.scriptsInUse.has(script.SHA1)) {
          transformedArguments.push("EVALSHA", script.SHA1);
        } else {
          this.scriptsInUse.add(script.SHA1);
          transformedArguments.push("EVAL", script.SCRIPT);
        }
        transformedArguments.push(script.NUMBER_OF_KEYS.toString());
        const scriptArguments = script.transformArguments(...args);
        transformedArguments.push(...scriptArguments);
        if (scriptArguments.preserve) {
          transformedArguments.preserve = scriptArguments.preserve;
        }
        this.addCommand(transformedArguments, script.transformReply);
        return transformedArguments;
      }
      exec() {
        if (!this.queue.length) {
          return;
        }
        return [
          { args: ["MULTI"] },
          ...this.queue,
          { args: ["EXEC"] }
        ];
      }
      handleExecReplies(rawReplies) {
        const execReply = rawReplies[rawReplies.length - 1];
        if (execReply === null) {
          throw new errors_1.WatchError();
        }
        return this.transformReplies(execReply);
      }
      transformReplies(rawReplies) {
        return rawReplies.map((reply, i2) => {
          const { transformReply, args } = this.queue[i2];
          return transformReply ? transformReply(reply, args.preserve) : reply;
        });
      }
    };
    exports.default = RedisMultiCommand;
  }
});

// node_modules/@node-redis/client/dist/lib/client/multi-command.js
var require_multi_command2 = __commonJS({
  "node_modules/@node-redis/client/dist/lib/client/multi-command.js"(exports) {
    "use strict";
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f3) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f3.call(receiver, value) : f3 ? f3.value = value : state.set(receiver, value), value;
    };
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f3) {
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f3 : kind === "a" ? f3.call(receiver) : f3 ? f3.value : state.get(receiver);
    };
    var _RedisClientMultiCommand_instances;
    var _RedisClientMultiCommand_multi;
    var _RedisClientMultiCommand_executor;
    var _RedisClientMultiCommand_legacyMode;
    var _RedisClientMultiCommand_defineLegacyCommand;
    Object.defineProperty(exports, "__esModule", { value: true });
    var commands_1 = require_commands2();
    var multi_command_1 = require_multi_command();
    var commander_1 = require_commander();
    var RedisClientMultiCommand = class {
      constructor(executor, legacyMode = false) {
        _RedisClientMultiCommand_instances.add(this);
        _RedisClientMultiCommand_multi.set(this, new multi_command_1.default());
        _RedisClientMultiCommand_executor.set(this, void 0);
        Object.defineProperty(this, "v4", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: {}
        });
        Object.defineProperty(this, "EXEC", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: this.exec
        });
        __classPrivateFieldSet(this, _RedisClientMultiCommand_executor, executor, "f");
        if (legacyMode) {
          __classPrivateFieldGet(this, _RedisClientMultiCommand_instances, "m", _RedisClientMultiCommand_legacyMode).call(this);
        }
      }
      static extend(plugins) {
        return (0, commander_1.extendWithModulesAndScripts)({
          BaseClass: RedisClientMultiCommand,
          modules: plugins === null || plugins === void 0 ? void 0 : plugins.modules,
          modulesCommandsExecutor: RedisClientMultiCommand.prototype.commandsExecutor,
          scripts: plugins === null || plugins === void 0 ? void 0 : plugins.scripts,
          scriptsExecutor: RedisClientMultiCommand.prototype.scriptsExecutor
        });
      }
      commandsExecutor(command, args) {
        return this.addCommand(command.transformArguments(...args), command.transformReply);
      }
      addCommand(args, transformReply) {
        __classPrivateFieldGet(this, _RedisClientMultiCommand_multi, "f").addCommand(args, transformReply);
        return this;
      }
      scriptsExecutor(script, args) {
        __classPrivateFieldGet(this, _RedisClientMultiCommand_multi, "f").addScript(script, args);
        return this;
      }
      async exec(execAsPipeline = false) {
        if (execAsPipeline) {
          return this.execAsPipeline();
        }
        const commands = __classPrivateFieldGet(this, _RedisClientMultiCommand_multi, "f").exec();
        if (!commands)
          return [];
        return __classPrivateFieldGet(this, _RedisClientMultiCommand_multi, "f").handleExecReplies(await __classPrivateFieldGet(this, _RedisClientMultiCommand_executor, "f").call(this, commands, multi_command_1.default.generateChainId()));
      }
      async execAsPipeline() {
        if (!__classPrivateFieldGet(this, _RedisClientMultiCommand_multi, "f").queue.length)
          return [];
        return __classPrivateFieldGet(this, _RedisClientMultiCommand_multi, "f").transformReplies(await __classPrivateFieldGet(this, _RedisClientMultiCommand_executor, "f").call(this, __classPrivateFieldGet(this, _RedisClientMultiCommand_multi, "f").queue));
      }
    };
    exports.default = RedisClientMultiCommand;
    _RedisClientMultiCommand_multi = new WeakMap(), _RedisClientMultiCommand_executor = new WeakMap(), _RedisClientMultiCommand_instances = new WeakSet(), _RedisClientMultiCommand_legacyMode = function _RedisClientMultiCommand_legacyMode2() {
      this.v4.addCommand = this.addCommand.bind(this);
      this.addCommand = (...args) => {
        __classPrivateFieldGet(this, _RedisClientMultiCommand_multi, "f").addCommand(args.flat());
        return this;
      };
      this.v4.exec = this.exec.bind(this);
      this.exec = (callback) => {
        this.v4.exec().then((reply) => {
          if (!callback)
            return;
          callback(null, reply);
        }).catch((err) => {
          if (!callback) {
            return;
          }
          callback(err);
        });
      };
      for (const name2 of Object.keys(commands_1.default)) {
        __classPrivateFieldGet(this, _RedisClientMultiCommand_instances, "m", _RedisClientMultiCommand_defineLegacyCommand).call(this, name2);
      }
      for (const name2 of Object.keys(commands_1.default)) {
        this[name2.toLowerCase()] = this[name2];
      }
    }, _RedisClientMultiCommand_defineLegacyCommand = function _RedisClientMultiCommand_defineLegacyCommand2(name2) {
      this.v4[name2] = this[name2].bind(this.v4);
      this[name2] = (...args) => this.addCommand(name2, args);
    };
    (0, commander_1.extendWithCommands)({
      BaseClass: RedisClientMultiCommand,
      commands: commands_1.default,
      executor: RedisClientMultiCommand.prototype.commandsExecutor
    });
  }
});

// node_modules/generic-pool/lib/factoryValidator.js
var require_factoryValidator = __commonJS({
  "node_modules/generic-pool/lib/factoryValidator.js"(exports, module2) {
    module2.exports = function(factory) {
      if (typeof factory.create !== "function") {
        throw new TypeError("factory.create must be a function");
      }
      if (typeof factory.destroy !== "function") {
        throw new TypeError("factory.destroy must be a function");
      }
      if (typeof factory.validate !== "undefined" && typeof factory.validate !== "function") {
        throw new TypeError("factory.validate must be a function");
      }
    };
  }
});

// node_modules/generic-pool/lib/PoolDefaults.js
var require_PoolDefaults = __commonJS({
  "node_modules/generic-pool/lib/PoolDefaults.js"(exports, module2) {
    "use strict";
    var PoolDefaults = class {
      constructor() {
        this.fifo = true;
        this.priorityRange = 1;
        this.testOnBorrow = false;
        this.testOnReturn = false;
        this.autostart = true;
        this.evictionRunIntervalMillis = 0;
        this.numTestsPerEvictionRun = 3;
        this.softIdleTimeoutMillis = -1;
        this.idleTimeoutMillis = 3e4;
        this.acquireTimeoutMillis = null;
        this.destroyTimeoutMillis = null;
        this.maxWaitingClients = null;
        this.min = null;
        this.max = null;
        this.Promise = Promise;
      }
    };
    module2.exports = PoolDefaults;
  }
});

// node_modules/generic-pool/lib/PoolOptions.js
var require_PoolOptions = __commonJS({
  "node_modules/generic-pool/lib/PoolOptions.js"(exports, module2) {
    "use strict";
    var PoolDefaults = require_PoolDefaults();
    var PoolOptions = class {
      constructor(opts) {
        const poolDefaults = new PoolDefaults();
        opts = opts || {};
        this.fifo = typeof opts.fifo === "boolean" ? opts.fifo : poolDefaults.fifo;
        this.priorityRange = opts.priorityRange || poolDefaults.priorityRange;
        this.testOnBorrow = typeof opts.testOnBorrow === "boolean" ? opts.testOnBorrow : poolDefaults.testOnBorrow;
        this.testOnReturn = typeof opts.testOnReturn === "boolean" ? opts.testOnReturn : poolDefaults.testOnReturn;
        this.autostart = typeof opts.autostart === "boolean" ? opts.autostart : poolDefaults.autostart;
        if (opts.acquireTimeoutMillis) {
          this.acquireTimeoutMillis = parseInt(opts.acquireTimeoutMillis, 10);
        }
        if (opts.destroyTimeoutMillis) {
          this.destroyTimeoutMillis = parseInt(opts.destroyTimeoutMillis, 10);
        }
        if (opts.maxWaitingClients !== void 0) {
          this.maxWaitingClients = parseInt(opts.maxWaitingClients, 10);
        }
        this.max = parseInt(opts.max, 10);
        this.min = parseInt(opts.min, 10);
        this.max = Math.max(isNaN(this.max) ? 1 : this.max, 1);
        this.min = Math.min(isNaN(this.min) ? 0 : this.min, this.max);
        this.evictionRunIntervalMillis = opts.evictionRunIntervalMillis || poolDefaults.evictionRunIntervalMillis;
        this.numTestsPerEvictionRun = opts.numTestsPerEvictionRun || poolDefaults.numTestsPerEvictionRun;
        this.softIdleTimeoutMillis = opts.softIdleTimeoutMillis || poolDefaults.softIdleTimeoutMillis;
        this.idleTimeoutMillis = opts.idleTimeoutMillis || poolDefaults.idleTimeoutMillis;
        this.Promise = opts.Promise != null ? opts.Promise : poolDefaults.Promise;
      }
    };
    module2.exports = PoolOptions;
  }
});

// node_modules/generic-pool/lib/Deferred.js
var require_Deferred = __commonJS({
  "node_modules/generic-pool/lib/Deferred.js"(exports, module2) {
    "use strict";
    var Deferred = class {
      constructor(Promise2) {
        this._state = Deferred.PENDING;
        this._resolve = void 0;
        this._reject = void 0;
        this._promise = new Promise2((resolve2, reject) => {
          this._resolve = resolve2;
          this._reject = reject;
        });
      }
      get state() {
        return this._state;
      }
      get promise() {
        return this._promise;
      }
      reject(reason) {
        if (this._state !== Deferred.PENDING) {
          return;
        }
        this._state = Deferred.REJECTED;
        this._reject(reason);
      }
      resolve(value) {
        if (this._state !== Deferred.PENDING) {
          return;
        }
        this._state = Deferred.FULFILLED;
        this._resolve(value);
      }
    };
    Deferred.PENDING = "PENDING";
    Deferred.FULFILLED = "FULFILLED";
    Deferred.REJECTED = "REJECTED";
    module2.exports = Deferred;
  }
});

// node_modules/generic-pool/lib/errors.js
var require_errors2 = __commonJS({
  "node_modules/generic-pool/lib/errors.js"(exports, module2) {
    "use strict";
    var ExtendableError = class extends Error {
      constructor(message) {
        super(message);
        this.name = this.constructor.name;
        this.message = message;
        if (typeof Error.captureStackTrace === "function") {
          Error.captureStackTrace(this, this.constructor);
        } else {
          this.stack = new Error(message).stack;
        }
      }
    };
    var TimeoutError = class extends ExtendableError {
      constructor(m2) {
        super(m2);
      }
    };
    module2.exports = {
      TimeoutError
    };
  }
});

// node_modules/generic-pool/lib/ResourceRequest.js
var require_ResourceRequest = __commonJS({
  "node_modules/generic-pool/lib/ResourceRequest.js"(exports, module2) {
    "use strict";
    var Deferred = require_Deferred();
    var errors = require_errors2();
    function fbind(fn, ctx) {
      return function bound() {
        return fn.apply(ctx, arguments);
      };
    }
    var ResourceRequest = class extends Deferred {
      constructor(ttl, Promise2) {
        super(Promise2);
        this._creationTimestamp = Date.now();
        this._timeout = null;
        if (ttl !== void 0) {
          this.setTimeout(ttl);
        }
      }
      setTimeout(delay) {
        if (this._state !== ResourceRequest.PENDING) {
          return;
        }
        const ttl = parseInt(delay, 10);
        if (isNaN(ttl) || ttl <= 0) {
          throw new Error("delay must be a positive int");
        }
        const age = Date.now() - this._creationTimestamp;
        if (this._timeout) {
          this.removeTimeout();
        }
        this._timeout = setTimeout(fbind(this._fireTimeout, this), Math.max(ttl - age, 0));
      }
      removeTimeout() {
        if (this._timeout) {
          clearTimeout(this._timeout);
        }
        this._timeout = null;
      }
      _fireTimeout() {
        this.reject(new errors.TimeoutError("ResourceRequest timed out"));
      }
      reject(reason) {
        this.removeTimeout();
        super.reject(reason);
      }
      resolve(value) {
        this.removeTimeout();
        super.resolve(value);
      }
    };
    module2.exports = ResourceRequest;
  }
});

// node_modules/generic-pool/lib/ResourceLoan.js
var require_ResourceLoan = __commonJS({
  "node_modules/generic-pool/lib/ResourceLoan.js"(exports, module2) {
    "use strict";
    var Deferred = require_Deferred();
    var ResourceLoan = class extends Deferred {
      constructor(pooledResource, Promise2) {
        super(Promise2);
        this._creationTimestamp = Date.now();
        this.pooledResource = pooledResource;
      }
      reject() {
      }
    };
    module2.exports = ResourceLoan;
  }
});

// node_modules/generic-pool/lib/PooledResourceStateEnum.js
var require_PooledResourceStateEnum = __commonJS({
  "node_modules/generic-pool/lib/PooledResourceStateEnum.js"(exports, module2) {
    "use strict";
    var PooledResourceStateEnum = {
      ALLOCATED: "ALLOCATED",
      IDLE: "IDLE",
      INVALID: "INVALID",
      RETURNING: "RETURNING",
      VALIDATION: "VALIDATION"
    };
    module2.exports = PooledResourceStateEnum;
  }
});

// node_modules/generic-pool/lib/PooledResource.js
var require_PooledResource = __commonJS({
  "node_modules/generic-pool/lib/PooledResource.js"(exports, module2) {
    "use strict";
    var PooledResourceStateEnum = require_PooledResourceStateEnum();
    var PooledResource = class {
      constructor(resource) {
        this.creationTime = Date.now();
        this.lastReturnTime = null;
        this.lastBorrowTime = null;
        this.lastIdleTime = null;
        this.obj = resource;
        this.state = PooledResourceStateEnum.IDLE;
      }
      allocate() {
        this.lastBorrowTime = Date.now();
        this.state = PooledResourceStateEnum.ALLOCATED;
      }
      deallocate() {
        this.lastReturnTime = Date.now();
        this.state = PooledResourceStateEnum.IDLE;
      }
      invalidate() {
        this.state = PooledResourceStateEnum.INVALID;
      }
      test() {
        this.state = PooledResourceStateEnum.VALIDATION;
      }
      idle() {
        this.lastIdleTime = Date.now();
        this.state = PooledResourceStateEnum.IDLE;
      }
      returning() {
        this.state = PooledResourceStateEnum.RETURNING;
      }
    };
    module2.exports = PooledResource;
  }
});

// node_modules/generic-pool/lib/DefaultEvictor.js
var require_DefaultEvictor = __commonJS({
  "node_modules/generic-pool/lib/DefaultEvictor.js"(exports, module2) {
    "use strict";
    var DefaultEvictor = class {
      evict(config2, pooledResource, availableObjectsCount) {
        const idleTime = Date.now() - pooledResource.lastIdleTime;
        if (config2.softIdleTimeoutMillis > 0 && config2.softIdleTimeoutMillis < idleTime && config2.min < availableObjectsCount) {
          return true;
        }
        if (config2.idleTimeoutMillis < idleTime) {
          return true;
        }
        return false;
      }
    };
    module2.exports = DefaultEvictor;
  }
});

// node_modules/generic-pool/lib/DoublyLinkedList.js
var require_DoublyLinkedList = __commonJS({
  "node_modules/generic-pool/lib/DoublyLinkedList.js"(exports, module2) {
    "use strict";
    var DoublyLinkedList = class {
      constructor() {
        this.head = null;
        this.tail = null;
        this.length = 0;
      }
      insertBeginning(node) {
        if (this.head === null) {
          this.head = node;
          this.tail = node;
          node.prev = null;
          node.next = null;
          this.length++;
        } else {
          this.insertBefore(this.head, node);
        }
      }
      insertEnd(node) {
        if (this.tail === null) {
          this.insertBeginning(node);
        } else {
          this.insertAfter(this.tail, node);
        }
      }
      insertAfter(node, newNode) {
        newNode.prev = node;
        newNode.next = node.next;
        if (node.next === null) {
          this.tail = newNode;
        } else {
          node.next.prev = newNode;
        }
        node.next = newNode;
        this.length++;
      }
      insertBefore(node, newNode) {
        newNode.prev = node.prev;
        newNode.next = node;
        if (node.prev === null) {
          this.head = newNode;
        } else {
          node.prev.next = newNode;
        }
        node.prev = newNode;
        this.length++;
      }
      remove(node) {
        if (node.prev === null) {
          this.head = node.next;
        } else {
          node.prev.next = node.next;
        }
        if (node.next === null) {
          this.tail = node.prev;
        } else {
          node.next.prev = node.prev;
        }
        node.prev = null;
        node.next = null;
        this.length--;
      }
      static createNode(data2) {
        return {
          prev: null,
          next: null,
          data: data2
        };
      }
    };
    module2.exports = DoublyLinkedList;
  }
});

// node_modules/generic-pool/lib/DoublyLinkedListIterator.js
var require_DoublyLinkedListIterator = __commonJS({
  "node_modules/generic-pool/lib/DoublyLinkedListIterator.js"(exports, module2) {
    "use strict";
    var DoublyLinkedListIterator = class {
      constructor(doublyLinkedList, reverse) {
        this._list = doublyLinkedList;
        this._direction = reverse === true ? "prev" : "next";
        this._startPosition = reverse === true ? "tail" : "head";
        this._started = false;
        this._cursor = null;
        this._done = false;
      }
      _start() {
        this._cursor = this._list[this._startPosition];
        this._started = true;
      }
      _advanceCursor() {
        if (this._started === false) {
          this._started = true;
          this._cursor = this._list[this._startPosition];
          return;
        }
        this._cursor = this._cursor[this._direction];
      }
      reset() {
        this._done = false;
        this._started = false;
        this._cursor = null;
      }
      remove() {
        if (this._started === false || this._done === true || this._isCursorDetached()) {
          return false;
        }
        this._list.remove(this._cursor);
      }
      next() {
        if (this._done === true) {
          return { done: true };
        }
        this._advanceCursor();
        if (this._cursor === null || this._isCursorDetached()) {
          this._done = true;
          return { done: true };
        }
        return {
          value: this._cursor,
          done: false
        };
      }
      _isCursorDetached() {
        return this._cursor.prev === null && this._cursor.next === null && this._list.tail !== this._cursor && this._list.head !== this._cursor;
      }
    };
    module2.exports = DoublyLinkedListIterator;
  }
});

// node_modules/generic-pool/lib/DequeIterator.js
var require_DequeIterator = __commonJS({
  "node_modules/generic-pool/lib/DequeIterator.js"(exports, module2) {
    "use strict";
    var DoublyLinkedListIterator = require_DoublyLinkedListIterator();
    var DequeIterator = class extends DoublyLinkedListIterator {
      next() {
        const result = super.next();
        if (result.value) {
          result.value = result.value.data;
        }
        return result;
      }
    };
    module2.exports = DequeIterator;
  }
});

// node_modules/generic-pool/lib/Deque.js
var require_Deque = __commonJS({
  "node_modules/generic-pool/lib/Deque.js"(exports, module2) {
    "use strict";
    var DoublyLinkedList = require_DoublyLinkedList();
    var DequeIterator = require_DequeIterator();
    var Deque = class {
      constructor() {
        this._list = new DoublyLinkedList();
      }
      shift() {
        if (this.length === 0) {
          return void 0;
        }
        const node = this._list.head;
        this._list.remove(node);
        return node.data;
      }
      unshift(element) {
        const node = DoublyLinkedList.createNode(element);
        this._list.insertBeginning(node);
      }
      push(element) {
        const node = DoublyLinkedList.createNode(element);
        this._list.insertEnd(node);
      }
      pop() {
        if (this.length === 0) {
          return void 0;
        }
        const node = this._list.tail;
        this._list.remove(node);
        return node.data;
      }
      [Symbol.iterator]() {
        return new DequeIterator(this._list);
      }
      iterator() {
        return new DequeIterator(this._list);
      }
      reverseIterator() {
        return new DequeIterator(this._list, true);
      }
      get head() {
        if (this.length === 0) {
          return void 0;
        }
        const node = this._list.head;
        return node.data;
      }
      get tail() {
        if (this.length === 0) {
          return void 0;
        }
        const node = this._list.tail;
        return node.data;
      }
      get length() {
        return this._list.length;
      }
    };
    module2.exports = Deque;
  }
});

// node_modules/generic-pool/lib/Queue.js
var require_Queue = __commonJS({
  "node_modules/generic-pool/lib/Queue.js"(exports, module2) {
    "use strict";
    var DoublyLinkedList = require_DoublyLinkedList();
    var Deque = require_Deque();
    var Queue = class extends Deque {
      push(resourceRequest) {
        const node = DoublyLinkedList.createNode(resourceRequest);
        resourceRequest.promise.catch(this._createTimeoutRejectionHandler(node));
        this._list.insertEnd(node);
      }
      _createTimeoutRejectionHandler(node) {
        return (reason) => {
          if (reason.name === "TimeoutError") {
            this._list.remove(node);
          }
        };
      }
    };
    module2.exports = Queue;
  }
});

// node_modules/generic-pool/lib/PriorityQueue.js
var require_PriorityQueue = __commonJS({
  "node_modules/generic-pool/lib/PriorityQueue.js"(exports, module2) {
    "use strict";
    var Queue = require_Queue();
    var PriorityQueue = class {
      constructor(size) {
        this._size = Math.max(+size | 0, 1);
        this._slots = [];
        for (let i2 = 0; i2 < this._size; i2++) {
          this._slots.push(new Queue());
        }
      }
      get length() {
        let _length = 0;
        for (let i2 = 0, slots = this._slots.length; i2 < slots; i2++) {
          _length += this._slots[i2].length;
        }
        return _length;
      }
      enqueue(obj, priority) {
        priority = priority && +priority | 0 || 0;
        if (priority) {
          if (priority < 0 || priority >= this._size) {
            priority = this._size - 1;
          }
        }
        this._slots[priority].push(obj);
      }
      dequeue() {
        for (let i2 = 0, sl = this._slots.length; i2 < sl; i2 += 1) {
          if (this._slots[i2].length) {
            return this._slots[i2].shift();
          }
        }
        return;
      }
      get head() {
        for (let i2 = 0, sl = this._slots.length; i2 < sl; i2 += 1) {
          if (this._slots[i2].length > 0) {
            return this._slots[i2].head;
          }
        }
        return;
      }
      get tail() {
        for (let i2 = this._slots.length - 1; i2 >= 0; i2--) {
          if (this._slots[i2].length > 0) {
            return this._slots[i2].tail;
          }
        }
        return;
      }
    };
    module2.exports = PriorityQueue;
  }
});

// node_modules/generic-pool/lib/utils.js
var require_utils2 = __commonJS({
  "node_modules/generic-pool/lib/utils.js"(exports) {
    "use strict";
    function noop4() {
    }
    exports.reflector = function(promise) {
      return promise.then(noop4, noop4);
    };
  }
});

// node_modules/generic-pool/lib/Pool.js
var require_Pool = __commonJS({
  "node_modules/generic-pool/lib/Pool.js"(exports, module2) {
    "use strict";
    var EventEmitter = require("events").EventEmitter;
    var factoryValidator = require_factoryValidator();
    var PoolOptions = require_PoolOptions();
    var ResourceRequest = require_ResourceRequest();
    var ResourceLoan = require_ResourceLoan();
    var PooledResource = require_PooledResource();
    var DefaultEvictor = require_DefaultEvictor();
    var Deque = require_Deque();
    var Deferred = require_Deferred();
    var PriorityQueue = require_PriorityQueue();
    var DequeIterator = require_DequeIterator();
    var reflector = require_utils2().reflector;
    var FACTORY_CREATE_ERROR = "factoryCreateError";
    var FACTORY_DESTROY_ERROR = "factoryDestroyError";
    var Pool = class extends EventEmitter {
      constructor(Evictor, Deque2, PriorityQueue2, factory, options) {
        super();
        factoryValidator(factory);
        this._config = new PoolOptions(options);
        this._Promise = this._config.Promise;
        this._factory = factory;
        this._draining = false;
        this._started = false;
        this._waitingClientsQueue = new PriorityQueue2(this._config.priorityRange);
        this._factoryCreateOperations = new Set();
        this._factoryDestroyOperations = new Set();
        this._availableObjects = new Deque2();
        this._testOnBorrowResources = new Set();
        this._testOnReturnResources = new Set();
        this._validationOperations = new Set();
        this._allObjects = new Set();
        this._resourceLoans = new Map();
        this._evictionIterator = this._availableObjects.iterator();
        this._evictor = new Evictor();
        this._scheduledEviction = null;
        if (this._config.autostart === true) {
          this.start();
        }
      }
      _destroy(pooledResource) {
        pooledResource.invalidate();
        this._allObjects.delete(pooledResource);
        const destroyPromise = this._factory.destroy(pooledResource.obj);
        const wrappedDestroyPromise = this._config.destroyTimeoutMillis ? this._Promise.resolve(this._applyDestroyTimeout(destroyPromise)) : this._Promise.resolve(destroyPromise);
        this._trackOperation(wrappedDestroyPromise, this._factoryDestroyOperations).catch((reason) => {
          this.emit(FACTORY_DESTROY_ERROR, reason);
        });
        this._ensureMinimum();
      }
      _applyDestroyTimeout(promise) {
        const timeoutPromise = new this._Promise((resolve2, reject) => {
          setTimeout(() => {
            reject(new Error("destroy timed out"));
          }, this._config.destroyTimeoutMillis).unref();
        });
        return this._Promise.race([timeoutPromise, promise]);
      }
      _testOnBorrow() {
        if (this._availableObjects.length < 1) {
          return false;
        }
        const pooledResource = this._availableObjects.shift();
        pooledResource.test();
        this._testOnBorrowResources.add(pooledResource);
        const validationPromise = this._factory.validate(pooledResource.obj);
        const wrappedValidationPromise = this._Promise.resolve(validationPromise);
        this._trackOperation(wrappedValidationPromise, this._validationOperations).then((isValid) => {
          this._testOnBorrowResources.delete(pooledResource);
          if (isValid === false) {
            pooledResource.invalidate();
            this._destroy(pooledResource);
            this._dispense();
            return;
          }
          this._dispatchPooledResourceToNextWaitingClient(pooledResource);
        });
        return true;
      }
      _dispatchResource() {
        if (this._availableObjects.length < 1) {
          return false;
        }
        const pooledResource = this._availableObjects.shift();
        this._dispatchPooledResourceToNextWaitingClient(pooledResource);
        return false;
      }
      _dispense() {
        const numWaitingClients = this._waitingClientsQueue.length;
        if (numWaitingClients < 1) {
          return;
        }
        const resourceShortfall = numWaitingClients - this._potentiallyAllocableResourceCount;
        const actualNumberOfResourcesToCreate = Math.min(this.spareResourceCapacity, resourceShortfall);
        for (let i2 = 0; actualNumberOfResourcesToCreate > i2; i2++) {
          this._createResource();
        }
        if (this._config.testOnBorrow === true) {
          const desiredNumberOfResourcesToMoveIntoTest = numWaitingClients - this._testOnBorrowResources.size;
          const actualNumberOfResourcesToMoveIntoTest = Math.min(this._availableObjects.length, desiredNumberOfResourcesToMoveIntoTest);
          for (let i2 = 0; actualNumberOfResourcesToMoveIntoTest > i2; i2++) {
            this._testOnBorrow();
          }
        }
        if (this._config.testOnBorrow === false) {
          const actualNumberOfResourcesToDispatch = Math.min(this._availableObjects.length, numWaitingClients);
          for (let i2 = 0; actualNumberOfResourcesToDispatch > i2; i2++) {
            this._dispatchResource();
          }
        }
      }
      _dispatchPooledResourceToNextWaitingClient(pooledResource) {
        const clientResourceRequest = this._waitingClientsQueue.dequeue();
        if (clientResourceRequest === void 0 || clientResourceRequest.state !== Deferred.PENDING) {
          this._addPooledResourceToAvailableObjects(pooledResource);
          return false;
        }
        const loan = new ResourceLoan(pooledResource, this._Promise);
        this._resourceLoans.set(pooledResource.obj, loan);
        pooledResource.allocate();
        clientResourceRequest.resolve(pooledResource.obj);
        return true;
      }
      _trackOperation(operation, set) {
        set.add(operation);
        return operation.then((v) => {
          set.delete(operation);
          return this._Promise.resolve(v);
        }, (e2) => {
          set.delete(operation);
          return this._Promise.reject(e2);
        });
      }
      _createResource() {
        const factoryPromise = this._factory.create();
        const wrappedFactoryPromise = this._Promise.resolve(factoryPromise).then((resource) => {
          const pooledResource = new PooledResource(resource);
          this._allObjects.add(pooledResource);
          this._addPooledResourceToAvailableObjects(pooledResource);
        });
        this._trackOperation(wrappedFactoryPromise, this._factoryCreateOperations).then(() => {
          this._dispense();
          return null;
        }).catch((reason) => {
          this.emit(FACTORY_CREATE_ERROR, reason);
          this._dispense();
        });
      }
      _ensureMinimum() {
        if (this._draining === true) {
          return;
        }
        const minShortfall = this._config.min - this._count;
        for (let i2 = 0; i2 < minShortfall; i2++) {
          this._createResource();
        }
      }
      _evict() {
        const testsToRun = Math.min(this._config.numTestsPerEvictionRun, this._availableObjects.length);
        const evictionConfig = {
          softIdleTimeoutMillis: this._config.softIdleTimeoutMillis,
          idleTimeoutMillis: this._config.idleTimeoutMillis,
          min: this._config.min
        };
        for (let testsHaveRun = 0; testsHaveRun < testsToRun; ) {
          const iterationResult = this._evictionIterator.next();
          if (iterationResult.done === true && this._availableObjects.length < 1) {
            this._evictionIterator.reset();
            return;
          }
          if (iterationResult.done === true && this._availableObjects.length > 0) {
            this._evictionIterator.reset();
            continue;
          }
          const resource = iterationResult.value;
          const shouldEvict = this._evictor.evict(evictionConfig, resource, this._availableObjects.length);
          testsHaveRun++;
          if (shouldEvict === true) {
            this._evictionIterator.remove();
            this._destroy(resource);
          }
        }
      }
      _scheduleEvictorRun() {
        if (this._config.evictionRunIntervalMillis > 0) {
          this._scheduledEviction = setTimeout(() => {
            this._evict();
            this._scheduleEvictorRun();
          }, this._config.evictionRunIntervalMillis);
        }
      }
      _descheduleEvictorRun() {
        if (this._scheduledEviction) {
          clearTimeout(this._scheduledEviction);
        }
        this._scheduledEviction = null;
      }
      start() {
        if (this._draining === true) {
          return;
        }
        if (this._started === true) {
          return;
        }
        this._started = true;
        this._scheduleEvictorRun();
        this._ensureMinimum();
      }
      acquire(priority) {
        if (this._started === false && this._config.autostart === false) {
          this.start();
        }
        if (this._draining) {
          return this._Promise.reject(new Error("pool is draining and cannot accept work"));
        }
        if (this.spareResourceCapacity < 1 && this._availableObjects.length < 1 && this._config.maxWaitingClients !== void 0 && this._waitingClientsQueue.length >= this._config.maxWaitingClients) {
          return this._Promise.reject(new Error("max waitingClients count exceeded"));
        }
        const resourceRequest = new ResourceRequest(this._config.acquireTimeoutMillis, this._Promise);
        this._waitingClientsQueue.enqueue(resourceRequest, priority);
        this._dispense();
        return resourceRequest.promise;
      }
      use(fn, priority) {
        return this.acquire(priority).then((resource) => {
          return fn(resource).then((result) => {
            this.release(resource);
            return result;
          }, (err) => {
            this.destroy(resource);
            throw err;
          });
        });
      }
      isBorrowedResource(resource) {
        return this._resourceLoans.has(resource);
      }
      release(resource) {
        const loan = this._resourceLoans.get(resource);
        if (loan === void 0) {
          return this._Promise.reject(new Error("Resource not currently part of this pool"));
        }
        this._resourceLoans.delete(resource);
        loan.resolve();
        const pooledResource = loan.pooledResource;
        pooledResource.deallocate();
        this._addPooledResourceToAvailableObjects(pooledResource);
        this._dispense();
        return this._Promise.resolve();
      }
      destroy(resource) {
        const loan = this._resourceLoans.get(resource);
        if (loan === void 0) {
          return this._Promise.reject(new Error("Resource not currently part of this pool"));
        }
        this._resourceLoans.delete(resource);
        loan.resolve();
        const pooledResource = loan.pooledResource;
        pooledResource.deallocate();
        this._destroy(pooledResource);
        this._dispense();
        return this._Promise.resolve();
      }
      _addPooledResourceToAvailableObjects(pooledResource) {
        pooledResource.idle();
        if (this._config.fifo === true) {
          this._availableObjects.push(pooledResource);
        } else {
          this._availableObjects.unshift(pooledResource);
        }
      }
      drain() {
        this._draining = true;
        return this.__allResourceRequestsSettled().then(() => {
          return this.__allResourcesReturned();
        }).then(() => {
          this._descheduleEvictorRun();
        });
      }
      __allResourceRequestsSettled() {
        if (this._waitingClientsQueue.length > 0) {
          return reflector(this._waitingClientsQueue.tail.promise);
        }
        return this._Promise.resolve();
      }
      __allResourcesReturned() {
        const ps = Array.from(this._resourceLoans.values()).map((loan) => loan.promise).map(reflector);
        return this._Promise.all(ps);
      }
      clear() {
        const reflectedCreatePromises = Array.from(this._factoryCreateOperations).map(reflector);
        return this._Promise.all(reflectedCreatePromises).then(() => {
          for (const resource of this._availableObjects) {
            this._destroy(resource);
          }
          const reflectedDestroyPromises = Array.from(this._factoryDestroyOperations).map(reflector);
          return reflector(this._Promise.all(reflectedDestroyPromises));
        });
      }
      ready() {
        return new this._Promise((resolve2) => {
          const isReady = () => {
            if (this.available >= this.min) {
              resolve2();
            } else {
              setTimeout(isReady, 100);
            }
          };
          isReady();
        });
      }
      get _potentiallyAllocableResourceCount() {
        return this._availableObjects.length + this._testOnBorrowResources.size + this._testOnReturnResources.size + this._factoryCreateOperations.size;
      }
      get _count() {
        return this._allObjects.size + this._factoryCreateOperations.size;
      }
      get spareResourceCapacity() {
        return this._config.max - (this._allObjects.size + this._factoryCreateOperations.size);
      }
      get size() {
        return this._count;
      }
      get available() {
        return this._availableObjects.length;
      }
      get borrowed() {
        return this._resourceLoans.size;
      }
      get pending() {
        return this._waitingClientsQueue.length;
      }
      get max() {
        return this._config.max;
      }
      get min() {
        return this._config.min;
      }
    };
    module2.exports = Pool;
  }
});

// node_modules/generic-pool/index.js
var require_generic_pool = __commonJS({
  "node_modules/generic-pool/index.js"(exports, module2) {
    var Pool = require_Pool();
    var Deque = require_Deque();
    var PriorityQueue = require_PriorityQueue();
    var DefaultEvictor = require_DefaultEvictor();
    module2.exports = {
      Pool,
      Deque,
      PriorityQueue,
      DefaultEvictor,
      createPool: function(factory, config2) {
        return new Pool(DefaultEvictor, Deque, PriorityQueue, factory, config2);
      }
    };
  }
});

// node_modules/@node-redis/client/dist/lib/client/index.js
var require_client = __commonJS({
  "node_modules/@node-redis/client/dist/lib/client/index.js"(exports) {
    "use strict";
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f3) {
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f3 : kind === "a" ? f3.call(receiver) : f3 ? f3.value : state.get(receiver);
    };
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f3) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f3.call(receiver, value) : f3 ? f3.value = value : state.set(receiver, value), value;
    };
    var _RedisClient_instances;
    var _RedisClient_options;
    var _RedisClient_socket;
    var _RedisClient_queue;
    var _RedisClient_isolationPool;
    var _RedisClient_v4;
    var _RedisClient_selectedDB;
    var _RedisClient_initiateOptions;
    var _RedisClient_initiateSocket;
    var _RedisClient_initiateQueue;
    var _RedisClient_legacyMode;
    var _RedisClient_defineLegacyCommand;
    var _RedisClient_sendCommand;
    var _RedisClient_subscribe;
    var _RedisClient_unsubscribe;
    var _RedisClient_tick;
    var _RedisClient_destroyIsolationPool;
    Object.defineProperty(exports, "__esModule", { value: true });
    var commands_1 = require_commands2();
    var socket_1 = require_socket();
    var commands_queue_1 = require_commands_queue();
    var multi_command_1 = require_multi_command2();
    var events_1 = require("events");
    var command_options_1 = require_command_options();
    var commander_1 = require_commander();
    var generic_pool_1 = require_generic_pool();
    var errors_1 = require_errors();
    var url_1 = require("url");
    var RedisClient = class extends events_1.EventEmitter {
      constructor(options) {
        super();
        _RedisClient_instances.add(this);
        Object.defineProperty(this, "commandOptions", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: RedisClient.commandOptions
        });
        _RedisClient_options.set(this, void 0);
        _RedisClient_socket.set(this, void 0);
        _RedisClient_queue.set(this, void 0);
        _RedisClient_isolationPool.set(this, void 0);
        _RedisClient_v4.set(this, {});
        _RedisClient_selectedDB.set(this, 0);
        Object.defineProperty(this, "select", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: this.SELECT
        });
        Object.defineProperty(this, "subscribe", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: this.SUBSCRIBE
        });
        Object.defineProperty(this, "pSubscribe", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: this.PSUBSCRIBE
        });
        Object.defineProperty(this, "unsubscribe", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: this.UNSUBSCRIBE
        });
        Object.defineProperty(this, "pUnsubscribe", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: this.PUNSUBSCRIBE
        });
        Object.defineProperty(this, "quit", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: this.QUIT
        });
        __classPrivateFieldSet(this, _RedisClient_options, __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_initiateOptions).call(this, options), "f");
        __classPrivateFieldSet(this, _RedisClient_socket, __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_initiateSocket).call(this), "f");
        __classPrivateFieldSet(this, _RedisClient_queue, __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_initiateQueue).call(this), "f");
        __classPrivateFieldSet(this, _RedisClient_isolationPool, (0, generic_pool_1.createPool)({
          create: async () => {
            const duplicate = this.duplicate({
              isolationPoolOptions: void 0
            });
            await duplicate.connect();
            return duplicate;
          },
          destroy: (client2) => client2.disconnect()
        }, options === null || options === void 0 ? void 0 : options.isolationPoolOptions), "f");
        __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_legacyMode).call(this);
      }
      static commandOptions(options) {
        return (0, command_options_1.commandOptions)(options);
      }
      static extend(plugins) {
        const Client2 = (0, commander_1.extendWithModulesAndScripts)({
          BaseClass: RedisClient,
          modules: plugins === null || plugins === void 0 ? void 0 : plugins.modules,
          modulesCommandsExecutor: RedisClient.prototype.commandsExecutor,
          scripts: plugins === null || plugins === void 0 ? void 0 : plugins.scripts,
          scriptsExecutor: RedisClient.prototype.scriptsExecutor
        });
        if (Client2 !== RedisClient) {
          Client2.prototype.Multi = multi_command_1.default.extend(plugins);
        }
        return Client2;
      }
      static create(options) {
        return new (RedisClient.extend(options))(options);
      }
      static parseURL(url) {
        const { hostname, port, protocol, username, password, pathname } = new url_1.URL(url), parsed = {
          socket: {
            host: hostname
          }
        };
        if (protocol === "rediss:") {
          parsed.socket.tls = true;
        } else if (protocol !== "redis:") {
          throw new TypeError("Invalid protocol");
        }
        if (port) {
          parsed.socket.port = Number(port);
        }
        if (username) {
          parsed.username = decodeURIComponent(username);
        }
        if (password) {
          parsed.password = decodeURIComponent(password);
        }
        if (pathname.length > 1) {
          const database = Number(pathname.substring(1));
          if (isNaN(database)) {
            throw new TypeError("Invalid pathname");
          }
          parsed.database = database;
        }
        return parsed;
      }
      get options() {
        return __classPrivateFieldGet(this, _RedisClient_options, "f");
      }
      get isOpen() {
        return __classPrivateFieldGet(this, _RedisClient_socket, "f").isOpen;
      }
      get v4() {
        var _a4;
        if (!((_a4 = __classPrivateFieldGet(this, _RedisClient_options, "f")) === null || _a4 === void 0 ? void 0 : _a4.legacyMode)) {
          throw new Error('the client is not in "legacy mode"');
        }
        return __classPrivateFieldGet(this, _RedisClient_v4, "f");
      }
      duplicate(overrides) {
        return new (Object.getPrototypeOf(this)).constructor(__spreadValues(__spreadValues({}, __classPrivateFieldGet(this, _RedisClient_options, "f")), overrides));
      }
      async connect() {
        await __classPrivateFieldGet(this, _RedisClient_socket, "f").connect();
      }
      async commandsExecutor(command, args) {
        const { args: redisArgs, options } = (0, commander_1.transformCommandArguments)(command, args);
        return (0, commander_1.transformCommandReply)(command, await __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_sendCommand).call(this, redisArgs, options), redisArgs.preserve);
      }
      sendCommand(args, options) {
        return __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_sendCommand).call(this, args, options);
      }
      async scriptsExecutor(script, args) {
        const { args: redisArgs, options } = (0, commander_1.transformCommandArguments)(script, args);
        return (0, commander_1.transformCommandReply)(script, await this.executeScript(script, redisArgs, options), redisArgs.preserve);
      }
      async executeScript(script, args, options) {
        var _a4, _b;
        try {
          return await __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_sendCommand).call(this, [
            "EVALSHA",
            script.SHA1,
            script.NUMBER_OF_KEYS.toString(),
            ...args
          ], options);
        } catch (err) {
          if (!((_b = (_a4 = err === null || err === void 0 ? void 0 : err.message) === null || _a4 === void 0 ? void 0 : _a4.startsWith) === null || _b === void 0 ? void 0 : _b.call(_a4, "NOSCRIPT"))) {
            throw err;
          }
          return await __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_sendCommand).call(this, [
            "EVAL",
            script.SCRIPT,
            script.NUMBER_OF_KEYS.toString(),
            ...args
          ], options);
        }
      }
      async SELECT(options, db) {
        if (!(0, command_options_1.isCommandOptions)(options)) {
          db = options;
          options = null;
        }
        await __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_sendCommand).call(this, ["SELECT", db.toString()], options);
        __classPrivateFieldSet(this, _RedisClient_selectedDB, db, "f");
      }
      SUBSCRIBE(channels, listener, bufferMode) {
        return __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_subscribe).call(this, commands_queue_1.PubSubSubscribeCommands.SUBSCRIBE, channels, listener, bufferMode);
      }
      PSUBSCRIBE(patterns, listener, bufferMode) {
        return __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_subscribe).call(this, commands_queue_1.PubSubSubscribeCommands.PSUBSCRIBE, patterns, listener, bufferMode);
      }
      UNSUBSCRIBE(channels, listener, bufferMode) {
        return __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_unsubscribe).call(this, commands_queue_1.PubSubUnsubscribeCommands.UNSUBSCRIBE, channels, listener, bufferMode);
      }
      PUNSUBSCRIBE(patterns, listener, bufferMode) {
        return __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_unsubscribe).call(this, commands_queue_1.PubSubUnsubscribeCommands.PUNSUBSCRIBE, patterns, listener, bufferMode);
      }
      QUIT() {
        return __classPrivateFieldGet(this, _RedisClient_socket, "f").quit(() => {
          const quitPromise = __classPrivateFieldGet(this, _RedisClient_queue, "f").addCommand(["QUIT"], {
            ignorePubSubMode: true
          });
          __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_tick).call(this);
          return Promise.all([
            quitPromise,
            __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_destroyIsolationPool).call(this)
          ]);
        });
      }
      executeIsolated(fn) {
        return __classPrivateFieldGet(this, _RedisClient_isolationPool, "f").use(fn);
      }
      multi() {
        var _a4;
        return new this.Multi(this.multiExecutor.bind(this), (_a4 = __classPrivateFieldGet(this, _RedisClient_options, "f")) === null || _a4 === void 0 ? void 0 : _a4.legacyMode);
      }
      multiExecutor(commands, chainId) {
        const promise = Promise.all(commands.map(({ args }) => {
          return __classPrivateFieldGet(this, _RedisClient_queue, "f").addCommand(args, RedisClient.commandOptions({
            chainId
          }));
        }));
        __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_tick).call(this);
        return promise;
      }
      async *scanIterator(options) {
        let cursor = 0;
        do {
          const reply = await this.scan(cursor, options);
          cursor = reply.cursor;
          for (const key of reply.keys) {
            yield key;
          }
        } while (cursor !== 0);
      }
      async *hScanIterator(key, options) {
        let cursor = 0;
        do {
          const reply = await this.hScan(key, cursor, options);
          cursor = reply.cursor;
          for (const tuple of reply.tuples) {
            yield tuple;
          }
        } while (cursor !== 0);
      }
      async *sScanIterator(key, options) {
        let cursor = 0;
        do {
          const reply = await this.sScan(key, cursor, options);
          cursor = reply.cursor;
          for (const member of reply.members) {
            yield member;
          }
        } while (cursor !== 0);
      }
      async *zScanIterator(key, options) {
        let cursor = 0;
        do {
          const reply = await this.zScan(key, cursor, options);
          cursor = reply.cursor;
          for (const member of reply.members) {
            yield member;
          }
        } while (cursor !== 0);
      }
      async disconnect() {
        __classPrivateFieldGet(this, _RedisClient_queue, "f").flushAll(new errors_1.DisconnectsClientError());
        __classPrivateFieldGet(this, _RedisClient_socket, "f").disconnect();
        await __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_destroyIsolationPool).call(this);
      }
    };
    exports.default = RedisClient;
    _RedisClient_options = new WeakMap(), _RedisClient_socket = new WeakMap(), _RedisClient_queue = new WeakMap(), _RedisClient_isolationPool = new WeakMap(), _RedisClient_v4 = new WeakMap(), _RedisClient_selectedDB = new WeakMap(), _RedisClient_instances = new WeakSet(), _RedisClient_initiateOptions = function _RedisClient_initiateOptions2(options) {
      if (options === null || options === void 0 ? void 0 : options.url) {
        const parsed = RedisClient.parseURL(options.url);
        if (options.socket) {
          parsed.socket = Object.assign(options.socket, parsed.socket);
        }
        Object.assign(options, parsed);
      }
      if (options === null || options === void 0 ? void 0 : options.database) {
        __classPrivateFieldSet(this, _RedisClient_selectedDB, options.database, "f");
      }
      return options;
    }, _RedisClient_initiateSocket = function _RedisClient_initiateSocket2() {
      var _a4;
      const socketInitiator = async () => {
        var _a5, _b, _c, _d2, _e;
        const promises = [];
        if (__classPrivateFieldGet(this, _RedisClient_selectedDB, "f") !== 0) {
          promises.push(__classPrivateFieldGet(this, _RedisClient_queue, "f").addCommand(["SELECT", __classPrivateFieldGet(this, _RedisClient_selectedDB, "f").toString()], { asap: true }));
        }
        if ((_a5 = __classPrivateFieldGet(this, _RedisClient_options, "f")) === null || _a5 === void 0 ? void 0 : _a5.readonly) {
          promises.push(__classPrivateFieldGet(this, _RedisClient_queue, "f").addCommand(commands_1.default.READONLY.transformArguments(), { asap: true }));
        }
        if ((_b = __classPrivateFieldGet(this, _RedisClient_options, "f")) === null || _b === void 0 ? void 0 : _b.name) {
          promises.push(__classPrivateFieldGet(this, _RedisClient_queue, "f").addCommand(commands_1.default.CLIENT_SETNAME.transformArguments(__classPrivateFieldGet(this, _RedisClient_options, "f").name), { asap: true }));
        }
        if (((_c = __classPrivateFieldGet(this, _RedisClient_options, "f")) === null || _c === void 0 ? void 0 : _c.username) || ((_d2 = __classPrivateFieldGet(this, _RedisClient_options, "f")) === null || _d2 === void 0 ? void 0 : _d2.password)) {
          promises.push(__classPrivateFieldGet(this, _RedisClient_queue, "f").addCommand(commands_1.default.AUTH.transformArguments({
            username: __classPrivateFieldGet(this, _RedisClient_options, "f").username,
            password: (_e = __classPrivateFieldGet(this, _RedisClient_options, "f").password) !== null && _e !== void 0 ? _e : ""
          }), { asap: true }).catch((err) => {
            throw new errors_1.AuthError(err.message);
          }));
        }
        const resubscribePromise = __classPrivateFieldGet(this, _RedisClient_queue, "f").resubscribe();
        if (resubscribePromise) {
          promises.push(resubscribePromise);
        }
        if (promises.length) {
          __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_tick).call(this, true);
          await Promise.all(promises);
        }
      };
      return new socket_1.default(socketInitiator, (_a4 = __classPrivateFieldGet(this, _RedisClient_options, "f")) === null || _a4 === void 0 ? void 0 : _a4.socket).on("data", (data2) => __classPrivateFieldGet(this, _RedisClient_queue, "f").parseResponse(data2)).on("error", (err) => {
        this.emit("error", err);
        if (__classPrivateFieldGet(this, _RedisClient_socket, "f").isOpen) {
          __classPrivateFieldGet(this, _RedisClient_queue, "f").flushWaitingForReply(err);
        } else {
          __classPrivateFieldGet(this, _RedisClient_queue, "f").flushAll(err);
        }
      }).on("connect", () => this.emit("connect")).on("ready", () => {
        this.emit("ready");
        __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_tick).call(this);
      }).on("reconnecting", () => this.emit("reconnecting")).on("drain", () => __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_tick).call(this)).on("end", () => this.emit("end"));
    }, _RedisClient_initiateQueue = function _RedisClient_initiateQueue2() {
      var _a4;
      return new commands_queue_1.default((_a4 = __classPrivateFieldGet(this, _RedisClient_options, "f")) === null || _a4 === void 0 ? void 0 : _a4.commandsQueueMaxLength);
    }, _RedisClient_legacyMode = function _RedisClient_legacyMode2() {
      var _a4;
      if (!((_a4 = __classPrivateFieldGet(this, _RedisClient_options, "f")) === null || _a4 === void 0 ? void 0 : _a4.legacyMode))
        return;
      __classPrivateFieldGet(this, _RedisClient_v4, "f").sendCommand = __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_sendCommand).bind(this);
      this.sendCommand = (...args) => {
        let callback;
        if (typeof args[args.length - 1] === "function") {
          callback = args.pop();
        }
        __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_sendCommand).call(this, args.flat()).then((reply) => {
          if (!callback)
            return;
          callback(null, reply);
        }).catch((err) => {
          if (!callback) {
            this.emit("error", err);
            return;
          }
          callback(err);
        });
      };
      for (const name2 of Object.keys(commands_1.default)) {
        __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, name2);
      }
      for (const name2 of Object.keys(commands_1.default)) {
        this[name2.toLowerCase()] = this[name2];
      }
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "SELECT");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "select");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "SUBSCRIBE");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "subscribe");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "PSUBSCRIBE");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "pSubscribe");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "UNSUBSCRIBE");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "unsubscribe");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "PUNSUBSCRIBE");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "pUnsubscribe");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "QUIT");
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_defineLegacyCommand).call(this, "quit");
    }, _RedisClient_defineLegacyCommand = function _RedisClient_defineLegacyCommand2(name2) {
      __classPrivateFieldGet(this, _RedisClient_v4, "f")[name2] = this[name2].bind(this);
      this[name2] = (...args) => this.sendCommand(name2, ...args);
    }, _RedisClient_sendCommand = function _RedisClient_sendCommand2(args, options) {
      if (!__classPrivateFieldGet(this, _RedisClient_socket, "f").isOpen) {
        return Promise.reject(new errors_1.ClientClosedError());
      }
      if (options === null || options === void 0 ? void 0 : options.isolated) {
        return this.executeIsolated((isolatedClient) => isolatedClient.sendCommand(args, __spreadProps(__spreadValues({}, options), {
          isolated: false
        })));
      }
      const promise = __classPrivateFieldGet(this, _RedisClient_queue, "f").addCommand(args, options);
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_tick).call(this);
      return promise;
    }, _RedisClient_subscribe = function _RedisClient_subscribe2(command, channels, listener, bufferMode) {
      const promise = __classPrivateFieldGet(this, _RedisClient_queue, "f").subscribe(command, channels, listener, bufferMode);
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_tick).call(this);
      return promise;
    }, _RedisClient_unsubscribe = function _RedisClient_unsubscribe2(command, channels, listener, bufferMode) {
      const promise = __classPrivateFieldGet(this, _RedisClient_queue, "f").unsubscribe(command, channels, listener, bufferMode);
      __classPrivateFieldGet(this, _RedisClient_instances, "m", _RedisClient_tick).call(this);
      return promise;
    }, _RedisClient_tick = function _RedisClient_tick2(force = false) {
      if (__classPrivateFieldGet(this, _RedisClient_socket, "f").writableNeedDrain || !force && !__classPrivateFieldGet(this, _RedisClient_socket, "f").isReady) {
        return;
      }
      __classPrivateFieldGet(this, _RedisClient_socket, "f").cork();
      while (!__classPrivateFieldGet(this, _RedisClient_socket, "f").writableNeedDrain) {
        const args = __classPrivateFieldGet(this, _RedisClient_queue, "f").getCommandToSend();
        if (args === void 0)
          break;
        __classPrivateFieldGet(this, _RedisClient_socket, "f").writeCommand(args);
      }
    }, _RedisClient_destroyIsolationPool = async function _RedisClient_destroyIsolationPool2() {
      await __classPrivateFieldGet(this, _RedisClient_isolationPool, "f").drain();
      await __classPrivateFieldGet(this, _RedisClient_isolationPool, "f").clear();
    };
    (0, commander_1.extendWithCommands)({
      BaseClass: RedisClient,
      commands: commands_1.default,
      executor: RedisClient.prototype.commandsExecutor
    });
    RedisClient.prototype.Multi = multi_command_1.default;
  }
});

// node_modules/cluster-key-slot/lib/index.js
var require_lib = __commonJS({
  "node_modules/cluster-key-slot/lib/index.js"(exports, module2) {
    var lookup = [
      0,
      4129,
      8258,
      12387,
      16516,
      20645,
      24774,
      28903,
      33032,
      37161,
      41290,
      45419,
      49548,
      53677,
      57806,
      61935,
      4657,
      528,
      12915,
      8786,
      21173,
      17044,
      29431,
      25302,
      37689,
      33560,
      45947,
      41818,
      54205,
      50076,
      62463,
      58334,
      9314,
      13379,
      1056,
      5121,
      25830,
      29895,
      17572,
      21637,
      42346,
      46411,
      34088,
      38153,
      58862,
      62927,
      50604,
      54669,
      13907,
      9842,
      5649,
      1584,
      30423,
      26358,
      22165,
      18100,
      46939,
      42874,
      38681,
      34616,
      63455,
      59390,
      55197,
      51132,
      18628,
      22757,
      26758,
      30887,
      2112,
      6241,
      10242,
      14371,
      51660,
      55789,
      59790,
      63919,
      35144,
      39273,
      43274,
      47403,
      23285,
      19156,
      31415,
      27286,
      6769,
      2640,
      14899,
      10770,
      56317,
      52188,
      64447,
      60318,
      39801,
      35672,
      47931,
      43802,
      27814,
      31879,
      19684,
      23749,
      11298,
      15363,
      3168,
      7233,
      60846,
      64911,
      52716,
      56781,
      44330,
      48395,
      36200,
      40265,
      32407,
      28342,
      24277,
      20212,
      15891,
      11826,
      7761,
      3696,
      65439,
      61374,
      57309,
      53244,
      48923,
      44858,
      40793,
      36728,
      37256,
      33193,
      45514,
      41451,
      53516,
      49453,
      61774,
      57711,
      4224,
      161,
      12482,
      8419,
      20484,
      16421,
      28742,
      24679,
      33721,
      37784,
      41979,
      46042,
      49981,
      54044,
      58239,
      62302,
      689,
      4752,
      8947,
      13010,
      16949,
      21012,
      25207,
      29270,
      46570,
      42443,
      38312,
      34185,
      62830,
      58703,
      54572,
      50445,
      13538,
      9411,
      5280,
      1153,
      29798,
      25671,
      21540,
      17413,
      42971,
      47098,
      34713,
      38840,
      59231,
      63358,
      50973,
      55100,
      9939,
      14066,
      1681,
      5808,
      26199,
      30326,
      17941,
      22068,
      55628,
      51565,
      63758,
      59695,
      39368,
      35305,
      47498,
      43435,
      22596,
      18533,
      30726,
      26663,
      6336,
      2273,
      14466,
      10403,
      52093,
      56156,
      60223,
      64286,
      35833,
      39896,
      43963,
      48026,
      19061,
      23124,
      27191,
      31254,
      2801,
      6864,
      10931,
      14994,
      64814,
      60687,
      56684,
      52557,
      48554,
      44427,
      40424,
      36297,
      31782,
      27655,
      23652,
      19525,
      15522,
      11395,
      7392,
      3265,
      61215,
      65342,
      53085,
      57212,
      44955,
      49082,
      36825,
      40952,
      28183,
      32310,
      20053,
      24180,
      11923,
      16050,
      3793,
      7920
    ];
    var toUTF8Array = function toUTF8Array2(str) {
      var char;
      var i2 = 0;
      var p = 0;
      var utf8 = [];
      var len = str.length;
      for (; i2 < len; i2++) {
        char = str.charCodeAt(i2);
        if (char < 128) {
          utf8[p++] = char;
        } else if (char < 2048) {
          utf8[p++] = char >> 6 | 192;
          utf8[p++] = char & 63 | 128;
        } else if ((char & 64512) === 55296 && i2 + 1 < str.length && (str.charCodeAt(i2 + 1) & 64512) === 56320) {
          char = 65536 + ((char & 1023) << 10) + (str.charCodeAt(++i2) & 1023);
          utf8[p++] = char >> 18 | 240;
          utf8[p++] = char >> 12 & 63 | 128;
          utf8[p++] = char >> 6 & 63 | 128;
          utf8[p++] = char & 63 | 128;
        } else {
          utf8[p++] = char >> 12 | 224;
          utf8[p++] = char >> 6 & 63 | 128;
          utf8[p++] = char & 63 | 128;
        }
      }
      return utf8;
    };
    var generate2 = module2.exports = function generate3(str) {
      var char;
      var i2 = 0;
      var start = -1;
      var result = 0;
      var resultHash = 0;
      var utf8 = typeof str === "string" ? toUTF8Array(str) : str;
      var len = utf8.length;
      while (i2 < len) {
        char = utf8[i2++];
        if (start === -1) {
          if (char === 123) {
            start = i2;
          }
        } else if (char !== 125) {
          resultHash = lookup[(char ^ resultHash >> 8) & 255] ^ resultHash << 8;
        } else if (i2 - 1 !== start) {
          return resultHash & 16383;
        }
        result = lookup[(char ^ result >> 8) & 255] ^ result << 8;
      }
      return result & 16383;
    };
    module2.exports.generateMulti = function generateMulti(keys) {
      var i2 = 1;
      var len = keys.length;
      var base2 = generate2(keys[0]);
      while (i2 < len) {
        if (generate2(keys[i2++]) !== base2)
          return -1;
      }
      return base2;
    };
  }
});

// node_modules/@node-redis/client/dist/lib/cluster/cluster-slots.js
var require_cluster_slots = __commonJS({
  "node_modules/@node-redis/client/dist/lib/cluster/cluster-slots.js"(exports) {
    "use strict";
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f3) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f3.call(receiver, value) : f3 ? f3.value = value : state.set(receiver, value), value;
    };
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f3) {
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f3 : kind === "a" ? f3.call(receiver) : f3 ? f3.value : state.get(receiver);
    };
    var _RedisClusterSlots_instances;
    var _RedisClusterSlots_options;
    var _RedisClusterSlots_Client;
    var _RedisClusterSlots_onError;
    var _RedisClusterSlots_nodeByUrl;
    var _RedisClusterSlots_slots;
    var _RedisClusterSlots_discoverNodes;
    var _RedisClusterSlots_runningRediscoverPromise;
    var _RedisClusterSlots_rediscover;
    var _RedisClusterSlots_reset;
    var _RedisClusterSlots_clientOptionsDefaults;
    var _RedisClusterSlots_initiateClient;
    var _RedisClusterSlots_initiateClientForNode;
    var _RedisClusterSlots_slotClientIterator;
    var _RedisClusterSlots_getSlotClient;
    var _RedisClusterSlots_randomClientIterator;
    var _RedisClusterSlots_getRandomClient;
    var _RedisClusterSlots_destroy;
    Object.defineProperty(exports, "__esModule", { value: true });
    var client_1 = require_client();
    var errors_1 = require_errors();
    var calculateSlot = require_lib();
    var RedisClusterSlots = class {
      constructor(options, onError) {
        _RedisClusterSlots_instances.add(this);
        _RedisClusterSlots_options.set(this, void 0);
        _RedisClusterSlots_Client.set(this, void 0);
        _RedisClusterSlots_onError.set(this, void 0);
        _RedisClusterSlots_nodeByUrl.set(this, new Map());
        _RedisClusterSlots_slots.set(this, []);
        _RedisClusterSlots_runningRediscoverPromise.set(this, void 0);
        _RedisClusterSlots_randomClientIterator.set(this, void 0);
        __classPrivateFieldSet(this, _RedisClusterSlots_options, options, "f");
        __classPrivateFieldSet(this, _RedisClusterSlots_Client, client_1.default.extend(options), "f");
        __classPrivateFieldSet(this, _RedisClusterSlots_onError, onError, "f");
      }
      async connect() {
        for (const rootNode of __classPrivateFieldGet(this, _RedisClusterSlots_options, "f").rootNodes) {
          if (await __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_discoverNodes).call(this, __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_clientOptionsDefaults).call(this, rootNode)))
            return;
        }
        throw new errors_1.RootNodesUnavailableError();
      }
      async rediscover(startWith) {
        if (!__classPrivateFieldGet(this, _RedisClusterSlots_runningRediscoverPromise, "f")) {
          __classPrivateFieldSet(this, _RedisClusterSlots_runningRediscoverPromise, __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_rediscover).call(this, startWith).finally(() => __classPrivateFieldSet(this, _RedisClusterSlots_runningRediscoverPromise, void 0, "f")), "f");
        }
        return __classPrivateFieldGet(this, _RedisClusterSlots_runningRediscoverPromise, "f");
      }
      getSlotMaster(slot) {
        return __classPrivateFieldGet(this, _RedisClusterSlots_slots, "f")[slot].master;
      }
      getClient(firstKey, isReadonly) {
        if (!firstKey) {
          return __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_getRandomClient).call(this);
        }
        const slot = calculateSlot(firstKey);
        if (!isReadonly || !__classPrivateFieldGet(this, _RedisClusterSlots_options, "f").useReplicas) {
          return this.getSlotMaster(slot).client;
        }
        return __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_getSlotClient).call(this, slot);
      }
      getMasters() {
        var _a4;
        const masters = [];
        for (const node of __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").values()) {
          if ((_a4 = node.client.options) === null || _a4 === void 0 ? void 0 : _a4.readonly)
            continue;
          masters.push(node);
        }
        return masters;
      }
      getNodeByUrl(url) {
        return __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").get(url);
      }
      quit() {
        return __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_destroy).call(this, (client2) => client2.quit());
      }
      disconnect() {
        return __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_destroy).call(this, (client2) => client2.disconnect());
      }
    };
    exports.default = RedisClusterSlots;
    _RedisClusterSlots_options = new WeakMap(), _RedisClusterSlots_Client = new WeakMap(), _RedisClusterSlots_onError = new WeakMap(), _RedisClusterSlots_nodeByUrl = new WeakMap(), _RedisClusterSlots_slots = new WeakMap(), _RedisClusterSlots_runningRediscoverPromise = new WeakMap(), _RedisClusterSlots_randomClientIterator = new WeakMap(), _RedisClusterSlots_instances = new WeakSet(), _RedisClusterSlots_discoverNodes = async function _RedisClusterSlots_discoverNodes2(clientOptions) {
      const client2 = __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_initiateClient).call(this, clientOptions);
      await client2.connect();
      try {
        await __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_reset).call(this, await client2.clusterNodes());
        return true;
      } catch (err) {
        __classPrivateFieldGet(this, _RedisClusterSlots_onError, "f").call(this, err);
        return false;
      } finally {
        if (client2.isOpen) {
          await client2.disconnect();
        }
      }
    }, _RedisClusterSlots_rediscover = async function _RedisClusterSlots_rediscover2(startWith) {
      if (await __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_discoverNodes).call(this, startWith.options))
        return;
      for (const { client: client2 } of __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").values()) {
        if (client2 === startWith)
          continue;
        if (await __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_discoverNodes).call(this, client2.options))
          return;
      }
      throw new Error("None of the cluster nodes is available");
    }, _RedisClusterSlots_reset = async function _RedisClusterSlots_reset2(masters) {
      const promises = [], clientsInUse = new Set();
      for (const master of masters) {
        const slot = {
          master: __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_initiateClientForNode).call(this, master, false, clientsInUse, promises),
          replicas: __classPrivateFieldGet(this, _RedisClusterSlots_options, "f").useReplicas ? master.replicas.map((replica) => __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_initiateClientForNode).call(this, replica, true, clientsInUse, promises)) : [],
          clientIterator: void 0
        };
        for (const { from, to } of master.slots) {
          for (let i2 = from; i2 <= to; i2++) {
            __classPrivateFieldGet(this, _RedisClusterSlots_slots, "f")[i2] = slot;
          }
        }
      }
      for (const [url, { client: client2 }] of __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").entries()) {
        if (clientsInUse.has(url))
          continue;
        promises.push(client2.disconnect());
        __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").delete(url);
      }
      await Promise.all(promises);
    }, _RedisClusterSlots_clientOptionsDefaults = function _RedisClusterSlots_clientOptionsDefaults2(options) {
      if (!__classPrivateFieldGet(this, _RedisClusterSlots_options, "f").defaults)
        return options;
      const merged = Object.assign({}, __classPrivateFieldGet(this, _RedisClusterSlots_options, "f").defaults, options);
      if ((options === null || options === void 0 ? void 0 : options.socket) && __classPrivateFieldGet(this, _RedisClusterSlots_options, "f").defaults.socket) {
        Object.assign({}, __classPrivateFieldGet(this, _RedisClusterSlots_options, "f").defaults.socket, options.socket);
      }
      return merged;
    }, _RedisClusterSlots_initiateClient = function _RedisClusterSlots_initiateClient2(options) {
      return new (__classPrivateFieldGet(this, _RedisClusterSlots_Client, "f"))(__classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_clientOptionsDefaults).call(this, options)).on("error", __classPrivateFieldGet(this, _RedisClusterSlots_onError, "f"));
    }, _RedisClusterSlots_initiateClientForNode = function _RedisClusterSlots_initiateClientForNode2(nodeData, readonly, clientsInUse, promises) {
      const url = `${nodeData.host}:${nodeData.port}`;
      clientsInUse.add(url);
      let node = __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").get(url);
      if (!node) {
        node = {
          id: nodeData.id,
          client: __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_initiateClient).call(this, {
            socket: {
              host: nodeData.host,
              port: nodeData.port
            },
            readonly
          })
        };
        promises.push(node.client.connect());
        __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").set(url, node);
      }
      return node;
    }, _RedisClusterSlots_slotClientIterator = function* _RedisClusterSlots_slotClientIterator2(slotNumber) {
      const slot = __classPrivateFieldGet(this, _RedisClusterSlots_slots, "f")[slotNumber];
      yield slot.master.client;
      for (const replica of slot.replicas) {
        yield replica.client;
      }
    }, _RedisClusterSlots_getSlotClient = function _RedisClusterSlots_getSlotClient2(slotNumber) {
      const slot = __classPrivateFieldGet(this, _RedisClusterSlots_slots, "f")[slotNumber];
      if (!slot.clientIterator) {
        slot.clientIterator = __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_slotClientIterator).call(this, slotNumber);
      }
      const { done, value } = slot.clientIterator.next();
      if (done) {
        slot.clientIterator = void 0;
        return __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_getSlotClient2).call(this, slotNumber);
      }
      return value;
    }, _RedisClusterSlots_getRandomClient = function _RedisClusterSlots_getRandomClient2() {
      if (!__classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").size) {
        throw new Error("Cluster is not connected");
      }
      if (!__classPrivateFieldGet(this, _RedisClusterSlots_randomClientIterator, "f")) {
        __classPrivateFieldSet(this, _RedisClusterSlots_randomClientIterator, __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").values(), "f");
      }
      const { done, value } = __classPrivateFieldGet(this, _RedisClusterSlots_randomClientIterator, "f").next();
      if (done) {
        __classPrivateFieldSet(this, _RedisClusterSlots_randomClientIterator, void 0, "f");
        return __classPrivateFieldGet(this, _RedisClusterSlots_instances, "m", _RedisClusterSlots_getRandomClient2).call(this);
      }
      return value.client;
    }, _RedisClusterSlots_destroy = async function _RedisClusterSlots_destroy2(fn) {
      const promises = [];
      for (const { client: client2 } of __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").values()) {
        promises.push(fn(client2));
      }
      await Promise.all(promises);
      __classPrivateFieldGet(this, _RedisClusterSlots_nodeByUrl, "f").clear();
      __classPrivateFieldGet(this, _RedisClusterSlots_slots, "f").splice(0);
    };
  }
});

// node_modules/@node-redis/client/dist/lib/cluster/multi-command.js
var require_multi_command3 = __commonJS({
  "node_modules/@node-redis/client/dist/lib/cluster/multi-command.js"(exports) {
    "use strict";
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f3) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f3.call(receiver, value) : f3 ? f3.value = value : state.set(receiver, value), value;
    };
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f3) {
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f3 : kind === "a" ? f3.call(receiver) : f3 ? f3.value : state.get(receiver);
    };
    var _RedisClusterMultiCommand_multi;
    var _RedisClusterMultiCommand_executor;
    var _RedisClusterMultiCommand_firstKey;
    Object.defineProperty(exports, "__esModule", { value: true });
    var commands_1 = require_commands();
    var multi_command_1 = require_multi_command();
    var commander_1 = require_commander();
    var _12 = require_cluster();
    var RedisClusterMultiCommand = class {
      constructor(executor, firstKey) {
        _RedisClusterMultiCommand_multi.set(this, new multi_command_1.default());
        _RedisClusterMultiCommand_executor.set(this, void 0);
        _RedisClusterMultiCommand_firstKey.set(this, void 0);
        Object.defineProperty(this, "EXEC", {
          enumerable: true,
          configurable: true,
          writable: true,
          value: this.exec
        });
        __classPrivateFieldSet(this, _RedisClusterMultiCommand_executor, executor, "f");
        __classPrivateFieldSet(this, _RedisClusterMultiCommand_firstKey, firstKey, "f");
      }
      static extend(plugins) {
        return (0, commander_1.extendWithModulesAndScripts)({
          BaseClass: RedisClusterMultiCommand,
          modules: plugins === null || plugins === void 0 ? void 0 : plugins.modules,
          modulesCommandsExecutor: RedisClusterMultiCommand.prototype.commandsExecutor,
          scripts: plugins === null || plugins === void 0 ? void 0 : plugins.scripts,
          scriptsExecutor: RedisClusterMultiCommand.prototype.scriptsExecutor
        });
      }
      commandsExecutor(command, args) {
        const transformedArguments = command.transformArguments(...args);
        if (!__classPrivateFieldGet(this, _RedisClusterMultiCommand_firstKey, "f")) {
          __classPrivateFieldSet(this, _RedisClusterMultiCommand_firstKey, _12.default.extractFirstKey(command, args, transformedArguments), "f");
        }
        return this.addCommand(void 0, transformedArguments, command.transformReply);
      }
      addCommand(firstKey, args, transformReply) {
        if (!__classPrivateFieldGet(this, _RedisClusterMultiCommand_firstKey, "f")) {
          __classPrivateFieldSet(this, _RedisClusterMultiCommand_firstKey, firstKey, "f");
        }
        __classPrivateFieldGet(this, _RedisClusterMultiCommand_multi, "f").addCommand(args, transformReply);
        return this;
      }
      scriptsExecutor(script, args) {
        const transformedArguments = __classPrivateFieldGet(this, _RedisClusterMultiCommand_multi, "f").addScript(script, args);
        if (!__classPrivateFieldGet(this, _RedisClusterMultiCommand_firstKey, "f")) {
          __classPrivateFieldSet(this, _RedisClusterMultiCommand_firstKey, _12.default.extractFirstKey(script, args, transformedArguments), "f");
        }
        return this.addCommand(void 0, transformedArguments);
      }
      async exec(execAsPipeline = false) {
        if (execAsPipeline) {
          return this.execAsPipeline();
        }
        const commands = __classPrivateFieldGet(this, _RedisClusterMultiCommand_multi, "f").exec();
        if (!commands)
          return [];
        return __classPrivateFieldGet(this, _RedisClusterMultiCommand_multi, "f").handleExecReplies(await __classPrivateFieldGet(this, _RedisClusterMultiCommand_executor, "f").call(this, commands, __classPrivateFieldGet(this, _RedisClusterMultiCommand_firstKey, "f"), multi_command_1.default.generateChainId()));
      }
      async execAsPipeline() {
        return __classPrivateFieldGet(this, _RedisClusterMultiCommand_multi, "f").transformReplies(await __classPrivateFieldGet(this, _RedisClusterMultiCommand_executor, "f").call(this, __classPrivateFieldGet(this, _RedisClusterMultiCommand_multi, "f").queue, __classPrivateFieldGet(this, _RedisClusterMultiCommand_firstKey, "f")));
      }
    };
    exports.default = RedisClusterMultiCommand;
    _RedisClusterMultiCommand_multi = new WeakMap(), _RedisClusterMultiCommand_executor = new WeakMap(), _RedisClusterMultiCommand_firstKey = new WeakMap();
    (0, commander_1.extendWithCommands)({
      BaseClass: RedisClusterMultiCommand,
      commands: commands_1.default,
      executor: RedisClusterMultiCommand.prototype.commandsExecutor
    });
  }
});

// node_modules/@node-redis/client/dist/lib/cluster/index.js
var require_cluster = __commonJS({
  "node_modules/@node-redis/client/dist/lib/cluster/index.js"(exports) {
    "use strict";
    var __classPrivateFieldSet = exports && exports.__classPrivateFieldSet || function(receiver, state, value, kind, f3) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f3.call(receiver, value) : f3 ? f3.value = value : state.set(receiver, value), value;
    };
    var __classPrivateFieldGet = exports && exports.__classPrivateFieldGet || function(receiver, state, kind, f3) {
      if (kind === "a" && !f3)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f3 : kind === "a" ? f3.call(receiver) : f3 ? f3.value : state.get(receiver);
    };
    var _RedisCluster_instances;
    var _RedisCluster_options;
    var _RedisCluster_slots;
    var _RedisCluster_Multi;
    var _RedisCluster_execute;
    Object.defineProperty(exports, "__esModule", { value: true });
    var commands_1 = require_commands();
    var cluster_slots_1 = require_cluster_slots();
    var commander_1 = require_commander();
    var events_1 = require("events");
    var multi_command_1 = require_multi_command3();
    var RedisCluster = class extends events_1.EventEmitter {
      constructor(options) {
        super();
        _RedisCluster_instances.add(this);
        _RedisCluster_options.set(this, void 0);
        _RedisCluster_slots.set(this, void 0);
        _RedisCluster_Multi.set(this, void 0);
        __classPrivateFieldSet(this, _RedisCluster_options, options, "f");
        __classPrivateFieldSet(this, _RedisCluster_slots, new cluster_slots_1.default(options, (err) => this.emit("error", err)), "f");
        __classPrivateFieldSet(this, _RedisCluster_Multi, multi_command_1.default.extend(options), "f");
      }
      static extractFirstKey(command, originalArgs, redisArgs) {
        if (command.FIRST_KEY_INDEX === void 0) {
          return void 0;
        } else if (typeof command.FIRST_KEY_INDEX === "number") {
          return redisArgs[command.FIRST_KEY_INDEX];
        }
        return command.FIRST_KEY_INDEX(...originalArgs);
      }
      static create(options) {
        return new ((0, commander_1.extendWithModulesAndScripts)({
          BaseClass: RedisCluster,
          modules: options === null || options === void 0 ? void 0 : options.modules,
          modulesCommandsExecutor: RedisCluster.prototype.commandsExecutor,
          scripts: options === null || options === void 0 ? void 0 : options.scripts,
          scriptsExecutor: RedisCluster.prototype.scriptsExecutor
        }))(options);
      }
      duplicate(overrides) {
        return new (Object.getPrototypeOf(this)).constructor(__spreadValues(__spreadValues({}, __classPrivateFieldGet(this, _RedisCluster_options, "f")), overrides));
      }
      async connect() {
        return __classPrivateFieldGet(this, _RedisCluster_slots, "f").connect();
      }
      async commandsExecutor(command, args) {
        const { args: redisArgs, options } = (0, commander_1.transformCommandArguments)(command, args);
        return (0, commander_1.transformCommandReply)(command, await this.sendCommand(RedisCluster.extractFirstKey(command, args, redisArgs), command.IS_READ_ONLY, redisArgs, options), redisArgs.preserve);
      }
      async sendCommand(firstKey, isReadonly, args, options) {
        return __classPrivateFieldGet(this, _RedisCluster_instances, "m", _RedisCluster_execute).call(this, firstKey, isReadonly, (client2) => client2.sendCommand(args, options));
      }
      async scriptsExecutor(script, args) {
        const { args: redisArgs, options } = (0, commander_1.transformCommandArguments)(script, args);
        return (0, commander_1.transformCommandReply)(script, await this.executeScript(script, args, redisArgs, options), redisArgs.preserve);
      }
      async executeScript(script, originalArgs, redisArgs, options) {
        return __classPrivateFieldGet(this, _RedisCluster_instances, "m", _RedisCluster_execute).call(this, RedisCluster.extractFirstKey(script, originalArgs, redisArgs), script.IS_READ_ONLY, (client2) => client2.executeScript(script, redisArgs, options));
      }
      multi(routing) {
        return new (__classPrivateFieldGet(this, _RedisCluster_Multi, "f"))((commands, firstKey, chainId) => {
          return __classPrivateFieldGet(this, _RedisCluster_instances, "m", _RedisCluster_execute).call(this, firstKey, false, (client2) => client2.multiExecutor(commands, chainId));
        }, routing);
      }
      getMasters() {
        return __classPrivateFieldGet(this, _RedisCluster_slots, "f").getMasters();
      }
      getSlotMaster(slot) {
        return __classPrivateFieldGet(this, _RedisCluster_slots, "f").getSlotMaster(slot);
      }
      quit() {
        return __classPrivateFieldGet(this, _RedisCluster_slots, "f").quit();
      }
      disconnect() {
        return __classPrivateFieldGet(this, _RedisCluster_slots, "f").disconnect();
      }
    };
    exports.default = RedisCluster;
    _RedisCluster_options = new WeakMap(), _RedisCluster_slots = new WeakMap(), _RedisCluster_Multi = new WeakMap(), _RedisCluster_instances = new WeakSet(), _RedisCluster_execute = async function _RedisCluster_execute2(firstKey, isReadonly, executor) {
      var _a4, _b;
      const maxCommandRedirections = (_a4 = __classPrivateFieldGet(this, _RedisCluster_options, "f").maxCommandRedirections) !== null && _a4 !== void 0 ? _a4 : 16;
      let client2 = __classPrivateFieldGet(this, _RedisCluster_slots, "f").getClient(firstKey, isReadonly);
      for (let i2 = 0; ; i2++) {
        try {
          return await executor(client2);
        } catch (err) {
          if (++i2 > maxCommandRedirections || !(err instanceof Error)) {
            throw err;
          }
          if (err.message.startsWith("ASK")) {
            const url = err.message.substring(err.message.lastIndexOf(" ") + 1);
            if (((_b = __classPrivateFieldGet(this, _RedisCluster_slots, "f").getNodeByUrl(url)) === null || _b === void 0 ? void 0 : _b.client) === client2) {
              await client2.asking();
              continue;
            }
            await __classPrivateFieldGet(this, _RedisCluster_slots, "f").rediscover(client2);
            const redirectTo = __classPrivateFieldGet(this, _RedisCluster_slots, "f").getNodeByUrl(url);
            if (!redirectTo) {
              throw new Error(`Cannot find node ${url}`);
            }
            await redirectTo.client.asking();
            client2 = redirectTo.client;
            continue;
          } else if (err.message.startsWith("MOVED")) {
            await __classPrivateFieldGet(this, _RedisCluster_slots, "f").rediscover(client2);
            client2 = __classPrivateFieldGet(this, _RedisCluster_slots, "f").getClient(firstKey, isReadonly);
            continue;
          }
          throw err;
        }
      }
    };
    (0, commander_1.extendWithCommands)({
      BaseClass: RedisCluster,
      commands: commands_1.default,
      executor: RedisCluster.prototype.commandsExecutor
    });
  }
});

// node_modules/@node-redis/client/dist/lib/lua-script.js
var require_lua_script = __commonJS({
  "node_modules/@node-redis/client/dist/lib/lua-script.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.scriptSha1 = exports.defineScript = void 0;
    var crypto_1 = require("crypto");
    function defineScript(script) {
      return __spreadProps(__spreadValues({}, script), {
        SHA1: scriptSha1(script.SCRIPT)
      });
    }
    exports.defineScript = defineScript;
    function scriptSha1(script) {
      return (0, crypto_1.createHash)("sha1").update(script).digest("hex");
    }
    exports.scriptSha1 = scriptSha1;
  }
});

// node_modules/@node-redis/client/dist/index.js
var require_dist = __commonJS({
  "node_modules/@node-redis/client/dist/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o2, m2, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o2, k2, { enumerable: true, get: function() {
        return m2[k];
      } });
    } : function(o2, m2, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o2[k2] = m2[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m2, exports2) {
      for (var p in m2)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m2, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.defineScript = exports.createCluster = exports.commandOptions = exports.createClient = void 0;
    var client_1 = require_client();
    var cluster_1 = require_cluster();
    exports.createClient = client_1.default.create;
    exports.commandOptions = client_1.default.commandOptions;
    exports.createCluster = cluster_1.default.create;
    var lua_script_1 = require_lua_script();
    Object.defineProperty(exports, "defineScript", { enumerable: true, get: function() {
      return lua_script_1.defineScript;
    } });
    __exportStar(require_errors(), exports);
  }
});

// node_modules/redis-om/dist/errors.js
var require_errors3 = __commonJS({
  "node_modules/redis-om/dist/errors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RedisError = class extends Error {
      constructor(message) {
        super(message);
        this.name = "RedisError";
      }
    };
    exports.default = RedisError;
  }
});

// node_modules/redis-om/dist/redis/redis-shim.js
var require_redis_shim = __commonJS({
  "node_modules/redis-om/dist/redis/redis-shim.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var client_1 = require_dist();
    var errors_1 = __importDefault(require_errors3());
    var RedisShim = class {
      async open(url) {
        this.redis = (0, client_1.createClient)({ url });
        await this.redis.connect();
      }
      async close() {
        await this.redis.quit();
      }
      execute(command) {
        return this.redis.sendCommand(command);
      }
      async unlink(key) {
        await this.redis.unlink(key);
      }
      hgetall(key) {
        return this.redis.hGetAll(key);
      }
      async hsetall(key, data2) {
        try {
          await this.redis.executeIsolated(async (isolatedClient) => {
            await isolatedClient.watch(key);
            await isolatedClient.multi().unlink(key).hSet(key, data2).exec();
          });
        } catch (error2) {
          if (error2.name === "WatchError")
            throw new errors_1.default("Watch error when setting HASH.");
          throw error2;
        }
      }
    };
    exports.default = RedisShim;
  }
});

// node_modules/redis-om/dist/search/where.js
var require_where = __commonJS({
  "node_modules/redis-om/dist/search/where.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Where = void 0;
    var Where = class {
    };
    exports.Where = Where;
    exports.default = Where;
  }
});

// node_modules/redis-om/dist/search/where-and.js
var require_where_and = __commonJS({
  "node_modules/redis-om/dist/search/where-and.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var where_1 = __importDefault(require_where());
    var WhereAnd = class extends where_1.default {
      constructor(left, right) {
        super();
        this.left = left;
        this.right = right;
      }
      toString() {
        return `( ${this.left.toString()} ${this.right.toString()} )`;
      }
    };
    exports.default = WhereAnd;
  }
});

// node_modules/redis-om/dist/search/where-or.js
var require_where_or = __commonJS({
  "node_modules/redis-om/dist/search/where-or.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var where_1 = __importDefault(require_where());
    var WhereOr = class extends where_1.default {
      constructor(left, right) {
        super();
        this.left = left;
        this.right = right;
      }
      toString() {
        return `( ${this.left.toString()} | ${this.right.toString()} )`;
      }
    };
    exports.default = WhereOr;
  }
});

// node_modules/redis-om/dist/search/where-field.js
var require_where_field = __commonJS({
  "node_modules/redis-om/dist/search/where-field.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var WhereField = class {
      constructor(search, field) {
        this.negated = false;
        this.search = search;
        this.field = field;
      }
      get is() {
        return this;
      }
      get does() {
        return this;
      }
      get not() {
        this.negate();
        return this;
      }
      negate() {
        this.negated = !this.negated;
      }
      buildQuery(valuePortion) {
        let negationPortion = this.negated ? "-" : "";
        let fieldPortion = this.field;
        return `(${negationPortion}@${fieldPortion}:${valuePortion})`;
      }
    };
    exports.default = WhereField;
  }
});

// node_modules/redis-om/dist/search/where-array.js
var require_where_array = __commonJS({
  "node_modules/redis-om/dist/search/where-array.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var where_field_1 = __importDefault(require_where_field());
    var WhereArray = class extends where_field_1.default {
      contain(value) {
        this.value = [value];
        return this.search;
      }
      contains(value) {
        return this.contain(value);
      }
      containsOneOf(...value) {
        this.value = value;
        return this.search;
      }
      containOneOf(...value) {
        return this.containsOneOf(...value);
      }
      toString() {
        let matchPunctuation = /[,.<>{}[\]"':;!@#$%^&*()\-+=~| ]/g;
        let escapedValue = this.value.map((s4) => s4.replace(matchPunctuation, "\\$&")).join("|");
        return this.buildQuery(`{${escapedValue}}`);
      }
    };
    exports.default = WhereArray;
  }
});

// node_modules/redis-om/dist/search/where-boolean.js
var require_where_boolean = __commonJS({
  "node_modules/redis-om/dist/search/where-boolean.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WhereJsonBoolean = exports.WhereHashBoolean = exports.WhereBoolean = void 0;
    var where_field_1 = __importDefault(require_where_field());
    var WhereBoolean = class extends where_field_1.default {
      eq(value) {
        this.value = value;
        return this.search;
      }
      equal(value) {
        return this.eq(value);
      }
      equals(value) {
        return this.eq(value);
      }
      equalTo(value) {
        return this.eq(value);
      }
      true() {
        return this.eq(true);
      }
      false() {
        return this.eq(false);
      }
    };
    exports.WhereBoolean = WhereBoolean;
    var WhereHashBoolean = class extends WhereBoolean {
      toString() {
        return this.buildQuery(`{${this.value ? "1" : "0"}}`);
      }
    };
    exports.WhereHashBoolean = WhereHashBoolean;
    var WhereJsonBoolean = class extends WhereBoolean {
      toString() {
        return this.buildQuery(`{${this.value}}`);
      }
    };
    exports.WhereJsonBoolean = WhereJsonBoolean;
  }
});

// node_modules/redis-om/dist/search/where-number.js
var require_where_number = __commonJS({
  "node_modules/redis-om/dist/search/where-number.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var where_field_1 = __importDefault(require_where_field());
    var WhereNumber = class extends where_field_1.default {
      constructor() {
        super(...arguments);
        this.lower = Number.NEGATIVE_INFINITY;
        this.upper = Number.POSITIVE_INFINITY;
        this.lowerExclusive = false;
        this.upperExclusive = false;
      }
      eq(value) {
        this.lower = value;
        this.upper = value;
        return this.search;
      }
      gt(value) {
        this.lower = value;
        this.lowerExclusive = true;
        return this.search;
      }
      gte(value) {
        this.lower = value;
        return this.search;
      }
      lt(value) {
        this.upper = value;
        this.upperExclusive = true;
        return this.search;
      }
      lte(value) {
        this.upper = value;
        return this.search;
      }
      between(lower2, upper) {
        this.lower = lower2;
        this.upper = upper;
        return this.search;
      }
      equal(value) {
        return this.eq(value);
      }
      equals(value) {
        return this.eq(value);
      }
      equalTo(value) {
        return this.eq(value);
      }
      greaterThan(value) {
        return this.gt(value);
      }
      greaterThanOrEqualTo(value) {
        return this.gte(value);
      }
      lessThan(value) {
        return this.lt(value);
      }
      lessThanOrEqualTo(value) {
        return this.lte(value);
      }
      toString() {
        let lower2 = this.makeLowerString();
        let upper = this.makeUpperString();
        return this.buildQuery(`[${lower2} ${upper}]`);
      }
      makeLowerString() {
        if (this.lower === Number.NEGATIVE_INFINITY)
          return "-inf";
        if (this.lowerExclusive)
          return `(${this.lower}`;
        return this.lower.toString();
      }
      makeUpperString() {
        if (this.upper === Number.POSITIVE_INFINITY)
          return "+inf";
        if (this.upperExclusive)
          return `(${this.upper}`;
        return this.upper.toString();
      }
    };
    exports.default = WhereNumber;
  }
});

// node_modules/redis-om/dist/search/where-string.js
var require_where_string = __commonJS({
  "node_modules/redis-om/dist/search/where-string.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var where_field_1 = __importDefault(require_where_field());
    var WhereString = class extends where_field_1.default {
      eq(value) {
        this.value = value;
        return this.search;
      }
      equal(value) {
        return this.eq(value);
      }
      equals(value) {
        return this.eq(value);
      }
      equalTo(value) {
        return this.eq(value);
      }
      toString() {
        let matchPunctuation = /[,.<>{}[\]"':;!@#$%^&*()\-+=~| ]/g;
        let escapedValue = this.value.replace(matchPunctuation, "\\$&");
        return this.buildQuery(`{${escapedValue}}`);
      }
    };
    exports.default = WhereString;
  }
});

// node_modules/redis-om/dist/search/where-text.js
var require_where_text = __commonJS({
  "node_modules/redis-om/dist/search/where-text.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var where_field_1 = __importDefault(require_where_field());
    var WhereText = class extends where_field_1.default {
      constructor() {
        super(...arguments);
        this.exactValue = false;
      }
      match(value) {
        this.value = value;
        return this.search;
      }
      matchExact(value) {
        this.exact.value = value;
        return this.search;
      }
      matches(value) {
        return this.match(value);
      }
      matchExactly(value) {
        return this.matchExact(value);
      }
      matchesExactly(value) {
        return this.matchExact(value);
      }
      get exact() {
        this.exactValue = true;
        return this;
      }
      get exactly() {
        return this.exact;
      }
      toString() {
        let matchPunctuation = /[,.<>{}[\]"':;!@#$%^&*()\-+=~|]/g;
        let escapedValue = this.value.replace(matchPunctuation, "\\$&");
        if (this.exactValue) {
          return this.buildQuery(`"${escapedValue}"`);
        } else {
          return this.buildQuery(`'${escapedValue}'`);
        }
      }
    };
    exports.default = WhereText;
  }
});

// node_modules/redis-om/dist/repository/hash-converter.js
var require_hash_converter = __commonJS({
  "node_modules/redis-om/dist/repository/hash-converter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var HashConverter = class {
      constructor(schemaDef) {
        this.schemaDef = schemaDef;
      }
      toHashData(entityData) {
        var _a4;
        let hashData = {};
        for (let field in this.schemaDef) {
          let value = entityData[field];
          if (value !== void 0) {
            let fieldDef = this.schemaDef[field];
            if (fieldDef.type === "number")
              hashData[field] = value.toString();
            if (fieldDef.type === "boolean")
              hashData[field] = value ? "1" : "0";
            if (fieldDef.type === "array")
              hashData[field] = value.join((_a4 = fieldDef.separator) !== null && _a4 !== void 0 ? _a4 : "|");
            if (fieldDef.type === "string")
              hashData[field] = value;
          }
        }
        return hashData;
      }
      toEntityData(hashData) {
        let entityData = {};
        for (let field in this.schemaDef) {
          let value = hashData[field];
          if (value !== void 0) {
            let fieldDef = this.schemaDef[field];
            if (fieldDef.type === "number")
              this.addNumber(field, entityData, value);
            if (fieldDef.type === "boolean")
              this.addBoolean(field, entityData, value);
            if (fieldDef.type === "array")
              this.addArray(field, fieldDef, entityData, value);
            if (fieldDef.type === "string")
              this.addString(field, entityData, value);
          }
        }
        return entityData;
      }
      addNumber(field, entityData, value) {
        let parsed = Number.parseFloat(value);
        if (Number.isNaN(parsed))
          throw Error(`Non-numeric value of '${value}' read from Redis for number field '${field}'`);
        entityData[field] = Number.parseFloat(value);
      }
      addBoolean(field, entityData, value) {
        if (value === "0") {
          entityData[field] = false;
        } else if (value === "1") {
          entityData[field] = true;
        } else {
          throw Error(`Non-boolean value of '${value}' read from Redis for boolean field '${field}'`);
        }
      }
      addArray(field, fieldDef, entityData, value) {
        var _a4;
        entityData[field] = value.split((_a4 = fieldDef.separator) !== null && _a4 !== void 0 ? _a4 : "|");
      }
      addString(field, entityData, value) {
        entityData[field] = value;
      }
    };
    exports.default = HashConverter;
  }
});

// node_modules/redis-om/dist/repository/json-converter.js
var require_json_converter = __commonJS({
  "node_modules/redis-om/dist/repository/json-converter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var JsonConverter = class {
      constructor(schemaDef) {
        this.schemaDef = schemaDef;
      }
      toJsonData(entityData) {
        return entityData;
      }
      toEntityData(jsonData) {
        let entityData = {};
        if (jsonData === null)
          return entityData;
        for (let field in this.schemaDef) {
          let value = jsonData[field];
          if (value !== void 0 && value !== null)
            entityData[field] = value;
        }
        return entityData;
      }
    };
    exports.default = JsonConverter;
  }
});

// node_modules/redis-om/dist/search/results-converter.js
var require_results_converter = __commonJS({
  "node_modules/redis-om/dist/search/results-converter.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.JsonSearchResultsConverter = exports.HashSearchResultsConverter = exports.SearchResultsConverter = void 0;
    var hash_converter_1 = __importDefault(require_hash_converter());
    var json_converter_1 = __importDefault(require_json_converter());
    var SearchResultsConverter = class {
      constructor(schema2, results) {
        this.schema = schema2;
        this.results = results;
      }
      get count() {
        let [count2] = this.results;
        return Number.parseInt(count2);
      }
      get ids() {
        return this.keys.map((key) => key.replace(/^.*:/, ""));
      }
      get keys() {
        let [_count, ...keysAndValues] = this.results;
        return keysAndValues.filter((_entry, index) => index % 2 === 0);
      }
      get values() {
        let [_count, ...keysAndValues] = this.results;
        return keysAndValues.filter((_entry, index) => index % 2 !== 0);
      }
      get entities() {
        let ids = this.ids;
        let values = this.values;
        return values.map((array, index) => this.arrayToEntity(ids[index], array));
      }
    };
    exports.SearchResultsConverter = SearchResultsConverter;
    var HashSearchResultsConverter = class extends SearchResultsConverter {
      arrayToEntity(id2, array) {
        let keys = array.filter((_entry, index) => index % 2 === 0);
        let values = array.filter((_entry, index) => index % 2 !== 0);
        let hashData = keys.reduce((object, key, index) => {
          object[key] = values[index];
          return object;
        }, {});
        let converter = new hash_converter_1.default(this.schema.definition);
        let entityData = converter.toEntityData(hashData);
        return new this.schema.entityCtor(this.schema.definition, id2, entityData);
      }
    };
    exports.HashSearchResultsConverter = HashSearchResultsConverter;
    var JsonSearchResultsConverter = class extends SearchResultsConverter {
      arrayToEntity(id2, array) {
        let jsonString = array[1];
        let jsonData = JSON.parse(jsonString);
        let converter = new json_converter_1.default(this.schema.definition);
        let entityData = converter.toEntityData(jsonData);
        return new this.schema.entityCtor(this.schema.definition, id2, entityData);
      }
    };
    exports.JsonSearchResultsConverter = JsonSearchResultsConverter;
  }
});

// node_modules/redis-om/dist/search/search.js
var require_search = __commonJS({
  "node_modules/redis-om/dist/search/search.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var where_and_1 = __importDefault(require_where_and());
    var where_or_1 = __importDefault(require_where_or());
    var where_array_1 = __importDefault(require_where_array());
    var where_boolean_1 = require_where_boolean();
    var where_number_1 = __importDefault(require_where_number());
    var where_string_1 = __importDefault(require_where_string());
    var where_text_1 = __importDefault(require_where_text());
    var results_converter_1 = require_results_converter();
    var __1 = require_dist2();
    var Search = class {
      constructor(schema2, client2) {
        this.schema = schema2;
        this.client = client2;
      }
      get query() {
        if (this.rootWhere === void 0)
          return "*";
        return `${this.rootWhere.toString()}`;
      }
      get return() {
        return this;
      }
      async count() {
        let searchResults = await this.callSearch();
        return this.schema.dataStructure === "JSON" ? new results_converter_1.JsonSearchResultsConverter(this.schema, searchResults).count : new results_converter_1.HashSearchResultsConverter(this.schema, searchResults).count;
      }
      async page(offset, count2) {
        let searchResults = await this.callSearch(offset, count2);
        return this.schema.dataStructure === "JSON" ? new results_converter_1.JsonSearchResultsConverter(this.schema, searchResults).entities : new results_converter_1.HashSearchResultsConverter(this.schema, searchResults).entities;
      }
      async all(options = { pageSize: 10 }) {
        let entities = [];
        let offset = 0;
        let pageSize = options.pageSize;
        while (true) {
          let foundEntities = await this.page(offset, pageSize);
          entities.push(...foundEntities);
          if (foundEntities.length < pageSize)
            break;
          offset += pageSize;
        }
        return entities;
      }
      async first() {
        var _a4;
        let foundEntity = await this.page(0, 1);
        return (_a4 = foundEntity[0]) !== null && _a4 !== void 0 ? _a4 : null;
      }
      async returnCount() {
        return await this.count();
      }
      async returnPage(offset, count2) {
        return await this.page(offset, count2);
      }
      async returnAll(options = { pageSize: 10 }) {
        return await this.all(options);
      }
      async returnFirst() {
        return await this.first();
      }
      where(fieldOrFn) {
        return this.anyWhere(where_and_1.default, fieldOrFn);
      }
      and(fieldOrFn) {
        return this.anyWhere(where_and_1.default, fieldOrFn);
      }
      or(fieldOrFn) {
        return this.anyWhere(where_or_1.default, fieldOrFn);
      }
      async callSearch(offset = 0, count2 = 0) {
        let options = {
          indexName: this.schema.indexName,
          query: this.query,
          offset,
          count: count2
        };
        let searchResults;
        try {
          searchResults = await this.client.search(options);
        } catch (error2) {
          let message = error2.message;
          if (message.startsWith("Syntax error")) {
            throw new __1.RedisError(`The query to RediSearch had a syntax error: "${message}".
This is often the result of using a stop word in the query. Either change the query to not use a stop word or change the stop words in the schema definition. You can check the RediSearch source for the default stop words at: https://github.com/RediSearch/RediSearch/blob/master/src/stopwords.h.`);
          }
          throw error2;
        }
        return searchResults;
      }
      anyWhere(ctor, fieldOrFn) {
        if (typeof fieldOrFn === "string") {
          return this.anyWhereForField(ctor, fieldOrFn);
        } else {
          return this.anyWhereForFunction(ctor, fieldOrFn);
        }
      }
      anyWhereForField(ctor, field) {
        let where = this.createWhere(field);
        if (this.rootWhere === void 0) {
          this.rootWhere = where;
        } else {
          this.rootWhere = new ctor(this.rootWhere, where);
        }
        return where;
      }
      anyWhereForFunction(ctor, subSearchFn) {
        let search = new Search(this.schema, this.client);
        let subSearch = subSearchFn(search);
        if (subSearch.rootWhere === void 0) {
          throw new Error("Sub-search without and root where was somehow defined.");
        } else {
          if (this.rootWhere === void 0) {
            this.rootWhere = subSearch.rootWhere;
          } else {
            this.rootWhere = new ctor(this.rootWhere, subSearch.rootWhere);
          }
        }
        return this;
      }
      createWhere(field) {
        let fieldDef = this.schema.definition[field];
        if (fieldDef === void 0)
          throw new Error(`The field '${field}' is not part of the schema.`);
        if (fieldDef.type === "array")
          return new where_array_1.default(this, field);
        if (fieldDef.type === "boolean" && this.schema.dataStructure === "HASH")
          return new where_boolean_1.WhereHashBoolean(this, field);
        if (fieldDef.type === "boolean" && this.schema.dataStructure === "JSON")
          return new where_boolean_1.WhereJsonBoolean(this, field);
        if (fieldDef.type === "number")
          return new where_number_1.default(this, field);
        if (fieldDef.type === "string" && fieldDef.textSearch === true)
          return new where_text_1.default(this, field);
        if (fieldDef.type === "string" && fieldDef.textSearch !== true)
          return new where_string_1.default(this, field);
        throw new Error(`The field type of '${fieldDef.type}' is not a valid field type. Valid types include 'array', 'boolean', 'number', and 'string'.`);
      }
    };
    exports.default = Search;
  }
});

// node_modules/redis-om/dist/repository/repository.js
var require_repository = __commonJS({
  "node_modules/redis-om/dist/repository/repository.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var search_1 = __importDefault(require_search());
    var hash_converter_1 = __importDefault(require_hash_converter());
    var json_converter_1 = __importDefault(require_json_converter());
    var Repository2 = class {
      constructor(schema2, client2) {
        this.schema = schema2;
        this.client = client2;
        this.jsonConverter = new json_converter_1.default(this.schema.definition);
        this.hashConverter = new hash_converter_1.default(this.schema.definition);
      }
      async createIndex() {
        let options = {
          indexName: this.schema.indexName,
          dataStructure: this.schema.dataStructure,
          prefix: `${this.schema.prefix}:`,
          schema: this.schema.redisSchema
        };
        if (this.schema.useStopWords === "OFF")
          options.stopWords = [];
        if (this.schema.useStopWords === "CUSTOM")
          options.stopWords = this.schema.stopWords;
        await this.client.createIndex(options);
      }
      async dropIndex() {
        try {
          await this.client.dropIndex(this.schema.indexName);
        } catch (e2) {
          if (e2 instanceof Error && e2.message === "Unknown Index name") {
          } else {
            throw e2;
          }
        }
      }
      createEntity(data2 = {}) {
        let id2 = this.schema.generateId();
        let entity = new this.schema.entityCtor(this.schema.definition, id2);
        for (let key in data2) {
          if (this.schema.entityCtor.prototype.hasOwnProperty(key)) {
            entity[key] = data2[key];
          }
        }
        return entity;
      }
      async save(entity) {
        let key = this.makeKey(entity.entityId);
        if (Object.keys(entity.entityData).length === 0) {
          await this.client.unlink(key);
          return entity.entityId;
        }
        if (this.schema.dataStructure === "JSON") {
          let jsonData = this.jsonConverter.toJsonData(entity.entityData);
          await this.client.jsonset(key, jsonData);
        } else {
          let hashData = this.hashConverter.toHashData(entity.entityData);
          await this.client.hsetall(key, hashData);
        }
        return entity.entityId;
      }
      async createAndSave(data2 = {}) {
        let entity = this.createEntity(data2);
        await this.save(entity);
        return entity;
      }
      async fetch(id2) {
        let key = this.makeKey(id2);
        let entityData = {};
        if (this.schema.dataStructure === "JSON") {
          let jsonData = await this.client.jsonget(key);
          entityData = this.jsonConverter.toEntityData(jsonData);
        } else {
          let hashData = await this.client.hgetall(key);
          entityData = this.hashConverter.toEntityData(hashData);
        }
        let entity = new this.schema.entityCtor(this.schema.definition, id2, entityData);
        return entity;
      }
      async remove(id2) {
        let key = this.makeKey(id2);
        await this.client.unlink(key);
      }
      search() {
        return new search_1.default(this.schema, this.client);
      }
      makeKey(id2) {
        return `${this.schema.prefix}:${id2}`;
      }
    };
    exports.default = Repository2;
  }
});

// node_modules/redis-om/dist/client.js
var require_client2 = __commonJS({
  "node_modules/redis-om/dist/client.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var redis_shim_1 = __importDefault(require_redis_shim());
    var repository_1 = __importDefault(require_repository());
    var errors_1 = __importDefault(require_errors3());
    var Client2 = class {
      async open(url = "redis://localhost:6379") {
        var _a4;
        let shim = (_a4 = this.shim) !== null && _a4 !== void 0 ? _a4 : new redis_shim_1.default();
        await shim.open(url);
        this.shim = shim;
      }
      async execute(command) {
        this.validateShimOpen();
        return await this.shim.execute(command.map((arg) => {
          if (arg === false)
            return "0";
          if (arg === true)
            return "1";
          return arg.toString();
        }));
      }
      fetchRepository(schema2) {
        this.validateShimOpen();
        return new repository_1.default(schema2, this);
      }
      async close() {
        var _a4;
        await ((_a4 = this.shim) === null || _a4 === void 0 ? void 0 : _a4.close());
        this.shim = void 0;
      }
      async createIndex(options) {
        this.validateShimOpen();
        let { indexName, dataStructure, prefix, schema: schema2, stopWords } = options;
        let command = [
          "FT.CREATE",
          indexName,
          "ON",
          dataStructure,
          "PREFIX",
          "1",
          `${prefix}`
        ];
        if (stopWords !== void 0)
          command.push("STOPWORDS", `${stopWords.length}`, ...stopWords);
        command.push("SCHEMA", ...schema2);
        await this.shim.execute(command);
      }
      async dropIndex(indexName) {
        this.validateShimOpen();
        await this.shim.execute(["FT.DROPINDEX", indexName]);
      }
      async search(options) {
        this.validateShimOpen();
        let { indexName, query, offset, count: count2 } = options;
        return await this.shim.execute([
          "FT.SEARCH",
          indexName,
          query,
          "LIMIT",
          offset.toString(),
          count2.toString()
        ]);
      }
      async unlink(key) {
        this.validateShimOpen();
        await this.shim.unlink(key);
      }
      async hgetall(key) {
        this.validateShimOpen();
        return await this.shim.hgetall(key);
      }
      async hsetall(key, data2) {
        this.validateShimOpen();
        await this.shim.hsetall(key, data2);
      }
      async jsonget(key) {
        this.validateShimOpen();
        let json = await this.shim.execute(["JSON.GET", key, "."]);
        return JSON.parse(json);
      }
      async jsonset(key, data2) {
        this.validateShimOpen();
        let json = JSON.stringify(data2);
        await this.shim.execute(["JSON.SET", key, ".", json]);
      }
      isOpen() {
        return !!this.shim;
      }
      validateShimOpen() {
        if (!this.shim)
          throw new errors_1.default("Redis connection needs opened.");
      }
    };
    exports.default = Client2;
  }
});

// node_modules/redis-om/dist/entity/entity.js
var require_entity = __commonJS({
  "node_modules/redis-om/dist/entity/entity.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Entity2 = class {
      constructor(schemaDef, id2, data2 = {}) {
        this.schemaDef = schemaDef;
        this.entityId = id2;
        this.entityData = data2;
      }
      toJSON() {
        let json = { entityId: this.entityId };
        for (let key in this.schemaDef) {
          json[key] = this[key];
        }
        return json;
      }
    };
    exports.default = Entity2;
  }
});

// node_modules/ulid/dist/index.umd.js
var require_index_umd = __commonJS({
  "node_modules/ulid/dist/index.umd.js"(exports, module2) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : factory(global2.ULID = {});
    })(exports, function(exports2) {
      "use strict";
      function createError(message) {
        var err = new Error(message);
        err.source = "ulid";
        return err;
      }
      var ENCODING = "0123456789ABCDEFGHJKMNPQRSTVWXYZ";
      var ENCODING_LEN = ENCODING.length;
      var TIME_MAX = Math.pow(2, 48) - 1;
      var TIME_LEN = 10;
      var RANDOM_LEN = 16;
      function replaceCharAt(str, index, char) {
        if (index > str.length - 1) {
          return str;
        }
        return str.substr(0, index) + char + str.substr(index + 1);
      }
      function incrementBase32(str) {
        var done = void 0;
        var index = str.length;
        var char = void 0;
        var charIndex = void 0;
        var maxCharIndex = ENCODING_LEN - 1;
        while (!done && index-- >= 0) {
          char = str[index];
          charIndex = ENCODING.indexOf(char);
          if (charIndex === -1) {
            throw createError("incorrectly encoded string");
          }
          if (charIndex === maxCharIndex) {
            str = replaceCharAt(str, index, ENCODING[0]);
            continue;
          }
          done = replaceCharAt(str, index, ENCODING[charIndex + 1]);
        }
        if (typeof done === "string") {
          return done;
        }
        throw createError("cannot increment this string");
      }
      function randomChar(prng) {
        var rand = Math.floor(prng() * ENCODING_LEN);
        if (rand === ENCODING_LEN) {
          rand = ENCODING_LEN - 1;
        }
        return ENCODING.charAt(rand);
      }
      function encodeTime(now2, len) {
        if (isNaN(now2)) {
          throw new Error(now2 + " must be a number");
        }
        if (now2 > TIME_MAX) {
          throw createError("cannot encode time greater than " + TIME_MAX);
        }
        if (now2 < 0) {
          throw createError("time must be positive");
        }
        if (Number.isInteger(now2) === false) {
          throw createError("time must be an integer");
        }
        var mod = void 0;
        var str = "";
        for (; len > 0; len--) {
          mod = now2 % ENCODING_LEN;
          str = ENCODING.charAt(mod) + str;
          now2 = (now2 - mod) / ENCODING_LEN;
        }
        return str;
      }
      function encodeRandom(len, prng) {
        var str = "";
        for (; len > 0; len--) {
          str = randomChar(prng) + str;
        }
        return str;
      }
      function decodeTime(id2) {
        if (id2.length !== TIME_LEN + RANDOM_LEN) {
          throw createError("malformed ulid");
        }
        var time = id2.substr(0, TIME_LEN).split("").reverse().reduce(function(carry, char, index) {
          var encodingIndex = ENCODING.indexOf(char);
          if (encodingIndex === -1) {
            throw createError("invalid character found: " + char);
          }
          return carry += encodingIndex * Math.pow(ENCODING_LEN, index);
        }, 0);
        if (time > TIME_MAX) {
          throw createError("malformed ulid, timestamp too large");
        }
        return time;
      }
      function detectPrng() {
        var allowInsecure = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        var root = arguments[1];
        if (!root) {
          root = typeof window !== "undefined" ? window : null;
        }
        var browserCrypto = root && (root.crypto || root.msCrypto);
        if (browserCrypto) {
          return function() {
            var buffer = new Uint8Array(1);
            browserCrypto.getRandomValues(buffer);
            return buffer[0] / 255;
          };
        } else {
          try {
            var nodeCrypto = require("crypto");
            return function() {
              return nodeCrypto.randomBytes(1).readUInt8() / 255;
            };
          } catch (e2) {
          }
        }
        if (allowInsecure) {
          try {
            console.error("secure crypto unusable, falling back to insecure Math.random()!");
          } catch (e2) {
          }
          return function() {
            return Math.random();
          };
        }
        throw createError("secure crypto unusable, insecure Math.random not allowed");
      }
      function factory(currPrng) {
        if (!currPrng) {
          currPrng = detectPrng();
        }
        return function ulid2(seedTime) {
          if (isNaN(seedTime)) {
            seedTime = Date.now();
          }
          return encodeTime(seedTime, TIME_LEN) + encodeRandom(RANDOM_LEN, currPrng);
        };
      }
      function monotonicFactory(currPrng) {
        if (!currPrng) {
          currPrng = detectPrng();
        }
        var lastTime = 0;
        var lastRandom = void 0;
        return function ulid2(seedTime) {
          if (isNaN(seedTime)) {
            seedTime = Date.now();
          }
          if (seedTime <= lastTime) {
            var incrementedRandom = lastRandom = incrementBase32(lastRandom);
            return encodeTime(lastTime, TIME_LEN) + incrementedRandom;
          }
          lastTime = seedTime;
          var newRandom = lastRandom = encodeRandom(RANDOM_LEN, currPrng);
          return encodeTime(seedTime, TIME_LEN) + newRandom;
        };
      }
      var ulid = factory();
      exports2.replaceCharAt = replaceCharAt;
      exports2.incrementBase32 = incrementBase32;
      exports2.randomChar = randomChar;
      exports2.encodeTime = encodeTime;
      exports2.encodeRandom = encodeRandom;
      exports2.decodeTime = decodeTime;
      exports2.detectPrng = detectPrng;
      exports2.factory = factory;
      exports2.monotonicFactory = monotonicFactory;
      exports2.ulid = ulid;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// node_modules/redis-om/dist/schema/schema-builder.js
var require_schema_builder = __commonJS({
  "node_modules/redis-om/dist/schema/schema-builder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SchemaBuilder = class {
      constructor(schema2) {
        this.schema = schema2;
      }
      get redisSchema() {
        if (this.schema.dataStructure === "JSON")
          return this.buildJsonSchema();
        if (this.schema.dataStructure === "HASH")
          return this.buildHashSchema();
        throw Error("'FOO' in an invalid data structure. Valid data structures are 'HASH' and 'JSON'.");
      }
      buildHashSchema() {
        let redisSchema = [];
        for (let field in this.schema.definition) {
          redisSchema.push(...this.buildHashSchemaEntry(field));
        }
        return redisSchema;
      }
      buildJsonSchema() {
        let redisSchema = [];
        for (let field in this.schema.definition) {
          redisSchema.push(...this.buildJsonSchemaEntry(field));
        }
        return redisSchema;
      }
      buildHashSchemaEntry(field) {
        var _a4, _b, _c;
        let schemaEntry = [];
        let fieldDef = this.schema.definition[field];
        let fieldType = fieldDef.type;
        let fieldAlias = (_a4 = fieldDef.alias) !== null && _a4 !== void 0 ? _a4 : field;
        schemaEntry.push(fieldAlias);
        if (fieldType === "boolean")
          schemaEntry.push("TAG");
        if (fieldType === "number")
          schemaEntry.push("NUMERIC");
        if (fieldType === "array")
          schemaEntry.push("TAG", "SEPARATOR", (_b = fieldDef.separator) !== null && _b !== void 0 ? _b : "|");
        if (fieldType === "string") {
          if (fieldDef.textSearch)
            schemaEntry.push("TEXT");
          else
            schemaEntry.push("TAG", "SEPARATOR", (_c = fieldDef.separator) !== null && _c !== void 0 ? _c : "|");
        }
        return schemaEntry;
      }
      buildJsonSchemaEntry(field) {
        var _a4, _b;
        let schemaEntry = [];
        let fieldDef = this.schema.definition[field];
        let fieldType = fieldDef.type;
        let fieldAlias = (_a4 = fieldDef.alias) !== null && _a4 !== void 0 ? _a4 : field;
        let fieldPath = `$.${fieldAlias}${fieldType === "array" ? "[*]" : ""}`;
        schemaEntry.push(fieldPath, "AS", fieldAlias);
        if (fieldType === "boolean")
          schemaEntry.push("TAG");
        if (fieldType === "number")
          schemaEntry.push("NUMERIC");
        if (fieldType === "array")
          schemaEntry.push("TAG");
        if (fieldType === "string") {
          if (fieldDef.textSearch)
            schemaEntry.push("TEXT");
          else
            schemaEntry.push("TAG", "SEPARATOR", (_b = fieldDef.separator) !== null && _b !== void 0 ? _b : "|");
        }
        return schemaEntry;
      }
    };
    exports.default = SchemaBuilder;
  }
});

// node_modules/redis-om/dist/schema/schema.js
var require_schema = __commonJS({
  "node_modules/redis-om/dist/schema/schema.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ulid_1 = require_index_umd();
    var __1 = require_dist2();
    var schema_builder_1 = __importDefault(require_schema_builder());
    var Schema2 = class {
      constructor(ctor, schemaDef, options) {
        this.entityCtor = ctor;
        this.definition = schemaDef;
        this.options = options;
        this.validateOptions();
        this.defineProperties();
      }
      get prefix() {
        var _a4, _b;
        return (_b = (_a4 = this.options) === null || _a4 === void 0 ? void 0 : _a4.prefix) !== null && _b !== void 0 ? _b : this.entityCtor.name;
      }
      get indexName() {
        var _a4, _b;
        return (_b = (_a4 = this.options) === null || _a4 === void 0 ? void 0 : _a4.indexName) !== null && _b !== void 0 ? _b : `${this.prefix}:index`;
      }
      get dataStructure() {
        var _a4, _b;
        return (_b = (_a4 = this.options) === null || _a4 === void 0 ? void 0 : _a4.dataStructure) !== null && _b !== void 0 ? _b : "HASH";
      }
      get useStopWords() {
        var _a4, _b;
        return (_b = (_a4 = this.options) === null || _a4 === void 0 ? void 0 : _a4.useStopWords) !== null && _b !== void 0 ? _b : "DEFAULT";
      }
      get stopWords() {
        var _a4, _b;
        return (_b = (_a4 = this.options) === null || _a4 === void 0 ? void 0 : _a4.stopWords) !== null && _b !== void 0 ? _b : [];
      }
      get redisSchema() {
        return new schema_builder_1.default(this).redisSchema;
      }
      generateId() {
        var _a4, _b;
        let ulidStrategy = () => (0, ulid_1.ulid)();
        return ((_b = (_a4 = this.options) === null || _a4 === void 0 ? void 0 : _a4.idStrategy) !== null && _b !== void 0 ? _b : ulidStrategy)();
      }
      defineProperties() {
        var _a4;
        let entityName = this.entityCtor.name;
        for (let field in this.definition) {
          this.validateFieldDef(field);
          let fieldDef = this.definition[field];
          let fieldType = fieldDef.type;
          let fieldAlias = (_a4 = fieldDef.alias) !== null && _a4 !== void 0 ? _a4 : field;
          Object.defineProperty(this.entityCtor.prototype, field, {
            configurable: true,
            get: function() {
              var _a5;
              return (_a5 = this.entityData[fieldAlias]) !== null && _a5 !== void 0 ? _a5 : null;
            },
            set: function(value) {
              if (value === void 0) {
                throw Error(`Property '${field}' on entity of type '${entityName}' cannot be set to undefined. Use null instead.`);
              } else if (value === null) {
                delete this.entityData[fieldAlias];
              } else {
                let isArray = Array.isArray(value);
                let valueType = isArray ? "array" : typeof value;
                if (fieldType === valueType) {
                  if (isArray) {
                    this.entityData[fieldAlias] = value.map((v) => v.toString());
                  } else {
                    this.entityData[fieldAlias] = value;
                  }
                } else {
                  throw new __1.RedisError(`Property '${field}' expected type of '${fieldType}' but received type of '${valueType}'.`);
                }
              }
            }
          });
        }
      }
      validateOptions() {
        var _a4;
        if (!["HASH", "JSON"].includes(this.dataStructure))
          throw Error(`'${this.dataStructure}' in an invalid data structure. Valid data structures are 'HASH' and 'JSON'.`);
        if (!["OFF", "DEFAULT", "CUSTOM"].includes(this.useStopWords))
          throw Error(`'${this.useStopWords}' in an invalid value for stop words. Valid values are 'OFF', 'DEFAULT', and 'CUSTOM'.`);
        if (((_a4 = this.options) === null || _a4 === void 0 ? void 0 : _a4.idStrategy) && !(this.options.idStrategy instanceof Function))
          throw Error("ID strategy must be a function that takes no arguments and returns a string.");
        if (this.prefix === "")
          throw Error(`Prefix must be a non-empty string.`);
        if (this.indexName === "")
          throw Error(`Index name must be a non-empty string.`);
      }
      validateFieldDef(field) {
        let fieldDef = this.definition[field];
        if (!["array", "boolean", "number", "string"].includes(fieldDef.type))
          throw Error(`The field '${field}' is configured with a type of '${fieldDef.type}'. Valid types include 'array', 'boolean', 'number', and 'string'.`);
      }
    };
    exports.default = Schema2;
  }
});

// node_modules/redis-om/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/redis-om/dist/index.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WhereField = exports.Where = exports.Search = exports.Schema = exports.Repository = exports.RedisError = exports.Entity = exports.Client = void 0;
    var client_1 = __importDefault(require_client2());
    exports.Client = client_1.default;
    var entity_1 = __importDefault(require_entity());
    exports.Entity = entity_1.default;
    var errors_1 = __importDefault(require_errors3());
    exports.RedisError = errors_1.default;
    var repository_1 = __importDefault(require_repository());
    exports.Repository = repository_1.default;
    var schema_1 = __importDefault(require_schema());
    exports.Schema = schema_1.default;
    var search_1 = __importDefault(require_search());
    exports.Search = search_1.default;
    var where_1 = __importDefault(require_where());
    exports.Where = where_1.default;
    var where_field_1 = __importDefault(require_where_field());
    exports.WhereField = where_field_1.default;
  }
});

// .svelte-kit/output/server/entries/endpoints/api/heroes/index.json.js
var index_json_exports = {};
__export(index_json_exports, {
  get: () => get3
});
async function connect() {
  if (!client.isOpen()) {
    await client.open(process.env.REDIS_URL);
  }
}
async function createHero(data2) {
  await connect();
  const repository = new import_redis_om.Repository(schema, client);
  const hero2 = repository.createEntity(data2);
  await repository.save(hero2);
}
async function get3(req, res) {
  try {
    const id2 = await createHero(req.body);
    console.log(`\u{1F680} ~ file: index.js ~ line 18 ~ get ~ id `, id2);
    res.status(200).json({ id: id2 });
    return {
      status: 200,
      body: { hero }
    };
  } catch (error2) {
    return {
      body: { error: "There was a server error" }
    };
  }
}
var import_redis_om, client, Hero, schema;
var init_index_json = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/heroes/index.json.js"() {
    import_redis_om = __toModule(require_dist2());
    client = new import_redis_om.Client();
    Hero = class extends import_redis_om.Entity {
    };
    schema = new import_redis_om.Schema(Hero, {
      name: { type: "string" },
      attribute: { type: "string" },
      hitpoints: { type: "number" },
      strength: { type: "number" },
      dexterity: { type: "number" },
      intelligence: { type: "number" }
    });
  }
});

// .svelte-kit/vercel-tmp/entry.js
__export(exports, {
  default: () => entry_default
});
init_install_fetch();

// node_modules/@sveltejs/kit/dist/node.js
function getRawBody(req) {
  return new Promise((fulfil, reject) => {
    const h2 = req.headers;
    if (!h2["content-type"]) {
      return fulfil(null);
    }
    req.on("error", reject);
    const length = Number(h2["content-length"]);
    if (isNaN(length) && h2["transfer-encoding"] == null) {
      return fulfil(null);
    }
    let data2 = new Uint8Array(length || 0);
    if (length > 0) {
      let offset = 0;
      req.on("data", (chunk) => {
        const new_len = offset + Buffer.byteLength(chunk);
        if (new_len > length) {
          return reject({
            status: 413,
            reason: 'Exceeded "Content-Length" limit'
          });
        }
        data2.set(chunk, offset);
        offset = new_len;
      });
    } else {
      req.on("data", (chunk) => {
        const new_data = new Uint8Array(data2.length + chunk.length);
        new_data.set(data2, 0);
        new_data.set(chunk, data2.length);
        data2 = new_data;
      });
    }
    req.on("end", () => {
      fulfil(data2);
    });
  });
}

// .svelte-kit/output/server/app.js
init_index_0300a598();
var __accessCheck2 = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet2 = (obj, member, getter) => {
  __accessCheck2(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd2 = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet2 = (obj, member, value, setter) => {
  __accessCheck2(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};
var _map;
function afterUpdate() {
}
var Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page: page2 } = $$props;
  let { components } = $$props;
  let { props_0 = null } = $$props;
  let { props_1 = null } = $$props;
  let { props_2 = null } = $$props;
  let { props_3 = null } = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
    $$bindings.page(page2);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  if ($$props.props_3 === void 0 && $$bindings.props_3 && props_3 !== void 0)
    $$bindings.props_3(props_3);
  {
    stores.page.set(page2);
  }
  return `


${components[1] ? `${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => {
      return `${components[2] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
        default: () => {
          return `${components[3] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {
            default: () => {
              return `${validate_component(components[3] || missing_component, "svelte:component").$$render($$result, Object.assign(props_3 || {}), {}, {})}`;
            }
          })}` : `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}`}`;
        }
      })}` : `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {})}`}`;
    }
  })}` : `${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {})}`}

${``}`;
});
function get_single_valued_header(headers, key) {
  const value = headers[key];
  if (Array.isArray(value)) {
    if (value.length === 0) {
      return void 0;
    }
    if (value.length > 1) {
      throw new Error(`Multiple headers provided for ${key}. Multiple may be provided only for set-cookie`);
    }
    return value[0];
  }
  return value;
}
function lowercase_keys(obj) {
  const clone2 = {};
  for (const key in obj) {
    clone2[key.toLowerCase()] = obj[key];
  }
  return clone2;
}
function decode_params(params) {
  for (const key in params) {
    params[key] = params[key].replace(/%23/g, "#").replace(/%3[Bb]/g, ";").replace(/%2[Cc]/g, ",").replace(/%2[Ff]/g, "/").replace(/%3[Ff]/g, "?").replace(/%3[Aa]/g, ":").replace(/%40/g, "@").replace(/%26/g, "&").replace(/%3[Dd]/g, "=").replace(/%2[Bb]/g, "+").replace(/%24/g, "$");
  }
  return params;
}
function error(body) {
  return {
    status: 500,
    body,
    headers: {}
  };
}
function is_string(s22) {
  return typeof s22 === "string" || s22 instanceof String;
}
var text_types = new Set([
  "application/xml",
  "application/json",
  "application/x-www-form-urlencoded",
  "multipart/form-data"
]);
function is_text(content_type) {
  if (!content_type)
    return true;
  const type = content_type.split(";")[0].toLowerCase();
  return type.startsWith("text/") || type.endsWith("+xml") || text_types.has(type);
}
async function render_endpoint(request, route, match) {
  const mod = await route.load();
  const handler = mod[request.method.toLowerCase().replace("delete", "del")];
  if (!handler) {
    return;
  }
  request.params = route.params ? decode_params(route.params(match)) : {};
  const response = await handler(request);
  const preface = `Invalid response from route ${request.url.pathname}`;
  if (typeof response !== "object") {
    return error(`${preface}: expected an object, got ${typeof response}`);
  }
  if (response.fallthrough) {
    return;
  }
  let { status = 200, body, headers = {} } = response;
  headers = lowercase_keys(headers);
  const type = get_single_valued_header(headers, "content-type");
  if (!is_text(type) && !(body instanceof Uint8Array || is_string(body))) {
    return error(`${preface}: body must be an instance of string or Uint8Array if content-type is not a supported textual content-type`);
  }
  let normalized_body;
  if ((typeof body === "object" || typeof body === "undefined") && !(body instanceof Uint8Array) && (!type || type.startsWith("application/json"))) {
    headers = __spreadProps(__spreadValues({}, headers), { "content-type": "application/json; charset=utf-8" });
    normalized_body = JSON.stringify(typeof body === "undefined" ? {} : body);
  } else {
    normalized_body = body;
  }
  return { status, body: normalized_body, headers };
}
var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
var unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
var reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
var escaped2 = {
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t",
  "\0": "\\0",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function devalue(value) {
  var counts = new Map();
  function walk(thing) {
    if (typeof thing === "function") {
      throw new Error("Cannot stringify a function");
    }
    if (counts.has(thing)) {
      counts.set(thing, counts.get(thing) + 1);
      return;
    }
    counts.set(thing, 1);
    if (!isPrimitive(thing)) {
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach(walk);
          break;
        case "Set":
        case "Map":
          Array.from(thing).forEach(walk);
          break;
        default:
          var proto = Object.getPrototypeOf(thing);
          if (proto !== Object.prototype && proto !== null && Object.getOwnPropertyNames(proto).sort().join("\0") !== objectProtoOwnPropertyNames) {
            throw new Error("Cannot stringify arbitrary non-POJOs");
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new Error("Cannot stringify POJOs with symbolic keys");
          }
          Object.keys(thing).forEach(function(key) {
            return walk(thing[key]);
          });
      }
    }
  }
  walk(value);
  var names = new Map();
  Array.from(counts).filter(function(entry37) {
    return entry37[1] > 1;
  }).sort(function(a, b) {
    return b[1] - a[1];
  }).forEach(function(entry37, i2) {
    names.set(entry37[0], getName(i2));
  });
  function stringify(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (isPrimitive(thing)) {
      return stringifyPrimitive(thing);
    }
    var type = getType(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return "Object(" + stringify(thing.valueOf()) + ")";
      case "RegExp":
        return "new RegExp(" + stringifyString(thing.source) + ', "' + thing.flags + '")';
      case "Date":
        return "new Date(" + thing.getTime() + ")";
      case "Array":
        var members = thing.map(function(v, i2) {
          return i2 in thing ? stringify(v) : "";
        });
        var tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return "[" + members.join(",") + tail + "]";
      case "Set":
      case "Map":
        return "new " + type + "([" + Array.from(thing).map(stringify).join(",") + "])";
      default:
        var obj = "{" + Object.keys(thing).map(function(key) {
          return safeKey(key) + ":" + stringify(thing[key]);
        }).join(",") + "}";
        var proto = Object.getPrototypeOf(thing);
        if (proto === null) {
          return Object.keys(thing).length > 0 ? "Object.assign(Object.create(null)," + obj + ")" : "Object.create(null)";
        }
        return obj;
    }
  }
  var str = stringify(value);
  if (names.size) {
    var params_1 = [];
    var statements_1 = [];
    var values_1 = [];
    names.forEach(function(name2, thing) {
      params_1.push(name2);
      if (isPrimitive(thing)) {
        values_1.push(stringifyPrimitive(thing));
        return;
      }
      var type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values_1.push("Object(" + stringify(thing.valueOf()) + ")");
          break;
        case "RegExp":
          values_1.push(thing.toString());
          break;
        case "Date":
          values_1.push("new Date(" + thing.getTime() + ")");
          break;
        case "Array":
          values_1.push("Array(" + thing.length + ")");
          thing.forEach(function(v, i2) {
            statements_1.push(name2 + "[" + i2 + "]=" + stringify(v));
          });
          break;
        case "Set":
          values_1.push("new Set");
          statements_1.push(name2 + "." + Array.from(thing).map(function(v) {
            return "add(" + stringify(v) + ")";
          }).join("."));
          break;
        case "Map":
          values_1.push("new Map");
          statements_1.push(name2 + "." + Array.from(thing).map(function(_a4) {
            var k = _a4[0], v = _a4[1];
            return "set(" + stringify(k) + ", " + stringify(v) + ")";
          }).join("."));
          break;
        default:
          values_1.push(Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}");
          Object.keys(thing).forEach(function(key) {
            statements_1.push("" + name2 + safeProp(key) + "=" + stringify(thing[key]));
          });
      }
    });
    statements_1.push("return " + str);
    return "(function(" + params_1.join(",") + "){" + statements_1.join(";") + "}(" + values_1.join(",") + "))";
  } else {
    return str;
  }
}
function getName(num) {
  var name2 = "";
  do {
    name2 = chars[num % chars.length] + name2;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name2) ? name2 + "_" : name2;
}
function isPrimitive(thing) {
  return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
  if (typeof thing === "string")
    return stringifyString(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  var str = String(thing);
  if (typeof thing === "number")
    return str.replace(/^(-)?0\./, "$1.");
  return str;
}
function getType(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c) {
  return escaped2[c] || c;
}
function escapeUnsafeChars(str) {
  return str.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escapeUnsafeChars(JSON.stringify(key));
}
function safeProp(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? "." + key : "[" + escapeUnsafeChars(JSON.stringify(key)) + "]";
}
function stringifyString(str) {
  var result = '"';
  for (var i2 = 0; i2 < str.length; i2 += 1) {
    var char = str.charAt(i2);
    var code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped2) {
      result += escaped2[char];
    } else if (code >= 55296 && code <= 57343) {
      var next = str.charCodeAt(i2 + 1);
      if (code <= 56319 && (next >= 56320 && next <= 57343)) {
        result += char + str[++i2];
      } else {
        result += "\\u" + code.toString(16).toUpperCase();
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}
function noop3() {
}
function safe_not_equal2(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
Promise.resolve();
var subscriber_queue = [];
function writable(value, start = noop3) {
  let stop;
  const subscribers = new Set();
  function set(new_value) {
    if (safe_not_equal2(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i2 = 0; i2 < subscriber_queue.length; i2 += 2) {
            subscriber_queue[i2][0](subscriber_queue[i2 + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop3) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop3;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
function coalesce_to_error(err) {
  return err instanceof Error || err && err.name && err.message ? err : new Error(JSON.stringify(err));
}
function hash(value) {
  let hash2 = 5381;
  let i2 = value.length;
  if (typeof value === "string") {
    while (i2)
      hash2 = hash2 * 33 ^ value.charCodeAt(--i2);
  } else {
    while (i2)
      hash2 = hash2 * 33 ^ value[--i2];
  }
  return (hash2 >>> 0).toString(36);
}
var escape_json_string_in_html_dict = {
  '"': '\\"',
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t",
  "\0": "\\0",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
function escape_json_string_in_html(str) {
  return escape3(str, escape_json_string_in_html_dict, (code) => `\\u${code.toString(16).toUpperCase()}`);
}
var escape_html_attr_dict = {
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;"
};
function escape_html_attr(str) {
  return '"' + escape3(str, escape_html_attr_dict, (code) => `&#${code};`) + '"';
}
function escape3(str, dict, unicode_encoder) {
  let result = "";
  for (let i2 = 0; i2 < str.length; i2 += 1) {
    const char = str.charAt(i2);
    const code = char.charCodeAt(0);
    if (char in dict) {
      result += dict[char];
    } else if (code >= 55296 && code <= 57343) {
      const next = str.charCodeAt(i2 + 1);
      if (code <= 56319 && next >= 56320 && next <= 57343) {
        result += char + str[++i2];
      } else {
        result += unicode_encoder(code);
      }
    } else {
      result += char;
    }
  }
  return result;
}
var s3 = JSON.stringify;
function create_prerendering_url_proxy(url) {
  return new Proxy(url, {
    get: (target, prop, receiver) => {
      if (prop === "search" || prop === "searchParams") {
        throw new Error(`Cannot access url.${prop} on a page with prerendering enabled`);
      }
      return Reflect.get(target, prop, receiver);
    }
  });
}
async function render_response({
  branch,
  options,
  state,
  $session,
  page_config,
  status,
  error: error2,
  url,
  params,
  ssr,
  stuff
}) {
  const css57 = new Set(options.manifest._.entry.css);
  const js37 = new Set(options.manifest._.entry.js);
  const styles = new Map();
  const serialized_data = [];
  let rendered;
  let is_private = false;
  let maxage;
  if (error2) {
    error2.stack = options.get_stack(error2);
  }
  if (ssr) {
    branch.forEach(({ node, loaded: loaded2, fetched, uses_credentials }) => {
      if (node.css)
        node.css.forEach((url2) => css57.add(url2));
      if (node.js)
        node.js.forEach((url2) => js37.add(url2));
      if (node.styles)
        Object.entries(node.styles).forEach(([k, v]) => styles.set(k, v));
      if (fetched && page_config.hydrate)
        serialized_data.push(...fetched);
      if (uses_credentials)
        is_private = true;
      maxage = loaded2.maxage;
    });
    const session = writable($session);
    const props = {
      stores: {
        page: writable(null),
        navigating: writable(null),
        session
      },
      page: {
        url: state.prerender ? create_prerendering_url_proxy(url) : url,
        params,
        status,
        error: error2,
        stuff
      },
      components: branch.map(({ node }) => node.module.default)
    };
    const print_error = (property, replacement) => {
      Object.defineProperty(props.page, property, {
        get: () => {
          throw new Error(`$page.${property} has been replaced by $page.url.${replacement}`);
        }
      });
    };
    print_error("origin", "origin");
    print_error("path", "pathname");
    print_error("query", "searchParams");
    for (let i2 = 0; i2 < branch.length; i2 += 1) {
      props[`props_${i2}`] = await branch[i2].loaded.props;
    }
    let session_tracking_active = false;
    const unsubscribe = session.subscribe(() => {
      if (session_tracking_active)
        is_private = true;
    });
    session_tracking_active = true;
    try {
      rendered = options.root.render(props);
    } finally {
      unsubscribe();
    }
  } else {
    rendered = { head: "", html: "", css: { code: "", map: null } };
  }
  let { head, html: body } = rendered;
  const inlined_style = Array.from(styles.values()).join("\n");
  if (options.amp) {
    head += `
		<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>
		<noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>
		<script async src="https://cdn.ampproject.org/v0.js"><\/script>

		<style amp-custom>${inlined_style}
${rendered.css.code}</style>`;
    if (options.service_worker) {
      head += '<script async custom-element="amp-install-serviceworker" src="https://cdn.ampproject.org/v0/amp-install-serviceworker-0.1.js"><\/script>';
      body += `<amp-install-serviceworker src="${options.service_worker}" layout="nodisplay"></amp-install-serviceworker>`;
    }
  } else {
    if (inlined_style) {
      head += `
	<style${options.dev ? " data-svelte" : ""}>${inlined_style}</style>`;
    }
    head += Array.from(css57).map((dep) => `
	<link${styles.has(dep) ? " disabled" : ""} rel="stylesheet" href="${options.prefix + dep}">`).join("");
    if (page_config.router || page_config.hydrate) {
      head += Array.from(js37).map((dep) => `
	<link rel="modulepreload" href="${options.prefix + dep}">`).join("");
      head += `
			<script type="module">
				import { start } from ${s3(options.prefix + options.manifest._.entry.file)};
				start({
					target: ${options.target ? `document.querySelector(${s3(options.target)})` : "document.body"},
					paths: ${s3(options.paths)},
					session: ${try_serialize($session, (error3) => {
        throw new Error(`Failed to serialize session data: ${error3.message}`);
      })},
					route: ${!!page_config.router},
					spa: ${!ssr},
					trailing_slash: ${s3(options.trailing_slash)},
					hydrate: ${ssr && page_config.hydrate ? `{
						status: ${status},
						error: ${serialize_error(error2)},
						nodes: [
							${(branch || []).map(({ node }) => `import(${s3(options.prefix + node.entry)})`).join(",\n						")}
						],
						url: new URL(${s3(url.href)}),
						params: ${devalue(params)}
					}` : "null"}
				});
			<\/script>${options.service_worker ? `
			<script>
				if ('serviceWorker' in navigator) {
					navigator.serviceWorker.register('${options.service_worker}');
				}
			<\/script>` : ""}`;
      body += serialized_data.map(({ url: url2, body: body2, json }) => {
        let attributes = `type="application/json" data-type="svelte-data" data-url=${escape_html_attr(url2)}`;
        if (body2)
          attributes += ` data-body="${hash(body2)}"`;
        return `<script ${attributes}>${json}<\/script>`;
      }).join("\n\n	");
    }
  }
  const headers = {
    "content-type": "text/html"
  };
  if (maxage) {
    headers["cache-control"] = `${is_private ? "private" : "public"}, max-age=${maxage}`;
  }
  if (!options.floc) {
    headers["permissions-policy"] = "interest-cohort=()";
  }
  const segments = url.pathname.slice(options.paths.base.length).split("/").slice(2);
  const assets2 = options.paths.assets || (segments.length > 0 ? segments.map(() => "..").join("/") : ".");
  return {
    status,
    headers,
    body: options.template({
      head,
      body,
      assets: assets2
    })
  };
}
function try_serialize(data2, fail) {
  try {
    return devalue(data2);
  } catch (err) {
    if (fail)
      fail(coalesce_to_error(err));
    return null;
  }
}
function serialize_error(error2) {
  if (!error2)
    return null;
  let serialized = try_serialize(error2);
  if (!serialized) {
    const { name: name2, message, stack } = error2;
    serialized = try_serialize(__spreadProps(__spreadValues({}, error2), { name: name2, message, stack }));
  }
  if (!serialized) {
    serialized = "{}";
  }
  return serialized;
}
function normalize(loaded2) {
  const has_error_status = loaded2.status && loaded2.status >= 400 && loaded2.status <= 599 && !loaded2.redirect;
  if (loaded2.error || has_error_status) {
    const status = loaded2.status;
    if (!loaded2.error && has_error_status) {
      return {
        status: status || 500,
        error: new Error()
      };
    }
    const error2 = typeof loaded2.error === "string" ? new Error(loaded2.error) : loaded2.error;
    if (!(error2 instanceof Error)) {
      return {
        status: 500,
        error: new Error(`"error" property returned from load() must be a string or instance of Error, received type "${typeof error2}"`)
      };
    }
    if (!status || status < 400 || status > 599) {
      console.warn('"error" returned from load() without a valid status code \u2014 defaulting to 500');
      return { status: 500, error: error2 };
    }
    return { status, error: error2 };
  }
  if (loaded2.redirect) {
    if (!loaded2.status || Math.floor(loaded2.status / 100) !== 3) {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be accompanied by a 3xx status code')
      };
    }
    if (typeof loaded2.redirect !== "string") {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be a string')
      };
    }
  }
  if (loaded2.context) {
    throw new Error('You are returning "context" from a load function. "context" was renamed to "stuff", please adjust your code accordingly.');
  }
  return loaded2;
}
var absolute = /^([a-z]+:)?\/?\//;
var scheme = /^[a-z]+:/;
function resolve(base2, path) {
  if (scheme.test(path))
    return path;
  const base_match = absolute.exec(base2);
  const path_match = absolute.exec(path);
  if (!base_match) {
    throw new Error(`bad base path: "${base2}"`);
  }
  const baseparts = path_match ? [] : base2.slice(base_match[0].length).split("/");
  const pathparts = path_match ? path.slice(path_match[0].length).split("/") : path.split("/");
  baseparts.pop();
  for (let i2 = 0; i2 < pathparts.length; i2 += 1) {
    const part = pathparts[i2];
    if (part === ".")
      continue;
    else if (part === "..")
      baseparts.pop();
    else
      baseparts.push(part);
  }
  const prefix = path_match && path_match[0] || base_match && base_match[0] || "";
  return `${prefix}${baseparts.join("/")}`;
}
function is_root_relative(path) {
  return path[0] === "/" && path[1] !== "/";
}
async function load_node({
  request,
  options,
  state,
  route,
  url,
  params,
  node,
  $session,
  stuff,
  is_error,
  status,
  error: error2
}) {
  const { module: module2 } = node;
  let uses_credentials = false;
  const fetched = [];
  let set_cookie_headers = [];
  let loaded2;
  if (module2.load) {
    const load_input = {
      url: state.prerender ? create_prerendering_url_proxy(url) : url,
      params,
      get session() {
        uses_credentials = true;
        return $session;
      },
      fetch: async (resource, opts = {}) => {
        let requested;
        if (typeof resource === "string") {
          requested = resource;
        } else {
          requested = resource.url;
          opts = __spreadValues({
            method: resource.method,
            headers: resource.headers,
            body: resource.body,
            mode: resource.mode,
            credentials: resource.credentials,
            cache: resource.cache,
            redirect: resource.redirect,
            referrer: resource.referrer,
            integrity: resource.integrity
          }, opts);
        }
        opts.headers = new Headers(opts.headers);
        const resolved = resolve(request.url.pathname, requested.split("?")[0]);
        let response;
        const prefix = options.paths.assets || options.paths.base;
        const filename = (resolved.startsWith(prefix) ? resolved.slice(prefix.length) : resolved).slice(1);
        const filename_html = `${filename}/index.html`;
        const is_asset = options.manifest.assets.has(filename);
        const is_asset_html = options.manifest.assets.has(filename_html);
        if (is_asset || is_asset_html) {
          const file = is_asset ? filename : filename_html;
          if (options.read) {
            const type = is_asset ? options.manifest._.mime[filename.slice(filename.lastIndexOf("."))] : "text/html";
            response = new Response(options.read(file), {
              headers: type ? { "content-type": type } : {}
            });
          } else {
            response = await fetch(`${url.origin}/${file}`, opts);
          }
        } else if (is_root_relative(resolved)) {
          const relative = resolved;
          if (opts.credentials !== "omit") {
            uses_credentials = true;
            if (request.headers.cookie) {
              opts.headers.set("cookie", request.headers.cookie);
            }
            if (request.headers.authorization && !opts.headers.has("authorization")) {
              opts.headers.set("authorization", request.headers.authorization);
            }
          }
          if (opts.body && typeof opts.body !== "string") {
            throw new Error("Request body must be a string");
          }
          const rendered = await respond({
            url: new URL(requested, request.url),
            method: opts.method || "GET",
            headers: Object.fromEntries(opts.headers),
            rawBody: opts.body == null ? null : new TextEncoder().encode(opts.body)
          }, options, {
            fetched: requested,
            initiator: route
          });
          if (rendered) {
            if (state.prerender) {
              state.prerender.dependencies.set(relative, rendered);
            }
            response = new Response(rendered.body, {
              status: rendered.status,
              headers: rendered.headers
            });
          } else {
            return fetch(new URL(requested, request.url).href, {
              method: opts.method || "GET",
              headers: opts.headers
            });
          }
        } else {
          if (resolved.startsWith("//")) {
            throw new Error(`Cannot request protocol-relative URL (${requested}) in server-side fetch`);
          }
          if (`.${new URL(requested).hostname}`.endsWith(`.${request.url.hostname}`) && opts.credentials !== "omit") {
            uses_credentials = true;
            opts.headers.set("cookie", request.headers.cookie);
          }
          const external_request = new Request(requested, opts);
          response = await options.hooks.externalFetch.call(null, external_request);
        }
        if (response) {
          const proxy = new Proxy(response, {
            get(response2, key, _receiver) {
              async function text() {
                const body = await response2.text();
                const headers = {};
                for (const [key2, value] of response2.headers) {
                  if (key2 === "set-cookie") {
                    set_cookie_headers = set_cookie_headers.concat(value);
                  } else if (key2 !== "etag") {
                    headers[key2] = value;
                  }
                }
                if (!opts.body || typeof opts.body === "string") {
                  fetched.push({
                    url: requested,
                    body: opts.body,
                    json: `{"status":${response2.status},"statusText":${s3(response2.statusText)},"headers":${s3(headers)},"body":"${escape_json_string_in_html(body)}"}`
                  });
                }
                return body;
              }
              if (key === "text") {
                return text;
              }
              if (key === "json") {
                return async () => {
                  return JSON.parse(await text());
                };
              }
              return Reflect.get(response2, key, response2);
            }
          });
          return proxy;
        }
        return response || new Response("Not found", {
          status: 404
        });
      },
      stuff: __spreadValues({}, stuff)
    };
    if (options.dev) {
      Object.defineProperty(load_input, "page", {
        get: () => {
          throw new Error("`page` in `load` functions has been replaced by `url` and `params`");
        }
      });
    }
    if (is_error) {
      load_input.status = status;
      load_input.error = error2;
    }
    loaded2 = await module2.load.call(null, load_input);
    if (!loaded2) {
      throw new Error(`load function must return a value${options.dev ? ` (${node.entry})` : ""}`);
    }
  } else {
    loaded2 = {};
  }
  if (loaded2.fallthrough && !is_error) {
    return;
  }
  return {
    node,
    loaded: normalize(loaded2),
    stuff: loaded2.stuff || stuff,
    fetched,
    set_cookie_headers,
    uses_credentials
  };
}
async function respond_with_error({
  request,
  options,
  state,
  $session,
  status,
  error: error2,
  ssr
}) {
  try {
    const default_layout = await options.manifest._.nodes[0]();
    const default_error = await options.manifest._.nodes[1]();
    const params = {};
    const layout_loaded = await load_node({
      request,
      options,
      state,
      route: null,
      url: request.url,
      params,
      node: default_layout,
      $session,
      stuff: {},
      is_error: false
    });
    const error_loaded = await load_node({
      request,
      options,
      state,
      route: null,
      url: request.url,
      params,
      node: default_error,
      $session,
      stuff: layout_loaded ? layout_loaded.stuff : {},
      is_error: true,
      status,
      error: error2
    });
    return await render_response({
      options,
      state,
      $session,
      page_config: {
        hydrate: options.hydrate,
        router: options.router
      },
      stuff: error_loaded.stuff,
      status,
      error: error2,
      branch: [layout_loaded, error_loaded],
      url: request.url,
      params,
      ssr
    });
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options.handle_error(error3, request);
    return {
      status: 500,
      headers: {},
      body: error3.stack
    };
  }
}
async function respond$1(opts) {
  const { request, options, state, $session, route, ssr } = opts;
  let nodes;
  if (!ssr) {
    return await render_response(__spreadProps(__spreadValues({}, opts), {
      branch: [],
      page_config: {
        hydrate: true,
        router: true
      },
      status: 200,
      url: request.url,
      stuff: {}
    }));
  }
  try {
    nodes = await Promise.all(route.a.map((n) => options.manifest._.nodes[n] && options.manifest._.nodes[n]()));
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options.handle_error(error3, request);
    return await respond_with_error({
      request,
      options,
      state,
      $session,
      status: 500,
      error: error3,
      ssr
    });
  }
  const leaf = nodes[nodes.length - 1].module;
  let page_config = get_page_config(leaf, options);
  if (!leaf.prerender && state.prerender && !state.prerender.all) {
    return {
      status: 204,
      headers: {}
    };
  }
  let branch = [];
  let status = 200;
  let error2;
  let set_cookie_headers = [];
  let stuff = {};
  ssr:
    if (ssr) {
      for (let i2 = 0; i2 < nodes.length; i2 += 1) {
        const node = nodes[i2];
        let loaded2;
        if (node) {
          try {
            loaded2 = await load_node(__spreadProps(__spreadValues({}, opts), {
              url: request.url,
              node,
              stuff,
              is_error: false
            }));
            if (!loaded2)
              return;
            set_cookie_headers = set_cookie_headers.concat(loaded2.set_cookie_headers);
            if (loaded2.loaded.redirect) {
              return with_cookies({
                status: loaded2.loaded.status,
                headers: {
                  location: encodeURI(loaded2.loaded.redirect)
                }
              }, set_cookie_headers);
            }
            if (loaded2.loaded.error) {
              ({ status, error: error2 } = loaded2.loaded);
            }
          } catch (err) {
            const e2 = coalesce_to_error(err);
            options.handle_error(e2, request);
            status = 500;
            error2 = e2;
          }
          if (loaded2 && !error2) {
            branch.push(loaded2);
          }
          if (error2) {
            while (i2--) {
              if (route.b[i2]) {
                const error_node = await options.manifest._.nodes[route.b[i2]]();
                let node_loaded;
                let j = i2;
                while (!(node_loaded = branch[j])) {
                  j -= 1;
                }
                try {
                  const error_loaded = await load_node(__spreadProps(__spreadValues({}, opts), {
                    url: request.url,
                    node: error_node,
                    stuff: node_loaded.stuff,
                    is_error: true,
                    status,
                    error: error2
                  }));
                  if (error_loaded.loaded.error) {
                    continue;
                  }
                  page_config = get_page_config(error_node.module, options);
                  branch = branch.slice(0, j + 1).concat(error_loaded);
                  stuff = __spreadValues(__spreadValues({}, node_loaded.stuff), error_loaded.stuff);
                  break ssr;
                } catch (err) {
                  const e2 = coalesce_to_error(err);
                  options.handle_error(e2, request);
                  continue;
                }
              }
            }
            return with_cookies(await respond_with_error({
              request,
              options,
              state,
              $session,
              status,
              error: error2,
              ssr
            }), set_cookie_headers);
          }
        }
        if (loaded2 && loaded2.loaded.stuff) {
          stuff = __spreadValues(__spreadValues({}, stuff), loaded2.loaded.stuff);
        }
      }
    }
  try {
    return with_cookies(await render_response(__spreadProps(__spreadValues({}, opts), {
      stuff,
      url: request.url,
      page_config,
      status,
      error: error2,
      branch: branch.filter(Boolean)
    })), set_cookie_headers);
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options.handle_error(error3, request);
    return with_cookies(await respond_with_error(__spreadProps(__spreadValues({}, opts), {
      status: 500,
      error: error3
    })), set_cookie_headers);
  }
}
function get_page_config(leaf, options) {
  if ("ssr" in leaf) {
    throw new Error("`export const ssr` has been removed \u2014 use the handle hook instead: https://kit.svelte.dev/docs#hooks-handle");
  }
  return {
    router: "router" in leaf ? !!leaf.router : options.router,
    hydrate: "hydrate" in leaf ? !!leaf.hydrate : options.hydrate
  };
}
function with_cookies(response, set_cookie_headers) {
  if (set_cookie_headers.length) {
    response.headers["set-cookie"] = set_cookie_headers;
  }
  return response;
}
async function render_page(request, route, match, options, state, ssr) {
  if (state.initiator === route) {
    return {
      status: 404,
      headers: {},
      body: `Not found: ${request.url.pathname}`
    };
  }
  const params = route.params ? decode_params(route.params(match)) : {};
  const $session = await options.hooks.getSession(request);
  const response = await respond$1({
    request,
    options,
    state,
    $session,
    route,
    params,
    ssr
  });
  if (response) {
    return response;
  }
  if (state.fetched) {
    return {
      status: 500,
      headers: {},
      body: `Bad request in load function: failed to fetch ${state.fetched}`
    };
  }
}
function read_only_form_data() {
  const map = new Map();
  return {
    append(key, value) {
      const existing_values = map.get(key);
      if (existing_values) {
        existing_values.push(value);
      } else {
        map.set(key, [value]);
      }
    },
    data: new ReadOnlyFormData(map)
  };
}
var ReadOnlyFormData = class {
  constructor(map) {
    __privateAdd2(this, _map, void 0);
    __privateSet2(this, _map, map);
  }
  get(key) {
    const value = __privateGet2(this, _map).get(key);
    if (!value) {
      return null;
    }
    return value[0];
  }
  getAll(key) {
    return __privateGet2(this, _map).get(key) || [];
  }
  has(key) {
    return __privateGet2(this, _map).has(key);
  }
  *[Symbol.iterator]() {
    for (const [key, value] of __privateGet2(this, _map)) {
      for (let i2 = 0; i2 < value.length; i2 += 1) {
        yield [key, value[i2]];
      }
    }
  }
  *entries() {
    for (const [key, value] of __privateGet2(this, _map)) {
      for (let i2 = 0; i2 < value.length; i2 += 1) {
        yield [key, value[i2]];
      }
    }
  }
  *keys() {
    for (const [key] of __privateGet2(this, _map))
      yield key;
  }
  *values() {
    for (const [, value] of __privateGet2(this, _map)) {
      for (let i2 = 0; i2 < value.length; i2 += 1) {
        yield value[i2];
      }
    }
  }
};
_map = new WeakMap();
function parse_body(raw, headers) {
  if (!raw)
    return raw;
  const content_type = headers["content-type"];
  const [type, ...directives] = content_type ? content_type.split(/;\s*/) : [];
  const text = () => new TextDecoder(headers["content-encoding"] || "utf-8").decode(raw);
  switch (type) {
    case "text/plain":
      return text();
    case "application/json":
      return JSON.parse(text());
    case "application/x-www-form-urlencoded":
      return get_urlencoded(text());
    case "multipart/form-data": {
      const boundary = directives.find((directive) => directive.startsWith("boundary="));
      if (!boundary)
        throw new Error("Missing boundary");
      return get_multipart(text(), boundary.slice("boundary=".length));
    }
    default:
      return raw;
  }
}
function get_urlencoded(text) {
  const { data: data2, append } = read_only_form_data();
  text.replace(/\+/g, " ").split("&").forEach((str) => {
    const [key, value] = str.split("=");
    append(decodeURIComponent(key), decodeURIComponent(value));
  });
  return data2;
}
function get_multipart(text, boundary) {
  const parts = text.split(`--${boundary}`);
  if (parts[0] !== "" || parts[parts.length - 1].trim() !== "--") {
    throw new Error("Malformed form data");
  }
  const { data: data2, append } = read_only_form_data();
  parts.slice(1, -1).forEach((part) => {
    const match = /\s*([\s\S]+?)\r\n\r\n([\s\S]*)\s*/.exec(part);
    if (!match) {
      throw new Error("Malformed form data");
    }
    const raw_headers = match[1];
    const body = match[2].trim();
    let key;
    const headers = {};
    raw_headers.split("\r\n").forEach((str) => {
      const [raw_header, ...raw_directives] = str.split("; ");
      let [name2, value] = raw_header.split(": ");
      name2 = name2.toLowerCase();
      headers[name2] = value;
      const directives = {};
      raw_directives.forEach((raw_directive) => {
        const [name22, value2] = raw_directive.split("=");
        directives[name22] = JSON.parse(value2);
      });
      if (name2 === "content-disposition") {
        if (value !== "form-data")
          throw new Error("Malformed form data");
        if (directives.filename) {
          throw new Error("File upload is not yet implemented");
        }
        if (directives.name) {
          key = directives.name;
        }
      }
    });
    if (!key)
      throw new Error("Malformed form data");
    append(key, body);
  });
  return data2;
}
async function respond(incoming, options, state = {}) {
  var _a4;
  if (incoming.url.pathname !== "/" && options.trailing_slash !== "ignore") {
    const has_trailing_slash = incoming.url.pathname.endsWith("/");
    if (has_trailing_slash && options.trailing_slash === "never" || !has_trailing_slash && options.trailing_slash === "always" && !(incoming.url.pathname.split("/").pop() || "").includes(".")) {
      incoming.url.pathname = has_trailing_slash ? incoming.url.pathname.slice(0, -1) : incoming.url.pathname + "/";
      if (incoming.url.search === "?")
        incoming.url.search = "";
      return {
        status: 301,
        headers: {
          location: incoming.url.pathname + incoming.url.search
        }
      };
    }
  }
  const headers = lowercase_keys(incoming.headers);
  const request = __spreadProps(__spreadValues({}, incoming), {
    headers,
    body: parse_body(incoming.rawBody, headers),
    params: {},
    locals: {}
  });
  const { parameter, allowed } = options.method_override;
  const method_override = (_a4 = incoming.url.searchParams.get(parameter)) == null ? void 0 : _a4.toUpperCase();
  if (method_override) {
    if (request.method.toUpperCase() === "POST") {
      if (allowed.includes(method_override)) {
        request.method = method_override;
      } else {
        const verb = allowed.length === 0 ? "enabled" : "allowed";
        const body = `${parameter}=${method_override} is not ${verb}. See https://kit.svelte.dev/docs#configuration-methodoverride`;
        return {
          status: 400,
          headers: {},
          body
        };
      }
    } else {
      throw new Error(`${parameter}=${method_override} is only allowed with POST requests`);
    }
  }
  const print_error = (property, replacement) => {
    Object.defineProperty(request, property, {
      get: () => {
        throw new Error(`request.${property} has been replaced by request.url.${replacement}`);
      }
    });
  };
  print_error("origin", "origin");
  print_error("path", "pathname");
  print_error("query", "searchParams");
  let ssr = true;
  try {
    return await options.hooks.handle({
      request,
      resolve: async (request2, opts) => {
        if (opts && "ssr" in opts)
          ssr = opts.ssr;
        if (state.prerender && state.prerender.fallback) {
          return await render_response({
            url: request2.url,
            params: request2.params,
            options,
            state,
            $session: await options.hooks.getSession(request2),
            page_config: { router: true, hydrate: true },
            stuff: {},
            status: 200,
            branch: [],
            ssr: false
          });
        }
        let decoded = decodeURI(request2.url.pathname);
        if (options.paths.base) {
          if (!decoded.startsWith(options.paths.base))
            return;
          decoded = decoded.slice(options.paths.base.length) || "/";
        }
        for (const route of options.manifest._.routes) {
          const match = route.pattern.exec(decoded);
          if (!match)
            continue;
          const response = route.type === "endpoint" ? await render_endpoint(request2, route, match) : await render_page(request2, route, match, options, state, ssr);
          if (response) {
            if (response.status === 200 && !response.headers.etag) {
              const cache_control = get_single_valued_header(response.headers, "cache-control");
              if (!cache_control || !/(no-store|immutable)/.test(cache_control)) {
                let if_none_match_value = request2.headers["if-none-match"];
                if (if_none_match_value == null ? void 0 : if_none_match_value.startsWith('W/"')) {
                  if_none_match_value = if_none_match_value.substring(2);
                }
                const etag = `"${hash(response.body || "")}"`;
                if (if_none_match_value === etag) {
                  const headers2 = { etag };
                  for (const key of [
                    "cache-control",
                    "content-location",
                    "date",
                    "expires",
                    "vary"
                  ]) {
                    if (key in response.headers) {
                      headers2[key] = response.headers[key];
                    }
                  }
                  return {
                    status: 304,
                    headers: headers2
                  };
                }
                response.headers["etag"] = etag;
              }
            }
            return response;
          }
        }
        if (!state.initiator) {
          const $session = await options.hooks.getSession(request2);
          return await respond_with_error({
            request: request2,
            options,
            state,
            $session,
            status: 404,
            error: new Error(`Not found: ${request2.url.pathname}`),
            ssr
          });
        }
      }
    });
  } catch (e2) {
    const error2 = coalesce_to_error(e2);
    options.handle_error(error2, request);
    try {
      const $session = await options.hooks.getSession(request);
      return await respond_with_error({
        request,
        options,
        state,
        $session,
        status: 500,
        error: error2,
        ssr
      });
    } catch (e22) {
      const error3 = coalesce_to_error(e22);
      return {
        status: 500,
        headers: {},
        body: options.dev ? error3.stack : error3.message
      };
    }
  }
}
var base = "";
var assets = "";
function set_paths(paths) {
  base = paths.base;
  assets = paths.assets || base;
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
var template = ({ head, body, assets: assets2 }) => '<!DOCTYPE html>\r\n<html lang="en"  data-theme="quotes">\r\n	<head>\r\n		<meta charset="utf-8" />\r\n		<link rel="icon" href="/favicon.png" />\r\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\r\n		<script src="https://zimjs.org/cdn/nft/01/zim.js"><\/script>\r\n		' + head + '\r\n	</head>\r\n	<body>\r\n		<div id="svelte">' + body + "</div>\r\n	</body>\r\n</html>\r\n";
var read = null;
set_paths({ "base": "", "assets": "" });
var get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({ request, resolve: resolve2 }) => resolve2(request)),
  handleError: hooks.handleError || (({ error: error2 }) => console.error(error2.stack)),
  externalFetch: hooks.externalFetch || fetch
});
var default_protocol = "https";
var App = class {
  constructor(manifest2) {
    const hooks = get_hooks(user_hooks);
    this.options = {
      amp: false,
      dev: false,
      floc: false,
      get_stack: (error2) => String(error2),
      handle_error: (error2, request) => {
        hooks.handleError({ error: error2, request });
        error2.stack = this.options.get_stack(error2);
      },
      hooks,
      hydrate: true,
      manifest: manifest2,
      method_override: { "parameter": "_method", "allowed": [] },
      paths: { base, assets },
      prefix: assets + "/_app/",
      prerender: true,
      read,
      root: Root,
      service_worker: null,
      router: true,
      target: "#svelte",
      template,
      trailing_slash: "never"
    };
  }
  render(request, {
    prerender
  } = {}) {
    if (Object.keys(request).sort().join() !== "headers,method,rawBody,url") {
      throw new Error("Adapters should call app.render({ url, method, headers, rawBody })");
    }
    const host = request.headers["host"];
    const protocol = default_protocol;
    return respond(__spreadProps(__spreadValues({}, request), { url: new URL(request.url, protocol + "://" + host) }), this.options, { prerender });
  }
};

// .svelte-kit/vercel-tmp/manifest.js
var manifest = {
  appDir: "_app",
  assets: new Set(["discord.svg", "favicon.ico", "favicon.png", "favicons/2/android-chrome-192x192.png", "favicons/2/android-chrome-512x512.png", "favicons/2/apple-touch-icon.png", "favicons/2/favicon-16x16.png", "favicons/2/favicon-32x32.png", "favicons/2/favicon.ico", "favicons/2/site.webmanifest", "favicons/android-chrome-192x192.png", "favicons/android-chrome-512x512.png", "favicons/apple-touch-icon.png", "favicons/favicon-16x16.png", "favicons/favicon-32x32.png", "favicons/favicon.ico", "favicons/site.webmanifest", "fonts/Cairo/Cairo-VariableFont_wght.ttf", "fonts/Cairo/OFL.txt", "fonts/Cairo/README.txt", "fonts/Cairo/static/Cairo-Black.ttf", "fonts/Cairo/static/Cairo-Bold.ttf", "fonts/Cairo/static/Cairo-ExtraBold.ttf", "fonts/Cairo/static/Cairo-ExtraLight.ttf", "fonts/Cairo/static/Cairo-Light.ttf", "fonts/Cairo/static/Cairo-Medium.ttf", "fonts/Cairo/static/Cairo-Regular.ttf", "fonts/Cairo/static/Cairo-SemiBold.ttf", "fonts/cairo.scss", "fonts/eczar/Eczar-Bold.ttf", "fonts/eczar/Eczar-ExtraBold.ttf", "fonts/eczar/Eczar-Medium.ttf", "fonts/eczar/Eczar-Regular.ttf", "fonts/eczar/Eczar-SemiBold.ttf", "fonts/eczar/OFL.txt", "fonts/eczar.scss", "fonts/fira-sans.scss", "fonts/fira_sans/FiraSans-Black.ttf", "fonts/fira_sans/FiraSans-BlackItalic.ttf", "fonts/fira_sans/FiraSans-Bold.ttf", "fonts/fira_sans/FiraSans-BoldItalic.ttf", "fonts/fira_sans/FiraSans-ExtraBold.ttf", "fonts/fira_sans/FiraSans-ExtraBoldItalic.ttf", "fonts/fira_sans/FiraSans-ExtraLight.ttf", "fonts/fira_sans/FiraSans-ExtraLightItalic.ttf", "fonts/fira_sans/FiraSans-Italic.ttf", "fonts/fira_sans/FiraSans-Light.ttf", "fonts/fira_sans/FiraSans-LightItalic.ttf", "fonts/fira_sans/FiraSans-Medium.ttf", "fonts/fira_sans/FiraSans-MediumItalic.ttf", "fonts/fira_sans/FiraSans-Regular.ttf", "fonts/fira_sans/FiraSans-SemiBold.ttf", "fonts/fira_sans/FiraSans-SemiBoldItalic.ttf", "fonts/fira_sans/FiraSans-Thin.ttf", "fonts/fira_sans/FiraSans-ThinItalic.ttf", "fonts/fira_sans/OFL.txt", "fonts/font-styles.css", "fonts/Inconsolata/Inconsolata-VariableFont_wdth,wght.ttf", "fonts/Inconsolata/OFL.txt", "fonts/Inconsolata/README.txt", "fonts/Inconsolata/static/Inconsolata/Inconsolata-Black.ttf", "fonts/Inconsolata/static/Inconsolata/Inconsolata-Bold.ttf", "fonts/Inconsolata/static/Inconsolata/Inconsolata-ExtraBold.ttf", "fonts/Inconsolata/static/Inconsolata/Inconsolata-ExtraLight.ttf", "fonts/Inconsolata/static/Inconsolata/Inconsolata-Light.ttf", "fonts/Inconsolata/static/Inconsolata/Inconsolata-Medium.ttf", "fonts/Inconsolata/static/Inconsolata/Inconsolata-Regular.ttf", "fonts/Inconsolata/static/Inconsolata/Inconsolata-SemiBold.ttf", "fonts/Inconsolata/static/Inconsolata_Condensed/Inconsolata_Condensed-Black.ttf", "fonts/Inconsolata/static/Inconsolata_Condensed/Inconsolata_Condensed-Bold.ttf", "fonts/Inconsolata/static/Inconsolata_Condensed/Inconsolata_Condensed-ExtraBold.ttf", "fonts/Inconsolata/static/Inconsolata_Condensed/Inconsolata_Condensed-ExtraLight.ttf", "fonts/Inconsolata/static/Inconsolata_Condensed/Inconsolata_Condensed-Light.ttf", "fonts/Inconsolata/static/Inconsolata_Condensed/Inconsolata_Condensed-Medium.ttf", "fonts/Inconsolata/static/Inconsolata_Condensed/Inconsolata_Condensed-Regular.ttf", "fonts/Inconsolata/static/Inconsolata_Condensed/Inconsolata_Condensed-SemiBold.ttf", "fonts/Inconsolata/static/Inconsolata_Expanded/Inconsolata_Expanded-Black.ttf", "fonts/Inconsolata/static/Inconsolata_Expanded/Inconsolata_Expanded-Bold.ttf", "fonts/Inconsolata/static/Inconsolata_Expanded/Inconsolata_Expanded-ExtraBold.ttf", "fonts/Inconsolata/static/Inconsolata_Expanded/Inconsolata_Expanded-ExtraLight.ttf", "fonts/Inconsolata/static/Inconsolata_Expanded/Inconsolata_Expanded-Light.ttf", "fonts/Inconsolata/static/Inconsolata_Expanded/Inconsolata_Expanded-Medium.ttf", "fonts/Inconsolata/static/Inconsolata_Expanded/Inconsolata_Expanded-Regular.ttf", "fonts/Inconsolata/static/Inconsolata_Expanded/Inconsolata_Expanded-SemiBold.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraCondensed/Inconsolata_ExtraCondensed-Black.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraCondensed/Inconsolata_ExtraCondensed-Bold.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraCondensed/Inconsolata_ExtraCondensed-ExtraBold.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraCondensed/Inconsolata_ExtraCondensed-ExtraLight.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraCondensed/Inconsolata_ExtraCondensed-Light.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraCondensed/Inconsolata_ExtraCondensed-Medium.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraCondensed/Inconsolata_ExtraCondensed-Regular.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraCondensed/Inconsolata_ExtraCondensed-SemiBold.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraExpanded/Inconsolata_ExtraExpanded-Black.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraExpanded/Inconsolata_ExtraExpanded-Bold.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraExpanded/Inconsolata_ExtraExpanded-ExtraBold.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraExpanded/Inconsolata_ExtraExpanded-ExtraLight.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraExpanded/Inconsolata_ExtraExpanded-Light.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraExpanded/Inconsolata_ExtraExpanded-Medium.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraExpanded/Inconsolata_ExtraExpanded-Regular.ttf", "fonts/Inconsolata/static/Inconsolata_ExtraExpanded/Inconsolata_ExtraExpanded-SemiBold.ttf", "fonts/Inconsolata/static/Inconsolata_SemiCondensed/Inconsolata_SemiCondensed-Black.ttf", "fonts/Inconsolata/static/Inconsolata_SemiCondensed/Inconsolata_SemiCondensed-Bold.ttf", "fonts/Inconsolata/static/Inconsolata_SemiCondensed/Inconsolata_SemiCondensed-ExtraBold.ttf", "fonts/Inconsolata/static/Inconsolata_SemiCondensed/Inconsolata_SemiCondensed-ExtraLight.ttf", "fonts/Inconsolata/static/Inconsolata_SemiCondensed/Inconsolata_SemiCondensed-Light.ttf", "fonts/Inconsolata/static/Inconsolata_SemiCondensed/Inconsolata_SemiCondensed-Medium.ttf", "fonts/Inconsolata/static/Inconsolata_SemiCondensed/Inconsolata_SemiCondensed-Regular.ttf", "fonts/Inconsolata/static/Inconsolata_SemiCondensed/Inconsolata_SemiCondensed-SemiBold.ttf", "fonts/Inconsolata/static/Inconsolata_SemiExpanded/Inconsolata_SemiExpanded-Black.ttf", "fonts/Inconsolata/static/Inconsolata_SemiExpanded/Inconsolata_SemiExpanded-Bold.ttf", "fonts/Inconsolata/static/Inconsolata_SemiExpanded/Inconsolata_SemiExpanded-ExtraBold.ttf", "fonts/Inconsolata/static/Inconsolata_SemiExpanded/Inconsolata_SemiExpanded-ExtraLight.ttf", "fonts/Inconsolata/static/Inconsolata_SemiExpanded/Inconsolata_SemiExpanded-Light.ttf", "fonts/Inconsolata/static/Inconsolata_SemiExpanded/Inconsolata_SemiExpanded-Medium.ttf", "fonts/Inconsolata/static/Inconsolata_SemiExpanded/Inconsolata_SemiExpanded-Regular.ttf", "fonts/Inconsolata/static/Inconsolata_SemiExpanded/Inconsolata_SemiExpanded-SemiBold.ttf", "fonts/Inconsolata/static/Inconsolata_UltraCondensed/Inconsolata_UltraCondensed-Black.ttf", "fonts/Inconsolata/static/Inconsolata_UltraCondensed/Inconsolata_UltraCondensed-Bold.ttf", "fonts/Inconsolata/static/Inconsolata_UltraCondensed/Inconsolata_UltraCondensed-ExtraBold.ttf", "fonts/Inconsolata/static/Inconsolata_UltraCondensed/Inconsolata_UltraCondensed-ExtraLight.ttf", "fonts/Inconsolata/static/Inconsolata_UltraCondensed/Inconsolata_UltraCondensed-Light.ttf", "fonts/Inconsolata/static/Inconsolata_UltraCondensed/Inconsolata_UltraCondensed-Medium.ttf", "fonts/Inconsolata/static/Inconsolata_UltraCondensed/Inconsolata_UltraCondensed-Regular.ttf", "fonts/Inconsolata/static/Inconsolata_UltraCondensed/Inconsolata_UltraCondensed-SemiBold.ttf", "fonts/Inconsolata/static/Inconsolata_UltraExpanded/Inconsolata_UltraExpanded-Black.ttf", "fonts/Inconsolata/static/Inconsolata_UltraExpanded/Inconsolata_UltraExpanded-Bold.ttf", "fonts/Inconsolata/static/Inconsolata_UltraExpanded/Inconsolata_UltraExpanded-ExtraBold.ttf", "fonts/Inconsolata/static/Inconsolata_UltraExpanded/Inconsolata_UltraExpanded-ExtraLight.ttf", "fonts/Inconsolata/static/Inconsolata_UltraExpanded/Inconsolata_UltraExpanded-Light.ttf", "fonts/Inconsolata/static/Inconsolata_UltraExpanded/Inconsolata_UltraExpanded-Medium.ttf", "fonts/Inconsolata/static/Inconsolata_UltraExpanded/Inconsolata_UltraExpanded-Regular.ttf", "fonts/Inconsolata/static/Inconsolata_UltraExpanded/Inconsolata_UltraExpanded-SemiBold.ttf", "fonts/inconsolata.scss", "fonts/inter/install-linux.txt", "fonts/inter/install-mac.txt", "fonts/inter/install-win.txt", "fonts/inter/Inter Desktop/Inter-Black.otf", "fonts/inter/Inter Desktop/Inter-BlackItalic.otf", "fonts/inter/Inter Desktop/Inter-Bold.otf", "fonts/inter/Inter Desktop/Inter-BoldItalic.otf", "fonts/inter/Inter Desktop/Inter-ExtraBold.otf", "fonts/inter/Inter Desktop/Inter-ExtraBoldItalic.otf", "fonts/inter/Inter Desktop/Inter-ExtraLight.otf", "fonts/inter/Inter Desktop/Inter-ExtraLightItalic.otf", "fonts/inter/Inter Desktop/Inter-Italic.otf", "fonts/inter/Inter Desktop/Inter-Light.otf", "fonts/inter/Inter Desktop/Inter-LightItalic.otf", "fonts/inter/Inter Desktop/Inter-Medium.otf", "fonts/inter/Inter Desktop/Inter-MediumItalic.otf", "fonts/inter/Inter Desktop/Inter-Regular.otf", "fonts/inter/Inter Desktop/Inter-SemiBold.otf", "fonts/inter/Inter Desktop/Inter-SemiBoldItalic.otf", "fonts/inter/Inter Desktop/Inter-Thin.otf", "fonts/inter/Inter Desktop/Inter-ThinItalic.otf", "fonts/inter/Inter Desktop/Inter-V.ttf", "fonts/inter/Inter Hinted for Windows/about hinted fonts.txt", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-Black.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-BlackItalic.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-Bold.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-BoldItalic.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-ExtraBold.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-ExtraBoldItalic.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-ExtraLight.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-ExtraLightItalic.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-Italic.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-Light.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-LightItalic.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-Medium.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-MediumItalic.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-Regular.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-SemiBold.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-SemiBoldItalic.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-Thin.ttf", "fonts/inter/Inter Hinted for Windows/Desktop/Inter-ThinItalic.ttf", "fonts/inter/Inter Hinted for Windows/Web/Inter-Black.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-Black.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-BlackItalic.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-BlackItalic.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-Bold.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-Bold.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-BoldItalic.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-BoldItalic.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-ExtraBold.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-ExtraBold.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-ExtraBoldItalic.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-ExtraBoldItalic.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-ExtraLight.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-ExtraLight.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-ExtraLightItalic.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-ExtraLightItalic.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-Italic.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-Italic.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-Light.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-Light.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-LightItalic.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-LightItalic.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-Medium.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-Medium.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-MediumItalic.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-MediumItalic.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-Regular.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-Regular.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-SemiBold.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-SemiBold.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-SemiBoldItalic.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-SemiBoldItalic.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-Thin.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-Thin.woff2", "fonts/inter/Inter Hinted for Windows/Web/Inter-ThinItalic.woff", "fonts/inter/Inter Hinted for Windows/Web/Inter-ThinItalic.woff2", "fonts/inter/Inter Hinted for Windows/Web/inter.css", "fonts/inter/Inter Variable/Inter.ttf", "fonts/inter/Inter Variable/Single axis/Inter-italic.ttf", "fonts/inter/Inter Variable/Single axis/Inter-roman.ttf", "fonts/inter/Inter Web/Inter-Black.woff", "fonts/inter/Inter Web/Inter-Black.woff2", "fonts/inter/Inter Web/Inter-BlackItalic.woff", "fonts/inter/Inter Web/Inter-BlackItalic.woff2", "fonts/inter/Inter Web/Inter-Bold.woff", "fonts/inter/Inter Web/Inter-Bold.woff2", "fonts/inter/Inter Web/Inter-BoldItalic.woff", "fonts/inter/Inter Web/Inter-BoldItalic.woff2", "fonts/inter/Inter Web/Inter-ExtraBold.woff", "fonts/inter/Inter Web/Inter-ExtraBold.woff2", "fonts/inter/Inter Web/Inter-ExtraBoldItalic.woff", "fonts/inter/Inter Web/Inter-ExtraBoldItalic.woff2", "fonts/inter/Inter Web/Inter-ExtraLight.woff", "fonts/inter/Inter Web/Inter-ExtraLight.woff2", "fonts/inter/Inter Web/Inter-ExtraLightItalic.woff", "fonts/inter/Inter Web/Inter-ExtraLightItalic.woff2", "fonts/inter/Inter Web/Inter-italic.var.woff2", "fonts/inter/Inter Web/Inter-Italic.woff", "fonts/inter/Inter Web/Inter-Italic.woff2", "fonts/inter/Inter Web/Inter-Light.woff", "fonts/inter/Inter Web/Inter-Light.woff2", "fonts/inter/Inter Web/Inter-LightItalic.woff", "fonts/inter/Inter Web/Inter-LightItalic.woff2", "fonts/inter/Inter Web/Inter-Medium.woff", "fonts/inter/Inter Web/Inter-Medium.woff2", "fonts/inter/Inter Web/Inter-MediumItalic.woff", "fonts/inter/Inter Web/Inter-MediumItalic.woff2", "fonts/inter/Inter Web/Inter-Regular.woff", "fonts/inter/Inter Web/Inter-Regular.woff2", "fonts/inter/Inter Web/Inter-roman.var.woff2", "fonts/inter/Inter Web/Inter-SemiBold.woff", "fonts/inter/Inter Web/Inter-SemiBold.woff2", "fonts/inter/Inter Web/Inter-SemiBoldItalic.woff", "fonts/inter/Inter Web/Inter-SemiBoldItalic.woff2", "fonts/inter/Inter Web/Inter-Thin.woff", "fonts/inter/Inter Web/Inter-Thin.woff2", "fonts/inter/Inter Web/Inter-ThinItalic.woff", "fonts/inter/Inter Web/Inter-ThinItalic.woff2", "fonts/inter/Inter Web/inter.css", "fonts/inter/Inter Web/Inter.var.woff2", "fonts/inter/LICENSE.txt", "fonts/inter.scss", "fonts/josefin-sans.scss", "fonts/Josefin_Sans/JosefinSans-Italic-VariableFont_wght.ttf", "fonts/Josefin_Sans/JosefinSans-VariableFont_wght.ttf", "fonts/Josefin_Sans/OFL.txt", "fonts/Josefin_Sans/README.txt", "fonts/Josefin_Sans/static/JosefinSans-Bold.ttf", "fonts/Josefin_Sans/static/JosefinSans-BoldItalic.ttf", "fonts/Josefin_Sans/static/JosefinSans-ExtraLight.ttf", "fonts/Josefin_Sans/static/JosefinSans-ExtraLightItalic.ttf", "fonts/Josefin_Sans/static/JosefinSans-Italic.ttf", "fonts/Josefin_Sans/static/JosefinSans-Light.ttf", "fonts/Josefin_Sans/static/JosefinSans-LightItalic.ttf", "fonts/Josefin_Sans/static/JosefinSans-Medium.ttf", "fonts/Josefin_Sans/static/JosefinSans-MediumItalic.ttf", "fonts/Josefin_Sans/static/JosefinSans-Regular.ttf", "fonts/Josefin_Sans/static/JosefinSans-SemiBold.ttf", "fonts/Josefin_Sans/static/JosefinSans-SemiBoldItalic.ttf", "fonts/Josefin_Sans/static/JosefinSans-Thin.ttf", "fonts/Josefin_Sans/static/JosefinSans-ThinItalic.ttf", "fonts/Merriweather/Merriweather-Black.ttf", "fonts/Merriweather/Merriweather-BlackItalic.ttf", "fonts/Merriweather/Merriweather-Bold.ttf", "fonts/Merriweather/Merriweather-BoldItalic.ttf", "fonts/Merriweather/Merriweather-Italic.ttf", "fonts/Merriweather/Merriweather-Light.ttf", "fonts/Merriweather/Merriweather-LightItalic.ttf", "fonts/Merriweather/Merriweather-Regular.ttf", "fonts/Merriweather/OFL.txt", "fonts/merriweather.scss", "fonts/mixin-fontface.scss", "fonts/Montserrat/Montserrat-Black.ttf", "fonts/Montserrat/Montserrat-BlackItalic.ttf", "fonts/Montserrat/Montserrat-Bold.ttf", "fonts/Montserrat/Montserrat-BoldItalic.ttf", "fonts/Montserrat/Montserrat-ExtraBold.ttf", "fonts/Montserrat/Montserrat-ExtraBoldItalic.ttf", "fonts/Montserrat/Montserrat-ExtraLight.ttf", "fonts/Montserrat/Montserrat-ExtraLightItalic.ttf", "fonts/Montserrat/Montserrat-Italic.ttf", "fonts/Montserrat/Montserrat-Light.ttf", "fonts/Montserrat/Montserrat-LightItalic.ttf", "fonts/Montserrat/Montserrat-Medium.ttf", "fonts/Montserrat/Montserrat-MediumItalic.ttf", "fonts/Montserrat/Montserrat-Regular.ttf", "fonts/Montserrat/Montserrat-SemiBold.ttf", "fonts/Montserrat/Montserrat-SemiBoldItalic.ttf", "fonts/Montserrat/Montserrat-Thin.ttf", "fonts/Montserrat/Montserrat-ThinItalic.ttf", "fonts/Montserrat/OFL.txt", "fonts/montserrat.scss", "fonts/newsreader/Newsreader-Italic-VariableFont_opsz,wght.ttf", "fonts/newsreader/Newsreader-VariableFont_opsz,wght.ttf", "fonts/newsreader/OFL.txt", "fonts/newsreader/README.txt", "fonts/newsreader/static/Newsreader/Newsreader-Bold.ttf", "fonts/newsreader/static/Newsreader/Newsreader-BoldItalic.ttf", "fonts/newsreader/static/Newsreader/Newsreader-ExtraBold.ttf", "fonts/newsreader/static/Newsreader/Newsreader-ExtraBoldItalic.ttf", "fonts/newsreader/static/Newsreader/Newsreader-ExtraLight.ttf", "fonts/newsreader/static/Newsreader/Newsreader-ExtraLightItalic.ttf", "fonts/newsreader/static/Newsreader/Newsreader-Italic.ttf", "fonts/newsreader/static/Newsreader/Newsreader-Light.ttf", "fonts/newsreader/static/Newsreader/Newsreader-LightItalic.ttf", "fonts/newsreader/static/Newsreader/Newsreader-Medium.ttf", "fonts/newsreader/static/Newsreader/Newsreader-MediumItalic.ttf", "fonts/newsreader/static/Newsreader/Newsreader-Regular.ttf", "fonts/newsreader/static/Newsreader/Newsreader-SemiBold.ttf", "fonts/newsreader/static/Newsreader/Newsreader-SemiBoldItalic.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-Bold.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-BoldItalic.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-ExtraBold.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-ExtraBoldItalic.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-ExtraLight.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-ExtraLightItalic.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-Italic.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-Light.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-LightItalic.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-Medium.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-MediumItalic.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-Regular.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-SemiBold.ttf", "fonts/newsreader/static/Newsreader_24pt/Newsreader_24pt-SemiBoldItalic.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-Bold.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-BoldItalic.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-ExtraBold.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-ExtraBoldItalic.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-ExtraLight.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-ExtraLightItalic.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-Italic.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-Light.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-LightItalic.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-Medium.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-MediumItalic.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-Regular.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-SemiBold.ttf", "fonts/newsreader/static/Newsreader_36pt/Newsreader_36pt-SemiBoldItalic.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-Bold.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-BoldItalic.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-ExtraBold.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-ExtraBoldItalic.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-ExtraLight.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-ExtraLightItalic.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-Italic.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-Light.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-LightItalic.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-Medium.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-MediumItalic.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-Regular.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-SemiBold.ttf", "fonts/newsreader/static/Newsreader_60pt/Newsreader_60pt-SemiBoldItalic.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-Bold.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-BoldItalic.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-ExtraBold.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-ExtraBoldItalic.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-ExtraLight.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-ExtraLightItalic.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-Italic.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-Light.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-LightItalic.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-Medium.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-MediumItalic.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-Regular.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-SemiBold.ttf", "fonts/newsreader/static/Newsreader_9pt/Newsreader_9pt-SemiBoldItalic.ttf", "fonts/newsreader.scss", "fonts/noto_sans_display/NotoSansDisplay-Italic-VariableFont_wdth,wght.ttf", "fonts/noto_sans_display/NotoSansDisplay-VariableFont_wdth,wght.ttf", "fonts/noto_sans_display/OFL.txt", "fonts/noto_sans_display/README.txt", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-Black.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-BlackItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-Bold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-BoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-ExtraBold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-ExtraBoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-ExtraLight.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-ExtraLightItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-Italic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-Light.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-LightItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-Medium.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-MediumItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-Regular.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-SemiBold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-SemiBoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-Thin.ttf", "fonts/noto_sans_display/static/NotoSansDisplay/NotoSansDisplay-ThinItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-Black.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-BlackItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-Bold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-BoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-ExtraBold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-ExtraBoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-ExtraLight.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-ExtraLightItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-Italic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-Light.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-LightItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-Medium.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-MediumItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-Regular.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-SemiBold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-SemiBoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-Thin.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_Condensed/NotoSansDisplay_Condensed-ThinItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-Black.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-BlackItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-Bold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-BoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-ExtraBold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-ExtraBoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-ExtraLight.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-ExtraLightItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-Italic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-Light.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-LightItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-Medium.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-MediumItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-Regular.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-SemiBold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-SemiBoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-Thin.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_ExtraCondensed/NotoSansDisplay_ExtraCondensed-ThinItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-Black.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-BlackItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-Bold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-BoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-ExtraBold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-ExtraBoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-ExtraLight.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-ExtraLightItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-Italic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-Light.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-LightItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-Medium.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-MediumItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-Regular.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-SemiBold.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-SemiBoldItalic.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-Thin.ttf", "fonts/noto_sans_display/static/NotoSansDisplay_SemiCondensed/NotoSansDisplay_SemiCondensed-ThinItalic.ttf", "fonts/Noto_Serif/NotoSerif-Bold.ttf", "fonts/Noto_Serif/NotoSerif-BoldItalic.ttf", "fonts/Noto_Serif/NotoSerif-Italic.ttf", "fonts/Noto_Serif/NotoSerif-Regular.ttf", "fonts/Noto_Serif/OFL.txt", "fonts/open-sans.scss", "fonts/Open_Sans/LICENSE.txt", "fonts/Open_Sans/OpenSans-Italic-VariableFont_wdth,wght.ttf", "fonts/Open_Sans/OpenSans-VariableFont_wdth,wght.ttf", "fonts/Open_Sans/README.txt", "fonts/Open_Sans/static/OpenSans/OpenSans-Bold.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-BoldItalic.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-ExtraBold.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-ExtraBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-Italic.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-Light.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-LightItalic.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-Medium.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-MediumItalic.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-Regular.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-SemiBold.ttf", "fonts/Open_Sans/static/OpenSans/OpenSans-SemiBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-Bold.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-BoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-ExtraBold.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-ExtraBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-Italic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-Light.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-LightItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-Medium.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-MediumItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-Regular.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-SemiBold.ttf", "fonts/Open_Sans/static/OpenSans_Condensed/OpenSans_Condensed-SemiBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-Bold.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-BoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-ExtraBold.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-ExtraBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-Italic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-Light.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-LightItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-Medium.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-MediumItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-Regular.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-SemiBold.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed/OpenSans_SemiCondensed-SemiBoldItalic.ttf", "fonts/Vollkorn/OFL.txt", "fonts/Vollkorn/README.txt", "fonts/Vollkorn/static/Vollkorn-Black.ttf", "fonts/Vollkorn/static/Vollkorn-BlackItalic.ttf", "fonts/Vollkorn/static/Vollkorn-Bold.ttf", "fonts/Vollkorn/static/Vollkorn-BoldItalic.ttf", "fonts/Vollkorn/static/Vollkorn-ExtraBold.ttf", "fonts/Vollkorn/static/Vollkorn-ExtraBoldItalic.ttf", "fonts/Vollkorn/static/Vollkorn-Italic.ttf", "fonts/Vollkorn/static/Vollkorn-Medium.ttf", "fonts/Vollkorn/static/Vollkorn-MediumItalic.ttf", "fonts/Vollkorn/static/Vollkorn-Regular.ttf", "fonts/Vollkorn/static/Vollkorn-SemiBold.ttf", "fonts/Vollkorn/static/Vollkorn-SemiBoldItalic.ttf", "fonts/Vollkorn/Vollkorn-Italic-VariableFont_wght.ttf", "fonts/Vollkorn/Vollkorn-VariableFont_wght.ttf", "fonts/vollkorn.scss", "image (9).svg", "Quotes.html", "svg/discord.svg", "tippy-backdrop.css", "tippy-shift-away.css", "todo.md", "upload index.json copy.js", "upload index.json from dgraph code.js"]),
  _: {
    mime: { ".svg": "image/svg+xml", ".ico": "image/vnd.microsoft.icon", ".png": "image/png", ".webmanifest": "application/manifest+json", ".ttf": "font/ttf", ".txt": "text/plain", ".scss": "text/x-scss", ".css": "text/css", ".otf": "font/otf", ".woff": "font/woff", ".woff2": "font/woff2", ".html": "text/html", ".md": "text/markdown", ".js": "application/javascript" },
    entry: { "file": "start-fed95f2e.js", "js": ["start-fed95f2e.js", "chunks/vendor-525e7dbe.js"], "css": ["assets/vendor-e0d31265.css"] },
    nodes: [
      () => Promise.resolve().then(() => (init__(), __exports)),
      () => Promise.resolve().then(() => (init__2(), __exports2)),
      () => Promise.resolve().then(() => (init__3(), __exports3)),
      () => Promise.resolve().then(() => (init__4(), __exports4)),
      () => Promise.resolve().then(() => (init__5(), __exports5)),
      () => Promise.resolve().then(() => (init__6(), __exports6)),
      () => Promise.resolve().then(() => (init__7(), __exports7)),
      () => Promise.resolve().then(() => (init__8(), __exports8)),
      () => Promise.resolve().then(() => (init__9(), __exports9)),
      () => Promise.resolve().then(() => (init__10(), __exports10)),
      () => Promise.resolve().then(() => (init__11(), __exports11)),
      () => Promise.resolve().then(() => (init__12(), __exports12)),
      () => Promise.resolve().then(() => (init__13(), __exports13)),
      () => Promise.resolve().then(() => (init__14(), __exports14)),
      () => Promise.resolve().then(() => (init__15(), __exports15)),
      () => Promise.resolve().then(() => (init__16(), __exports16)),
      () => Promise.resolve().then(() => (init__17(), __exports17)),
      () => Promise.resolve().then(() => (init__18(), __exports18)),
      () => Promise.resolve().then(() => (init__19(), __exports19)),
      () => Promise.resolve().then(() => (init__20(), __exports20)),
      () => Promise.resolve().then(() => (init__21(), __exports21)),
      () => Promise.resolve().then(() => (init__22(), __exports22)),
      () => Promise.resolve().then(() => (init__23(), __exports23)),
      () => Promise.resolve().then(() => (init__24(), __exports24)),
      () => Promise.resolve().then(() => (init__25(), __exports25)),
      () => Promise.resolve().then(() => (init__26(), __exports26)),
      () => Promise.resolve().then(() => (init__27(), __exports27)),
      () => Promise.resolve().then(() => (init__28(), __exports28)),
      () => Promise.resolve().then(() => (init__29(), __exports29)),
      () => Promise.resolve().then(() => (init__30(), __exports30)),
      () => Promise.resolve().then(() => (init__31(), __exports31)),
      () => Promise.resolve().then(() => (init__32(), __exports32)),
      () => Promise.resolve().then(() => (init__33(), __exports33)),
      () => Promise.resolve().then(() => (init__34(), __exports34)),
      () => Promise.resolve().then(() => (init__35(), __exports35)),
      () => Promise.resolve().then(() => (init__36(), __exports36))
    ],
    routes: [
      {
        type: "page",
        pattern: /^\/$/,
        params: null,
        path: "/",
        a: [0, 2],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/metabrain-landing\/?$/,
        params: null,
        path: "/metabrain-landing",
        a: [0, 3],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/metabrain\/?$/,
        params: null,
        path: "/metabrain",
        a: [0, 4],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/?$/,
        params: null,
        path: "/creative",
        a: [0, 5, 6],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch01-preview\/?$/,
        params: null,
        path: "/creative/sketch01-preview",
        a: [0, 5, 7],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch02-preview\/?$/,
        params: null,
        path: "/creative/sketch02-preview",
        a: [0, 5, 8],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch03-preview\/?$/,
        params: null,
        path: "/creative/sketch03-preview",
        a: [0, 5, 9],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch01\/noPanel\/?$/,
        params: null,
        path: "/creative/sketch01/noPanel",
        a: [0, 5, 10],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch01\/?$/,
        params: null,
        path: "/creative/sketch01",
        a: [0, 5, 11],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch02\/noPanel\/?$/,
        params: null,
        path: "/creative/sketch02/noPanel",
        a: [0, 5, 12],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch02\/?$/,
        params: null,
        path: "/creative/sketch02",
        a: [0, 5, 13],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch03\/noPanel\/?$/,
        params: null,
        path: "/creative/sketch03/noPanel",
        a: [0, 5, 14],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch03\/?$/,
        params: null,
        path: "/creative/sketch03",
        a: [0, 5, 15],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch04\/noPanel\/?$/,
        params: null,
        path: "/creative/sketch04/noPanel",
        a: [0, 5, 16],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch04\/?$/,
        params: null,
        path: "/creative/sketch04",
        a: [0, 5, 17],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch05\/noPanel\/?$/,
        params: null,
        path: "/creative/sketch05/noPanel",
        a: [0, 5, 18],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch05\/?$/,
        params: null,
        path: "/creative/sketch05",
        a: [0, 5, 19],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch06\/noPanel\/?$/,
        params: null,
        path: "/creative/sketch06/noPanel",
        a: [0, 5, 20],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch06\/?$/,
        params: null,
        path: "/creative/sketch06",
        a: [0, 5, 21],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch07\/noPanel\/?$/,
        params: null,
        path: "/creative/sketch07/noPanel",
        a: [0, 5, 22],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch07\/?$/,
        params: null,
        path: "/creative/sketch07",
        a: [0, 5, 23],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch08\/noPanel\/?$/,
        params: null,
        path: "/creative/sketch08/noPanel",
        a: [0, 5, 24],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch08\/?$/,
        params: null,
        path: "/creative/sketch08",
        a: [0, 5, 25],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch09\/noPanel\/?$/,
        params: null,
        path: "/creative/sketch09/noPanel",
        a: [0, 5, 26],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/creative\/sketch09\/?$/,
        params: null,
        path: "/creative/sketch09",
        a: [0, 5, 27],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/sketch05\/?$/,
        params: null,
        path: "/sketch05",
        a: [0, 28],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/favicon\/?$/,
        params: null,
        path: "/favicon",
        a: [0, 29],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/pokemon\/?$/,
        params: null,
        path: "/pokemon",
        a: [0, 30],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/about\/?$/,
        params: null,
        path: "/about",
        a: [0, 31],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/color\/?$/,
        params: null,
        path: "/color",
        a: [0, 32],
        b: [1]
      },
      {
        type: "page",
        pattern: /^\/zimjs\/?$/,
        params: null,
        path: "/zimjs",
        a: [0, 33],
        b: [1]
      },
      {
        type: "endpoint",
        pattern: /^\/zimjs\/initzim\/?$/,
        params: null,
        load: () => Promise.resolve().then(() => (init_initzim(), initzim_exports))
      },
      {
        type: "page",
        pattern: /^\/zimjs\/1\/?$/,
        params: null,
        path: "/zimjs/1",
        a: [0, 34],
        b: [1]
      },
      {
        type: "endpoint",
        pattern: /^\/api\/pokemon\/?$/,
        params: null,
        load: () => Promise.resolve().then(() => (init_pokemon(), pokemon_exports))
      },
      {
        type: "endpoint",
        pattern: /^\/api\/pokemon\/([^/]+?)\/?$/,
        params: (m2) => ({ id: m2[1] }),
        load: () => Promise.resolve().then(() => (init_id(), id_exports))
      },
      {
        type: "endpoint",
        pattern: /^\/api\/heroes\.json$/,
        params: null,
        load: () => Promise.resolve().then(() => (init_index_json(), index_json_exports))
      },
      {
        type: "page",
        pattern: /^\/([^/]+?)\/?$/,
        params: (m2) => ({ fallback: m2[1] }),
        path: null,
        a: [0, 35],
        b: [1]
      }
    ]
  }
};

// .svelte-kit/vercel-tmp/entry.js
__fetch_polyfill();
var app = new App(manifest);
var entry_default = async (req, res) => {
  let body;
  try {
    body = await getRawBody(req);
  } catch (err) {
    res.statusCode = err.status || 400;
    return res.end(err.reason || "Invalid request body");
  }
  const rendered = await app.render({
    url: req.url,
    method: req.method,
    headers: req.headers,
    rawBody: body
  });
  if (rendered) {
    const { status, headers, body: body2 } = rendered;
    return res.writeHead(status, headers).end(body2);
  }
  return res.writeHead(404).end();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/*!
 * repeat-string <https://github.com/jonschlinkert/repeat-string>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
/*!
* CreateJS
* Visit http://createjs.com/ for documentation, updates and examples.
*
* Copyright (c) 2010 gskinner.com, inc.
*
* Permission is hereby granted, free of charge, to any person
* obtaining a copy of this software and associated documentation
* files (the "Software"), to deal in the Software without
* restriction, including without limitation the rights to use,
* copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following
* conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*/
/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
/**
	ColorBrewer colors for chroma.js

	Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The 
	Pennsylvania State University.

	Licensed under the Apache License, Version 2.0 (the "License"); 
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at	
	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software distributed
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
	CONDITIONS OF ANY KIND, either express or implied. See the License for the
	specific language governing permissions and limitations under the License.

    @preserve
 */
/**
 * @license
 *
 * chroma.js - JavaScript library for color conversions
 * 
 * Copyright (c) 2011-2017, Gregor Aisch
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * 3. The name Gregor Aisch may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
